define(["require", "exports", "@syncfusion/ej2-calendars", "@syncfusion/ej2-base", "@syncfusion/ej2-base"], function (require, exports, ej2_calendars_1, ej2_base_1, ej2_base_2) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var DateFilterUI = (function () {
        function DateFilterUI(parent, serviceLocator, filterSettings) {
            this.parent = parent;
            this.locator = serviceLocator;
            this.fltrSettings = filterSettings;
        }
        DateFilterUI.prototype.create = function (args) {
            var intl = new ej2_base_2.Internationalization();
            var colFormat = args.column.format;
            var format = intl.getDatePattern({ type: 'date', skeleton: colFormat }, false);
            this.dialogObj = args.dialogObj;
            this.inputElem = ej2_base_1.createElement('input', { className: 'e-flmenu-input', id: 'dateui-' + args.column.uid });
            args.target.appendChild(this.inputElem);
            this.datePickerObj = new ej2_calendars_1.DatePicker({
                format: format,
                cssClass: 'e-popup-flmenu',
                placeholder: args.localizeText.getConstant('ChooseDate'),
                width: '100%',
                locale: this.parent.locale,
                enableRtl: this.parent.enableRtl,
                open: this.openPopup.bind(this),
            });
            this.datePickerObj.appendTo(this.inputElem);
        };
        DateFilterUI.prototype.write = function (args) {
            var columns = this.fltrSettings.columns;
            var dateuiObj = document.querySelector('#dateui-' + args.column.uid).ej2_instances[0];
            dateuiObj.value = !ej2_base_1.isNullOrUndefined(args.filteredValue) ? new Date(args.filteredValue) : null;
        };
        DateFilterUI.prototype.read = function (element, column, filterOptr, filterObj) {
            var dateuiObj = document.querySelector('#dateui-' + column.uid).ej2_instances[0];
            var filterValue = dateuiObj.value;
            filterValue = ej2_base_1.isNullOrUndefined(filterValue) ? null : filterValue;
            filterObj.filterByColumn(column.field, filterOptr, filterValue, 'and', true);
        };
        DateFilterUI.prototype.openPopup = function (args) {
            args.popup.element.style.zIndex = (this.dialogObj.zIndex + 1).toString();
        };
        return DateFilterUI;
    }());
    exports.DateFilterUI = DateFilterUI;
});
