{"version":3,"file":"ej2-excel-export.umd.min.js","sources":["src/es5/cell-style.js","src/es5/cell.js","src/es5/column.js","src/es5/row.js","src/es5/worksheets.js","src/es5/worksheet.js","src/es5/value-formatter.js","src/es5/csv-helper.js","src/es5/blob-helper.js","src/es5/workbook.js"],"sourcesContent":["/**\n * CellStyle class\n */\nvar CellStyle = /** @class */ (function () {\n    function CellStyle() {\n        this.numFmtId = 0;\n        this.backColor = 'none';\n        this.fontName = 'Calibri';\n        this.fontSize = 14;\n        this.fontColor = '#000000';\n        this.italic = false;\n        this.bold = false;\n        this.underline = false;\n        this.wrapText = false;\n        this.hAlign = 'general';\n        this.vAlign = 'bottom';\n        this.numberFormat = 'GENERAL';\n        this.type = 'datetime';\n        this.borders = new Borders();\n        this.isGlobalStyle = false;\n    }\n    return CellStyle;\n}());\nexport { CellStyle };\nvar Font = /** @class */ (function () {\n    function Font() {\n        this.sz = 14;\n        this.name = 'Calibri';\n        this.u = false;\n        this.b = false;\n        this.i = false;\n        this.color = 'FF000000';\n    }\n    return Font;\n}());\nexport { Font };\nvar CellXfs = /** @class */ (function () {\n    function CellXfs() {\n    }\n    return CellXfs;\n}());\nexport { CellXfs };\nvar Alignment = /** @class */ (function () {\n    function Alignment() {\n    }\n    return Alignment;\n}());\nexport { Alignment };\nvar CellStyleXfs = /** @class */ (function () {\n    function CellStyleXfs() {\n    }\n    return CellStyleXfs;\n}());\nexport { CellStyleXfs };\nvar CellStyles = /** @class */ (function () {\n    function CellStyles() {\n        this.name = 'Normal';\n        this.xfId = 0;\n    }\n    return CellStyles;\n}());\nexport { CellStyles };\nvar NumFmt = /** @class */ (function () {\n    function NumFmt(id, code) {\n        this.numFmtId = id;\n        this.formatCode = code;\n    }\n    return NumFmt;\n}());\nexport { NumFmt };\n/**\n * Border class\n */\nvar Border = /** @class */ (function () {\n    function Border(mLine, mColor) {\n        this.lineStyle = mLine;\n        this.color = mColor;\n    }\n    return Border;\n}());\nexport { Border };\n/**\n * Border class\n */\nvar Borders = /** @class */ (function () {\n    function Borders() {\n        this.left = new Border('none', '#FFFFFF');\n        this.right = new Border('none', '#FFFFFF');\n        this.top = new Border('none', '#FFFFFF');\n        this.bottom = new Border('none', '#FFFFFF');\n        this.all = new Border('none', '#FFFFFF');\n    }\n    return Borders;\n}());\nexport { Borders };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * Worksheet class\n */\nvar Cell = /** @class */ (function () {\n    function Cell() {\n    }\n    return Cell;\n}());\nexport { Cell };\n/**\n * Rows class\n */\nvar Cells = /** @class */ (function (_super) {\n    __extends(Cells, _super);\n    function Cells() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.add = function (cell) {\n            var inserted = false;\n            var count = 0;\n            for (var _i = 0, _a = _this; _i < _a.length; _i++) {\n                var c = _a[_i];\n                if (c.index === cell.index) {\n                    _this[count] = cell;\n                    inserted = true;\n                }\n                count++;\n            }\n            if (!inserted) {\n                _this.push(cell);\n            }\n        };\n        return _this;\n    }\n    return Cells;\n}(Array));\nexport { Cells };\n","/**\n * Column class\n */\nvar Column = /** @class */ (function () {\n    function Column() {\n    }\n    return Column;\n}());\nexport { Column };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * Worksheet class\n */\nvar Row = /** @class */ (function () {\n    function Row() {\n    }\n    return Row;\n}());\nexport { Row };\n/**\n * Rows class\n */\nvar Rows = /** @class */ (function (_super) {\n    __extends(Rows, _super);\n    function Rows() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.add = function (row) {\n            var inserted = false;\n            var count = 0;\n            for (var _i = 0, _a = _this; _i < _a.length; _i++) {\n                var r = _a[_i];\n                if (r.index === row.index) {\n                    _this[count] = row;\n                    inserted = true;\n                }\n                count++;\n            }\n            if (!inserted) {\n                _this.push(row);\n            }\n        };\n        return _this;\n    }\n    return Rows;\n}(Array));\nexport { Rows };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * Worksheets class\n */\nvar Worksheets = /** @class */ (function (_super) {\n    __extends(Worksheets, _super);\n    function Worksheets() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return Worksheets;\n}(Array));\nexport { Worksheets };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * Worksheet class\n */\nvar Worksheet = /** @class */ (function () {\n    function Worksheet() {\n        this.isSummaryRowBelow = true;\n    }\n    return Worksheet;\n}());\nexport { Worksheet };\nvar HyperLink = /** @class */ (function () {\n    function HyperLink() {\n    }\n    return HyperLink;\n}());\nexport { HyperLink };\nvar Grouping = /** @class */ (function () {\n    function Grouping() {\n    }\n    return Grouping;\n}());\nexport { Grouping };\nvar FreezePane = /** @class */ (function () {\n    function FreezePane() {\n    }\n    return FreezePane;\n}());\nexport { FreezePane };\nvar MergeCell = /** @class */ (function () {\n    function MergeCell() {\n    }\n    return MergeCell;\n}());\nexport { MergeCell };\n/**\n * MergeCells class\n */\nvar MergeCells = /** @class */ (function (_super) {\n    __extends(MergeCells, _super);\n    function MergeCells() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.add = function (mergeCell) {\n            var inserted = false;\n            var count = 0;\n            for (var _i = 0, _a = _this; _i < _a.length; _i++) {\n                var mCell = _a[_i];\n                if (MergeCells.isIntersecting(mCell, mergeCell)) {\n                    var intersectingCell = new MergeCell();\n                    intersectingCell.x = Math.min(mCell.x, mergeCell.x);\n                    intersectingCell.y = Math.min(mCell.Y, mergeCell.y);\n                    intersectingCell.width = Math.max(mCell.Width + mCell.X, mergeCell.width + mergeCell.x);\n                    intersectingCell.height = Math.max(mCell.Height + mCell.Y, mergeCell.height + mergeCell.y);\n                    intersectingCell.ref = (_this[count].ref.split(':')[0]) + ':' + (mergeCell.ref.split(':')[1]);\n                    _this[count] = intersectingCell;\n                    inserted = true;\n                }\n                count++;\n            }\n            if (!inserted) {\n                _this.push(mergeCell);\n            }\n        };\n        return _this;\n    }\n    MergeCells.isIntersecting = function (base, compare) {\n        return (base.x <= compare.x + compare.width)\n            && (compare.x <= base.x + base.width)\n            && (base.y <= compare.y + compare.height)\n            && (compare.y <= base.y + base.height);\n    };\n    return MergeCells;\n}(Array));\nexport { MergeCells };\n","import { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { Internationalization } from '@syncfusion/ej2-base';\n// import { IValueFormatter } from '../base/interface';\n/**\n * ValueFormatter class to globalize the value.\n * @hidden\n */\nvar ValueFormatter = /** @class */ (function () {\n    function ValueFormatter(cultureName) {\n        this.intl = new Internationalization();\n        // if (!isNullOrUndefined(cultureName)) {\n        //     this.intl.culture = cultureName;\n        // }\n    }\n    ValueFormatter.prototype.getFormatFunction = function (format) {\n        if (format.type) {\n            return this.intl.getDateFormat(format);\n        }\n        else {\n            return this.intl.getNumberFormat(format);\n        }\n    };\n    // public getParserFunction(format: NumberFormatOptions | DateFormatOptions): Function {\n    //     if ((<DateFormatOptions>format).type) {\n    //         return this.intl.getDateParser(<DateFormatOptions>format);\n    //     } else {\n    //         return this.intl.getNumberParser(<DateFormatOptions>format);\n    //     }\n    // }\n    // public fromView(value: string, format: Function, type?: string): string | number | Date {\n    //     if (type === 'date' || type === 'datetime' || type === 'number') {\n    //         return format(value);\n    //     } else {\n    //         return value;\n    //     }\n    // }\n    ValueFormatter.prototype.toView = function (value, format) {\n        var result = value;\n        if (!isNullOrUndefined(format) && !isNullOrUndefined(value)) {\n            result = format(value);\n        }\n        return result;\n    };\n    // public setCulture(cultureName: string): void {\n    //     if (!isNullOrUndefined(cultureName)) {\n    //         setCulture(cultureName);\n    //     }\n    // }\n    /* tslint:disable:no-any */\n    ValueFormatter.prototype.displayText = function (value, format) {\n        return this.toView(value, this.getFormatFunction(format));\n    };\n    return ValueFormatter;\n}());\nexport { ValueFormatter };\n","import { ValueFormatter } from './value-formatter';\n/**\n * CsvHelper class\n */\nvar CsvHelper = /** @class */ (function () {\n    /* tslint:disable:no-any */\n    function CsvHelper(json) {\n        this.csvStr = '';\n        this.formatter = new ValueFormatter();\n        this.isMicrosoftBrowser = !(!navigator.msSaveBlob);\n        if (json.styles !== null && json.styles !== undefined) {\n            this.globalStyles = new Map();\n            for (var i = 0; i < json.styles.length; i++) {\n                if (json.styles[i].name !== undefined && json.styles[i].numberFormat !== undefined) {\n                    this.globalStyles.set(json.styles[i].name, json.styles[i].numberFormat);\n                }\n            }\n        }\n        // Parses Worksheets data to DOM.        \n        if (json.worksheets !== null && json.worksheets !== undefined) {\n            this.parseWorksheet(json.worksheets[0]);\n        }\n        //this.csvStr = 'a1,a2,a3\\nb1,b2,b3';\n    }\n    CsvHelper.prototype.parseWorksheet = function (json) {\n        //Rows\n        if (json.rows !== null && json.rows !== undefined) {\n            this.parseRows(json.rows);\n        }\n    };\n    /* tslint:disable:no-any */\n    CsvHelper.prototype.parseRows = function (rows) {\n        var count = 1;\n        for (var _i = 0, rows_1 = rows; _i < rows_1.length; _i++) {\n            var row = rows_1[_i];\n            //Row index\n            if (row.index !== null && row.index !== undefined) {\n                while (count < row.index) {\n                    this.csvStr += '\\n';\n                    count++;\n                }\n                this.parseRow(row);\n            }\n            else {\n                throw Error('Row index is missing.');\n            }\n        }\n    };\n    /* tslint:disable:no-any */\n    CsvHelper.prototype.parseRow = function (row) {\n        if (row.cells !== null && row.cells !== undefined) {\n            var count = 1;\n            for (var _i = 0, _a = row.cells; _i < _a.length; _i++) {\n                var cell = _a[_i];\n                //cell index\n                if (cell.index !== null && cell.index !== undefined) {\n                    while (count < cell.index) {\n                        this.csvStr += ',';\n                        count++;\n                    }\n                    this.parseCell(cell);\n                }\n                else {\n                    throw Error('Cell index is missing.');\n                }\n            }\n        }\n    };\n    /* tslint:disable:no-any */\n    CsvHelper.prototype.parseCell = function (cell) {\n        var csv = this.csvStr;\n        if (cell.value !== undefined) {\n            if (cell.value instanceof Date) {\n                if (cell.style !== undefined && cell.style.numberFormat !== undefined) {\n                    /* tslint:disable-next-line:max-line-length */\n                    csv += this.parseCellValue(this.formatter.displayText(cell.value, { type: 'dateTime', skeleton: cell.style.numberFormat }));\n                }\n                else if (cell.style !== undefined && cell.style.name !== undefined && this.globalStyles.has(cell.style.name)) {\n                    /* tslint:disable-next-line:max-line-length */\n                    csv += this.parseCellValue(this.formatter.displayText(cell.value, { type: 'dateTime', skeleton: this.globalStyles.get(cell.style.name) }));\n                }\n                else {\n                    csv += cell.value;\n                }\n            }\n            else if (typeof (cell.value) === 'boolean') {\n                csv += cell.value ? 'TRUE' : 'FALSE';\n            }\n            else if (typeof (cell.value) === 'number') {\n                if (cell.style !== undefined && cell.style.numberFormat !== undefined) {\n                    /* tslint:disable-next-line:max-line-length */\n                    csv += this.parseCellValue(this.formatter.displayText(cell.value, { format: cell.style.numberFormat }));\n                }\n                else if (cell.style !== undefined && cell.style.name !== undefined && this.globalStyles.has(cell.style.name)) {\n                    /* tslint:disable-next-line:max-line-length */\n                    csv += this.parseCellValue(this.formatter.displayText(cell.value, { format: this.globalStyles.get(cell.style.name) }));\n                }\n                else {\n                    csv += cell.value;\n                }\n            }\n            else {\n                csv += this.parseCellValue(cell.value);\n            }\n        }\n        this.csvStr = csv;\n    };\n    CsvHelper.prototype.parseCellValue = function (value) {\n        if (value.indexOf(',') !== -1) {\n            return value = '\\\"' + value + '\\\"';\n        }\n        else {\n            return value;\n        }\n    };\n    /**\n     * Saves the file with specified name and sends the file to client browser\n     * @param  {string} fileName- file name to save.\n     * @param  {Blob} buffer- the content to write in file\n     */\n    CsvHelper.prototype.save = function (fileName) {\n        this.buffer = new Blob([this.csvStr], { type: 'text/plain' });\n        if (this.isMicrosoftBrowser) {\n            navigator.msSaveBlob(this.buffer, fileName);\n        }\n        else {\n            var dataUrl_1 = window.URL.createObjectURL(this.buffer);\n            var dwlLink = document.createElementNS('http://www.w3.org/1999/xhtml', 'a');\n            dwlLink.download = fileName;\n            dwlLink.href = dataUrl_1;\n            var event_1 = document.createEvent('MouseEvent');\n            event_1.initEvent('click', true, true);\n            dwlLink.dispatchEvent(event_1);\n            setTimeout(function () {\n                window.URL.revokeObjectURL(dataUrl_1);\n            });\n        }\n    };\n    CsvHelper.prototype.saveAsBlob = function () {\n        return new Blob([this.csvStr], { type: 'text/csv' });\n    };\n    return CsvHelper;\n}());\nexport { CsvHelper };\n","/**\n * BlobHelper class\n */\nvar BlobHelper = /** @class */ (function () {\n    function BlobHelper() {\n        /* tslint:disable:no-any */\n        this.parts = [];\n    }\n    /* tslint:disable:no-any */\n    BlobHelper.prototype.append = function (part) {\n        this.parts.push(part);\n        this.blob = undefined; // Invalidate the blob\n    };\n    BlobHelper.prototype.getBlob = function () {\n        return new Blob(this.parts, { type: 'text/plain' });\n    };\n    return BlobHelper;\n}());\nexport { BlobHelper };\n","import { Worksheets } from './worksheets';\nimport { Worksheet, FreezePane, MergeCell, MergeCells, HyperLink, Grouping } from './worksheet';\nimport { CellStyle, Font, Borders, CellXfs, Alignment, NumFmt, CellStyleXfs, CellStyles } from './cell-style';\nimport { Column } from './column';\nimport { Row, Rows } from './row';\nimport { Cell, Cells } from './cell';\nimport { ZipArchive, ZipArchiveItem } from '@syncfusion/ej2-compression';\nimport { CsvHelper } from './csv-helper';\nimport { Internationalization } from '@syncfusion/ej2-base';\nimport { BlobHelper } from './blob-helper';\n/**\n * Workbook class\n */\nvar Workbook = /** @class */ (function () {\n    /* tslint:disable:no-any */\n    function Workbook(json, saveType, culture) {\n        this.sharedStringCount = 0;\n        this.unitsProportions = [\n            96 / 75.0,\n            96 / 300.0,\n            96,\n            96 / 25.4,\n            96 / 2.54,\n            1,\n            96 / 72.0,\n            96 / 72.0 / 12700,\n        ];\n        /* tslint:disable:no-any */\n        this.hyperlinkStyle = { fontColor: '#0000FF', underline: true };\n        if (culture !== undefined) {\n            this.culture = culture;\n        }\n        else {\n            this.culture = 'en-US';\n        }\n        this.intl = new Internationalization(this.culture);\n        this.mSaveType = saveType;\n        if (saveType === 'xlsx') {\n            this.mArchive = new ZipArchive();\n            this.sharedString = [];\n            this.mFonts = [];\n            this.mBorders = [];\n            this.mStyles = [];\n            this.printTitles = new Map();\n            this.cellStyles = new Map();\n            this.mNumFmt = new Map();\n            this.mFills = new Map();\n            this.mStyles.push(new CellStyle());\n            this.mFonts.push(new Font());\n            /* tslint:disable */\n            this.cellStyles.set('Normal', new CellStyles());\n            /* tslint:enable */\n            this.mCellXfs = [];\n            this.mCellStyleXfs = [];\n            if (json.styles !== null && json.styles !== undefined) {\n                /* tslint:disable-next-line:no-any */\n                this.globalStyles = new Map();\n                for (var i = 0; i < json.styles.length; i++) {\n                    if (json.styles[i].name !== undefined) {\n                        if (!this.cellStyles.has(json.styles[i].name)) {\n                            var cellStyle = new CellStyle();\n                            cellStyle.isGlobalStyle = true;\n                            this.parserCellStyle(json.styles[i], cellStyle, 'none');\n                            var cellStyles = new CellStyles();\n                            cellStyles.name = cellStyle.name;\n                            cellStyles.xfId = cellStyle.index;\n                            this.cellStyles.set(cellStyles.name, cellStyles);\n                            /* tslint:disable-next-line:no-any */\n                            var tFormat = {};\n                            if (json.styles[i].numberFormat !== undefined) {\n                                tFormat.format = json.styles[i].numberFormat;\n                            }\n                            if (json.styles[i].type !== undefined) {\n                                tFormat.type = json.styles[i].type;\n                            }\n                            else {\n                                tFormat.type = 'datetime';\n                            }\n                            if (tFormat.format !== undefined) {\n                                this.globalStyles.set(json.styles[i].name, tFormat);\n                            }\n                        }\n                        else {\n                            throw Error('Style name ' + json.styles[i].name + ' is already existed');\n                        }\n                    }\n                }\n            }\n            // Parses Worksheets data to DOM.        \n            if (json.worksheets !== null && json.worksheets !== undefined) {\n                this.parserWorksheets(json.worksheets);\n            }\n            else {\n                throw Error('Worksheet is expected.');\n            }\n            // Parses the BuiltInProperties data to DOM.        \n            if (json.builtInProperties !== null && json.builtInProperties !== undefined) {\n                this.builtInProperties = new BuiltInProperties();\n                this.parserBuiltInProperties(json.builtInProperties, this.builtInProperties);\n            }\n        }\n        else {\n            this.csvHelper = new CsvHelper(json);\n        }\n    }\n    /* tslint:disable:no-any */\n    Workbook.prototype.parserBuiltInProperties = function (jsonBuiltInProperties, builtInProperties) {\n        //Author\n        if (jsonBuiltInProperties.author !== null && jsonBuiltInProperties.author !== undefined) {\n            builtInProperties.author = jsonBuiltInProperties.author;\n        }\n        //Comments\n        if (jsonBuiltInProperties.comments !== null && jsonBuiltInProperties.comments !== undefined) {\n            builtInProperties.comments = jsonBuiltInProperties.comments;\n        }\n        //Category\n        if (jsonBuiltInProperties.category !== null && jsonBuiltInProperties.category !== undefined) {\n            builtInProperties.category = jsonBuiltInProperties.category;\n        }\n        //Company\n        if (jsonBuiltInProperties.company !== null && jsonBuiltInProperties.company !== undefined) {\n            builtInProperties.company = jsonBuiltInProperties.company;\n        }\n        //Manager\n        if (jsonBuiltInProperties.manager !== null && jsonBuiltInProperties.manager !== undefined) {\n            builtInProperties.manager = jsonBuiltInProperties.manager;\n        }\n        //Subject\n        if (jsonBuiltInProperties.subject !== null && jsonBuiltInProperties.subject !== undefined) {\n            builtInProperties.subject = jsonBuiltInProperties.subject;\n        }\n        //Title\n        if (jsonBuiltInProperties.title !== null && jsonBuiltInProperties.title !== undefined) {\n            builtInProperties.title = jsonBuiltInProperties.title;\n        }\n        //Creation date\n        if (jsonBuiltInProperties.createdDate !== null && jsonBuiltInProperties.createdDate !== undefined) {\n            builtInProperties.createdDate = jsonBuiltInProperties.createdDate;\n        }\n        //Modified date\n        if (jsonBuiltInProperties.modifiedDate !== null && jsonBuiltInProperties.modifiedDate !== undefined) {\n            builtInProperties.modifiedDate = jsonBuiltInProperties.modifiedDate;\n        }\n        //Tags\n        if (jsonBuiltInProperties.tags !== null && jsonBuiltInProperties.tags !== undefined) {\n            builtInProperties.tags = jsonBuiltInProperties.tags;\n        }\n        //Status\n        if (jsonBuiltInProperties.status !== null && jsonBuiltInProperties.status !== undefined) {\n            builtInProperties.status = jsonBuiltInProperties.status;\n        }\n    };\n    /* tslint:disable:no-any */\n    Workbook.prototype.parserWorksheets = function (json) {\n        this.worksheets = new Worksheets();\n        var length = json.length;\n        for (var i = 0; i < length; i++) {\n            var jsonSheet = json[i];\n            var sheet = new Worksheet();\n            this.mergeCells = new MergeCells();\n            this.mHyperLinks = [];\n            //Name\n            if (jsonSheet.name !== null && jsonSheet.name !== undefined) {\n                sheet.name = jsonSheet.name;\n            }\n            else {\n                sheet.name = 'Sheet' + (i + 1).toString();\n            }\n            sheet.index = (i + 1);\n            //Columns\n            if (jsonSheet.columns !== null && jsonSheet.columns !== undefined) {\n                this.parserColumns(jsonSheet.columns, sheet);\n            }\n            //Rows\n            if (jsonSheet.rows !== null && jsonSheet.rows !== undefined) {\n                this.parserRows(jsonSheet.rows, sheet);\n            }\n            //FreezePanes\n            if (jsonSheet.freeze !== null && jsonSheet.freeze !== undefined) {\n                this.parserFreezePanes(jsonSheet.freeze, sheet);\n            }\n            //Print Title\n            if (jsonSheet.printTitle !== null && jsonSheet.printTitle !== undefined) {\n                this.parserPrintTitle(jsonSheet.printTitle, sheet);\n            }\n            if (jsonSheet.pageSetup !== undefined) {\n                if (jsonSheet.pageSetup.isSummaryRowBelow !== undefined) {\n                    sheet.isSummaryRowBelow = jsonSheet.pageSetup.isSummaryRowBelow;\n                }\n            }\n            sheet.index = (i + 1);\n            sheet.mergeCells = this.mergeCells;\n            sheet.hyperLinks = this.mHyperLinks;\n            this.worksheets.push(sheet);\n        }\n    };\n    /* tslint:disable:no-any */\n    Workbook.prototype.mergeOptions = function (fromJson, toJson) {\n        /* tslint:disable:no-any */\n        var result = {};\n        this.applyProperties(fromJson, result);\n        this.applyProperties(toJson, result);\n        return result;\n    };\n    /* tslint:disable:no-any */\n    Workbook.prototype.applyProperties = function (sourceJson, destJson) {\n        var keys = Object.keys(sourceJson);\n        for (var index = 0; index < keys.length; index++) {\n            if (keys[index] !== 'name') {\n                destJson[keys[index]] = sourceJson[keys[index]];\n            }\n        }\n    };\n    Workbook.prototype.getCellName = function (row, column) {\n        return this.getColumnName(column) + row.toString();\n    };\n    Workbook.prototype.getColumnName = function (col) {\n        col--;\n        var strColumnName = '';\n        do {\n            var iCurrentDigit = col % 26;\n            col = col / 26 - 1;\n            strColumnName = String.fromCharCode(65 + iCurrentDigit) + strColumnName;\n        } while (col >= 0);\n        return strColumnName;\n    };\n    /* tslint:disable:no-any */\n    Workbook.prototype.parserPrintTitle = function (json, sheet) {\n        var printTitleName = '';\n        var titleRowName;\n        if (json.fromRow !== null && json.fromRow !== undefined) {\n            var fromRow = json.fromRow;\n            var toRow = void 0;\n            if (json.toRow !== null && json.toRow !== undefined) {\n                toRow = json.toRow;\n            }\n            else {\n                toRow = json.fromRow;\n            }\n            titleRowName = '$' + fromRow + ':$' + toRow;\n        }\n        var titleColName;\n        if (json.fromColumn !== null && json.fromColumn !== undefined) {\n            var fromColumn = json.fromColumn;\n            var toColumn = void 0;\n            if (json.toColumn !== null && json.toColumn !== undefined) {\n                toColumn = json.toColumn;\n            }\n            else {\n                toColumn = json.fromColumn;\n            }\n            titleColName = '$' + this.getColumnName(fromColumn) + ':$' + this.getColumnName(toColumn);\n        }\n        if (titleRowName !== undefined) {\n            printTitleName += (sheet.name + '!' + titleRowName);\n        }\n        if (titleColName !== undefined && titleRowName !== undefined) {\n            printTitleName += ',' + (sheet.name + '!' + titleColName);\n        }\n        else if (titleColName !== undefined) {\n            printTitleName += (sheet.name + '!' + titleColName);\n        }\n        if (printTitleName !== '') {\n            this.printTitles.set(sheet.index - 1, printTitleName);\n        }\n    };\n    /* tslint:disable:no-any */\n    Workbook.prototype.parserFreezePanes = function (json, sheet) {\n        sheet.freezePanes = new FreezePane();\n        if (json.row !== null && json.row !== undefined) {\n            sheet.freezePanes.row = json.row;\n        }\n        else {\n            sheet.freezePanes.row = 0;\n        }\n        if (json.column !== null && json.column !== undefined) {\n            sheet.freezePanes.column = json.column;\n        }\n        else {\n            sheet.freezePanes.column = 0;\n        }\n        sheet.freezePanes.leftCell = this.getCellName(sheet.freezePanes.row + 1, sheet.freezePanes.column + 1);\n    };\n    /* tslint:disable:no-any */\n    Workbook.prototype.parserColumns = function (json, sheet) {\n        var columnsLength = json.length;\n        sheet.columns = [];\n        for (var column = 0; column < columnsLength; column++) {\n            var col = new Column();\n            if (json[column].index !== null && json[column].index !== undefined) {\n                col.index = json[column].index;\n            }\n            else {\n                throw Error('Column index is missing.');\n            }\n            if (json[column].width !== null && json[column].width !== undefined) {\n                col.width = json[column].width;\n            }\n            sheet.columns.push(col);\n        }\n    };\n    /* tslint:disable:no-any */\n    Workbook.prototype.parserRows = function (json, sheet) {\n        var rowsLength = json.length;\n        sheet.rows = new Rows();\n        var rowId = 0;\n        for (var r = 0; r < rowsLength; r++) {\n            var row = this.parserRow(json[r], rowId);\n            rowId = row.index;\n            sheet.rows.add(row);\n        }\n    };\n    /* tslint:disable:no-any */\n    Workbook.prototype.parserRow = function (json, rowIndex) {\n        var row = new Row();\n        //Row Height\n        if (json.height !== null && json.height !== undefined) {\n            row.height = json.height;\n        }\n        //Row index\n        if (json.index !== null && json.index !== undefined) {\n            row.index = json.index;\n        }\n        else {\n            throw Error('Row index is missing.');\n        }\n        if (json.grouping !== null && json.grouping !== undefined) {\n            this.parseGrouping(json.grouping, row);\n        }\n        this.parseCells(json.cells, row);\n        return row;\n    };\n    /* tslint:disable:no-any */\n    Workbook.prototype.parseGrouping = function (json, row) {\n        row.grouping = new Grouping();\n        if (json.outlineLevel !== undefined) {\n            row.grouping.outlineLevel = json.outlineLevel;\n        }\n        if (json.isCollapsed !== undefined) {\n            row.grouping.isCollapsed = json.isCollapsed;\n        }\n        if (json.isHidden !== undefined) {\n            row.grouping.isHidden = json.isHidden;\n        }\n    };\n    /* tslint:disable:no-any */\n    Workbook.prototype.parseCells = function (json, row) {\n        row.cells = new Cells();\n        var cellsLength = json !== undefined ? json.length : 0;\n        var spanMin = 1;\n        var spanMax = 1;\n        var curCellIndex = 0;\n        for (var cellId = 0; cellId < cellsLength; cellId++) {\n            /* tslint:disable:no-any */\n            var jsonCell = json[cellId];\n            var cell = new Cell();\n            //cell index\n            if (jsonCell.index !== null && jsonCell.index !== undefined) {\n                cell.index = jsonCell.index;\n            }\n            else {\n                throw Error('Cell index is missing.');\n            }\n            if (cell.index < spanMin) {\n                spanMin = cell.index;\n            }\n            else if (cell.index > spanMax) {\n                spanMax = cell.index;\n            }\n            //Update the Cell name\n            cell.refName = this.getCellName(row.index, cell.index);\n            //Row span\n            if (jsonCell.rowSpan !== null && jsonCell.rowSpan !== undefined) {\n                cell.rowSpan = jsonCell.rowSpan - 1;\n            }\n            else {\n                cell.rowSpan = 0;\n            }\n            //Column span\n            if (jsonCell.colSpan !== null && jsonCell.colSpan !== undefined) {\n                cell.colSpan = jsonCell.colSpan - 1;\n            }\n            else {\n                cell.colSpan = 0;\n            }\n            this.mergeCells = this.processMergeCells(cell, row.index, this.mergeCells);\n            //Hyperlink\n            if (jsonCell.hyperlink !== null && jsonCell.hyperlink !== undefined) {\n                var hyperLink = new HyperLink();\n                if (jsonCell.hyperlink.target !== undefined) {\n                    hyperLink.target = jsonCell.hyperlink.target;\n                    if (jsonCell.hyperlink.displayText !== undefined) {\n                        cell.value = jsonCell.hyperlink.displayText;\n                    }\n                    else {\n                        cell.value = jsonCell.hyperlink.target;\n                    }\n                    cell.type = this.getCellValueType(cell.value);\n                    hyperLink.ref = cell.refName;\n                    hyperLink.rId = (this.mHyperLinks.length + 1);\n                    this.mHyperLinks.push(hyperLink);\n                    cell.cellStyle = new CellStyle();\n                    /* tslint:disable-next-line:max-line-length */\n                    this.parserCellStyle((jsonCell.style !== undefined ? this.mergeOptions(jsonCell.style, this.hyperlinkStyle) : this.hyperlinkStyle), cell.cellStyle, 'string');\n                    cell.styleIndex = cell.cellStyle.index;\n                }\n            }\n            //Cell value\n            if (jsonCell.value !== null && jsonCell.value !== undefined) {\n                cell.value = jsonCell.value;\n                cell.type = this.getCellValueType(cell.value);\n            }\n            if (jsonCell.style !== null && jsonCell.style !== undefined && cell.styleIndex === undefined) {\n                cell.cellStyle = new CellStyle();\n                if (cell.value instanceof Date) {\n                    this.parserCellStyle(jsonCell.style, cell.cellStyle, cell.type, 14);\n                }\n                else {\n                    this.parserCellStyle(jsonCell.style, cell.cellStyle, cell.type);\n                }\n                cell.styleIndex = cell.cellStyle.index;\n            }\n            else if (cell.value instanceof Date) {\n                cell.cellStyle = new CellStyle();\n                this.parserCellStyle({}, cell.cellStyle, cell.type, 14);\n                cell.styleIndex = cell.cellStyle.index;\n            }\n            this.parseCellType(cell);\n            row.cells.add(cell);\n            curCellIndex = (cell.index + 1);\n        }\n        row.spans = (spanMin) + ':' + (spanMax);\n    };\n    Workbook.prototype.applyGlobalStyle = function (json, cellStyle) {\n        var index = 0;\n        if (this.cellStyles.has(json.name)) {\n            index = this.cellStyles.get(json.name).xfId;\n            var cellStyleXfs = this.mCellStyleXfs[index - 1];\n            cellStyle.name = json.name;\n            var compareResult = this.compareStyleXfs(cellStyleXfs);\n            if (!compareResult.result) {\n                var cellXfs = new CellXfs();\n                cellXfs.alignment = cellStyleXfs.alignment;\n                cellXfs.applyAlignment = cellStyleXfs.applyAlignment;\n                cellXfs.borderId = cellStyleXfs.borderId;\n                cellXfs.fillId = cellStyleXfs.fillId;\n                cellXfs.fontId = cellStyleXfs.fontId;\n                cellXfs.numFmtId = cellStyleXfs.numFmtId;\n                cellXfs.xfId = index;\n                this.mCellXfs.push(cellXfs);\n                this.mStyles.push(cellStyle);\n                cellStyle.index = this.mCellXfs.length;\n            }\n            else {\n                cellStyle.index = compareResult.index;\n            }\n        }\n    };\n    Workbook.prototype.compareStyleXfs = function (toCompareStyle) {\n        var result = false;\n        var index = 1;\n        for (var _i = 0, _a = this.mCellXfs; _i < _a.length; _i++) {\n            var baseStyle = _a[_i];\n            result = baseStyle.alignment === toCompareStyle.alignment &&\n                baseStyle.borderId === toCompareStyle.borderId &&\n                baseStyle.numFmtId === toCompareStyle.numFmtId &&\n                baseStyle.fillId === toCompareStyle.fillId &&\n                baseStyle.fontId === toCompareStyle.fontId;\n            if (result) {\n                break;\n            }\n            else {\n                index++;\n            }\n        }\n        return { index: index, result: result };\n    };\n    /* tslint:disable:no-any */\n    Workbook.prototype.parserCellStyle = function (json, cellStyle, cellType, defStyleIndex) {\n        //name\n        if (json.name !== null && json.name !== undefined) {\n            if (cellStyle.isGlobalStyle) {\n                cellStyle.name = json.name;\n            }\n            else {\n                this.applyGlobalStyle(json, cellStyle);\n                return;\n            }\n        }\n        //background color\n        if (json.backColor !== null && json.backColor !== undefined) {\n            cellStyle.backColor = json.backColor;\n        }\n        //borders\n        //leftBorder\n        cellStyle.borders = new Borders();\n        //AllBorder\n        if (json.borders !== null && json.borders !== undefined) {\n            this.parserBorder(json.borders, cellStyle.borders.all);\n        }\n        //leftborder\n        if (json.leftBorder !== null && json.leftBorder !== undefined) {\n            this.parserBorder(json.leftBorder, cellStyle.borders.left);\n        }\n        //rightBorder\n        if (json.rightBorder !== null && json.rightBorder !== undefined) {\n            this.parserBorder(json.rightBorder, cellStyle.borders.right);\n        }\n        //topBorder\n        if (json.topBorder !== null && json.topBorder !== undefined) {\n            this.parserBorder(json.topBorder, cellStyle.borders.top);\n        }\n        //bottomBorder\n        if (json.bottomBorder !== null && json.bottomBorder !== undefined) {\n            this.parserBorder(json.bottomBorder, cellStyle.borders.bottom);\n        }\n        //fontName\n        if (json.fontName !== null && json.fontName !== undefined) {\n            cellStyle.fontName = json.fontName;\n        }\n        //fontSize\n        if (json.fontSize !== null && json.fontSize !== undefined) {\n            cellStyle.fontSize = json.fontSize;\n        }\n        //fontColor\n        if (json.fontColor !== null && json.fontColor !== undefined) {\n            cellStyle.fontColor = json.fontColor;\n        }\n        //italic\n        if (json.italic !== null && json.italic !== undefined) {\n            cellStyle.italic = json.italic;\n        }\n        //bold\n        if (json.bold !== null && json.bold !== undefined) {\n            cellStyle.bold = json.bold;\n        }\n        //hAlign\n        if (json.hAlign !== null && json.hAlign !== undefined) {\n            cellStyle.hAlign = json.hAlign;\n        }\n        //vAlign\n        if (json.vAlign !== null && json.vAlign !== undefined) {\n            cellStyle.vAlign = json.vAlign;\n        }\n        //underline\n        if (json.underline !== null && json.underline !== undefined) {\n            cellStyle.underline = json.underline;\n        }\n        //wrapText\n        if (json.wrapText !== null && json.wrapText !== undefined) {\n            cellStyle.wrapText = json.wrapText;\n        }\n        //numberFormat\n        if (json.numberFormat !== null && json.numberFormat !== undefined) {\n            if (json.type !== null && json.type !== undefined) {\n                cellStyle.numberFormat = this.getNumberFormat(json.numberFormat, json.type);\n            }\n            else {\n                cellStyle.numberFormat = this.getNumberFormat(json.numberFormat, cellType);\n            }\n        }\n        else if (defStyleIndex !== undefined) {\n            cellStyle.numFmtId = 14;\n            cellStyle.numberFormat = 'GENERAL';\n        }\n        else {\n            cellStyle.numberFormat = 'GENERAL';\n        }\n        cellStyle.index = this.processCellStyle(cellStyle);\n    };\n    Workbook.prototype.switchNumberFormat = function (numberFormat, type) {\n        var format = this.getNumberFormat(numberFormat, type);\n        if (format !== numberFormat) {\n            var numFmt = this.mNumFmt.get(numberFormat);\n            if (numFmt !== undefined) {\n                numFmt.formatCode = format;\n                if (this.mNumFmt.has(format)) {\n                    for (var _i = 0, _a = this.mCellStyleXfs; _i < _a.length; _i++) {\n                        var cellStyleXfs = _a[_i];\n                        if (cellStyleXfs.numFmtId === numFmt.numFmtId) {\n                            cellStyleXfs.numFmtId = this.mNumFmt.get(format).numFmtId;\n                        }\n                    }\n                    for (var _b = 0, _c = this.mCellXfs; _b < _c.length; _b++) {\n                        var cellXfs = _c[_b];\n                        if (cellXfs.numFmtId === numFmt.numFmtId) {\n                            cellXfs.numFmtId = this.mNumFmt.get(format).numFmtId;\n                        }\n                    }\n                }\n            }\n        }\n    };\n    Workbook.prototype.getNumberFormat = function (numberFormat, type) {\n        var returnFormat;\n        switch (type) {\n            case 'number':\n                try {\n                    returnFormat = this.intl.getNumberPattern({ format: numberFormat });\n                }\n                catch (error) {\n                    returnFormat = numberFormat;\n                }\n                break;\n            case 'datetime':\n                try {\n                    returnFormat = this.intl.getDatePattern({ skeleton: numberFormat, type: 'dateTime' }, true);\n                }\n                catch (error) {\n                    returnFormat = numberFormat;\n                }\n                break;\n            case 'date':\n                try {\n                    returnFormat = this.intl.getDatePattern({ skeleton: numberFormat, type: 'date' }, true);\n                }\n                catch (error) {\n                    returnFormat = numberFormat;\n                }\n                break;\n            case 'time':\n                try {\n                    returnFormat = this.intl.getDatePattern({ skeleton: numberFormat, type: 'time' }, true);\n                }\n                catch (error) {\n                    returnFormat = numberFormat;\n                }\n                break;\n            default:\n                returnFormat = numberFormat;\n                break;\n        }\n        return returnFormat;\n    };\n    /* tslint:disable:no-any */\n    Workbook.prototype.parserBorder = function (json, border) {\n        if (json.color !== null && json.color !== undefined) {\n            border.color = json.color;\n        }\n        else {\n            border.color = '#000000';\n        }\n        if (json.lineStyle !== null && json.lineStyle !== undefined) {\n            border.lineStyle = json.lineStyle;\n        }\n        else {\n            border.lineStyle = 'thin';\n        }\n    };\n    Workbook.prototype.processCellStyle = function (style) {\n        var compareResult = this.compareStyle(style);\n        if (!compareResult.result) {\n            this.mStyles.push(style);\n            var cellXfs = undefined;\n            if (style.isGlobalStyle) {\n                cellXfs = new CellStyleXfs();\n            }\n            else {\n                cellXfs = new CellXfs();\n            }\n            //Add font\n            var compareFontResult = this.isNewFont(style);\n            if (!compareFontResult.result) {\n                var font = new Font();\n                font.b = style.bold;\n                font.i = style.italic;\n                font.name = style.fontName;\n                font.sz = style.fontSize;\n                font.u = style.underline;\n                font.color = ('FF' + style.fontColor.replace('#', ''));\n                this.mFonts.push(font);\n                cellXfs.fontId = this.mFonts.length - 1;\n            }\n            else {\n                cellXfs.fontId = compareFontResult.index;\n            }\n            //Add fill\n            if (style.backColor !== 'none') {\n                var backColor = 'FF' + style.backColor.replace('#', '');\n                if (this.mFills.has(backColor)) {\n                    var fillId = this.mFills.get(backColor);\n                    cellXfs.fillId = fillId;\n                }\n                else {\n                    var fillId = this.mFills.size + 2;\n                    this.mFills.set(backColor, fillId);\n                    cellXfs.fillId = (fillId);\n                }\n            }\n            else {\n                cellXfs.fillId = 0;\n            }\n            //Add border            \n            if (!this.isNewBorder(style)) {\n                this.mBorders.push(style.borders);\n                cellXfs.borderId = this.mBorders.length;\n            }\n            else {\n                cellXfs.borderId = 0;\n            }\n            cellXfs.xfId = 0;\n            //Add Number Format            \n            if (style.numberFormat !== 'GENERAL') {\n                if (this.mNumFmt.has(style.numberFormat)) {\n                    var numFmt = this.mNumFmt.get(style.numberFormat);\n                    cellXfs.numFmtId = numFmt.numFmtId;\n                }\n                else {\n                    var id = this.mNumFmt.size + 164;\n                    this.mNumFmt.set(style.numberFormat, new NumFmt(id, style.numberFormat));\n                    cellXfs.numFmtId = id;\n                }\n            }\n            else {\n                if (style.numberFormat === 'GENERAL' && style.numFmtId === 14) {\n                    cellXfs.numFmtId = 14;\n                }\n                else {\n                    cellXfs.numFmtId = 0;\n                }\n            }\n            //Add alignment\n            if (style.hAlign !== 'left' || style.vAlign !== 'bottom' || style.wrapText) {\n                cellXfs.applyAlignment = 1;\n                cellXfs.alignment = new Alignment();\n                cellXfs.alignment.horizontal = style.hAlign;\n                cellXfs.alignment.vertical = style.vAlign;\n                cellXfs.alignment.wrapText = style.wrapText ? 1 : 0;\n            }\n            if (style.isGlobalStyle) {\n                this.mCellStyleXfs.push(cellXfs);\n                return (this.mCellStyleXfs.length);\n            }\n            else {\n                //Add cellxfs\n                this.mCellXfs.push(cellXfs);\n                return (this.mCellXfs.length);\n            }\n        }\n        else {\n            //Return the index of the already existing style.\n            return compareResult.index;\n        }\n    };\n    Workbook.prototype.isNewFont = function (toCompareStyle) {\n        var result = false;\n        var index = 0;\n        for (var _i = 0, _a = this.mFonts; _i < _a.length; _i++) {\n            var font = _a[_i];\n            index++;\n            var fontColor = undefined;\n            if (toCompareStyle.fontColor !== undefined) {\n                fontColor = ('FF' + toCompareStyle.fontColor.replace('#', ''));\n            }\n            result = font.color === fontColor &&\n                font.b === toCompareStyle.bold &&\n                font.i === toCompareStyle.italic &&\n                font.u === toCompareStyle.underline &&\n                font.name === toCompareStyle.fontName &&\n                font.sz === toCompareStyle.fontSize;\n            if (result) {\n                break;\n            }\n        }\n        index = index - 1;\n        return { index: index, result: result };\n    };\n    Workbook.prototype.isNewBorder = function (toCompareStyle) {\n        var bStyle = new CellStyle;\n        if (this.isAllBorder(toCompareStyle.borders)) {\n            return (bStyle.borders.all.color === toCompareStyle.borders.all.color &&\n                bStyle.borders.all.lineStyle === toCompareStyle.borders.all.lineStyle);\n        }\n        else {\n            return (bStyle.borders.left.color === toCompareStyle.borders.left.color &&\n                bStyle.borders.left.lineStyle === toCompareStyle.borders.left.lineStyle &&\n                bStyle.borders.right.color === toCompareStyle.borders.right.color &&\n                bStyle.borders.right.lineStyle === toCompareStyle.borders.right.lineStyle &&\n                bStyle.borders.top.color === toCompareStyle.borders.top.color &&\n                bStyle.borders.top.lineStyle === toCompareStyle.borders.top.lineStyle &&\n                bStyle.borders.bottom.color === toCompareStyle.borders.bottom.color &&\n                bStyle.borders.bottom.lineStyle === toCompareStyle.borders.bottom.lineStyle);\n        }\n    };\n    Workbook.prototype.isAllBorder = function (toCompareBorder) {\n        var allBorderStyle = new CellStyle;\n        return allBorderStyle.borders.all.color !== toCompareBorder.all.color &&\n            allBorderStyle.borders.all.lineStyle !== toCompareBorder.all.lineStyle;\n    };\n    Workbook.prototype.compareStyle = function (toCompareStyle) {\n        var result = true;\n        var index = 0;\n        var globalStyleIndex = 0;\n        for (var _i = 0, _a = this.mStyles; _i < _a.length; _i++) {\n            var baseStyle = _a[_i];\n            result = baseStyle.backColor === toCompareStyle.backColor &&\n                baseStyle.bold === toCompareStyle.bold &&\n                baseStyle.numFmtId === toCompareStyle.numFmtId &&\n                baseStyle.numberFormat === toCompareStyle.numberFormat &&\n                baseStyle.type === toCompareStyle.type &&\n                baseStyle.fontColor === toCompareStyle.fontColor &&\n                baseStyle.fontName === toCompareStyle.fontName &&\n                baseStyle.fontSize === toCompareStyle.fontSize &&\n                baseStyle.hAlign === toCompareStyle.hAlign &&\n                baseStyle.italic === toCompareStyle.italic &&\n                baseStyle.underline === toCompareStyle.underline &&\n                baseStyle.vAlign === toCompareStyle.vAlign &&\n                baseStyle.wrapText === toCompareStyle.wrapText &&\n                (baseStyle.borders.all.color === toCompareStyle.borders.all.color &&\n                    baseStyle.borders.all.lineStyle === toCompareStyle.borders.all.lineStyle) &&\n                (baseStyle.borders.left.color === toCompareStyle.borders.left.color &&\n                    baseStyle.borders.left.lineStyle === toCompareStyle.borders.left.lineStyle &&\n                    baseStyle.borders.right.color === toCompareStyle.borders.right.color &&\n                    baseStyle.borders.right.lineStyle === toCompareStyle.borders.right.lineStyle &&\n                    baseStyle.borders.top.color === toCompareStyle.borders.top.color &&\n                    baseStyle.borders.top.lineStyle === toCompareStyle.borders.top.lineStyle &&\n                    baseStyle.borders.bottom.color === toCompareStyle.borders.bottom.color &&\n                    baseStyle.borders.bottom.lineStyle === toCompareStyle.borders.bottom.lineStyle);\n            if (result) {\n                break;\n            }\n            else if (!baseStyle.isGlobalStyle) {\n                index++;\n            }\n            else {\n                globalStyleIndex++;\n            }\n        }\n        if (toCompareStyle.isGlobalStyle) {\n            index = globalStyleIndex + 1;\n        }\n        return { index: index, result: result };\n    };\n    Workbook.prototype.contains = function (array, item) {\n        var index = array.indexOf(item);\n        return index > -1 && index < array.length;\n    };\n    Workbook.prototype.getCellValueType = function (value) {\n        if (value instanceof Date) {\n            return 'datetime';\n        }\n        else if (typeof (value) === 'boolean') {\n            return 'boolean';\n        }\n        else if (typeof (value) === 'number') {\n            return 'number';\n        }\n        else {\n            return 'string';\n        }\n    };\n    Workbook.prototype.parseCellType = function (cell) {\n        var type = cell.type;\n        var saveType;\n        var value = cell.value;\n        switch (type) {\n            case 'datetime':\n                value = this.toOADate(value);\n                if (cell.cellStyle !== undefined && cell.cellStyle.name !== undefined) {\n                    if (this.globalStyles.has(cell.cellStyle.name)) {\n                        var value_1 = this.globalStyles.get(cell.cellStyle.name);\n                        this.switchNumberFormat(value_1.format, value_1.type);\n                    }\n                }\n                saveType = 'n';\n                break;\n            //TODO: Update the number format index and style\n            case 'boolean':\n                value = value ? 1 : 0;\n                saveType = 'b';\n                break;\n            case 'number':\n                saveType = 'n';\n                if (cell.cellStyle !== undefined && cell.cellStyle.name !== undefined) {\n                    if (this.globalStyles.has(cell.cellStyle.name)) {\n                        this.switchNumberFormat(this.globalStyles.get(cell.cellStyle.name).format, 'number');\n                    }\n                }\n                break;\n            case 'string':\n                this.sharedStringCount++;\n                saveType = 's';\n                if (!this.contains(this.sharedString, value)) {\n                    this.sharedString.push(value);\n                }\n                value = this.sharedString.indexOf(value);\n                break;\n            default:\n                break;\n        }\n        cell.saveType = saveType;\n        cell.value = value;\n    };\n    Workbook.prototype.saveAsBlob = function (blobSaveType) {\n        var _this = this;\n        switch (blobSaveType) {\n            case 'text/csv':\n                return new Promise(function (resolve, reject) {\n                    var obj = {};\n                    obj.blobData = _this.csvHelper.saveAsBlob();\n                    resolve(obj);\n                });\n            default:\n                return new Promise(function (resolve, reject) {\n                    _this.saveInternal();\n                    _this.mArchive.saveAsBlob().then(function (blob) {\n                        var obj = {};\n                        obj.blobData = new Blob([blob], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' });\n                        resolve(obj);\n                    });\n                });\n        }\n    };\n    Workbook.prototype.save = function (fileName, proxyUrl) {\n        var _this = this;\n        if (fileName === null || fileName === undefined || fileName === '') {\n            throw new Error('Argument Null Exception: fileName cannot be null or empty');\n        }\n        var xlsxMatch = fileName.match('.xlsx$');\n        var csvMatch = fileName.match('.csv$');\n        if (xlsxMatch !== null && xlsxMatch[0] === ('.' + this.mSaveType)) {\n            this.saveInternal();\n            this.mArchive.save(fileName).then(function () {\n                _this.mArchive.destroy();\n            });\n        }\n        else if (csvMatch !== null && csvMatch[0] === ('.' + this.mSaveType)) {\n            this.csvHelper.save(fileName);\n        }\n        else {\n            throw Error('Save type and file extension is different.');\n        }\n    };\n    Workbook.prototype.saveInternal = function () {\n        this.saveWorkbook();\n        this.saveWorksheets();\n        this.saveSharedString();\n        this.saveStyles();\n        this.saveApp(this.builtInProperties);\n        this.saveCore(this.builtInProperties);\n        this.saveContentType();\n        this.saveTopLevelRelation();\n        this.saveWorkbookRelation();\n    };\n    Workbook.prototype.saveWorkbook = function () {\n        /* tslint:disable-next-line:max-line-length */\n        var workbookTemp = '<?xml version=\"1.0\" encoding=\"utf-8\"?><workbook xmlns:r = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships\" xmlns= \"http://schemas.openxmlformats.org/spreadsheetml/2006/main\"><workbookPr codeName=\"ThisWorkbook\" defaultThemeVersion= \"153222\"/><bookViews><workbookView activeTab=\"0\"/></bookViews>';\n        var sheets = '<sheets>';\n        var length = this.worksheets.length;\n        for (var i = 0; i < length; i++) {\n            /* tslint:disable-next-line:max-line-length */\n            sheets += '<sheet name=\"' + this.worksheets[i].name + '\" sheetId=\"' + (i + 1).toString() + '\" r:id =\"rId' + (i + 1).toString() + '\" />';\n        }\n        sheets += '</sheets>';\n        workbookTemp += sheets;\n        if (this.printTitles.size > 0) {\n            var printTitle_1 = '<definedNames>';\n            this.printTitles.forEach(function (value, key) {\n                printTitle_1 += '<definedName name=\"_xlnm.Print_Titles\" localSheetId=\"' + key + '\">' + value + '</definedName>';\n            });\n            printTitle_1 += '</definedNames>';\n            workbookTemp += printTitle_1;\n        }\n        this.addToArchive(workbookTemp + '</workbook>', 'xl/workbook.xml');\n    };\n    Workbook.prototype.saveWorksheets = function () {\n        var length = this.worksheets.length;\n        for (var i = 0; i < length; i++) {\n            this.saveWorksheet(this.worksheets[i], i);\n        }\n    };\n    Workbook.prototype.saveWorksheet = function (sheet, index) {\n        var sheetBlob = new BlobHelper();\n        /* tslint:disable-next-line:max-line-length */\n        var sheetString = '<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"yes\"?><worksheet xmlns:r=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships\" xmlns:x14=\"http://schemas.microsoft.com/office/spreadsheetml/2009/9/main\" xmlns:mc=\"http://schemas.openxmlformats.org/markup-compatibility/2006\" xmlns=\"http://schemas.openxmlformats.org/spreadsheetml/2006/main\">';\n        if (!sheet.isSummaryRowBelow) {\n            sheetString += ('<sheetPr>' + '<outlinePr ' + 'summaryBelow=\"0\" >' + '</outlinePr>' + '</sheetPr>');\n        }\n        else {\n            sheetString += ('<sheetPr />');\n        }\n        if (sheet.freezePanes !== undefined) {\n            sheetString += (this.saveFreezePanes(sheet));\n        }\n        if (sheet.columns !== undefined) {\n            var colString = '<cols>';\n            for (var _i = 0, _a = sheet.columns; _i < _a.length; _i++) {\n                var column = _a[_i];\n                /* tslint:disable-next-line:max-line-length */\n                if (column.width !== undefined) {\n                    colString += '<col min=\"' + (column.index) + '\" max=\"' + (column.index) + '\" width=\"' + this.pixelsToColumnWidth(column.width) + '\" customWidth=\"1\" />';\n                }\n                else {\n                    colString += '<col min=\"' + (column.index) + '\" max=\"' + (column.index) + '\" width=\"' + '8.43' + '\" customWidth=\"1\" />';\n                }\n            }\n            sheetString += (colString + '</cols>');\n        }\n        sheetString += ('<sheetData>');\n        sheetBlob.append(sheetString);\n        sheetString = '';\n        if (sheet.rows !== undefined) {\n            for (var _b = 0, _c = sheet.rows; _b < _c.length; _b++) {\n                var row = _c[_b];\n                var rowString = ('<row r=\"' + (row.index) + '\" spans=\"' + row.spans + '\" ');\n                if (row.height !== undefined) {\n                    rowString += ('ht=\"' + this.pixelsToRowHeight(row.height) + '\" customHeight=\"1\" ');\n                }\n                if (row.grouping !== undefined) {\n                    if (row.grouping.isHidden) {\n                        rowString += ('hidden=\"1\" ');\n                    }\n                    if (row.grouping.outlineLevel !== undefined) {\n                        rowString += ('outlineLevel=\"' + row.grouping.outlineLevel + '\" ');\n                    }\n                    if (row.grouping.isCollapsed) {\n                        rowString += ('collapsed=\"1\" ');\n                    }\n                }\n                rowString += ('>');\n                for (var _d = 0, _e = row.cells; _d < _e.length; _d++) {\n                    var cell = _e[_d];\n                    if (cell !== undefined && (cell.value !== undefined || cell.cellStyle !== undefined)) {\n                        rowString += ('<c r=\"' + cell.refName + '\" ');\n                        if (cell.saveType !== undefined) {\n                            rowString += ('t=\"' + cell.saveType + '\" ');\n                        }\n                        if (cell.styleIndex !== undefined) {\n                            rowString += ('s=\"' + cell.styleIndex + '\" ');\n                        }\n                        rowString += (' >');\n                        if (cell.value !== undefined) {\n                            rowString += ('<v>' + cell.value + '</v></c>');\n                        }\n                        else {\n                            rowString += ('</c>');\n                        }\n                    }\n                }\n                rowString += ('</row>');\n                sheetBlob.append(rowString);\n            }\n        }\n        sheetString += ('</sheetData>');\n        if (sheet.mergeCells.length > 0) {\n            sheetString += ('<mergeCells count=\"' + sheet.mergeCells.length + '\">');\n            for (var _f = 0, _g = sheet.mergeCells; _f < _g.length; _f++) {\n                var mCell = _g[_f];\n                sheetString += ('<mergeCell ref=\"' + mCell.ref + '\" />');\n            }\n            sheetString += ('</mergeCells>');\n        }\n        if (sheet.hyperLinks.length > 0) {\n            sheetString += ('<hyperlinks>');\n            for (var _h = 0, _j = sheet.hyperLinks; _h < _j.length; _h++) {\n                var hLink = _j[_h];\n                sheetString += ('<hyperlink ref=\"' + hLink.ref + '\" r:id=\"rId' + hLink.rId + '\" />');\n            }\n            sheetString += ('</hyperlinks>');\n            this.addToArchive(this.saveSheetRelations(sheet), ('xl/worksheets/_rels/sheet' + sheet.index + '.xml.rels'));\n        }\n        /* tslint:disable-next-line:max-line-length */\n        sheetString += ('<pageMargins left=\"0.75\" right=\"0.75\" top=\"1\" bottom=\"1\" header=\"0.5\" footer=\"0.5\" /><headerFooter scaleWithDoc=\"1\" alignWithMargins=\"0\" differentFirst=\"0\" differentOddEven=\"0\" /></worksheet>');\n        sheetBlob.append(sheetString);\n        this.addToArchive(sheetBlob.getBlob(), 'xl/worksheets' + '/sheet' + (index + 1) + '.xml');\n    };\n    Workbook.prototype.pixelsToColumnWidth = function (pixels) {\n        var dDigitWidth = 7;\n        var val = (pixels > dDigitWidth + 5) ?\n            this.trunc((pixels - 5) / dDigitWidth * 100 + 0.5) / 100 :\n            pixels / (dDigitWidth + 5);\n        return (val > 1) ?\n            ((val * dDigitWidth + 5) / dDigitWidth * 256.0) / 256.0 :\n            (val * (dDigitWidth + 5) / dDigitWidth * 256.0) / 256.0;\n    };\n    Workbook.prototype.trunc = function (x) {\n        var n = x - x % 1;\n        return n === 0 && (x < 0 || (x === 0 && (1 / x !== 1 / 0))) ? -0 : n;\n    };\n    Workbook.prototype.pixelsToRowHeight = function (pixels) {\n        return (pixels * this.unitsProportions[5] / this.unitsProportions[6]);\n    };\n    Workbook.prototype.saveSheetRelations = function (sheet) {\n        /* tslint:disable-next-line:max-line-length */\n        var relStr = '<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><Relationships xmlns=\"http://schemas.openxmlformats.org/package/2006/relationships\">';\n        for (var _i = 0, _a = sheet.hyperLinks; _i < _a.length; _i++) {\n            var hLink = _a[_i];\n            /* tslint:disable-next-line:max-line-length */\n            relStr += '<Relationship Id=\"rId' + hLink.rId + '\" Type=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/hyperlink\" Target=\"' + hLink.target + '\" TargetMode=\"External\" />';\n        }\n        relStr += '</Relationships>';\n        return relStr;\n    };\n    Workbook.prototype.saveFreezePanes = function (sheet) {\n        var paneString = '<sheetViews><sheetView workbookViewId=\"0\" ><pane state=\"frozen\"' +\n            ' topLeftCell=\"' + sheet.freezePanes.leftCell + '\" ';\n        if (sheet.freezePanes.row !== 0) {\n            paneString += 'ySplit=\"' + sheet.freezePanes.row + '\" ';\n        }\n        if (sheet.freezePanes.column !== 0) {\n            paneString += 'xSplit=\"' + sheet.freezePanes.column + '\" ';\n        }\n        paneString += '/></sheetView></sheetViews>';\n        return paneString;\n    };\n    Workbook.prototype.saveSharedString = function () {\n        var length = this.sharedString.length;\n        if (length > 0) {\n            /* tslint:disable-next-line:max-line-length */\n            var sstStart = '<?xml version=\"1.0\" encoding=\"utf-8\"?><sst uniqueCount=\"' + length + '\" count=\"' + this.sharedStringCount + '\" xmlns=\"http://schemas.openxmlformats.org/spreadsheetml/2006/main\">';\n            var si = '';\n            for (var i = 0; i < length; i++) {\n                si += '<si><t>';\n                si += this.processString(this.sharedString[i]);\n                si += '</t></si>';\n            }\n            si += '</sst>';\n            this.addToArchive(sstStart + si, 'xl/sharedStrings.xml');\n        }\n    };\n    Workbook.prototype.processString = function (value) {\n        if (value.indexOf('&') !== -1) {\n            value = value.replace(/&/g, '&amp;');\n        }\n        if (value.indexOf('<') !== -1) {\n            value = value.replace(/</g, '&lt;');\n        }\n        if (value.indexOf('>') !== -1) {\n            value = value.replace(/>/g, '&gt;');\n        }\n        return value;\n    };\n    Workbook.prototype.saveStyles = function () {\n        /* tslint:disable-next-line:max-line-length */\n        var styleTemp = '<?xml version=\"1.0\" encoding=\"utf-8\"?><styleSheet xmlns:mc=\"http://schemas.openxmlformats.org/markup-compatibility/2006\" mc:Ignorable=\"x14ac\" xmlns:x14ac=\"http://schemas.microsoft.com/office/spreadsheetml/2009/9/ac\" xmlns=\"http://schemas.openxmlformats.org/spreadsheetml/2006/main\">';\n        styleTemp += this.saveNumberFormats();\n        styleTemp += this.saveFonts();\n        styleTemp += this.saveFills();\n        styleTemp += this.saveBorders();\n        styleTemp += this.saveCellStyleXfs();\n        styleTemp += this.saveCellXfs();\n        styleTemp += this.saveCellStyles();\n        this.addToArchive(styleTemp + '</styleSheet>', 'xl/styles.xml');\n    };\n    Workbook.prototype.saveNumberFormats = function () {\n        if (this.mNumFmt.size >= 1) {\n            var numFmtStyle_1 = '<numFmts count=\"' + (this.mNumFmt.size) + '\">';\n            this.mNumFmt.forEach(function (value, key) {\n                numFmtStyle_1 += '<numFmt numFmtId=\"' + value.numFmtId + '\" formatCode=\"' + value.formatCode.replace(/\"/g, '&quot;') + '\" />';\n            });\n            return (numFmtStyle_1 += '</numFmts>');\n        }\n        else {\n            return '';\n        }\n    };\n    Workbook.prototype.saveFonts = function () {\n        /* tslint:disable-next-line:max-line-length */\n        var fontStyle = '<fonts count=\"' + (this.mFonts.length) + '\">';\n        if (this.mFonts.length >= 1) {\n            for (var _i = 0, _a = this.mFonts; _i < _a.length; _i++) {\n                var font = _a[_i];\n                fontStyle += '<font>';\n                if (font.b) {\n                    fontStyle += '<b />';\n                }\n                if (font.i) {\n                    fontStyle += '<i />';\n                }\n                if (font.u) {\n                    fontStyle += '<u />';\n                }\n                fontStyle += '<sz val=\"' + this.pixelsToRowHeight(font.sz) + '\" />';\n                fontStyle += '<color rgb=\"' + font.color + '\" />';\n                fontStyle += '<name val=\"' + font.name + '\" /></font>';\n            }\n        }\n        return fontStyle + '</fonts>';\n    };\n    Workbook.prototype.saveFills = function () {\n        /* tslint:disable-next-line:max-line-length */\n        var fillsStyle = '<fills count=\"' + (this.mFills.size + 2) + '\"><fill><patternFill patternType=\"none\"></patternFill></fill><fill><patternFill patternType=\"gray125\"></patternFill></fill>';\n        if (this.mFills.size >= 1) {\n            this.mFills.forEach(function (value, key) {\n                /* tslint:disable-next-line:max-line-length */\n                fillsStyle += '<fill><patternFill patternType=\"solid\"><fgColor rgb=\"' + key + '\" /><bgColor rgb=\"FFFFFFFF\" /></patternFill></fill>';\n            });\n        }\n        return fillsStyle + '</fills>';\n    };\n    Workbook.prototype.saveBorders = function () {\n        /* tslint:disable-next-line:max-line-length */\n        var bordersStyle = '<borders count=\"' + (this.mBorders.length + 1) + '\"><border><left /><right /><top /><bottom /><diagonal /></border>';\n        if (this.mBorders.length >= 1) {\n            for (var _i = 0, _a = this.mBorders; _i < _a.length; _i++) {\n                var borders = _a[_i];\n                if (this.isAllBorder(borders)) {\n                    var color = borders.all.color.replace('#', '');\n                    var lineStyle = borders.all.lineStyle;\n                    /* tslint:disable-next-line:max-line-length */\n                    bordersStyle += '<border><left style=\"' + lineStyle + '\"><color rgb=\"FF' + color + '\" /></left><right style=\"' + lineStyle + '\"><color rgb=\"FF' + color + '\" /></right><top style=\"' + lineStyle + '\"><color rgb=\"FF' + color + '\" /></top><bottom style=\"' + lineStyle + '\"><color rgb=\"FF' + color + '\" /></bottom></border>';\n                }\n                else {\n                    /* tslint:disable-next-line:max-line-length */\n                    bordersStyle += '<border><left style=\"' + borders.left.lineStyle + '\"><color rgb=\"FF' + borders.left.color.replace('#', '') + '\" /></left><right style=\"' + borders.right.lineStyle + '\"><color rgb=\"FF' + borders.right.color.replace('#', '') + '\" /></right><top style=\"' + borders.top.lineStyle + '\"><color rgb=\"FF' + borders.top.color.replace('#', '') + '\" /></top><bottom style=\"' + borders.bottom.lineStyle + '\"><color rgb=\"FF' + borders.bottom.color.replace('#', '') + '\" /></bottom></border>';\n                }\n            }\n        }\n        return bordersStyle + '</borders>';\n    };\n    Workbook.prototype.saveCellStyles = function () {\n        var _this = this;\n        var cellStyleString = '<cellStyles  count=\"' + (this.cellStyles.size) + '\">';\n        this.cellStyles.forEach(function (value, key) {\n            cellStyleString += '<cellStyle name=\"' + key + '\" xfId=\"' + _this.cellStyles.get(key).xfId + '\"';\n            if (key === 'Normal') {\n                cellStyleString += ' builtinId=\"0\"';\n            }\n            cellStyleString += ' />';\n        });\n        return cellStyleString += '</cellStyles>';\n    };\n    Workbook.prototype.saveCellStyleXfs = function () {\n        /* tslint:disable-next-line:max-line-length */\n        var cellXfsStyle = '<cellStyleXfs count=\"' + (this.mCellStyleXfs.length + 1) + '\"><xf numFmtId=\"0\" fontId=\"0\" fillId=\"0\" borderId=\"0\" />';\n        if (this.mCellStyleXfs.length >= 1) {\n            for (var _i = 0, _a = this.mCellStyleXfs; _i < _a.length; _i++) {\n                var cellStyleXf = _a[_i];\n                /* tslint:disable-next-line:max-line-length */\n                cellXfsStyle += '<xf numFmtId=\"' + cellStyleXf.numFmtId + '\" fontId=\"' + cellStyleXf.fontId + '\" fillId=\"' + cellStyleXf.fillId + '\" borderId=\"' + cellStyleXf.borderId + '\" ';\n                if (cellStyleXf.applyAlignment === 1) {\n                    cellXfsStyle += 'applyAlignment=\"1\"><alignment ';\n                    if (cellStyleXf.alignment.horizontal !== undefined) {\n                        cellXfsStyle += 'horizontal=\"' + cellStyleXf.alignment.horizontal + '\" ';\n                    }\n                    if (cellStyleXf.alignment.vertical !== undefined) {\n                        cellXfsStyle += 'vertical=\"' + cellStyleXf.alignment.vertical + '\" ';\n                    }\n                    cellXfsStyle += 'wrapText=\"' + cellStyleXf.alignment.wrapText + '\" /></xf>';\n                }\n                else {\n                    cellXfsStyle += ' />';\n                }\n                // <xf numFmtId=\"0\" fontId=\"0\" fillId=\"0\" borderId=\"0\" xfId=\"0\" applyAlignment=\"1\">\n                //       <alignment horizontal=\"center\" vertical=\"top\" wrapText=\"1\" />\n                //     </xf>\n            }\n        }\n        return cellXfsStyle + '</cellStyleXfs>';\n    };\n    Workbook.prototype.saveCellXfs = function () {\n        /* tslint:disable-next-line:max-line-length */\n        var cellXfsStyle = '<cellXfs count=\"' + (this.mCellXfs.length + 1) + '\"><xf numFmtId=\"0\" fontId=\"0\" fillId=\"0\" borderId=\"0\" xfId=\"0\" />';\n        if (this.mCellXfs.length >= 1) {\n            for (var _i = 0, _a = this.mCellXfs; _i < _a.length; _i++) {\n                var cellXf = _a[_i];\n                /* tslint:disable-next-line:max-line-length */\n                cellXfsStyle += '<xf numFmtId=\"' + cellXf.numFmtId + '\" fontId=\"' + cellXf.fontId + '\" fillId=\"' + cellXf.fillId + '\" borderId=\"' + cellXf.borderId + '\" xfId=\"' + cellXf.xfId + '\" ';\n                if (cellXf.applyAlignment === 1) {\n                    cellXfsStyle += 'applyAlignment=\"1\"><alignment ';\n                    if (cellXf.alignment.horizontal !== undefined) {\n                        cellXfsStyle += 'horizontal=\"' + cellXf.alignment.horizontal + '\" ';\n                    }\n                    if (cellXf.alignment.vertical !== undefined) {\n                        cellXfsStyle += 'vertical=\"' + cellXf.alignment.vertical + '\" ';\n                    }\n                    cellXfsStyle += 'wrapText=\"' + cellXf.alignment.wrapText + '\" /></xf>';\n                }\n                else {\n                    cellXfsStyle += ' />';\n                }\n                // <xf numFmtId=\"0\" fontId=\"0\" fillId=\"0\" borderId=\"0\" xfId=\"0\" applyAlignment=\"1\">\n                //       <alignment horizontal=\"center\" vertical=\"top\" wrapText=\"1\" />\n                //     </xf>\n            }\n        }\n        return cellXfsStyle + '</cellXfs>';\n    };\n    Workbook.prototype.saveApp = function (builtInProperties) {\n        /* tslint:disable-next-line:max-line-length */\n        var appString = '<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"yes\"?><Properties xmlns=\"http://schemas.openxmlformats.org/officeDocument/2006/extended-properties\"><Application>Essential XlsIO</Application>';\n        if (builtInProperties !== undefined) {\n            if (builtInProperties.manager !== undefined) {\n                appString += '<Manager>' + builtInProperties.manager + '</Manager>';\n            }\n            if (builtInProperties.company !== undefined) {\n                appString += '<Company>' + builtInProperties.company + '</Company>';\n            }\n        }\n        this.addToArchive((appString + '</Properties>'), 'docProps/app.xml');\n    };\n    Workbook.prototype.saveCore = function (builtInProperties) {\n        var createdDate = new Date();\n        /* tslint:disable-next-line:max-line-length */\n        var coreString = '<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"yes\"?><cp:coreProperties xmlns:dc=\"http://purl.org/dc/elements/1.1/\" xmlns:dcterms=\"http://purl.org/dc/terms/\" xmlns:dcmitype=\"http://purl.org/dc/dcmitype/\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:cp=\"http://schemas.openxmlformats.org/package/2006/metadata/core-properties\">';\n        if (this.builtInProperties !== undefined) {\n            if (builtInProperties.author !== undefined) {\n                coreString += '<dc:creator>' + builtInProperties.author + '</dc:creator>';\n            }\n            if (builtInProperties.subject !== undefined) {\n                coreString += '<dc:subject>' + builtInProperties.subject + '</dc:subject>';\n            }\n            if (builtInProperties.category !== undefined) {\n                coreString += '<cp:category>' + builtInProperties.category + '</cp:category>';\n            }\n            if (builtInProperties.comments !== undefined) {\n                coreString += '<dc:description>' + builtInProperties.comments + '</dc:description>';\n            }\n            if (builtInProperties.title !== undefined) {\n                coreString += '<dc:title>' + builtInProperties.title + '</dc:title>';\n            }\n            if (builtInProperties.tags !== undefined) {\n                coreString += '<cp:keywords>' + builtInProperties.tags + '</cp:keywords>';\n            }\n            if (builtInProperties.status !== undefined) {\n                coreString += '<cp:contentStatus>' + builtInProperties.status + '</cp:contentStatus>';\n            }\n            if (builtInProperties.createdDate !== undefined) {\n                /* tslint:disable-next-line:max-line-length */\n                coreString += '<dcterms:created xsi:type=\"dcterms:W3CDTF\">' + builtInProperties.createdDate.toISOString() + '</dcterms:created>';\n            }\n            else {\n                coreString += '<dcterms:created xsi:type=\"dcterms:W3CDTF\">' + createdDate.toISOString() + '</dcterms:created>';\n            }\n            if (builtInProperties.modifiedDate !== undefined) {\n                /* tslint:disable-next-line:max-line-length */\n                coreString += '<dcterms:modified xsi:type=\"dcterms:W3CDTF\">' + builtInProperties.modifiedDate.toISOString() + '</dcterms:modified>';\n            }\n            else {\n                coreString += '<dcterms:modified xsi:type=\"dcterms:W3CDTF\">' + createdDate.toISOString() + '</dcterms:modified>';\n            }\n        }\n        else {\n            coreString += '<dcterms:created xsi:type=\"dcterms:W3CDTF\">' + createdDate.toISOString() + '</dcterms:created>';\n            coreString += '<dcterms:modified xsi:type=\"dcterms:W3CDTF\">' + createdDate.toISOString() + '</dcterms:modified>';\n        }\n        /* tslint:disable-next-line:max-line-length */\n        coreString += '</cp:coreProperties>';\n        this.addToArchive(coreString, 'docProps/core.xml');\n    };\n    Workbook.prototype.saveTopLevelRelation = function () {\n        /* tslint:disable-next-line:max-line-length */\n        var topRelation = '<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"yes\"?><Relationships xmlns=\"http://schemas.openxmlformats.org/package/2006/relationships\"><Relationship Id=\"rId1\" Type=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/officeDocument\" Target=\"xl/workbook.xml\" /><Relationship Id=\"rId2\" Type=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/extended-properties\" Target=\"docProps/app.xml\" /><Relationship Id=\"rId3\" Type=\"http://schemas.openxmlformats.org/package/2006/relationships/metadata/core-properties\" Target=\"docProps/core.xml\" /></Relationships>';\n        this.addToArchive(topRelation, '_rels/.rels');\n    };\n    Workbook.prototype.saveWorkbookRelation = function () {\n        /* tslint:disable-next-line:max-line-length */\n        var wbRelation = '<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"yes\"?><Relationships xmlns=\"http://schemas.openxmlformats.org/package/2006/relationships\">';\n        var length = this.worksheets.length;\n        var count = 0;\n        for (var i = 0; i < length; i++, count++) {\n            /* tslint:disable-next-line:max-line-length */\n            wbRelation += '<Relationship Id=\"rId' + (i + 1).toString() + '\" Type=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/worksheet\" Target=\"worksheets/sheet' + (i + 1).toString() + '.xml\" />';\n        }\n        /* tslint:disable-next-line:max-line-length */\n        wbRelation += '<Relationship Id=\"rId' + (++count).toString() + '\" Type=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/styles\" Target=\"styles.xml\" />';\n        if (this.sharedStringCount > 0) {\n            /* tslint:disable-next-line:max-line-length */\n            wbRelation += '<Relationship Id=\"rId' + (++count).toString() + '\" Type=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/sharedStrings\" Target=\"sharedStrings.xml\" />';\n        }\n        this.addToArchive((wbRelation + '</Relationships>'), 'xl/_rels/workbook.xml.rels');\n    };\n    Workbook.prototype.saveContentType = function () {\n        /* tslint:disable-next-line:max-line-length */\n        var contentTypeString = '<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"yes\"?><Types xmlns=\"http://schemas.openxmlformats.org/package/2006/content-types\"><Default Extension=\"xml\" ContentType=\"application/xml\" /><Default Extension=\"rels\" ContentType=\"application/vnd.openxmlformats-package.relationships+xml\" /><Override PartName=\"/xl/styles.xml\" ContentType=\"application/vnd.openxmlformats-officedocument.spreadsheetml.styles+xml\" /><Override PartName=\"/xl/workbook.xml\" ContentType=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet.main+xml\" /><Override PartName=\"/docProps/app.xml\" ContentType=\"application/vnd.openxmlformats-officedocument.extended-properties+xml\" /><Override PartName=\"/docProps/core.xml\" ContentType=\"application/vnd.openxmlformats-package.core-properties+xml\" />';\n        var sheetsOverride = '';\n        var length = this.worksheets.length;\n        for (var i = 0; i < length; i++) {\n            /* tslint:disable-next-line:max-line-length */\n            sheetsOverride += '<Override PartName=\"/xl/worksheets/sheet' + (i + 1).toString() + '.xml\" ContentType=\"application/vnd.openxmlformats-officedocument.spreadsheetml.worksheet+xml\" />';\n        }\n        if (this.sharedStringCount > 0) {\n            /* tslint:disable-next-line:max-line-length */\n            contentTypeString += '<Override PartName=\"/xl/sharedStrings.xml\" ContentType=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sharedStrings+xml\" />';\n        }\n        this.addToArchive((contentTypeString + sheetsOverride + '</Types>'), '[Content_Types].xml');\n    };\n    Workbook.prototype.addToArchive = function (xmlString, itemName) {\n        if (typeof (xmlString) === 'string') {\n            var blob = new Blob([xmlString], { type: 'text/plain' });\n            var archiveItem = new ZipArchiveItem(blob, itemName);\n            this.mArchive.addItem(archiveItem);\n        }\n        else {\n            var archiveItem = new ZipArchiveItem(xmlString, itemName);\n            this.mArchive.addItem(archiveItem);\n        }\n    };\n    Workbook.prototype.processMergeCells = function (cell, rowIndex, mergeCells) {\n        if (cell.rowSpan !== 0 || cell.colSpan !== 0) {\n            var mCell = new MergeCell();\n            mCell.x = cell.index;\n            mCell.width = cell.colSpan;\n            mCell.y = rowIndex;\n            mCell.height = cell.rowSpan;\n            var startCell = this.getCellName(mCell.y, mCell.x);\n            var endCell = this.getCellName(rowIndex + mCell.height, cell.index + mCell.width);\n            mCell.ref = startCell + ':' + endCell;\n            mergeCells.add(mCell);\n        }\n        return mergeCells;\n    };\n    /**\n     * Returns the tick count corresponding to the given year, month, and day.\n     * @param year number value of year\n     * @param month number value of month\n     * @param day number value of day\n     */\n    Workbook.prototype.dateToTicks = function (year, month, day) {\n        var ticksPerDay = 10000 * 1000 * 60 * 60 * 24;\n        var daysToMonth365 = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334, 365];\n        var daysToMonth366 = [0, 31, 60, 91, 121, 152, 182, 213, 244, 274, 305, 335, 366];\n        if (year >= 1 && year <= 9999 && month >= 1 && month <= 12) {\n            var days = this.isLeapYear(year) ? daysToMonth366 : daysToMonth365;\n            var y = year - 1;\n            var n = y * 365 + ((y / 4) | 0) - ((y / 100) | 0) + ((y / 400) | 0) + days[month - 1] + day - 1;\n            return n * ticksPerDay;\n        }\n        throw new Error('Not a valid date');\n    };\n    /**\n     * Return the tick count corresponding to the given hour, minute, second.\n     * @param hour number value of hour\n     * @param minute number value if minute\n     * @param second number value of second\n     */\n    Workbook.prototype.timeToTicks = function (hour, minute, second) {\n        if (hour >= 0 && hour < 24 && minute >= 0 && minute < 60 && second >= 0 && second < 60) {\n            var totalSeconds = hour * 3600 + minute * 60 + second;\n            return totalSeconds * 10000 * 1000;\n        }\n        throw new Error('Not valid time');\n    };\n    /**\n     * Checks if given year is a leap year.\n     * @param year Year value.\n     */\n    Workbook.prototype.isLeapYear = function (year) {\n        return year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0);\n    };\n    /**\n     * Converts `DateTime` to the equivalent OLE Automation date.\n     */\n    Workbook.prototype.toOADate = function (date) {\n        var ticks = 0;\n        /* tslint:disable-next-line:max-line-length */\n        ticks = this.dateToTicks(date.getFullYear(), (date.getMonth() + 1), date.getDate()) + this.timeToTicks(date.getHours(), date.getMinutes(), date.getSeconds());\n        if (ticks === 0) {\n            return 0.0;\n        }\n        var ticksPerDay = 10000 * 1000 * 60 * 60 * 24;\n        var daysTo1899 = (((365 * 4 + 1) * 25 - 1) * 4 + 1) * 4 + ((365 * 4 + 1) * 25 - 1) * 3 - 367;\n        var doubleDateOffset = daysTo1899 * ticksPerDay;\n        var oaDateMinAsTicks = (((365 * 4 + 1) * 25 - 1) - 365) * ticksPerDay;\n        if (ticks < oaDateMinAsTicks) {\n            throw new Error('Arg_OleAutDateInvalid');\n        }\n        var millisPerDay = 1000 * 60 * 60 * 24;\n        return ((ticks - doubleDateOffset) / 10000) / millisPerDay;\n    };\n    return Workbook;\n}());\nexport { Workbook };\nvar BuiltInProperties = /** @class */ (function () {\n    function BuiltInProperties() {\n    }\n    return BuiltInProperties;\n}());\nexport { BuiltInProperties };\n"],"names":["CellStyle","this","numFmtId","backColor","fontName","fontSize","fontColor","italic","bold","underline","wrapText","hAlign","vAlign","numberFormat","type","borders","Borders","isGlobalStyle","Font","sz","name","u","b","i","color","CellXfs","Alignment","CellStyleXfs","CellStyles","xfId","NumFmt","id","code","formatCode","Border","mLine","mColor","lineStyle","left","right","top","bottom","all","__extends","extendStatics","Object","setPrototypeOf","__proto__","Array","d","p","hasOwnProperty","__","constructor","prototype","create","Cell","Cells","_super","_this","apply","arguments","add","cell","inserted","count","_i","_a","length","index","push","Column","Row","Rows","row","Worksheets","Worksheet","isSummaryRowBelow","HyperLink","Grouping","FreezePane","MergeCell","MergeCells","mergeCell","mCell","isIntersecting","intersectingCell","x","Math","min","y","Y","width","max","Width","X","height","Height","ref","split","base","compare","ValueFormatter","cultureName","intl","Internationalization","getFormatFunction","format","getDateFormat","getNumberFormat","toView","value","result","isNullOrUndefined","displayText","CsvHelper","json","csvStr","formatter","isMicrosoftBrowser","navigator","msSaveBlob","styles","undefined","globalStyles","Map","set","worksheets","parseWorksheet","rows","parseRows","rows_1","Error","parseRow","cells","parseCell","csv","Date","style","parseCellValue","skeleton","has","get","indexOf","save","fileName","buffer","Blob","dataUrl_1","window","URL","createObjectURL","dwlLink","document","createElementNS","download","href","event_1","createEvent","initEvent","dispatchEvent","setTimeout","revokeObjectURL","saveAsBlob","BlobHelper","parts","append","part","blob","getBlob","Workbook","saveType","culture","sharedStringCount","unitsProportions","hyperlinkStyle","mSaveType","mArchive","ZipArchive","sharedString","mFonts","mBorders","mStyles","printTitles","cellStyles","mNumFmt","mFills","mCellXfs","mCellStyleXfs","cellStyle","parserCellStyle","tFormat","parserWorksheets","builtInProperties","BuiltInProperties","parserBuiltInProperties","csvHelper","jsonBuiltInProperties","author","comments","category","company","manager","subject","title","createdDate","modifiedDate","tags","status","jsonSheet","sheet","mergeCells","mHyperLinks","toString","columns","parserColumns","parserRows","freeze","parserFreezePanes","printTitle","parserPrintTitle","pageSetup","hyperLinks","mergeOptions","fromJson","toJson","applyProperties","sourceJson","destJson","keys","getCellName","column","getColumnName","col","strColumnName","iCurrentDigit","String","fromCharCode","titleRowName","printTitleName","fromRow","toRow","titleColName","fromColumn","toColumn","freezePanes","leftCell","columnsLength","rowsLength","rowId","r","parserRow","rowIndex","grouping","parseGrouping","parseCells","outlineLevel","isCollapsed","isHidden","cellsLength","spanMin","spanMax","cellId","jsonCell","refName","rowSpan","colSpan","processMergeCells","hyperlink","hyperLink","target","getCellValueType","rId","styleIndex","parseCellType","spans","applyGlobalStyle","cellStyleXfs","compareResult","compareStyleXfs","cellXfs","alignment","applyAlignment","borderId","fillId","fontId","toCompareStyle","baseStyle","cellType","defStyleIndex","parserBorder","leftBorder","rightBorder","topBorder","bottomBorder","processCellStyle","switchNumberFormat","numFmt","_b","_c","returnFormat","getNumberPattern","error","getDatePattern","border","compareStyle","compareFontResult","isNewFont","font","replace","size","isNewBorder","horizontal","vertical","bStyle","isAllBorder","toCompareBorder","allBorderStyle","globalStyleIndex","contains","array","item","toOADate","value_1","blobSaveType","Promise","resolve","reject","obj","blobData","saveInternal","then","proxyUrl","xlsxMatch","match","csvMatch","destroy","saveWorkbook","saveWorksheets","saveSharedString","saveStyles","saveApp","saveCore","saveContentType","saveTopLevelRelation","saveWorkbookRelation","workbookTemp","sheets","printTitle_1","forEach","key","addToArchive","saveWorksheet","sheetBlob","sheetString","saveFreezePanes","colString","pixelsToColumnWidth","rowString","pixelsToRowHeight","_d","_e","_f","_g","_h","_j","hLink","saveSheetRelations","pixels","val","dDigitWidth","trunc","n","relStr","paneString","sstStart","si","processString","styleTemp","saveNumberFormats","saveFonts","saveFills","saveBorders","saveCellStyleXfs","saveCellXfs","saveCellStyles","numFmtStyle_1","fontStyle","fillsStyle","bordersStyle","cellStyleString","cellXfsStyle","cellStyleXf","cellXf","appString","coreString","toISOString","wbRelation","contentTypeString","sheetsOverride","xmlString","itemName","archiveItem","ZipArchiveItem","addItem","startCell","endCell","dateToTicks","year","month","day","isLeapYear","timeToTicks","hour","minute","second","date","ticks","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","daysTo1899"],"mappings":"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"}