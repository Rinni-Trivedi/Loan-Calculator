{"version":3,"file":"ej2-pdf-export.umd.min.js","sources":["src/es5/implementation/collections/utils.js","src/es5/implementation/collections/dictionary.js","src/es5/implementation/primitives/pdf-name.js","src/es5/implementation/input-output/pdf-operators.js","src/es5/implementation/input-output/pdf-dictionary-properties.js","src/es5/implementation/primitives/pdf-dictionary.js","src/es5/implementation/primitives/pdf-number.js","src/es5/implementation/primitives/pdf-array.js","src/es5/implementation/primitives/pdf-stream.js","src/es5/implementation/primitives/pdf-string.js","src/es5/implementation/primitives/pdf-reference.js","src/es5/implementation/actions/action.js","src/es5/implementation/actions/uri-action.js","src/es5/implementation/graphics/enum.js","src/es5/implementation/graphics/pdf-color.js","src/es5/implementation/drawing/pdf-drawing.js","src/es5/implementation/graphics/brushes/pdf-brush.js","src/es5/implementation/graphics/brushes/pdf-solid-brush.js","src/es5/implementation/graphics/fonts/enum.js","src/es5/implementation/graphics/fonts/pdf-string-format.js","src/es5/implementation/graphics/fonts/string-tokenizer.js","src/es5/implementation/graphics/fonts/string-layouter.js","src/es5/implementation/graphics/fonts/pdf-font.js","src/es5/implementation/input-output/pdf-writer.js","src/es5/implementation/input-output/enum.js","src/es5/implementation/input-output/pdf-main-object-collection.js","src/es5/implementation/document/pdf-document-base.js","src/es5/implementation/input-output/cross-table.js","src/es5/implementation/document/pdf-catalog.js","src/es5/implementation/input-output/pdf-cross-table.js","src/es5/implementation/pages/pdf-page-size.js","src/es5/implementation/pages/enum.js","src/es5/implementation/graphics/pdf-margins.js","src/es5/implementation/pages/pdf-page-settings.js","src/es5/implementation/input-output/pdf-stream-writer.js","src/es5/implementation/graphics/pdf-pen.js","src/es5/implementation/graphics/pdf-transformation-matrix.js","src/es5/implementation/graphics/constants.js","src/es5/implementation/collections/object-object-pair/dictionary.js","src/es5/implementation/graphics/pdf-transparency.js","src/es5/implementation/document/automatic-fields/automatic-field-info-collection.js","src/es5/implementation/graphics/figures/base/graphics-element.js","src/es5/implementation/document/automatic-fields/automatic-field.js","src/es5/implementation/document/automatic-fields/automatic-field-info.js","src/es5/implementation/graphics/pdf-graphics.js","src/es5/implementation/pages/pdf-page-layer.js","src/es5/implementation/general/pdf-collection.js","src/es5/implementation/pages/pdf-page-layer-collection.js","src/es5/implementation/graphics/figures/pdf-template.js","src/es5/implementation/graphics/images/byte-array.js","src/es5/implementation/primitives/pdf-boolean.js","src/es5/implementation/graphics/images/image-decoder.js","src/es5/implementation/graphics/unit-convertor.js","src/es5/implementation/graphics/images/pdf-image.js","src/es5/implementation/graphics/images/pdf-bitmap.js","src/es5/implementation/graphics/pdf-resources.js","src/es5/implementation/pages/pdf-page-base.js","src/es5/implementation/annotations/annotation-collection.js","src/es5/implementation/pages/pdf-page.js","src/es5/implementation/pages/page-added-event-arguments.js","src/es5/implementation/pages/pdf-section-page-collection.js","src/es5/implementation/document/pdf-document-template.js","src/es5/implementation/pages/pdf-section-templates.js","src/es5/implementation/pages/pdf-section.js","src/es5/implementation/pages/pdf-section-collection.js","src/es5/implementation/pages/pdf-document-page-collection.js","src/es5/implementation/general/pdf-cache-collection.js","src/es5/implementation/document/pdf-document.js","src/es5/implementation/graphics/fonts/pdf-font-metrics.js","src/es5/implementation/graphics/fonts/pdf-standard-font-metrics-factory.js","src/es5/implementation/graphics/fonts/pdf-standard-font.js","src/es5/implementation/annotations/annotation.js","src/es5/implementation/annotations/link-annotation.js","src/es5/implementation/annotations/action-link-annotation.js","src/es5/implementation/annotations/document-link-annotation.js","src/es5/implementation/graphics/figures/enum.js","src/es5/implementation/graphics/figures/base/element-layouter.js","src/es5/implementation/graphics/figures/layout-element.js","src/es5/implementation/graphics/figures/base/text-layouter.js","src/es5/implementation/graphics/figures/text-element.js","src/es5/implementation/annotations/uri-annotation.js","src/es5/implementation/annotations/pdf-text-web-link.js","src/es5/implementation/document/automatic-fields/pdf-numbers-convertor.js","src/es5/implementation/document/automatic-fields/pdf-template-value-pair.js","src/es5/implementation/document/automatic-fields/multiple-value-field.js","src/es5/implementation/document/automatic-fields/pdf-page-number-field.js","src/es5/implementation/document/automatic-fields/composite-field.js","src/es5/implementation/document/automatic-fields/single-value-field.js","src/es5/implementation/document/automatic-fields/page-count-field.js","src/es5/implementation/general/enum.js","src/es5/implementation/general/pdf-destination.js","src/es5/implementation/pages/pdf-page-template-element.js","src/es5/implementation/structured-elements/grid/styles/pdf-borders.js","src/es5/implementation/structured-elements/tables/light-tables/enum.js","src/es5/implementation/structured-elements/grid/styles/style.js","src/es5/implementation/structured-elements/grid/pdf-grid-cell.js","src/es5/implementation/structured-elements/grid/pdf-grid-column.js","src/es5/implementation/structured-elements/grid/pdf-grid-row.js","src/es5/implementation/structured-elements/grid/pdf-grid.js"],"sourcesContent":["/**\n * @private\n * @hidden\n */\nexport function defaultToString(item) {\n    // if (item === null) {\n    //     return 'COLLECTION_NULL';\n    // } else if (typeof item === 'undefined') {\n    //     return 'COLLECTION_UNDEFINED';\n    // } else if (Object.prototype.toString.call(item) === '[object String]') {\n    if (Object.prototype.toString.call(item) === '[object String]') {\n        return '$s' + item;\n    }\n    else {\n        return '$o' + item.toString();\n    }\n}\n","/**\n * Dictionary.ts class for EJ2-PDF\n * @private\n * @hidden\n */\nimport { defaultToString } from './utils';\n/**\n * @private\n * @hidden\n */\nvar Dictionary = /** @class */ (function () {\n    /**\n     * @private\n     * @hidden\n     */\n    function Dictionary(toStringFunction) {\n        this.table = {};\n        this.nElements = 0;\n        this.toStr = toStringFunction || defaultToString;\n    }\n    /**\n     * @private\n     * @hidden\n     */\n    Dictionary.prototype.getValue = function (key) {\n        var pair = this.table['$' + this.toStr(key)];\n        if (typeof pair === 'undefined') {\n            return undefined;\n        }\n        return pair.value;\n    };\n    /**\n     * @private\n     * @hidden\n     */\n    Dictionary.prototype.setValue = function (key, value) {\n        // if (typeof key === 'undefined' || typeof value === 'undefined') {\n        //     return undefined;\n        // }\n        var ret;\n        var k = '$' + this.toStr(key);\n        var previousElement = this.table[k];\n        // if (typeof previousElement === 'undefined') {\n        this.nElements++;\n        ret = undefined;\n        // }\n        this.table[k] = {\n            key: key,\n            value: value\n        };\n        return ret;\n    };\n    /**\n     * @private\n     * @hidden\n     */\n    Dictionary.prototype.remove = function (key) {\n        var k = '$' + this.toStr(key);\n        var previousElement = this.table[k];\n        // if (typeof previousElement !== 'undefined') {\n        delete this.table[k];\n        this.nElements--;\n        return previousElement.value;\n        // }\n        // return undefined;\n    };\n    /**\n     * @private\n     * @hidden\n     */\n    Dictionary.prototype.keys = function () {\n        var keysArray = [];\n        var namesOfKeys = Object.keys(this.table);\n        for (var index1 = 0; index1 < namesOfKeys.length; index1++) {\n            // if (Object.prototype.hasOwnProperty.call(this.table, namesOfKeys[index1])) {\n            var pair1 = this.table[namesOfKeys[index1]];\n            keysArray.push(pair1.key);\n            // }\n        }\n        return keysArray;\n    };\n    /**\n     * @private\n     * @hidden\n     */\n    Dictionary.prototype.values = function () {\n        var valuesArray = [];\n        var namesOfValues = Object.keys(this.table);\n        for (var index2 = 0; index2 < namesOfValues.length; index2++) {\n            // if (Object.prototype.hasOwnProperty.call(this.table, namesOfValues[index2])) {\n            var pair2 = this.table[namesOfValues[index2]];\n            valuesArray.push(pair2.value);\n            // }\n        }\n        return valuesArray;\n    };\n    /**\n     * @private\n     * @hidden\n     */\n    Dictionary.prototype.containsKey = function (key) {\n        var retutnValue = true;\n        if (typeof this.getValue(key) === 'undefined') {\n            retutnValue = true;\n        }\n        else {\n            retutnValue = false;\n        }\n        return !retutnValue;\n    };\n    /**\n     * @private\n     * @hidden\n     */\n    Dictionary.prototype.clear = function () {\n        this.table = {};\n        this.nElements = 0;\n    };\n    /**\n     * @private\n     * @hidden\n     */\n    Dictionary.prototype.size = function () {\n        return this.nElements;\n    };\n    return Dictionary;\n}()); // End of dictionary\nexport { Dictionary };\n","/**\n * `PdfName` class is used to perform name (element names) related primitive operations.\n * @private\n */\nvar PdfName = /** @class */ (function () {\n    function PdfName(value) {\n        /**\n         * `Start symbol` of the name object.\n         * @default /\n         * @private\n         */\n        this.stringStartMark = '/';\n        /**\n         * `Value` of the element.\n         * @private\n         */\n        this.internalValue = '';\n        /**\n         * Indicates if the object is currently in `saving state or not`.\n         * @default false\n         * @private\n         */\n        this.isSaving6 = false;\n        /**\n         * Internal variable to store the `position`.\n         * @default -1\n         * @private\n         */\n        this.position6 = -1;\n        this.internalValue = this.normalizeValue(value);\n    }\n    Object.defineProperty(PdfName.prototype, \"status\", {\n        //property\n        /**\n         * Gets or sets the `Status` of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.status6;\n        },\n        set: function (value) {\n            this.status6 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfName.prototype, \"isSaving\", {\n        /**\n         * Gets or sets a value indicating whether this document `is saving` or not.\n         * @private\n         */\n        get: function () {\n            return this.isSaving6;\n        },\n        set: function (value) {\n            this.isSaving6 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfName.prototype, \"objectCollectionIndex\", {\n        /**\n         * Gets or sets the `index` value of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.index6;\n        },\n        set: function (value) {\n            this.index6 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfName.prototype, \"position\", {\n        /**\n         * Gets or sets the `position` of the object.\n         * @private\n         */\n        get: function () {\n            return this.position6;\n        },\n        set: function (value) {\n            this.position6 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfName.prototype, \"clonedObject\", {\n        /**\n         * Returns `cloned object`.\n         * @private\n         */\n        get: function () {\n            return null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfName.prototype, \"value\", {\n        /**\n         * Gets or sets the `value` of the object.\n         * @private\n         */\n        get: function () {\n            return this.internalValue;\n        },\n        set: function (value) {\n            // if (value !== this.value) {\n            var val = value;\n            if (value !== null && value.length > 0) {\n                // val = (value.substring(0, 1) === this.stringStartMark) ? value.substring(1) : value;\n                val = value;\n                this.internalValue = this.normalizeValue(val);\n            }\n            else {\n                this.internalValue = val;\n            }\n            // }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //public methods\n    /**\n     * `Saves` the name using the specified writer.\n     * @private\n     */\n    PdfName.prototype.save = function (writer) {\n        // if (writer === null) {\n        //     throw new Error('ArgumentNullException : writer');\n        // }\n        writer.write(this.toString());\n    };\n    /**\n     * Gets `string` representation of the primitive.\n     * @private\n     */\n    PdfName.prototype.toString = function () {\n        return (this.stringStartMark + this.escapeString(this.value));\n    };\n    /**\n     * Creates a `copy of PdfName`.\n     * @private\n     */\n    PdfName.prototype.clone = function (crossTable) {\n        var newName = new PdfName();\n        newName.value = this.internalValue;\n        return newName;\n    };\n    /**\n     * Replace some characters with its `escape sequences`.\n     * @private\n     */\n    PdfName.prototype.escapeString = function (stringValue) {\n        // if (str === null) {\n        //     throw new Error('ArgumentNullException : str');\n        // }\n        // if (str === '') {\n        //     return str;\n        // }\n        var result = '';\n        var len = 0;\n        for (var i = 0, len_1 = stringValue.length; i < len_1; i++) {\n            var ch = stringValue[i];\n            var index = PdfName.delimiters.indexOf(ch);\n            // switch (ch) {\n            //     case '\\r' :\n            //         result = result + '\\\\r';\n            //         break;\n            //     case '\\n' :\n            //         result = result + '\\n';\n            //         break;\n            //     case '(' :\n            //     case ')' :\n            //     case '\\\\' :\n            //         //result.Append( '\\\\' ).Append( ch );\n            //         result = result + ch;\n            //         break;\n            //     default :\n            //         result = result + ch;\n            //         break;\n            // }\n            result = result + ch;\n        }\n        return result;\n    };\n    //methiods\n    /**\n     * Replace a symbol with its code with the precedence of the `sharp sign`.\n     * @private\n     */\n    PdfName.prototype.normalizeValue = function (value, c) {\n        // if (typeof c === undefined) {\n        //     let str : string = value;\n        //     for (let i : number = 0; i < PdfName.replacements.length; i++) {\n        //         str = this.normalizeValue(str, c);\n        //     }\n        //     return str;\n        // } else {\n        var strFormat = '#{0:X}';\n        //return value.replace(c.toString(),String.format(strFormat,c));\n        return value;\n        // }\n    };\n    /**\n     * PDF `special characters`.\n     * @private\n     */\n    PdfName.delimiters = '()<>[]{}/%}';\n    /**\n     * The symbols that are not allowed in PDF names and `should be replaced`.\n     * @private\n     */\n    PdfName.replacements = [' ', '\\t', '\\n', '\\r'];\n    return PdfName;\n}());\nexport { PdfName };\n","/**\n * PdfOperators.ts class for EJ2-PDF\n * Class of string PDF common operators.\n * @private\n */\nvar Operators = /** @class */ (function () {\n    /**\n     * Create an instance of `PdfOperator` class.\n     * @private\n     */\n    function Operators() {\n        /**\n         * Specifies the value of `test`.\n         * @private\n         */\n        this.forTest = 'test';\n        this.forTest = Operators.obj;\n    }\n    /**\n     * Specifies the value of `obj`.\n     * @private\n     */\n    Operators.obj = 'obj';\n    /**\n     * Specifies the value of `endObj`.\n     * @private\n     */\n    Operators.endObj = 'endobj';\n    /**\n     * Specifies the value of `R`.\n     * @private\n     */\n    Operators.r = 'R';\n    /**\n     * Specifies the value of ` `.\n     * @private\n     */\n    Operators.whiteSpace = ' ';\n    /**\n     * Specifies the value of `/`.\n     * @private\n     */\n    Operators.slash = '/';\n    /**\n     * Specifies the value of `\\r\\n`.\n     * @private\n     */\n    Operators.newLine = '\\r\\n';\n    /**\n     * Specifies the value of `stream`.\n     * @private\n     */\n    Operators.stream = 'stream';\n    /**\n     * Specifies the value of `endStream`.\n     * @private\n     */\n    Operators.endStream = 'endstream';\n    /**\n     * Specifies the value of `xref`.\n     * @private\n     */\n    Operators.xref = 'xref';\n    /**\n     * Specifies the value of `f`.\n     * @private\n     */\n    Operators.f = 'f';\n    /**\n     * Specifies the value of `n`.\n     * @private\n     */\n    Operators.n = 'n';\n    /**\n     * Specifies the value of `trailer`.\n     * @private\n     */\n    Operators.trailer = 'trailer';\n    /**\n     * Specifies the value of `startxref`.\n     * @private\n     */\n    Operators.startxref = 'startxref';\n    /**\n     * Specifies the value of `eof`.\n     * @private\n     */\n    Operators.eof = '%%EOF';\n    /**\n     * Specifies the value of `header`.\n     * @private\n     */\n    Operators.header = '%PDF-1.5';\n    /**\n     * Specifies the value of `beginText`.\n     * @private\n     */\n    Operators.beginText = 'BT';\n    /**\n     * Specifies the value of `endText`.\n     * @private\n     */\n    Operators.endText = 'ET';\n    /**\n     * Specifies the value of `m`.\n     * @private\n     */\n    Operators.beginPath = 'm';\n    /**\n     * Specifies the value of `l`.\n     * @private\n     */\n    Operators.appendLineSegment = 'l';\n    /**\n     * Specifies the value of `S`.\n     * @private\n     */\n    Operators.stroke = 'S';\n    /**\n     * Specifies the value of `f`.\n     * @private\n     */\n    Operators.fill = 'f';\n    /**\n     * Specifies the value of `f*`.\n     * @private\n     */\n    Operators.fillEvenOdd = 'f*';\n    /**\n     * Specifies the value of `B`.\n     * @private\n     */\n    Operators.fillStroke = 'B';\n    /**\n     * Specifies the value of `B*`.\n     * @private\n     */\n    Operators.fillStrokeEvenOdd = 'B*';\n    /**\n     * Specifies the value of `c`.\n     * @private\n     */\n    Operators.appendbeziercurve = 'c';\n    /**\n     * Specifies the value of `re`.\n     * @private\n     */\n    Operators.appendRectangle = 're';\n    /**\n     * Specifies the value of `q`.\n     * @private\n     */\n    Operators.saveState = 'q';\n    /**\n     * Specifies the value of `Q`.\n     * @private\n     */\n    Operators.restoreState = 'Q';\n    /**\n     * Specifies the value of `Do`.\n     * @private\n     */\n    Operators.paintXObject = 'Do';\n    /**\n     * Specifies the value of `cm`.\n     * @private\n     */\n    Operators.modifyCtm = 'cm';\n    /**\n     * Specifies the value of `Tm`.\n     * @private\n     */\n    Operators.modifyTM = 'Tm';\n    /**\n     * Specifies the value of `w`.\n     * @private\n     */\n    Operators.setLineWidth = 'w';\n    /**\n     * Specifies the value of `J`.\n     * @private\n     */\n    Operators.setLineCapStyle = 'J';\n    /**\n     * Specifies the value of `j`.\n     * @private\n     */\n    Operators.setLineJoinStyle = 'j';\n    /**\n     * Specifies the value of `d`.\n     * @private\n     */\n    Operators.setDashPattern = 'd';\n    /**\n     * Specifies the value of `i`.\n     * @private\n     */\n    Operators.setFlatnessTolerance = 'i';\n    /**\n     * Specifies the value of `h`.\n     * @private\n     */\n    Operators.closePath = 'h';\n    /**\n     * Specifies the value of `s`.\n     * @private\n     */\n    Operators.closeStrokePath = 's';\n    /**\n     * Specifies the value of `b`.\n     * @private\n     */\n    Operators.closeFillStrokePath = 'b';\n    /**\n     * Specifies the value of `setCharacterSpace`.\n     * @private\n     */\n    Operators.setCharacterSpace = 'Tc';\n    /**\n     * Specifies the value of `setWordSpace`.\n     * @private\n     */\n    Operators.setWordSpace = 'Tw';\n    /**\n     * Specifies the value of `setHorizontalScaling`.\n     * @private\n     */\n    Operators.setHorizontalScaling = 'Tz';\n    /**\n     * Specifies the value of `setTextLeading`.\n     * @private\n     */\n    Operators.setTextLeading = 'TL';\n    /**\n     * Specifies the value of `setFont`.\n     * @private\n     */\n    Operators.setFont = 'Tf';\n    /**\n     * Specifies the value of `setRenderingMode`.\n     * @private\n     */\n    Operators.setRenderingMode = 'Tr';\n    /**\n     * Specifies the value of `setTextRise`.\n     * @private\n     */\n    Operators.setTextRise = 'Ts';\n    /**\n     * Specifies the value of `setTextScaling`.\n     * @private\n     */\n    Operators.setTextScaling = 'Tz';\n    /**\n     * Specifies the value of `setCoords`.\n     * @private\n     */\n    Operators.setCoords = 'Td';\n    /**\n     * Specifies the value of `goToNextLine`.\n     * @private\n     */\n    Operators.goToNextLine = 'T*';\n    /**\n     * Specifies the value of `setText`.\n     * @private\n     */\n    Operators.setText = 'Tj';\n    /**\n     * Specifies the value of `setTextWithFormatting`.\n     * @private\n     */\n    Operators.setTextWithFormatting = 'TJ';\n    /**\n     * Specifies the value of `setTextOnNewLine`.\n     * @private\n     */\n    Operators.setTextOnNewLine = '\\'';\n    /**\n     * Specifies the value of `selectcolorspaceforstroking`.\n     * @private\n     */\n    Operators.selectcolorspaceforstroking = 'CS';\n    /**\n     * Specifies the value of `selectcolorspacefornonstroking`.\n     * @private\n     */\n    Operators.selectcolorspacefornonstroking = 'cs';\n    /**\n     * Specifies the value of `setrbgcolorforstroking`.\n     * @private\n     */\n    Operators.setrbgcolorforstroking = 'RG';\n    /**\n     * Specifies the value of `setrbgcolorfornonstroking`.\n     * @private\n     */\n    Operators.setrbgcolorfornonstroking = 'rg';\n    /**\n     * Specifies the value of `K`.\n     * @private\n     */\n    Operators.setcmykcolorforstroking = 'K';\n    /**\n     * Specifies the value of `k`.\n     * @private\n     */\n    Operators.setcmykcolorfornonstroking = 'k';\n    /**\n     * Specifies the value of `G`.\n     * @private\n     */\n    Operators.setgraycolorforstroking = 'G';\n    /**\n     * Specifies the value of `g`.\n     * @private\n     */\n    Operators.setgraycolorfornonstroking = 'g';\n    /**\n     * Specifies the value of `W`.\n     * @private\n     */\n    Operators.clipPath = 'W';\n    /**\n     * Specifies the value of `clipPathEvenOdd`.\n     * @private\n     */\n    Operators.clipPathEvenOdd = 'W*';\n    /**\n     * Specifies the value of `n`.\n     * @private\n     */\n    Operators.endPath = 'n';\n    /**\n     * Specifies the value of `setGraphicsState`.\n     * @private\n     */\n    Operators.setGraphicsState = 'gs';\n    /**\n     * Specifies the value of `%`.\n     * @private\n     */\n    Operators.comment = '%';\n    /**\n     * Specifies the value of `*`.\n     * @private\n     */\n    Operators.evenOdd = '*';\n    /**\n     * Specifies the value of `M`.\n     * @private\n     */\n    Operators.setMiterLimit = 'M';\n    return Operators;\n}());\nexport { Operators };\n","/**\n * dictionaryProperties.ts class for EJ2-PDF\n * PDF dictionary properties.\n * @private\n */\nvar DictionaryProperties = /** @class */ (function () {\n    /**\n     * Initialize an instance for `PdfDictionaryProperties` class.\n     * @private\n     */\n    function DictionaryProperties() {\n        /**\n         * Specifies the value of `Pages`.\n         * @private\n         */\n        this.pages = 'Pages';\n        /**\n         * Specifies the value of `Kids`.\n         * @private\n         */\n        this.kids = 'Kids';\n        /**\n         * Specifies the value of `Count`.\n         * @private\n         */\n        this.count = 'Count';\n        /**\n         * Specifies the value of `Resources`.\n         * @private\n         */\n        this.resources = 'Resources';\n        /**\n         * Specifies the value of `Type`.\n         * @private\n         */\n        this.type = 'Type';\n        /**\n         * Specifies the value of `Size`.\n         * @private\n         */\n        this.size = 'Size';\n        /**\n         * Specifies the value of `MediaBox`.\n         * @private\n         */\n        this.mediaBox = 'MediaBox';\n        /**\n         * Specifies the value of `Parent`.\n         * @private\n         */\n        this.parent = 'Parent';\n        /**\n         * Specifies the value of `Root`.\n         * @private\n         */\n        this.root = 'Root';\n        /**\n         * Specifies the value of `DecodeParms`.\n         * @private\n         */\n        this.decodeParms = 'DecodeParms';\n        /**\n         * Specifies the value of `Filter`.\n         * @private\n         */\n        this.filter = 'Filter';\n        /**\n         * Specifies the value of `Font`.\n         * @private\n         */\n        this.font = 'Font';\n        /**\n         * Specifies the value of `Type1`.\n         * @private\n         */\n        this.type1 = 'Type1';\n        /**\n         * Specifies the value of `BaseFont`.\n         * @private\n         */\n        this.baseFont = 'BaseFont';\n        /**\n         * Specifies the value of `Encoding`.\n         * @private\n         */\n        this.encoding = 'Encoding';\n        /**\n         * Specifies the value of `Subtype`.\n         * @private\n         */\n        this.subtype = 'Subtype';\n        /**\n         * Specifies the value of `Contents`.\n         * @private\n         */\n        this.contents = 'Contents';\n        /**\n         * Specifies the value of `ProcSet`.\n         * @private\n         */\n        this.procset = 'ProcSet';\n        /**\n         * Specifies the value of `ColorSpace`.\n         * @private\n         */\n        this.colorSpace = 'ColorSpace';\n        /**\n         * Specifies the value of `ExtGState`.\n         * @private\n         */\n        this.extGState = 'ExtGState';\n        /**\n         * Specifies the value of `Pattern`.\n         * @private\n         */\n        this.pattern = 'Pattern';\n        /**\n         * Specifies the value of `XObject`.\n         * @private\n         */\n        this.xObject = 'XObject';\n        /**\n         * Specifies the value of `Length`.\n         * @private\n         */\n        this.length = 'Length';\n        /**\n         * Specifies the value of `Width`.\n         * @private\n         */\n        this.width = 'Width';\n        /**\n         * Specifies the value of `Height`.\n         * @private\n         */\n        this.height = 'Height';\n        /**\n         * Specifies the value of `BitsPerComponent`.\n         * @private\n         */\n        this.bitsPerComponent = 'BitsPerComponent';\n        /**\n         * Specifies the value of `Image`.\n         * @private\n         */\n        this.image = 'Image';\n        /**\n         * Specifies the value of `dctdecode`.\n         * @private\n         */\n        this.dctdecode = 'DCTDecode';\n        /**\n         * Specifies the value of `Columns`.\n         * @private\n         */\n        this.columns = 'Columns';\n        /**\n         * Specifies the value of `BlackIs1`.\n         * @private\n         */\n        this.blackIs1 = 'BlackIs1';\n        /**\n         * Specifies the value of `K`.\n         * @private\n         */\n        this.k = 'K';\n        /**\n         * Specifies the value of `S`.\n         * @private\n         */\n        this.s = 'S';\n        /**\n         * Specifies the value of `Predictor`.\n         * @private\n         */\n        this.predictor = 'Predictor';\n        /**\n         * Specifies the value of `DeviceRGB`.\n         * @private\n         */\n        this.deviceRgb = 'DeviceRGB';\n        /**\n         * Specifies the value of `Next`.\n         * @private\n         */\n        this.next = 'Next';\n        /**\n         * Specifies the value of `Action`.\n         * @private\n         */\n        this.action = 'Action';\n        /**\n         * Specifies the value of `Link`.\n         * @private\n         */\n        this.link = 'Link';\n        /**\n         *\n         * Specifies the value of `A`.\n         * @private\n         */\n        this.a = 'A';\n        /**\n         * Specifies the value of `Annot`.\n         * @private\n         */\n        this.annot = 'Annot';\n        /**\n         * Specifies the value of `P`.\n         * @private\n         */\n        this.p = 'P';\n        /**\n         * Specifies the value of `C`.\n         * @private\n         */\n        this.c = 'C';\n        /**\n         * Specifies the value of `Rect`.\n         * @private\n         */\n        this.rect = 'Rect';\n        /**\n         * Specifies the value of `URI`.\n         * @private\n         */\n        this.uri = 'URI';\n        /**\n         * Specifies the value of `Annots`.\n         * @private\n         */\n        this.annots = 'Annots';\n        /**\n         * Specifies the value of `ca`.\n         * @private\n         */\n        this.ca = 'ca';\n        /**\n         * Specifies the value of `CA`.\n         * @private\n         */\n        this.CA = 'CA';\n        /**\n         * Specifies the value of `XYZ`.\n         * @private\n         */\n        this.xyz = 'XYZ';\n        /**\n         * Specifies the value of `Fit`.\n         * @private\n         */\n        this.fit = 'Fit';\n        /**\n         * Specifies the value of `Dest`.\n         * @private\n         */\n        this.dest = 'Dest';\n        /**\n         * Specifies the value of `BM`.\n         * @private\n         */\n        this.BM = 'BM';\n        /**\n         * Specifies the value of `flatedecode`.\n         * @private\n         */\n        this.flatedecode = 'FlateDecode';\n        /**\n         * Specifies the value of `Rotate`.\n         * @private\n         */\n        this.rotate = 'Rotate';\n        /**\n         * Specifies the value of 'bBox'.\n         * @private\n         */\n        this.bBox = 'BBox';\n        /**\n         * Specifies the value of 'form'.\n         * @private\n         */\n        this.form = 'Form';\n        //\n    }\n    return DictionaryProperties;\n}());\nexport { DictionaryProperties };\n","import { Dictionary } from './../collections/dictionary';\nimport { PdfName } from './pdf-name';\nimport { Operators } from './../input-output/pdf-operators';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\n/**\n * `PdfDictionary` class is used to perform primitive operations.\n * @private\n */\nvar PdfDictionary = /** @class */ (function () {\n    function PdfDictionary(dictionary) {\n        /**\n         * Internal variable to store the `position`.\n         * @default -1\n         * @private\n         */\n        this.position7 = -1;\n        /**\n         * The `IPdfSavable` with the specified key.\n         * @private\n         */\n        this.primitiveItems = new Dictionary();\n        /**\n         * `Start marker` for dictionary.\n         * @private\n         */\n        this.prefix = '<<';\n        /**\n         * `End marker` for dictionary.\n         * @private\n         */\n        this.suffix = '>>';\n        /**\n         * @hidden\n         * @private\n         */\n        this.resources = [];\n        /**\n         * Internal variable to hold `cloned object`.\n         * @default null\n         * @private\n         */\n        this.object = null;\n        /**\n         * Flag for PDF file formar 1.5 is dictionary `archiving` needed.\n         * @default true\n         * @private\n         */\n        this.archive = true;\n        if (typeof dictionary === 'undefined') {\n            this.primitiveItems = new Dictionary();\n            this.encrypt = true;\n            this.dictionaryProperties = new DictionaryProperties();\n        }\n        else {\n            this.primitiveItems = new Dictionary();\n            var keys = dictionary.items.keys();\n            var values = dictionary.items.values();\n            for (var index = 0; index < dictionary.items.size(); index++) {\n                this.primitiveItems.setValue(keys[index], values[index]);\n            }\n            this.status = dictionary.status;\n            this.freezeChanges(this);\n            this.encrypt = true;\n            this.dictionaryProperties = new DictionaryProperties();\n        }\n    }\n    Object.defineProperty(PdfDictionary.prototype, \"items\", {\n        //Properties\n        /**\n         * Gets or sets the `IPdfSavable` with the specified key.\n         * @private\n         */\n        get: function () {\n            return this.primitiveItems;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDictionary.prototype, \"status\", {\n        /**\n         * Gets or sets the `Status` of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.status7;\n        },\n        set: function (value) {\n            this.status7 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDictionary.prototype, \"isSaving\", {\n        /**\n         * Gets or sets a value indicating whether this document `is saving` or not.\n         * @private\n         */\n        get: function () {\n            return this.isSaving7;\n        },\n        set: function (value) {\n            this.isSaving7 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDictionary.prototype, \"objectCollectionIndex\", {\n        /**\n         * Gets or sets the `index` value of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.index7;\n        },\n        set: function (value) {\n            this.index7 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDictionary.prototype, \"clonedObject\", {\n        /**\n         * Returns `cloned object`.\n         * @private\n         */\n        get: function () {\n            return this.object;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDictionary.prototype, \"position\", {\n        /**\n         * Gets or sets the `position` of the object.\n         * @private\n         */\n        get: function () {\n            return this.position7;\n        },\n        set: function (value) {\n            this.position7 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDictionary.prototype, \"Count\", {\n        /**\n         * Gets the `count`.\n         * @private\n         */\n        get: function () {\n            return this.primitiveItems.size();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDictionary.prototype, \"Dictionary\", {\n        /**\n         * Collection of `items` in the object.\n         * @private\n         */\n        get: function () {\n            return this;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Get flag if need to `archive` dictionary.\n     * @private\n     */\n    PdfDictionary.prototype.getArchive = function () {\n        return this.archive;\n    };\n    /**\n     * Set flag if need to `archive` dictionary.\n     * @private\n     */\n    PdfDictionary.prototype.setArchive = function (value) {\n        this.archive = value;\n    };\n    /**\n     * Sets flag if `encryption` is needed.\n     * @private\n     */\n    PdfDictionary.prototype.setEncrypt = function (value) {\n        this.encrypt = value;\n        this.modify();\n    };\n    /**\n     * Gets flag if `encryption` is needed.\n     * @private\n     */\n    PdfDictionary.prototype.getEncrypt = function () {\n        return this.encrypt;\n    };\n    /**\n     * `Freezes` the changes.\n     * @private\n     */\n    PdfDictionary.prototype.freezeChanges = function (freezer) {\n        this.bChanged = false;\n    };\n    /**\n     * Creates a `copy of PdfDictionary`.\n     * @private\n     */\n    PdfDictionary.prototype.clone = function (crossTable) {\n        //Need to add more codings\n        var newDict = new PdfDictionary();\n        return newDict;\n    };\n    /**\n     * `Mark` this instance modified.\n     * @private\n     */\n    PdfDictionary.prototype.modify = function () {\n        this.bChanged = true;\n    };\n    /**\n     * `Removes` the specified key.\n     * @private\n     */\n    PdfDictionary.prototype.remove = function (key) {\n        if (typeof key !== 'string') {\n            this.primitiveItems.remove(key.value);\n            this.modify();\n        }\n        else {\n            this.remove(new PdfName(key));\n        }\n    };\n    /**\n     * `Determines` whether the dictionary contains the key.\n     * @private\n     */\n    PdfDictionary.prototype.containsKey = function (key) {\n        var returnValue = false;\n        returnValue = this.primitiveItems.containsKey(key.toString());\n        return returnValue;\n    };\n    /**\n     * Raises event `BeginSave`.\n     * @private\n     */\n    PdfDictionary.prototype.onBeginSave = function () {\n        this.beginSave.sender.beginSave();\n    };\n    /**\n     * Raises event 'BeginSave'.\n     * @private\n     */\n    PdfDictionary.prototype.onTemplateBeginSave = function () {\n        this.pageBeginDrawTemplate.sender.pageBeginSave();\n    };\n    /**\n     * Raises event `BeginSave`.\n     * @private\n     */\n    PdfDictionary.prototype.onBeginAnnotationSave = function () {\n        this.annotationBeginSave.sender.beginSave();\n    };\n    /**\n     * Raises event `BeginSave`.\n     * @private\n     */\n    PdfDictionary.prototype.onSectionBeginSave = function (writer) {\n        var saveEvent = this.sectionBeginSave;\n        saveEvent.sender.beginSave(saveEvent.state, writer);\n    };\n    PdfDictionary.prototype.save = function (writer, bRaiseEvent) {\n        if (typeof bRaiseEvent === 'undefined') {\n            this.save(writer, true);\n        }\n        else {\n            writer.write(this.prefix);\n            if (typeof this.beginSave !== 'undefined') {\n                this.onBeginSave();\n            }\n            if (typeof this.annotationBeginSave !== 'undefined') {\n                this.onBeginAnnotationSave();\n            }\n            if (typeof this.sectionBeginSave !== 'undefined') {\n                this.onSectionBeginSave(writer);\n            }\n            if (typeof this.pageBeginDrawTemplate !== 'undefined') {\n                this.onTemplateBeginSave();\n            }\n            // }\n            if (this.Count > 0) {\n                this.saveItems(writer);\n            }\n            writer.write(this.suffix);\n            writer.write(Operators.newLine);\n        }\n    };\n    /**\n     * `Save dictionary items`.\n     * @private\n     */\n    PdfDictionary.prototype.saveItems = function (writer) {\n        writer.write(Operators.newLine);\n        var keys = this.primitiveItems.keys();\n        var values = this.primitiveItems.values();\n        for (var index = 0; index < keys.length; index++) {\n            var key = keys[index];\n            var name_1 = new PdfName(key);\n            name_1.save(writer);\n            writer.write(Operators.whiteSpace);\n            var resources = values[index];\n            resources.save(writer);\n            writer.write(Operators.newLine);\n        }\n    };\n    return PdfDictionary;\n}());\nexport { PdfDictionary };\nvar SaveSectionCollectionEventHandler = /** @class */ (function () {\n    /**\n     * New instance for `save section collection event handler` class.\n     * @private\n     */\n    function SaveSectionCollectionEventHandler(sender) {\n        this.sender = sender;\n    }\n    return SaveSectionCollectionEventHandler;\n}());\nexport { SaveSectionCollectionEventHandler };\nvar SaveAnnotationEventHandler = /** @class */ (function () {\n    /**\n     * New instance for `save annotation event handler` class.\n     * @private\n     */\n    function SaveAnnotationEventHandler(sender) {\n        this.sender = sender;\n    }\n    return SaveAnnotationEventHandler;\n}());\nexport { SaveAnnotationEventHandler };\nvar SaveSectionEventHandler = /** @class */ (function () {\n    // constructors\n    /**\n     * New instance for `save section event handler` class.\n     * @private\n     */\n    function SaveSectionEventHandler(sender, state) {\n        this.sender = sender;\n        this.state = state;\n    }\n    return SaveSectionEventHandler;\n}());\nexport { SaveSectionEventHandler };\n/**\n * SaveTemplateEventHandler class used to store information about template elements.\n * @private\n * @hidden\n */\nvar SaveTemplateEventHandler = /** @class */ (function () {\n    /**\n     * New instance for save section collection event handler class.\n     * @public\n     */\n    function SaveTemplateEventHandler(sender) {\n        this.sender = sender;\n    }\n    return SaveTemplateEventHandler;\n}());\nexport { SaveTemplateEventHandler };\n","/**\n * `PdfNumber` class is used to perform number related primitive operations.\n * @private\n */\nvar PdfNumber = /** @class */ (function () {\n    /**\n     * Initializes a new instance of the `PdfNumber` class.\n     * @private\n     */\n    function PdfNumber(value) {\n        /**\n         * Sotres the `position`.\n         * @default -1\n         * @private\n         */\n        this.position5 = -1;\n        this.value = value;\n    }\n    Object.defineProperty(PdfNumber.prototype, \"intValue\", {\n        /**\n         * Gets or sets the `integer` value.\n         * @private\n         */\n        get: function () {\n            return this.value;\n        },\n        set: function (value) {\n            this.value = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfNumber.prototype, \"isInteger\", {\n        /**\n         * Gets or sets a value indicating whether this instance `is integer`.\n         * @private\n         */\n        get: function () {\n            return this.integer;\n        },\n        set: function (value) {\n            this.integer = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfNumber.prototype, \"status\", {\n        /**\n         * Gets or sets the `Status` of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.status5;\n        },\n        set: function (value) {\n            this.status5 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfNumber.prototype, \"isSaving\", {\n        /**\n         * Gets or sets a value indicating whether this document `is saving` or not.\n         * @private\n         */\n        get: function () {\n            return this.isSaving5;\n        },\n        set: function (value) {\n            this.isSaving5 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfNumber.prototype, \"objectCollectionIndex\", {\n        /**\n         * Gets or sets the `index` value of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.index5;\n        },\n        set: function (value) {\n            this.index5 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfNumber.prototype, \"position\", {\n        /**\n         * Gets or sets the `position` of the object.\n         * @private\n         */\n        get: function () {\n            return this.position5;\n        },\n        set: function (value) {\n            this.position5 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfNumber.prototype, \"clonedObject\", {\n        /**\n         * Returns `cloned object`.\n         * @private\n         */\n        get: function () {\n            var rValue = null;\n            return rValue;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Saves the object`.\n     * @private\n     */\n    PdfNumber.prototype.save = function (writer) {\n        writer.write(this.intValue.toString()); //tostring(CultureInfo.InletiantCulture)\n    };\n    /**\n     * Creates a `copy of PdfNumber`.\n     * @private\n     */\n    PdfNumber.prototype.clone = function (crossTable) {\n        var newNumber = new PdfNumber(this.value);\n        return newNumber;\n    };\n    /**\n     * Converts a `float value to a string` using Adobe PDF rules.\n     * @private\n     */\n    PdfNumber.floatToString = function (number) {\n        // let tempString1 : string = number.toString();\n        // let tempString2 : string = tempString1.indexOf('.') != -1 ? tempString1.substring(0, tempString1.indexOf('.')) : tempString1;\n        var returnString = number.toFixed(2);\n        if (returnString === '0.00') {\n            returnString = '.00';\n        }\n        // let prefixLength : number = (22 - tempString2.length) >= 0 ? (22 - tempString2.length) : 0;\n        // for (let index : number = 0; index < prefixLength; index++) {\n        //     returnString += '0';\n        // }\n        // returnString += tempString2 + '.00';\n        // returnString += (tempString3.length > 6) ? tempString3.substring(0,6) : tempString3;\n        // let suffixLength : number = (6 - tempString3.length) >= 0 ? (6 - tempString3.length) : 0;\n        // for (let index : number = 0; index < suffixLength; index++) {\n        //     returnString += '0';\n        // }\n        return returnString;\n    };\n    /**\n     * Determines the `minimum of the three values`.\n     * @private\n     */\n    PdfNumber.min = function (x, y, z) {\n        var r = Math.min(x, y);\n        return Math.min(z, r);\n    };\n    return PdfNumber;\n}());\nexport { PdfNumber };\n","import { PdfNumber } from './pdf-number';\nimport { Operators } from './../input-output/pdf-operators';\n/**\n * `PdfArray` class is used to perform array related primitive operations.\n * @private\n */\nvar PdfArray = /** @class */ (function () {\n    function PdfArray(array) {\n        //Fields\n        /**\n         * `startMark` - '['\n         * @private\n         */\n        this.startMark = '[';\n        /**\n         * `endMark` - ']'.\n         * @private\n         */\n        this.endMark = ']';\n        /**\n         * Internal variable to store the `position`.\n         * @default -1\n         * @private\n         */\n        this.position9 = -1;\n        /**\n         * Internal variable to hold `cloned object`.\n         * @default null\n         * @private\n         */\n        this.clonedObject9 = null;\n        if (typeof array === 'undefined') {\n            this.internalElements = [];\n        }\n        else {\n            if (typeof array !== 'undefined' && !(array instanceof PdfArray)) {\n                var tempNumberArray = array;\n                for (var index = 0; index < tempNumberArray.length; index++) {\n                    var pdfNumber = new PdfNumber(tempNumberArray[index]);\n                    this.add(pdfNumber);\n                }\n                // } else if (typeof array !== 'undefined' && (array instanceof PdfArray)) {\n            }\n            else {\n                var tempArray = array;\n                // if (tempArray.Elements.length > 0) {\n                this.internalElements = [];\n                for (var index = 0; index < tempArray.elements.length; index++) {\n                    this.internalElements.push(tempArray.elements[index]);\n                }\n                // }\n            }\n        }\n    }\n    //property\n    /**\n     * Gets the `IPdfSavable` at the specified index.\n     * @private\n     */\n    PdfArray.prototype.items = function (index) {\n        // if (index < 0 || index >= this.Count) {\n        //     throw new Error('ArgumentOutOfRangeException : index, The index can\"t be less then zero or greater then Count.');\n        // }\n        return this.internalElements[index];\n    };\n    Object.defineProperty(PdfArray.prototype, \"count\", {\n        /**\n         * Gets the `count`.\n         * @private\n         */\n        get: function () {\n            return this.internalElements.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfArray.prototype, \"status\", {\n        /**\n         * Gets or sets the `Status` of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.status9;\n        },\n        set: function (value) {\n            this.status9 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfArray.prototype, \"isSaving\", {\n        /**\n         * Gets or sets a value indicating whether this document `is saving` or not.\n         * @private\n         */\n        get: function () {\n            return this.isSaving9;\n        },\n        set: function (value) {\n            this.isSaving9 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfArray.prototype, \"clonedObject\", {\n        /**\n         * Returns `cloned object`.\n         * @private\n         */\n        get: function () {\n            return this.clonedObject9;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfArray.prototype, \"position\", {\n        /**\n         * Gets or sets the `position` of the object.\n         * @private\n         */\n        get: function () {\n            return this.position9;\n        },\n        set: function (value) {\n            this.position9 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfArray.prototype, \"objectCollectionIndex\", {\n        /**\n         * Gets or sets the `index` value of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.index9;\n        },\n        set: function (value) {\n            this.index9 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfArray.prototype, \"CrossTable\", {\n        /**\n         * Returns `PdfCrossTable` associated with the object.\n         * @private\n         */\n        get: function () {\n            return this.pdfCrossTable;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfArray.prototype, \"elements\", {\n        /**\n         * Gets the `elements` of the Pdf Array.\n         * @private\n         */\n        get: function () {\n            return this.internalElements;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Adds` the specified element to the PDF array.\n     * @private\n     */\n    PdfArray.prototype.add = function (element) {\n        // if (element === null) {\n        //     throw new Error('ArgumentNullException : obj');\n        // }\n        if (typeof this.internalElements === 'undefined') {\n            this.internalElements = [];\n        }\n        this.internalElements.push(element);\n        this.markedChange();\n    };\n    /**\n     * `Marks` the object changed.\n     * @private\n     */\n    PdfArray.prototype.markedChange = function () {\n        this.bChanged = true;\n    };\n    /**\n     * `Determines` whether the specified element is within the array.\n     * @private\n     */\n    PdfArray.prototype.contains = function (element) {\n        var returnValue = false;\n        for (var index = 0; index < this.internalElements.length; index++) {\n            var tempElement = this.internalElements[index];\n            var inputElement = element;\n            if (tempElement != null && typeof tempElement !== 'undefined' && inputElement != null && typeof inputElement !== 'undefined') {\n                if (tempElement.value === inputElement.value) {\n                    return true;\n                }\n            }\n            // if (this.internalElements[index] === element) {\n            //     returnValue = true;\n            // }\n        }\n        return returnValue;\n    };\n    /**\n     * Returns the `primitive object` of input index.\n     * @private\n     */\n    PdfArray.prototype.getItems = function (index) {\n        // if (index < 0 || index >= this.Count) {\n        //     throw new Error('ArgumentOutOfRangeException : index , The index can\"t be less then zero or greater then Count.');\n        // }\n        return this.internalElements[index];\n    };\n    /**\n     * `Saves` the object using the specified writer.\n     * @private\n     */\n    PdfArray.prototype.save = function (writer) {\n        // if (writer === null) {\n        //     throw new Error('ArgumentNullException : writer');\n        // }\n        writer.write(this.startMark);\n        for (var i = 0, len = this.count; i < len; i++) {\n            this.getItems(i).save(writer);\n            if (i + 1 !== len) {\n                writer.write(Operators.whiteSpace);\n            }\n        }\n        writer.write(this.endMark);\n    };\n    /**\n     * Creates a `copy of PdfArray`.\n     * @private\n     */\n    PdfArray.prototype.clone = function (crossTable) {\n        // if (this.clonedObject9 !== null && this.clonedObject9.CrossTable === crossTable) {\n        //     return this.clonedObject9;\n        // } else {\n        this.clonedObject9 = null;\n        // Else clone the object.\n        var newArray = new PdfArray();\n        for (var index = 0; index < this.internalElements.length; index++) {\n            var obj = this.internalElements[index];\n            newArray.add(obj.clone(crossTable));\n        }\n        newArray.pdfCrossTable = crossTable;\n        this.clonedObject9 = newArray;\n        return newArray;\n    };\n    /**\n     * Creates filled PDF array `from the rectangle`.\n     * @private\n     */\n    PdfArray.fromRectangle = function (bounds) {\n        var values = [bounds.x, bounds.y, bounds.width, bounds.height];\n        var array = new PdfArray(values);\n        return array;\n    };\n    // /**\n    //  * Creates the rectangle from filled PDF array.\n    //  * @private\n    //  */\n    // public ToRectangle() : RectangleF {\n    //     if (this.Count < 4) {\n    //         throw Error('InvalidOperationException-Can not convert to rectangle.');\n    //     }\n    //     let x1 : number;\n    //     let x2 : number;\n    //     let y1 : number;\n    //     let y2 : number;\n    //     let num : PdfNumber = this.getItems(0) as PdfNumber;\n    //     x1 = num.IntValue;\n    //     num = this.getItems(1) as PdfNumber;\n    //     y1 = num.IntValue;\n    //     num = this.getItems(2) as PdfNumber;\n    //     x2 = num.IntValue;\n    //     num = this.getItems(3) as PdfNumber;\n    //     y2 = num.IntValue;\n    //     let x : number = Math.min(x1, x2);\n    //     let y : number = Math.min(y1, y2);\n    //     let width : number = Math.abs(x1 - x2);\n    //     let height : number = Math.abs(y1 - y2);\n    //     let rect : RectangleF = new RectangleF(new PointF(x, y), new SizeF(width, height));\n    //     return rect;\n    // }\n    /**\n     * `Inserts` the element into the array.\n     * @private\n     */\n    PdfArray.prototype.insert = function (index, element) {\n        if (index < this.internalElements.length && index > 0) {\n            var tempElements = [];\n            for (var i = 0; i < index; i++) {\n                tempElements.push(this.internalElements[i]);\n            }\n            tempElements.push(element);\n            for (var i = index; i < this.internalElements.length; i++) {\n                tempElements.push(this.internalElements[i]);\n            }\n            this.internalElements = tempElements;\n        }\n        else {\n            this.internalElements.push(element);\n        }\n        this.markChanged();\n    };\n    /**\n     * `Checks whether array contains the element`.\n     * @private\n     */\n    PdfArray.prototype.indexOf = function (element) {\n        return this.internalElements.indexOf(element);\n    };\n    /**\n     * `Removes` element from the array.\n     * @private\n     */\n    PdfArray.prototype.remove = function (element) {\n        // if (element === null) {\n        //     throw new Error('ArgumentNullException : element');\n        // }\n        var index = this.internalElements.indexOf(element);\n        // if (index >= 0 && index < this.internalElements.length) {\n        this.internalElements[index] = null;\n        // }\n        this.markChanged();\n    };\n    /**\n     * `Remove` the element from the array by its index.\n     * @private\n     */\n    PdfArray.prototype.removeAt = function (index) {\n        // this.internalElements.RemoveAt(index);\n        if (this.internalElements.length > index) {\n            var tempArray = [];\n            for (var i = 0; i < index; i++) {\n                tempArray.push(this.internalElements[i]);\n            }\n            for (var i = index + 1; i < this.internalElements.length; i++) {\n                tempArray.push(this.internalElements[i]);\n            }\n            this.internalElements = tempArray;\n        }\n        this.markChanged();\n    };\n    /**\n     * `Clear` the array.\n     * @private\n     */\n    PdfArray.prototype.clear = function () {\n        this.internalElements = [];\n        this.markChanged();\n    };\n    /**\n     * `Marks` the object changed.\n     * @private\n     */\n    PdfArray.prototype.markChanged = function () {\n        this.bChanged = true;\n    };\n    return PdfArray;\n}());\nexport { PdfArray };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfDictionary } from './pdf-dictionary';\nimport { PdfNumber } from './pdf-number';\nimport { Operators } from './../input-output/pdf-operators';\nimport { PdfName } from './pdf-name';\nimport { PdfArray } from './pdf-array';\nimport { PdfReferenceHolder } from './pdf-reference';\nimport { CompressedStreamWriter } from '@syncfusion/ej2-compression';\n/**\n * `PdfStream` class is used to perform stream related primitive operations.\n * @private\n */\nvar PdfStream = /** @class */ (function (_super) {\n    __extends(PdfStream, _super);\n    function PdfStream(dictionary, data) {\n        var _this = _super.call(this, dictionary) || this;\n        //Constants\n        /**\n         * @hidden\n         * @private\n         */\n        _this.dicPrefix = 'stream';\n        /**\n         * @hidden\n         * @private\n         */\n        _this.dicSuffix = 'endstream';\n        /**\n         * Internal variable to hold `cloned object`.\n         * @private\n         */\n        _this.clonedObject2 = null;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.bCompress = true;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.isImageStream = false;\n        if (typeof dictionary !== 'undefined' || typeof data !== 'undefined') {\n            _this.dataStream2 = [];\n            _this.dataStream2 = data;\n            _this.bCompress2 = false;\n        }\n        else {\n            _this.dataStream2 = [];\n            _this.bCompress2 = true;\n            //Pending\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfStream.prototype, \"internalStream\", {\n        /**\n         * Gets the `internal` stream.\n         * @private\n         */\n        get: function () {\n            return this.dataStream2;\n        },\n        set: function (value) {\n            this.dataStream2 = [];\n            this.dataStream2 = value;\n            this.modify();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStream.prototype, \"isImage\", {\n        /**\n         * Gets or sets 'is image' flag.\n         * @private\n         */\n        get: function () {\n            return this.isImageStream;\n        },\n        set: function (value) {\n            this.isImageStream = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStream.prototype, \"compress\", {\n        /**\n         * Gets or sets `compression` flag.\n         * @private\n         */\n        get: function () {\n            return this.bCompress;\n        },\n        set: function (value) {\n            this.bCompress = value;\n            this.modify();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStream.prototype, \"data\", {\n        /**\n         * Gets or sets the `data`.\n         * @private\n         */\n        get: function () {\n            return this.dataStream2;\n        },\n        set: function (value) {\n            this.dataStream2 = [];\n            this.dataStream2 = value;\n            this.modify();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Clear` the internal stream.\n     * @private\n     */\n    PdfStream.prototype.clearStream = function () {\n        this.internalStream = [];\n        this.remove(this.dictionaryProperties.filter);\n        this.bCompress = true;\n        this.modify();\n    };\n    /**\n     * `Writes` the specified string.\n     * @private\n     */\n    PdfStream.prototype.write = function (text) {\n        if (text == null) {\n            throw new Error('ArgumentNullException:text');\n        }\n        if (text.length <= 0) {\n            throw new Error('ArgumentException: Can not write an empty string, text');\n        }\n        this.dataStream2.push(text);\n        this.modify();\n    };\n    /**\n     * `Compresses the content` if it's required.\n     * @private\n     */\n    PdfStream.prototype.compressContent = function (data, writer) {\n        if (this.bCompress) {\n            var sw = new CompressedStreamWriter();\n            // data = 'Hello World!!!';\n            sw.write(data, 0, data.length);\n            sw.close();\n            data = sw.getCompressedString;\n            this.addFilter(this.dictionaryProperties.flatedecode);\n        }\n        return data;\n    };\n    /**\n     * `Adds a filter` to the filter array.\n     * @private\n     */\n    PdfStream.prototype.addFilter = function (filterName) {\n        var obj = this.items.getValue(this.dictionaryProperties.filter);\n        if (obj instanceof PdfReferenceHolder) {\n            var rh = obj;\n            obj = rh.object;\n        }\n        var array = obj;\n        var name = obj;\n        if (name != null) {\n            array = new PdfArray();\n            array.insert(0, name);\n            this.items.setValue(this.dictionaryProperties.filter, array);\n        }\n        name = new PdfName(filterName);\n        if (array == null) {\n            this.items.setValue(this.dictionaryProperties.filter, name);\n        }\n        else {\n            array.insert(0, name);\n        }\n    };\n    /**\n     * `Saves` the object using the specified writer.\n     * @private\n     */\n    PdfStream.prototype.save = function (writer) {\n        var data = '';\n        for (var i = 0; i < this.data.length; i++) {\n            data = data + this.data[i];\n        }\n        if (data.length > 1 && !this.isImage) {\n            data = 'q\\r\\n' + data + 'Q\\r\\n';\n        }\n        data = this.compressContent(data, writer);\n        var length = data.length;\n        this.items.setValue(this.dictionaryProperties.length, new PdfNumber(length));\n        _super.prototype.save.call(this, writer, false);\n        writer.write(this.dicPrefix);\n        writer.write(Operators.newLine);\n        if (data.length > 0) {\n            writer.write(data);\n        }\n        writer.write(Operators.newLine);\n        writer.write(this.dicSuffix);\n        writer.write(Operators.newLine);\n    };\n    /**\n     * Converts `bytes to string`.\n     * @private\n     */\n    PdfStream.bytesToString = function (byteArray) {\n        var output = '';\n        for (var i = 0; i < byteArray.length; i++) {\n            output = output + String.fromCharCode(byteArray[i]);\n        }\n        return output;\n    };\n    return PdfStream;\n}(PdfDictionary));\nexport { PdfStream };\n","/**\n * `PdfString` class is used to perform string related primitive operations.\n * @private\n */\nexport var InternalEnum;\n(function (InternalEnum) {\n    //Internals\n    /**\n     * public Enum for `ForceEncoding`.\n     * @private\n     */\n    var ForceEncoding;\n    (function (ForceEncoding) {\n        /**\n         * Specifies the type of `None`.\n         * @private\n         */\n        ForceEncoding[ForceEncoding[\"None\"] = 0] = \"None\";\n        /**\n         * Specifies the type of `Ascii`.\n         * @private\n         */\n        ForceEncoding[ForceEncoding[\"Ascii\"] = 1] = \"Ascii\";\n        /**\n         * Specifies the type of `Unicode`.\n         * @private\n         */\n        ForceEncoding[ForceEncoding[\"Unicode\"] = 2] = \"Unicode\";\n    })(ForceEncoding = InternalEnum.ForceEncoding || (InternalEnum.ForceEncoding = {}));\n    /**\n     * public Enum for `SourceType`.\n     * @private\n     */\n    var SourceType;\n    (function (SourceType) {\n        /**\n         * Specifies the type of `StringValue`.\n         * @private\n         */\n        SourceType[SourceType[\"StringValue\"] = 0] = \"StringValue\";\n        /**\n         * Specifies the type of `ByteBuffer`.\n         * @private\n         */\n        SourceType[SourceType[\"ByteBuffer\"] = 1] = \"ByteBuffer\";\n    })(SourceType || (SourceType = {}));\n})(InternalEnum || (InternalEnum = {}));\nvar PdfString = /** @class */ (function () {\n    function PdfString(value) {\n        /**\n         * Value indicating whether the string was converted to hex.\n         * @default false\n         * @private\n         */\n        this.bHex = false;\n        /**\n         * Internal variable to store the `position`.\n         * @default -1\n         * @private\n         */\n        this.position1 = -1;\n        /**\n         * Internal variable to hold `cloned object`.\n         * @default null\n         * @private\n         */\n        this.clonedObject1 = null;\n        /**\n         * `Shows` if the data of the stream was decrypted.\n         * @default false\n         * @private\n         */\n        this.bDecrypted = false;\n        /**\n         * Shows if the data of the stream `was decrypted`.\n         * @default false\n         * @private\n         */\n        this.isParentDecrypted = false;\n        /**\n         * Gets a value indicating whether the object is `packed or not`.\n         * @default false\n         * @private\n         */\n        this.isPacked = false;\n        /**\n         * @hidden\n         * @private\n         */\n        this.isFormField = false;\n        /**\n         * @hidden\n         * @private\n         */\n        this.isColorSpace = false;\n        /**\n         * @hidden\n         * @private\n         */\n        this.isHexString = true;\n        if (typeof value === 'undefined') {\n            this.bHex = false;\n        }\n        else {\n            if (!(value.length > 0 && value[0] === '0xfeff')) {\n                this.stringValue = value;\n                this.data = [];\n                for (var i = 0; i < value.length; ++i) {\n                    this.data.push(value.charCodeAt(i));\n                }\n            }\n        }\n    }\n    Object.defineProperty(PdfString.prototype, \"hex\", {\n        //Property\n        /**\n         * Gets a value indicating whether string is in `hex`.\n         * @private\n         */\n        get: function () {\n            return this.bHex;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfString.prototype, \"value\", {\n        /**\n         * Gets or sets string `value` of the object.\n         * @private\n         */\n        get: function () {\n            return this.stringValue;\n        },\n        set: function (value) {\n            this.stringValue = value;\n            this.data = null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfString.prototype, \"status\", {\n        /**\n         * Gets or sets the `Status` of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.status1;\n        },\n        set: function (value) {\n            this.status1 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfString.prototype, \"isSaving\", {\n        /**\n         * Gets or sets a value indicating whether this document `is saving` or not.\n         * @private\n         */\n        get: function () {\n            return this.isSaving1;\n        },\n        set: function (value) {\n            this.isSaving1 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfString.prototype, \"objectCollectionIndex\", {\n        /**\n         * Gets or sets the `index` value of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.index1;\n        },\n        set: function (value) {\n            this.index1 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfString.prototype, \"clonedObject\", {\n        /**\n         * Returns `cloned object`.\n         * @private\n         */\n        get: function () {\n            return this.clonedObject1;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfString.prototype, \"position\", {\n        /**\n         * Gets or sets the `position` of the object.\n         * @private\n         */\n        get: function () {\n            return this.position1;\n        },\n        set: function (value) {\n            this.position1 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfString.prototype, \"CrossTable\", {\n        /**\n         * Returns `PdfCrossTable` associated with the object.\n         * @private\n         */\n        get: function () {\n            return this.crossTable;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Methods\n    /**\n     * Converts `bytes to string using hex format` for representing string.\n     * @private\n     */\n    PdfString.bytesToHex = function (bytes) {\n        if (bytes == null) {\n            return '';\n        }\n        var builder = '';\n        return builder;\n    };\n    /**\n     * `Saves` the object using the specified writer.\n     * @private\n     */\n    PdfString.prototype.save = function (writer) {\n        if (writer === null) {\n            throw new Error('ArgumentNullException : writer');\n        }\n        writer.write(PdfString.stringMark[0] + this.value + PdfString.stringMark[1]);\n    };\n    /**\n     * Creates a `copy of PdfString`.\n     * @private\n     */\n    PdfString.prototype.clone = function (crossTable) {\n        if (this.clonedObject1 !== null && this.clonedObject1.CrossTable === crossTable) {\n            return this.clonedObject1;\n        }\n        else {\n            this.clonedObject1 = null;\n        }\n        var newString = new PdfString(this.stringValue);\n        newString.bHex = this.bHex;\n        newString.crossTable = crossTable;\n        newString.isColorSpace = this.isColorSpace;\n        this.clonedObject1 = newString;\n        return newString;\n    };\n    //constants = ;\n    /**\n     * `General markers` for string.\n     * @private\n     */\n    PdfString.stringMark = '()';\n    /**\n     * `Hex markers` for string.\n     * @private\n     */\n    PdfString.hexStringMark = '<>';\n    /**\n     * Format of password data.\n     * @private\n     */\n    PdfString.hexFormatPattern = '{0:X2}';\n    return PdfString;\n}());\nexport { PdfString };\n","import { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\nimport { PdfStream } from './../primitives/pdf-stream';\nimport { PdfArray } from './../primitives/pdf-array';\nimport { PdfNumber } from './../primitives/pdf-number';\nimport { PdfName } from './../primitives/pdf-name';\nimport { PdfDictionary } from './../primitives/pdf-dictionary';\nimport { PdfString } from './../primitives/pdf-string';\n/**\n * `PdfReference` class is used to perform reference related primitive operations.\n * @private\n */\nvar PdfReference = /** @class */ (function () {\n    function PdfReference(objNumber, genNumber) {\n        /**\n         * Holds the `index` number of the object.\n         * @default -1\n         * @private\n         */\n        this.index3 = -1;\n        /**\n         * Internal variable to store the `position`.\n         * @default -1\n         * @private\n         */\n        this.position3 = -1;\n        /**\n         * Holds the `object number`.\n         * @default 0\n         * @private\n         */\n        this.objNumber = 0;\n        /**\n         * Holds the `generation number` of the object.\n         * @default 0\n         * @private\n         */\n        this.genNumber = 0;\n        if (typeof objNumber === 'number' && typeof genNumber === 'number') {\n            this.objNumber = objNumber;\n            this.genNumber = genNumber;\n            // } else if (typeof objNum === 'string' && typeof genNum === 'string') {\n        }\n        else {\n            this.objNumber = Number(objNumber);\n            this.genNumber = Number(genNumber);\n        }\n    }\n    Object.defineProperty(PdfReference.prototype, \"status\", {\n        //Property\n        /**\n         * Gets or sets the `Status` of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.status3;\n        },\n        set: function (value) {\n            this.status3 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReference.prototype, \"isSaving\", {\n        /**\n         * Gets or sets a value indicating whether this document `is saving` or not.\n         * @private\n         */\n        get: function () {\n            return this.isSaving3;\n        },\n        set: function (value) {\n            this.isSaving3 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReference.prototype, \"objectCollectionIndex\", {\n        /**\n         * Gets or sets the `index` value of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.index3;\n        },\n        set: function (value) {\n            this.index3 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReference.prototype, \"position\", {\n        /**\n         * Gets or sets the `position` of the object.\n         * @private\n         */\n        get: function () {\n            return this.position3;\n        },\n        set: function (value) {\n            this.position3 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReference.prototype, \"clonedObject\", {\n        /**\n         * Returns `cloned object`.\n         * @private\n         */\n        get: function () {\n            var returnObject3 = null;\n            return returnObject3;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //IPdfPrimitives methods\n    /**\n     * `Saves` the object.\n     * @private\n     */\n    PdfReference.prototype.save = function (writer) {\n        writer.write(this.toString());\n    };\n    /**\n     * Returns a `string` representing the object.\n     * @private\n     */\n    PdfReference.prototype.toString = function () {\n        return this.objNumber.toString() + ' ' + this.genNumber.toString() + ' R';\n    };\n    /**\n     * Creates a `deep copy` of the IPdfPrimitive object.\n     * @private\n     */\n    PdfReference.prototype.clone = function (crossTable) {\n        return null;\n    };\n    return PdfReference;\n}());\nexport { PdfReference };\n/**\n * `PdfReferenceHolder` class is used to perform reference holder related primitive operations.\n * @private\n */\nvar PdfReferenceHolder = /** @class */ (function () {\n    function PdfReferenceHolder(obj1, obj2) {\n        /**\n         * Holds the `index` number of the object.\n         * @default -1\n         * @private\n         */\n        this.index4 = -1;\n        /**\n         * Internal variable to store the `position`.\n         * @default -1\n         * @private\n         */\n        this.position4 = -1;\n        /**\n         * The `index` of the object within the object collection.\n         * @default -1\n         * @private\n         */\n        this.objectIndex = -1;\n        /**\n         * @hidden\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        // if (typeof obj2 === 'undefined') {\n        if (obj1 instanceof PdfArray\n            || obj1 instanceof PdfDictionary\n            || obj1 instanceof PdfName\n            || obj1 instanceof PdfNumber\n            || obj1 instanceof PdfStream\n            || obj1 instanceof PdfReference\n            || obj1 instanceof PdfString) {\n            // if (obj1 === null) {\n            //     throw new Error('ArgumentNullException : obj');\n            // }\n            this.primitiveObject = obj1;\n            // } else if (obj1 instanceof PdfPageBase\n            //             || obj1 instanceof PdfPage\n            //             || obj1 instanceof PdfSection\n            //             || obj1 instanceof PdfSectionCollection) {\n        }\n        else {\n            var tempObj = obj1;\n            this.constructor(tempObj.element);\n        }\n        // }\n        // else {\n        //     if (obj2 === null) {\n        //         throw new Error('ArgumentNullException : crossTable');\n        //     }\n        //     if (obj1 === null) {\n        //         throw new Error('ArgumentNullException : reference');\n        //     }\n        //     this.crossTable = obj2;\n        //     let tempObj1 : PdfReference = <PdfReference>obj1;\n        //     this.reference = tempObj1;\n        // }\n    }\n    Object.defineProperty(PdfReferenceHolder.prototype, \"status\", {\n        //Properties\n        /**\n         * Gets or sets the `Status` of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.status4;\n        },\n        set: function (value) {\n            this.status4 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReferenceHolder.prototype, \"isSaving\", {\n        /**\n         * Gets or sets a value indicating whether this document `is saving` or not.\n         * @private\n         */\n        get: function () {\n            return this.isSaving4;\n        },\n        set: function (value) {\n            this.isSaving4 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReferenceHolder.prototype, \"objectCollectionIndex\", {\n        /**\n         * Gets or sets the `index` value of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.index4;\n        },\n        set: function (value) {\n            this.index4 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReferenceHolder.prototype, \"position\", {\n        /**\n         * Gets or sets the `position` of the object.\n         * @private\n         */\n        get: function () {\n            return this.position4;\n        },\n        set: function (value) {\n            this.position4 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReferenceHolder.prototype, \"clonedObject\", {\n        /**\n         * Returns `cloned object`.\n         * @private\n         */\n        get: function () {\n            return null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReferenceHolder.prototype, \"object\", {\n        /**\n         * Gets the `object` the reference is of.\n         * @private\n         */\n        get: function () {\n            // if ((this.reference != null) || (this.object == null)) {\n            //     this.object = this.GetterObject();\n            // }\n            return this.primitiveObject;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReferenceHolder.prototype, \"reference\", {\n        /**\n         * Gets the `reference`.\n         * @private\n         */\n        get: function () {\n            return this.pdfReference;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReferenceHolder.prototype, \"index\", {\n        /**\n         * Gets the `index` of the object.\n         * @private\n         */\n        get: function () {\n            // let items : PdfMainObjectCollection = this.crossTable.PdfObjects;\n            // this.objectIndex = items.GetObjectIndex(this.reference);\n            // if (this.objectIndex < 0) {\n            //     let obj : IPdfPrimitive = this.crossTable.GetObject(this.reference);\n            //     this.objectIndex = items.Count - 1;\n            // }\n            return this.objectIndex;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReferenceHolder.prototype, \"element\", {\n        /**\n         * Gets the `element`.\n         * @private\n         */\n        get: function () {\n            return this.primitiveObject;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Writes` a reference into a PDF document.\n     * @private\n     */\n    PdfReferenceHolder.prototype.save = function (writer) {\n        // if (writer == null) {\n        //     throw new Error('ArgumentNullException : writer');\n        // }\n        var position = writer.position;\n        var cTable = writer.document.crossTable;\n        // if (cTable.Document instanceof PdfDocument) {\n        this.object.isSaving = true;\n        // }\n        var reference = null;\n        // if (writer.Document.FileStructure.IncrementalUpdate === true && writer.Document.isStreamCopied === true) {\n        //     if (this.reference === null) {\n        //         reference = cTable.GetReference(this.Object);\n        //     } else {\n        //         reference = this.reference;\n        //     }\n        // } else {\n        //     reference = cTable.GetReference(this.Object);\n        // }\n        // if (!(writer.Document.FileStructure.IncrementalUpdate === true && writer.Document.isStreamCopied === true)) {\n        reference = cTable.getReference(this.object);\n        // }\n        // if (writer.Position !== position) {\n        //     writer.Position = position;\n        // }\n        reference.save(writer);\n    };\n    /**\n     * Creates a `copy of PdfReferenceHolder`.\n     * @private\n     */\n    PdfReferenceHolder.prototype.clone = function (crossTable) {\n        var refHolder = null;\n        var temp = null;\n        var refNum = '';\n        var reference = null;\n        // Restricts addition of same object multiple time.\n        /* if (this.Reference != null && this.crossTable != null && this.crossTable.PageCorrespondance.containsKey(this.Reference)) {\n            refHolder = new PdfReferenceHolder(this.crossTable.PageCorrespondance.getValue(this.Reference) as PdfReference, crossTable);\n            return refHolder;\n        }\n        if (Object instanceof PdfNumber) {\n            return new PdfNumber((Object as PdfNumber).IntValue);\n        }\n        */\n        // if (Object instanceof PdfDictionary) {\n        //     // Meaning the referenced page is not available for import.\n        //     let type : PdfName = new PdfName(this.dictionaryProperties.type);\n        //     let dict : PdfDictionary = Object as PdfDictionary;\n        //     if (dict.ContainsKey(type)) {\n        //         let pageName : PdfName = dict.Items.getValue(type.Value) as PdfName;\n        //         if (pageName !== null) {\n        //             if (pageName.Value === 'Page') {\n        //                 return new PdfNull();\n        //             }\n        //         }\n        //     }\n        // }\n        /* if (Object instanceof PdfName) {\n            return new PdfName ((Object as PdfName ).Value);\n        }\n        */\n        // Resolves circular references.\n        // if (crossTable.PrevReference !== null && (crossTable.PrevReference.indexOf(this.Reference) !== -1)) {\n        //     let obj : IPdfPrimitive = this.crossTable.GetObject(this.Reference).ClonedObject;\n        //     if (obj !== null) {\n        //         reference = crossTable.GetReference(obj);\n        //         return new PdfReferenceHolder(reference, crossTable);\n        //     } else {\n        //         return new PdfNull();\n        //     }\n        // }\n        /*if (this.Reference !== null) {\n            crossTable.PrevReference.push(this.Reference);\n        }\n        reference = crossTable.GetReference(temp);\n        refHolder = new PdfReferenceHolder(reference, crossTable);\n        return refHolder;\n        */\n        return null;\n    };\n    return PdfReferenceHolder;\n}());\nexport { PdfReferenceHolder };\n","import { PdfDictionary } from './../primitives/pdf-dictionary';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { PdfName } from './../primitives/pdf-name';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\n/**\n * `PdfAction` class represents base class for all action types.\n * @private\n */\nvar PdfAction = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initialize instance for `Action` class.\n     * @private\n     */\n    function PdfAction() {\n        /**\n         * Specifies the Next `action` to perform.\n         * @private\n         */\n        this.action = null;\n        /**\n         * Specifies the Internal variable to store `dictionary properties`.\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        // super(); -> Object()\n        this.initialize();\n    }\n    Object.defineProperty(PdfAction.prototype, \"next\", {\n        // Properties\n        /**\n         * Gets and Sets the `Next` action to perform.\n         * @private\n         */\n        get: function () {\n            return this.action;\n        },\n        set: function (value) {\n            // if (this.action !== value) {\n            this.action = value;\n            this.dictionary.items.setValue(this.dictionaryProperties.next, new PdfReferenceHolder(this.action));\n            // }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAction.prototype, \"dictionary\", {\n        /**\n         * Gets and Sets the instance of PdfDictionary class for `Dictionary`.\n         * @private\n         */\n        get: function () {\n            if (typeof this.pdfDictionary === 'undefined') {\n                this.pdfDictionary = new PdfDictionary();\n            }\n            return this.pdfDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * `Initialize` the action type.\n     * @private\n     */\n    PdfAction.prototype.initialize = function () {\n        this.dictionary.items.setValue(this.dictionaryProperties.type, new PdfName(this.dictionaryProperties.action));\n    };\n    Object.defineProperty(PdfAction.prototype, \"element\", {\n        // IPdfWrapper Members\n        /**\n         * Gets the `Element` as IPdfPrimitive class.\n         * @private\n         */\n        get: function () {\n            return this.dictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfAction;\n}());\nexport { PdfAction };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfAction } from './action';\nimport { PdfString } from './../primitives/pdf-string';\nimport { PdfName } from './../primitives/pdf-name';\n/**\n * `PdfUriAction` class for initialize the uri related internals.\n * @private\n */\nvar PdfUriAction = /** @class */ (function (_super) {\n    __extends(PdfUriAction, _super);\n    function PdfUriAction(uri) {\n        var _this = _super.call(this) || this;\n        // Fields\n        /**\n         * Specifies the `uri` string.\n         * @default ''.\n         * @private\n         */\n        _this.uniformResourceIdentifier = '';\n        return _this;\n    }\n    Object.defineProperty(PdfUriAction.prototype, \"uri\", {\n        // Properties\n        /**\n         * Gets and Sets the value of `Uri`.\n         * @private\n         */\n        get: function () {\n            return this.uniformResourceIdentifier;\n        },\n        set: function (value) {\n            this.uniformResourceIdentifier = value;\n            this.dictionary.items.setValue(this.dictionaryProperties.uri, new PdfString(this.uniformResourceIdentifier));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * `Initialize` the internals.\n     * @private\n     */\n    PdfUriAction.prototype.initialize = function () {\n        _super.prototype.initialize.call(this);\n        this.dictionary.items.setValue(this.dictionaryProperties.s, new PdfName(this.dictionaryProperties.uri));\n    };\n    return PdfUriAction;\n}(PdfAction));\nexport { PdfUriAction };\n","/**\n * public Enum for `PdfHorizontalAlignment`.\n * @private\n */\nexport var PdfHorizontalAlignment;\n(function (PdfHorizontalAlignment) {\n    /**\n     * Specifies the type of `Left`.\n     * @private\n     */\n    PdfHorizontalAlignment[PdfHorizontalAlignment[\"Left\"] = 0] = \"Left\";\n    /**\n     * Specifies the type of `Center`.\n     * @private\n     */\n    PdfHorizontalAlignment[PdfHorizontalAlignment[\"Center\"] = 1] = \"Center\";\n    /**\n     * Specifies the type of `Right`.\n     * @private\n     */\n    PdfHorizontalAlignment[PdfHorizontalAlignment[\"Right\"] = 2] = \"Right\";\n})(PdfHorizontalAlignment || (PdfHorizontalAlignment = {}));\n/**\n * public Enum for `PdfVerticalAlignment`.\n * @private\n */\nexport var PdfVerticalAlignment;\n(function (PdfVerticalAlignment) {\n    /**\n     * Specifies the type of `Top`.\n     * @private\n     */\n    PdfVerticalAlignment[PdfVerticalAlignment[\"Top\"] = 0] = \"Top\";\n    /**\n     * Specifies the type of `Middle`.\n     * @private\n     */\n    PdfVerticalAlignment[PdfVerticalAlignment[\"Middle\"] = 1] = \"Middle\";\n    /**\n     * Specifies the type of `Bottom`.\n     * @private\n     */\n    PdfVerticalAlignment[PdfVerticalAlignment[\"Bottom\"] = 2] = \"Bottom\";\n})(PdfVerticalAlignment || (PdfVerticalAlignment = {}));\n/**\n * public Enum for `public`.\n * @private\n */\nexport var PdfTextAlignment;\n(function (PdfTextAlignment) {\n    /**\n     * Specifies the type of `Left`.\n     * @private\n     */\n    PdfTextAlignment[PdfTextAlignment[\"Left\"] = 0] = \"Left\";\n    /**\n     * Specifies the type of `Center`.\n     * @private\n     */\n    PdfTextAlignment[PdfTextAlignment[\"Center\"] = 1] = \"Center\";\n    /**\n     * Specifies the type of `Right`.\n     * @private\n     */\n    PdfTextAlignment[PdfTextAlignment[\"Right\"] = 2] = \"Right\";\n    /**\n     * Specifies the type of `Justify`.\n     * @private\n     */\n    PdfTextAlignment[PdfTextAlignment[\"Justify\"] = 3] = \"Justify\";\n})(PdfTextAlignment || (PdfTextAlignment = {}));\n/**\n * public Enum for `TextRenderingMode`.\n * @private\n */\nexport var TextRenderingMode;\n(function (TextRenderingMode) {\n    /**\n     * Specifies the type of `Fill`.\n     * @private\n     */\n    TextRenderingMode[TextRenderingMode[\"Fill\"] = 0] = \"Fill\";\n    /**\n     * Specifies the type of `Stroke`.\n     * @private\n     */\n    TextRenderingMode[TextRenderingMode[\"Stroke\"] = 1] = \"Stroke\";\n    /**\n     * Specifies the type of `FillStroke`.\n     * @private\n     */\n    TextRenderingMode[TextRenderingMode[\"FillStroke\"] = 2] = \"FillStroke\";\n    /**\n     * Specifies the type of `None`.\n     * @private\n     */\n    TextRenderingMode[TextRenderingMode[\"None\"] = 3] = \"None\";\n    /**\n     * Specifies the type of `ClipFlag`.\n     * @private\n     */\n    TextRenderingMode[TextRenderingMode[\"ClipFlag\"] = 4] = \"ClipFlag\";\n    /**\n     * Specifies the type of `ClipFill`.\n     * @private\n     */\n    TextRenderingMode[TextRenderingMode[\"ClipFill\"] = 4] = \"ClipFill\";\n    /**\n     * Specifies the type of `ClipStroke`.\n     * @private\n     */\n    TextRenderingMode[TextRenderingMode[\"ClipStroke\"] = 5] = \"ClipStroke\";\n    /**\n     * Specifies the type of `ClipFillStroke`.\n     * @private\n     */\n    TextRenderingMode[TextRenderingMode[\"ClipFillStroke\"] = 6] = \"ClipFillStroke\";\n    /**\n     * Specifies the type of `Clip`.\n     * @private\n     */\n    TextRenderingMode[TextRenderingMode[\"Clip\"] = 7] = \"Clip\";\n})(TextRenderingMode || (TextRenderingMode = {}));\n/**\n * public Enum for `PdfLineJoin`.\n * @private\n */\nexport var PdfLineJoin;\n(function (PdfLineJoin) {\n    /**\n     * Specifies the type of `Miter`.\n     * @private\n     */\n    PdfLineJoin[PdfLineJoin[\"Miter\"] = 0] = \"Miter\";\n    /**\n     * Specifies the type of `Round`.\n     * @private\n     */\n    PdfLineJoin[PdfLineJoin[\"Round\"] = 1] = \"Round\";\n    /**\n     * Specifies the type of `Bevel`.\n     * @private\n     */\n    PdfLineJoin[PdfLineJoin[\"Bevel\"] = 2] = \"Bevel\";\n})(PdfLineJoin || (PdfLineJoin = {}));\n/**\n * public Enum for `PdfLineCap`.\n * @private\n */\nexport var PdfLineCap;\n(function (PdfLineCap) {\n    /**\n     * Specifies the type of `Flat`.\n     * @private\n     */\n    PdfLineCap[PdfLineCap[\"Flat\"] = 0] = \"Flat\";\n    /**\n     * Specifies the type of `Round`.\n     * @private\n     */\n    PdfLineCap[PdfLineCap[\"Round\"] = 1] = \"Round\";\n    /**\n     * Specifies the type of `Square`.\n     * @private\n     */\n    PdfLineCap[PdfLineCap[\"Square\"] = 2] = \"Square\";\n})(PdfLineCap || (PdfLineCap = {}));\n/**\n * public Enum for `PdfDashStyle`.\n * @private\n */\nexport var PdfDashStyle;\n(function (PdfDashStyle) {\n    /**\n     * Specifies the type of `Solid`.\n     * @private\n     */\n    PdfDashStyle[PdfDashStyle[\"Solid\"] = 0] = \"Solid\";\n    /**\n     * Specifies the type of `Dash`.\n     * @private\n     */\n    PdfDashStyle[PdfDashStyle[\"Dash\"] = 1] = \"Dash\";\n    /**\n     * Specifies the type of `Dot`.\n     * @private\n     */\n    PdfDashStyle[PdfDashStyle[\"Dot\"] = 2] = \"Dot\";\n    /**\n     * Specifies the type of `DashDot`.\n     * @private\n     */\n    PdfDashStyle[PdfDashStyle[\"DashDot\"] = 3] = \"DashDot\";\n    /**\n     * Specifies the type of `DashDotDot`.\n     * @private\n     */\n    PdfDashStyle[PdfDashStyle[\"DashDotDot\"] = 4] = \"DashDotDot\";\n    /**\n     * Specifies the type of `Custom`.\n     * @private\n     */\n    PdfDashStyle[PdfDashStyle[\"Custom\"] = 5] = \"Custom\";\n})(PdfDashStyle || (PdfDashStyle = {}));\n/**\n * public Enum for `PdfFillMode`.\n * @private\n */\nexport var PdfFillMode;\n(function (PdfFillMode) {\n    /**\n     * Specifies the type of `Winding`.\n     * @private\n     */\n    PdfFillMode[PdfFillMode[\"Winding\"] = 0] = \"Winding\";\n    /**\n     * Specifies the type of `Alternate`.\n     * @private\n     */\n    PdfFillMode[PdfFillMode[\"Alternate\"] = 1] = \"Alternate\";\n})(PdfFillMode || (PdfFillMode = {}));\n/**\n * public Enum for `PdfColorSpace`.\n * @private\n */\nexport var PdfColorSpace;\n(function (PdfColorSpace) {\n    /**\n     * Specifies the type of `Rgb`.\n     * @private\n     */\n    PdfColorSpace[PdfColorSpace[\"Rgb\"] = 0] = \"Rgb\";\n    /**\n     * Specifies the type of `Cmyk`.\n     * @private\n     */\n    PdfColorSpace[PdfColorSpace[\"Cmyk\"] = 1] = \"Cmyk\";\n    /**\n     * Specifies the type of `GrayScale`.\n     * @private\n     */\n    PdfColorSpace[PdfColorSpace[\"GrayScale\"] = 2] = \"GrayScale\";\n    /**\n     * Specifies the type of `Indexed`.\n     * @private\n     */\n    PdfColorSpace[PdfColorSpace[\"Indexed\"] = 3] = \"Indexed\";\n})(PdfColorSpace || (PdfColorSpace = {}));\n/**\n * public Enum for `PdfBlendMode`.\n * @private\n */\nexport var PdfBlendMode;\n(function (PdfBlendMode) {\n    /**\n     * Specifies the type of `Normal`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Normal\"] = 0] = \"Normal\";\n    /**\n     * Specifies the type of `Multiply`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Multiply\"] = 1] = \"Multiply\";\n    /**\n     * Specifies the type of `Screen`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Screen\"] = 2] = \"Screen\";\n    /**\n     * Specifies the type of `Overlay`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Overlay\"] = 3] = \"Overlay\";\n    /**\n     * Specifies the type of `Darken`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Darken\"] = 4] = \"Darken\";\n    /**\n     * Specifies the type of `Lighten`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Lighten\"] = 5] = \"Lighten\";\n    /**\n     * Specifies the type of `ColorDodge`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"ColorDodge\"] = 6] = \"ColorDodge\";\n    /**\n     * Specifies the type of `ColorBurn`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"ColorBurn\"] = 7] = \"ColorBurn\";\n    /**\n     * Specifies the type of `HardLight`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"HardLight\"] = 8] = \"HardLight\";\n    /**\n     * Specifies the type of `SoftLight`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"SoftLight\"] = 9] = \"SoftLight\";\n    /**\n     * Specifies the type of `Difference`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Difference\"] = 10] = \"Difference\";\n    /**\n     * Specifies the type of `Exclusion`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Exclusion\"] = 11] = \"Exclusion\";\n    /**\n     * Specifies the type of `Hue`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Hue\"] = 12] = \"Hue\";\n    /**\n     * Specifies the type of `Saturation`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Saturation\"] = 13] = \"Saturation\";\n    /**\n     * Specifies the type of `Color`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Color\"] = 14] = \"Color\";\n    /**\n     * Specifies the type of `Luminosity`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Luminosity\"] = 15] = \"Luminosity\";\n})(PdfBlendMode || (PdfBlendMode = {}));\n/**\n * public Enum for `PdfGraphicsUnit`.\n * @private\n */\nexport var PdfGraphicsUnit;\n(function (PdfGraphicsUnit) {\n    /**\n     * Specifies the type of `Centimeter`.\n     * @private\n     */\n    PdfGraphicsUnit[PdfGraphicsUnit[\"Centimeter\"] = 0] = \"Centimeter\";\n    /**\n     * Specifies the type of `Pica`.\n     * @private\n     */\n    PdfGraphicsUnit[PdfGraphicsUnit[\"Pica\"] = 1] = \"Pica\";\n    /**\n     * Specifies the type of `Pixel`.\n     * @private\n     */\n    PdfGraphicsUnit[PdfGraphicsUnit[\"Pixel\"] = 2] = \"Pixel\";\n    /**\n     * Specifies the type of `Point`.\n     * @private\n     */\n    PdfGraphicsUnit[PdfGraphicsUnit[\"Point\"] = 3] = \"Point\";\n    /**\n     * Specifies the type of `Inch`.\n     * @private\n     */\n    PdfGraphicsUnit[PdfGraphicsUnit[\"Inch\"] = 4] = \"Inch\";\n    /**\n     * Specifies the type of `Document`.\n     * @private\n     */\n    PdfGraphicsUnit[PdfGraphicsUnit[\"Document\"] = 5] = \"Document\";\n    /**\n     * Specifies the type of `Millimeter`.\n     * @private\n     */\n    PdfGraphicsUnit[PdfGraphicsUnit[\"Millimeter\"] = 6] = \"Millimeter\";\n})(PdfGraphicsUnit || (PdfGraphicsUnit = {}));\n/**\n * public Enum for `PdfGridImagePosition`.\n * @private\n */\nexport var PdfGridImagePosition;\n(function (PdfGridImagePosition) {\n    /**\n     * Specifies the type of `Fit`.\n     * @private\n     */\n    PdfGridImagePosition[PdfGridImagePosition[\"Fit\"] = 0] = \"Fit\";\n    /**\n     * Specifies the type of `Center`.\n     * @private\n     */\n    PdfGridImagePosition[PdfGridImagePosition[\"Center\"] = 1] = \"Center\";\n    /**\n     * Specifies the type of `Stretch`.\n     * @private\n     */\n    PdfGridImagePosition[PdfGridImagePosition[\"Stretch\"] = 2] = \"Stretch\";\n    /**\n     * Specifies the type of `Tile`.\n     * @private\n     */\n    PdfGridImagePosition[PdfGridImagePosition[\"Tile\"] = 3] = \"Tile\";\n})(PdfGridImagePosition || (PdfGridImagePosition = {}));\n","import { PdfColorSpace } from './enum';\nimport { Operators } from './../input-output/pdf-operators';\nimport { Dictionary } from './../collections/dictionary';\nimport { PdfNumber } from './../primitives/pdf-number';\nimport { PdfArray } from './../primitives/pdf-array';\n/**\n * Implements structures and routines working with `color`.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // add a new page to the document\n * let page1 : PdfPage = document.pages.add();\n * // set the font\n * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n * //\n * // set color\n * let brushColor : PdfColor = new PdfColor(0, 0, 0);\n * //\n * // create black brush\n * let blackBrush : PdfSolidBrush = new PdfSolidBrush(brushColor);\n * // draw the text\n * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(0, 0));\n * // save the document\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n * @default black color\n */\nvar PdfColor = /** @class */ (function () {\n    function PdfColor(color1, color2, color3, color4) {\n        if (color1 instanceof PdfColor) {\n            this.redColor = color1.r;\n            this.greenColor = color1.g;\n            this.blueColor = color1.b;\n            this.grayColor = color1.gray;\n            this.alpha = color1.alpha;\n            this.filled = (this.alpha !== 0);\n        }\n        else if (typeof color1 === 'number' && typeof color2 === 'number' && typeof color3 === 'number' &&\n            typeof color4 === 'undefined') {\n            this.constructor(PdfColor.maxColourChannelValue, color1, color2, color3); //doubt-byte/float\n        }\n        else if (typeof color1 === 'number' && typeof color2 === 'number' && typeof color3 === 'number' && typeof color4 === 'number') {\n            this.redColor = color2;\n            this.cyanColor = 0;\n            this.greenColor = color3;\n            this.magentaColor = 0;\n            this.blueColor = color4;\n            this.yellowColor = 0;\n            this.blackColor = 0;\n            this.grayColor = 0;\n            this.alpha = color1;\n            this.filled = true;\n            this.assignCMYK(color2, color3, color4);\n        }\n    }\n    /**\n     * `Calculate and assign` cyan, megenta, yellow colors from rgb values..\n     * @private\n     */\n    PdfColor.prototype.assignCMYK = function (r, g, b) {\n        var red = r / PdfColor.maxColourChannelValue;\n        var green = g / PdfColor.maxColourChannelValue;\n        var blue = b / PdfColor.maxColourChannelValue;\n        var black = PdfNumber.min(1 - red, 1 - green, 1 - blue);\n        var cyan = (black === 1.0) ? 0 : (1 - red - black) / (1 - black);\n        var magenta = (black === 1.0) ? 0 : (1 - green - black) / (1 - black);\n        var yellow = (black === 1.0) ? 0 : (1 - blue - black) / (1 - black);\n        this.blackColor = black;\n        this.cyanColor = cyan;\n        this.magentaColor = magenta;\n        this.yellowColor = yellow;\n    };\n    Object.defineProperty(PdfColor.prototype, \"r\", {\n        //Properties\n        // public static get Empty():PdfColor\n        // {\n        //     return this.s_emptyColor\n        // }\n        /**\n         * Gets or sets `Red` channel value.\n         * @private\n         */\n        get: function () {\n            return this.redColor;\n        },\n        set: function (value) {\n            this.redColor = value;\n            this.assignCMYK(this.redColor, this.greenColor, this.blueColor);\n            this.filled = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"red\", {\n        /**\n         * Gets the `Red` color\n         * @private\n         */\n        get: function () {\n            return (this.r / PdfColor.maxColourChannelValue);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"b\", {\n        /**\n         * Gets or sets `Blue` channel value.\n         * @private\n         */\n        get: function () {\n            return this.blueColor;\n        },\n        set: function (value) {\n            this.blueColor = value;\n            this.assignCMYK(this.redColor, this.greenColor, this.blueColor);\n            this.filled = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"blue\", {\n        /**\n         * Gets the `blue` color.\n         * @private\n         */\n        get: function () {\n            return (this.b / PdfColor.maxColourChannelValue);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"g\", {\n        /**\n         *  Gets or sets `Green` channel value.\n         * @private\n         */\n        get: function () {\n            return this.greenColor;\n        },\n        set: function (value) {\n            this.greenColor = value;\n            this.assignCMYK(this.redColor, this.greenColor, this.blueColor);\n            this.filled = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"green\", {\n        /**\n         * Gets the `Green` color.\n         * @private\n         */\n        get: function () {\n            return (this.g / PdfColor.maxColourChannelValue);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"gray\", {\n        /**\n         * Gets or sets `Gray` channel value.\n         * @private\n         */\n        get: function () {\n            return ((((this.redColor + this.greenColor) + this.blueColor)) / (PdfColor.maxColourChannelValue * 3));\n        },\n        set: function (value) {\n            if (value < 0) {\n                this.grayColor = 0;\n            }\n            else if (value > 1) {\n                this.grayColor = 1;\n            }\n            else {\n                this.grayColor = value;\n            }\n            this.r = (this.grayColor * PdfColor.maxColourChannelValue);\n            this.g = (this.grayColor * PdfColor.maxColourChannelValue);\n            this.b = (this.grayColor * PdfColor.maxColourChannelValue);\n            this.assignCMYK(this.redColor, this.greenColor, this.blueColor);\n            this.filled = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"isEmpty\", {\n        /**\n         * Gets whether the PDFColor `is Empty` or not.\n         * @private\n         */\n        get: function () {\n            return !this.filled;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"a\", {\n        /**\n         * Gets or sets `Alpha` channel value.\n         * @private\n         */\n        get: function () {\n            return this.alpha;\n        },\n        set: function (value) {\n            if (value < 0) {\n                this.alpha = 0;\n            }\n            else {\n                // if (this.alpha !== value) {\n                this.alpha = value;\n                // }\n            }\n            this.filled = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Public methods\n    /**\n     * Converts `PDFColor to PDF string` representation.\n     * @private\n     */\n    PdfColor.prototype.toString = function (colorSpace, stroke) {\n        if (this.isEmpty) {\n            return '';\n        }\n        return this.rgbToString(stroke);\n    };\n    /**\n     * Sets `RGB` color.\n     * @private\n     */\n    PdfColor.prototype.rgbToString = function (ifStroking) {\n        var r = this.r;\n        var g = this.g;\n        var b = this.b;\n        var key = (r << 16) + (g << 8) + b;\n        if (ifStroking) {\n            key += 1 << 24;\n        }\n        var colour = '';\n        var obj = null;\n        if (PdfColor.rgbStrings.containsKey(key)) {\n            obj = PdfColor.rgbStrings.getValue(key);\n        }\n        if (obj == null) {\n            var red = r / PdfColor.maxColourChannelValue;\n            var green = g / PdfColor.maxColourChannelValue;\n            var blue = b / PdfColor.maxColourChannelValue;\n            if (ifStroking) {\n                colour = red.toString() + ' ' + green.toString() + ' ' + blue.toString() + ' RG';\n            }\n            else {\n                colour = red.toString() + ' ' + green.toString() + ' ' + blue.toString() + ' rg';\n            }\n            PdfColor.rgbStrings.setValue(key, colour);\n        }\n        else {\n            colour = obj.toString();\n        }\n        return colour + Operators.newLine;\n    };\n    /**\n     * Converts `colour to a PDF array`.\n     * @private\n     */\n    PdfColor.prototype.toArray = function (colorSpace) {\n        var array = new PdfArray();\n        switch (colorSpace) {\n            case PdfColorSpace.Rgb:\n                array.add(new PdfNumber(this.red));\n                array.add(new PdfNumber(this.green));\n                array.add(new PdfNumber(this.blue));\n                break;\n            default:\n                throw new Error('NotSupportedException : Unsupported colour space.');\n        }\n        return array;\n    };\n    //Fields\n    /**\n     * Holds `RGB colors` converted into strings.\n     * @private\n     */\n    PdfColor.rgbStrings = new Dictionary();\n    /**\n     * Holds Gray scale colors converted into strings for `stroking`.\n     * @private\n     */\n    PdfColor.grayStringsSroke = new Dictionary();\n    /**\n     * Holds Gray scale colors converted into strings for `filling`.\n     * @private\n     */\n    PdfColor.grayStringsFill = new Dictionary();\n    /**\n     * `Max value` of color channel.\n     * @private\n     */\n    PdfColor.maxColourChannelValue = 255.0;\n    return PdfColor;\n}());\nexport { PdfColor };\n","/**\n * Coordinates of Position for `PointF`.\n * @private\n */\nvar PointF = /** @class */ (function () {\n    function PointF(x, y) {\n        if (typeof x === 'undefined') {\n            this.x = 0;\n            this.y = 0;\n        }\n        else {\n            if (x !== null) {\n                this.x = x;\n            }\n            else {\n                this.x = 0;\n            }\n            if (y !== null) {\n                this.y = y;\n            }\n            else {\n                this.y = 0;\n            }\n        }\n    }\n    return PointF;\n}());\nexport { PointF };\n/**\n * Width and Height as `Size`.\n * @private\n */\nvar SizeF = /** @class */ (function () {\n    function SizeF(width, height) {\n        if (typeof height === 'undefined') {\n            this.height = 0;\n            this.width = 0;\n        }\n        else {\n            if (height !== null) {\n                this.height = height;\n            }\n            else {\n                this.height = 0;\n            }\n            if (width !== null) {\n                this.width = width;\n            }\n            else {\n                this.width = 0;\n            }\n        }\n    }\n    return SizeF;\n}());\nexport { SizeF };\n/**\n * `RectangleF` with Position and size.\n * @private\n */\nvar RectangleF = /** @class */ (function () {\n    function RectangleF(arg1, arg2, arg3, arg4) {\n        if (typeof arg1 === typeof arg1 && typeof arg1 === 'undefined') {\n            this.x = 0;\n            this.y = 0;\n            this.height = 0;\n            this.width = 0;\n        }\n        else {\n            if (arg1 instanceof PointF && arg2 instanceof SizeF && typeof arg3 === 'undefined') {\n                var pointf = arg1;\n                this.x = pointf.x;\n                this.y = pointf.y;\n                var sizef = arg2;\n                this.height = sizef.height;\n                this.width = sizef.width;\n            }\n            else {\n                var x = arg1;\n                var y = arg2;\n                var width = arg3;\n                var height = arg4;\n                this.x = x;\n                this.y = y;\n                this.height = height;\n                this.width = width;\n            }\n        }\n    }\n    return RectangleF;\n}());\nexport { RectangleF };\n","/**\n * `PdfBrush` class provides objects used to fill the interiors of graphical shapes such as rectangles,\n * ellipses, pies, polygons, and paths.\n * @private\n */\nvar PdfBrush = /** @class */ (function () {\n    /**\n     * Creates instanceof `PdfBrush` class.\n     * @hidden\n     * @private\n     */\n    function PdfBrush() {\n        //\n    }\n    return PdfBrush;\n}());\nexport { PdfBrush };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfColor } from './../pdf-color';\nimport { PdfColorSpace } from './../enum';\nimport { PdfBrush } from './pdf-brush';\n/**\n * Represents a brush that fills any object with a solid color.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // add a pages to the document\n * let page1 : PdfPage = document.pages.add();\n * // set font\n * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n * // set brush\n * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n * // draw the text\n * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(10, 10));\n * // save the document\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfSolidBrush = /** @class */ (function (_super) {\n    __extends(PdfSolidBrush, _super);\n    //Constructors\n    /**\n     * Initializes a new instance of the `PdfSolidBrush` class.\n     * ```typescript\n     * // create a new PDF document\n     * let document : PdfDocument = new PdfDocument();\n     * // add a pages to the document\n     * let page1 : PdfPage = document.pages.add();\n     * // set font\n     * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n     * // set brush\n     * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n     * // draw the text\n     * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(10, 10));\n     * // save the document\n     * document.save('output.pdf');\n     * // destroy the document\n     * document.destroy();\n     * ```\n     * @param color color of the brush\n     */\n    function PdfSolidBrush(color) {\n        var _this = _super.call(this) || this;\n        _this.pdfColor = color;\n        return _this;\n    }\n    Object.defineProperty(PdfSolidBrush.prototype, \"color\", {\n        //Properties\n        /**\n         * Gets or sets the `color` of the brush.\n         * @private\n         */\n        get: function () {\n            return this.pdfColor;\n        },\n        set: function (value) {\n            this.pdfColor = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Implementation\n    /**\n     * `Monitors` the changes of the brush and modify PDF state respectively.\n     * @private\n     */\n    PdfSolidBrush.prototype.monitorChanges = function (brush, streamWriter, getResources, saveChanges, currentColorSpace) {\n        if (streamWriter == null) {\n            throw new Error('ArgumentNullException:streamWriter');\n        }\n        var diff = false;\n        if (brush == null) {\n            diff = true;\n            streamWriter.setColorAndSpace(this.pdfColor, currentColorSpace, false);\n            return diff;\n        }\n        else {\n            var sBrush = brush;\n            diff = true;\n            streamWriter.setColorAndSpace(this.pdfColor, currentColorSpace, false);\n            return diff;\n        }\n    };\n    /**\n     * `Resets` the changes, which were made by the brush.\n     * @private\n     */\n    PdfSolidBrush.prototype.resetChanges = function (streamWriter) {\n        streamWriter.setColorAndSpace(new PdfColor(0, 0, 0), PdfColorSpace.Rgb, false);\n    };\n    return PdfSolidBrush;\n}(PdfBrush));\nexport { PdfSolidBrush };\n","/**\n * public Enum for `PdfFontStyle`.\n * @private\n */\nexport var PdfFontStyle;\n(function (PdfFontStyle) {\n    /**\n     * Specifies the type of `Regular`.\n     * @private\n     */\n    PdfFontStyle[PdfFontStyle[\"Regular\"] = 0] = \"Regular\";\n    /**\n     * Specifies the type of `Bold`.\n     * @private\n     */\n    PdfFontStyle[PdfFontStyle[\"Bold\"] = 1] = \"Bold\";\n    /**\n     * Specifies the type of `Italic`.\n     * @private\n     */\n    PdfFontStyle[PdfFontStyle[\"Italic\"] = 2] = \"Italic\";\n    /**\n     * Specifies the type of `Underline`.\n     * @private\n     */\n    PdfFontStyle[PdfFontStyle[\"Underline\"] = 4] = \"Underline\";\n    /**\n     * Specifies the type of `Strikeout`.\n     * @private\n     */\n    PdfFontStyle[PdfFontStyle[\"Strikeout\"] = 8] = \"Strikeout\";\n})(PdfFontStyle || (PdfFontStyle = {}));\n/**\n * Specifies the font family from the standard font.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // add a new page to the document\n * let page1 : PdfPage = document.pages.add();\n * // create new standard font\n * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n * // create black brush\n * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n * // draw the text\n * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(0, 0));\n * // save the document\n * document.save('output.pdf');\n * ```\n */\nexport var PdfFontFamily;\n(function (PdfFontFamily) {\n    /**\n     * Specifies the `Helvetica` font.\n     */\n    PdfFontFamily[PdfFontFamily[\"Helvetica\"] = 0] = \"Helvetica\";\n    /**\n     * Specifies the `Courier` font.\n     */\n    PdfFontFamily[PdfFontFamily[\"Courier\"] = 1] = \"Courier\";\n    /**\n     * Specifies the `TimesRoman` font.\n     */\n    PdfFontFamily[PdfFontFamily[\"TimesRoman\"] = 2] = \"TimesRoman\";\n    /**\n     * Specifies the `Symbol` font.\n     */\n    PdfFontFamily[PdfFontFamily[\"Symbol\"] = 3] = \"Symbol\";\n    /**\n     * Specifies the `ZapfDingbats` font.\n     */\n    PdfFontFamily[PdfFontFamily[\"ZapfDingbats\"] = 4] = \"ZapfDingbats\";\n})(PdfFontFamily || (PdfFontFamily = {}));\n/**\n * public Enum for `PdfFontType`.\n * @private\n */\nexport var PdfFontType;\n(function (PdfFontType) {\n    /**\n     * Specifies the type of `Standard`.\n     * @private\n     */\n    PdfFontType[PdfFontType[\"Standard\"] = 0] = \"Standard\";\n    /**\n     * Specifies the type of `TrueType`.\n     * @private\n     */\n    PdfFontType[PdfFontType[\"TrueType\"] = 1] = \"TrueType\";\n    /**\n     * Specifies the type of `TrueTypeEmbedded`.\n     * @private\n     */\n    PdfFontType[PdfFontType[\"TrueTypeEmbedded\"] = 2] = \"TrueTypeEmbedded\";\n})(PdfFontType || (PdfFontType = {}));\n/**\n * public Enum for `PdfWordWrapType`.\n * @private\n */\nexport var PdfWordWrapType;\n(function (PdfWordWrapType) {\n    /**\n     * Specifies the type of `None`.\n     * @private\n     */\n    PdfWordWrapType[PdfWordWrapType[\"None\"] = 0] = \"None\";\n    /**\n     * Specifies the type of `Word`.\n     * @private\n     */\n    PdfWordWrapType[PdfWordWrapType[\"Word\"] = 1] = \"Word\";\n    /**\n     * Specifies the type of `WordOnly`.\n     * @private\n     */\n    PdfWordWrapType[PdfWordWrapType[\"WordOnly\"] = 2] = \"WordOnly\";\n    /**\n     * Specifies the type of `Character`.\n     * @private\n     */\n    PdfWordWrapType[PdfWordWrapType[\"Character\"] = 3] = \"Character\";\n})(PdfWordWrapType || (PdfWordWrapType = {}));\n/**\n * public Enum for `PdfSubSuperScript`.\n * @private\n */\nexport var PdfSubSuperScript;\n(function (PdfSubSuperScript) {\n    /**\n     * Specifies the type of `None`.\n     * @private\n     */\n    PdfSubSuperScript[PdfSubSuperScript[\"None\"] = 0] = \"None\";\n    /**\n     * Specifies the type of `SuperScript`.\n     * @private\n     */\n    PdfSubSuperScript[PdfSubSuperScript[\"SuperScript\"] = 1] = \"SuperScript\";\n    /**\n     * Specifies the type of `SubScript`.\n     * @private\n     */\n    PdfSubSuperScript[PdfSubSuperScript[\"SubScript\"] = 2] = \"SubScript\";\n})(PdfSubSuperScript || (PdfSubSuperScript = {}));\n/**\n * public Enum for `FontEncoding`.\n * @private\n */\nexport var FontEncoding;\n(function (FontEncoding) {\n    /**\n     * Specifies the type of `Unknown`.\n     * @private\n     */\n    FontEncoding[FontEncoding[\"Unknown\"] = 0] = \"Unknown\";\n    /**\n     * Specifies the type of `StandardEncoding`.\n     * @private\n     */\n    FontEncoding[FontEncoding[\"StandardEncoding\"] = 1] = \"StandardEncoding\";\n    /**\n     * Specifies the type of `MacRomanEncoding`.\n     * @private\n     */\n    FontEncoding[FontEncoding[\"MacRomanEncoding\"] = 2] = \"MacRomanEncoding\";\n    /**\n     * Specifies the type of `MacExpertEncoding`.\n     * @private\n     */\n    FontEncoding[FontEncoding[\"MacExpertEncoding\"] = 3] = \"MacExpertEncoding\";\n    /**\n     * Specifies the type of `WinAnsiEncoding`.\n     * @private\n     */\n    FontEncoding[FontEncoding[\"WinAnsiEncoding\"] = 4] = \"WinAnsiEncoding\";\n    /**\n     * Specifies the type of `PdfDocEncoding`.\n     * @private\n     */\n    FontEncoding[FontEncoding[\"PdfDocEncoding\"] = 5] = \"PdfDocEncoding\";\n    /**\n     * Specifies the type of `IdentityH`.\n     * @private\n     */\n    FontEncoding[FontEncoding[\"IdentityH\"] = 6] = \"IdentityH\";\n})(FontEncoding || (FontEncoding = {}));\n","/**\n * PdfStringFormat.ts class for EJ2-PDF\n */\nimport { PdfVerticalAlignment } from './../../graphics/enum';\nimport { PdfSubSuperScript, PdfWordWrapType } from './../../graphics/fonts/enum';\n/**\n * `PdfStringFormat` class represents the text layout information on PDF.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // add a pages to the document\n * let page1 : PdfPage = document.pages.add();\n * // set font\n * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n * // set brush\n * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n * //\n * // set the format for string\n * let stringFormat : PdfStringFormat = new PdfStringFormat();\n * // set the text alignment\n * stringFormat.alignment = PdfTextAlignment.Center;\n * // set the vertical alignment\n * stringFormat.lineAlignment = PdfVerticalAlignment.Middle;\n * //\n * // draw the text\n * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(10, 10), stringFormat);\n * // save the document\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfStringFormat = /** @class */ (function () {\n    function PdfStringFormat(arg1, arg2) {\n        /**\n         * The `scaling factor` of the text being drawn.\n         * @private\n         */\n        this.scalingFactor = 100.0;\n        if (typeof arg1 === 'undefined') {\n            this.internalLineLimit = true;\n            this.wordWrapType = PdfWordWrapType.Word;\n        }\n        else if (typeof arg1 === 'string') {\n            this.constructor();\n        }\n        else {\n            if (typeof arg2 === 'undefined') {\n                this.constructor();\n                this.textAlignment = arg1;\n            }\n            else {\n                this.constructor(arg1);\n                this.verticalAlignment = arg2;\n            }\n        }\n    }\n    Object.defineProperty(PdfStringFormat.prototype, \"alignment\", {\n        //Properties\n        /**\n         * Gets or sets the `horizontal` text alignment\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // add a pages to the document\n         * let page1 : PdfPage = document.pages.add();\n         * // set font\n         * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n         * // set brush\n         * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n         * //\n         * // set the format for string\n         * let stringFormat : PdfStringFormat = new PdfStringFormat();\n         * // set the text alignment\n         * stringFormat.alignment = PdfTextAlignment.Center;\n         * //\n         * // draw the text\n         * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(10, 10), stringFormat);\n         * // save the document\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this.textAlignment;\n        },\n        set: function (value) {\n            this.textAlignment = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"lineAlignment\", {\n        /**\n         * Gets or sets the `vertical` text alignment.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // add a pages to the document\n         * let page1 : PdfPage = document.pages.add();\n         * // set font\n         * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n         * // set brush\n         * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n         * //\n         * // set the format for string\n         * let stringFormat : PdfStringFormat = new PdfStringFormat();\n         * // set the vertical alignment\n         * stringFormat.lineAlignment = PdfVerticalAlignment.Middle;\n         * //\n         * // draw the text\n         * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(10, 10), stringFormat);\n         * // save the document\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this.verticalAlignment === 'undefined' || this.verticalAlignment == null) {\n                return PdfVerticalAlignment.Top;\n            }\n            else {\n                return this.verticalAlignment;\n            }\n        },\n        set: function (value) {\n            this.verticalAlignment = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"rightToLeft\", {\n        /**\n         * Gets or sets the value that indicates text `direction` mode.\n         * @private\n         */\n        get: function () {\n            if (typeof this.isRightToLeft === 'undefined' || this.isRightToLeft == null) {\n                return false;\n            }\n            else {\n                return this.isRightToLeft;\n            }\n        },\n        set: function (value) {\n            this.isRightToLeft = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"characterSpacing\", {\n        /**\n         * Gets or sets value that indicates a `size` among the characters in the text.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // add a pages to the document\n         * let page1 : PdfPage = document.pages.add();\n         * // set font\n         * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n         * // set brush\n         * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n         * //\n         * // set the format for string\n         * let stringFormat : PdfStringFormat = new PdfStringFormat();\n         * // set character spacing\n         * stringFormat.characterSpacing = 10;\n         * //\n         * // draw the text\n         * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(10, 10), stringFormat);\n         * // save the document\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this.internalCharacterSpacing === 'undefined' || this.internalCharacterSpacing == null) {\n                return 0;\n            }\n            else {\n                return this.internalCharacterSpacing;\n            }\n        },\n        set: function (value) {\n            this.internalCharacterSpacing = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"wordSpacing\", {\n        /**\n         * Gets or sets value that indicates a `size` among the words in the text.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // add a pages to the document\n         * let page1 : PdfPage = document.pages.add();\n         * // set font\n         * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n         * // set brush\n         * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n         * //\n         * // set the format for string\n         * let stringFormat : PdfStringFormat = new PdfStringFormat();\n         * // set word spacing\n         * stringFormat.wordSpacing = 10;\n         * //\n         * // draw the text\n         * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(10, 10), stringFormat);\n         * // save the document\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this.internalWordSpacing === 'undefined' || this.internalWordSpacing == null) {\n                return 0;\n            }\n            else {\n                return this.internalWordSpacing;\n            }\n        },\n        set: function (value) {\n            this.internalWordSpacing = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"lineSpacing\", {\n        /**\n         * Gets or sets value that indicates the `vertical distance` between the baselines of adjacent lines of text.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // add a pages to the document\n         * let page1 : PdfPage = document.pages.add();\n         * // set font\n         * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n         * // set brush\n         * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n         * // set string\n         * let text : string = 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor\n         * incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitati';\n         * // set rectangle bounds\n         * let rectangle : RectangleF = new RectangleF({x : 0, y : 0}, {width : 300, height : 100})\n         * //\n         * // set the format for string\n         * let stringFormat : PdfStringFormat = new PdfStringFormat();\n         * // set line spacing\n         * stringFormat.lineSpacing = 10;\n         * //\n         * // draw the text\n         * page1.graphics.drawString(text, font, blackBrush, rectangle, stringFormat);\n         * // save the document\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this.leading === 'undefined' || this.leading == null) {\n                return 0;\n            }\n            else {\n                return this.leading;\n            }\n        },\n        set: function (value) {\n            this.leading = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"clipPath\", {\n        /**\n         * Gets or sets a value indicating whether the text is `clipped` or not.\n         * @private\n         */\n        get: function () {\n            if (typeof this.clip === 'undefined' || this.clip == null) {\n                return false;\n            }\n            else {\n                return this.clip;\n            }\n        },\n        set: function (value) {\n            this.clip = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"subSuperScript\", {\n        /**\n         * Gets or sets value indicating whether the text is in `subscript or superscript` mode.\n         * @private\n         */\n        get: function () {\n            if (typeof this.pdfSubSuperScript === 'undefined' || this.pdfSubSuperScript == null) {\n                return PdfSubSuperScript.None;\n            }\n            else {\n                return this.pdfSubSuperScript;\n            }\n        },\n        set: function (value) {\n            this.pdfSubSuperScript = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"paragraphIndent\", {\n        /**\n         * Gets or sets the `indent` of the first line in the paragraph.\n         * @private\n         */\n        get: function () {\n            if (typeof this.internalParagraphIndent === 'undefined' || this.internalParagraphIndent == null) {\n                return 0;\n            }\n            else {\n                return this.internalParagraphIndent;\n            }\n        },\n        set: function (value) {\n            this.internalParagraphIndent = value;\n            this.firstLineIndent = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"lineLimit\", {\n        /**\n         * Gets or sets a value indicating whether [`line limit`].\n         * @private\n         */\n        get: function () {\n            return this.internalLineLimit;\n        },\n        set: function (value) {\n            this.internalLineLimit = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"measureTrailingSpaces\", {\n        /**\n         * Gets or sets a value indicating whether [`measure trailing spaces`].\n         * @private\n         */\n        get: function () {\n            if (typeof this.trailingSpaces === 'undefined' || this.trailingSpaces == null) {\n                return false;\n            }\n            else {\n                return this.trailingSpaces;\n            }\n        },\n        set: function (value) {\n            this.trailingSpaces = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"noClip\", {\n        /**\n         * Gets or sets a value indicating whether [`no clip`].\n         * @private\n         */\n        get: function () {\n            if (typeof this.isNoClip === 'undefined' || this.isNoClip == null) {\n                return false;\n            }\n            else {\n                return this.isNoClip;\n            }\n        },\n        set: function (value) {\n            this.isNoClip = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"wordWrap\", {\n        /**\n         * Gets or sets value indicating type of the text `wrapping`.\n         * @private\n         */\n        get: function () {\n            // if (typeof this.wrapType === 'undefined' || this.wrapType == null) {\n            //     return PdfWordWrapType.Word;\n            // } else {\n            return this.wordWrapType;\n            // }\n        },\n        set: function (value) {\n            this.wordWrapType = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"horizontalScalingFactor\", {\n        /**\n         * Gets or sets the `scaling factor`.\n         * @private\n         */\n        get: function () {\n            // if (typeof this.scalingFactor === 'undefined' || this.scalingFactor == null) {\n            //     return 100;\n            // } else {\n            return this.scalingFactor;\n            // }\n        },\n        set: function (value) {\n            if (value <= 0) {\n                throw new Error('ArgumentOutOfRangeException:The scaling factor cant be less of equal to zero, ScalingFactor');\n            }\n            this.scalingFactor = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"firstLineIndent\", {\n        /**\n         * Gets or sets the `indent` of the first line in the text.\n         * @private\n         */\n        get: function () {\n            if (typeof this.initialLineIndent === 'undefined' || this.initialLineIndent == null) {\n                return 0;\n            }\n            else {\n                return this.initialLineIndent;\n            }\n        },\n        set: function (value) {\n            this.initialLineIndent = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Clones` the object.\n     * @private\n     */\n    //IClonable implementation\n    PdfStringFormat.prototype.clone = function () {\n        var format = this;\n        return format;\n    };\n    return PdfStringFormat;\n}());\nexport { PdfStringFormat };\n","/**\n * StringTokenizer.ts class for EJ2-PDF\n * Utility class for working with strings.\n * @private\n */\nvar StringTokenizer = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initializes a new instance of the `StringTokenizer` class.\n     * @private\n     */\n    function StringTokenizer(textValue) {\n        /**\n         * Current `position`.\n         * @private\n         */\n        this.currentPosition = 0;\n        if (textValue == null) {\n            throw new Error('ArgumentNullException:text');\n        }\n        this.text = textValue;\n    }\n    Object.defineProperty(StringTokenizer.prototype, \"length\", {\n        // Properties\n        /**\n         * Gets text `length`.\n         * @private\n         */\n        get: function () {\n            return this.text.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(StringTokenizer.prototype, \"position\", {\n        /**\n         * Gets or sets the position.\n         * @private\n         */\n        get: function () {\n            return this.currentPosition;\n        },\n        set: function (value) {\n            this.currentPosition = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    StringTokenizer.getCharsCount = function (text, symbols) {\n        if (typeof symbols === 'string') {\n            if (text == null) {\n                throw new Error('ArgumentNullException:wholeText');\n            }\n            var numSymbols = 0;\n            var curIndex = 0;\n            for (;;) {\n                curIndex = text.indexOf(symbols, curIndex);\n                if (curIndex === -1) {\n                    break;\n                }\n                else {\n                    numSymbols++;\n                    curIndex++;\n                }\n            }\n            return numSymbols;\n        }\n        else {\n            if (text == null) {\n                throw new Error('ArgumentNullException:text');\n            }\n            if (symbols == null) {\n                throw new Error('ArgumentNullException:symbols');\n            }\n            var count = 0;\n            for (var i = 0, len = text.length; i < len; i++) {\n                var ch = text[i];\n                if (this.contains(symbols, ch)) {\n                    count++;\n                }\n            }\n            return count;\n        }\n    };\n    /**\n     * Reads line of the text.\n     * @private\n     */\n    StringTokenizer.prototype.readLine = function () {\n        var pos = this.currentPosition;\n        while (pos < this.length) {\n            var ch = this.text[pos];\n            switch (ch) {\n                case '\\r':\n                case '\\n': {\n                    var text = this.text.substring(this.currentPosition, pos - this.currentPosition);\n                    this.currentPosition = pos + 1;\n                    this.currentPosition++;\n                    return text;\n                }\n            }\n            pos++;\n        }\n        // The remaining text.\n        if (pos > this.currentPosition) {\n            var text2 = this.text.substring(this.currentPosition, pos - this.currentPosition);\n            this.currentPosition = pos;\n            return text2;\n        }\n        return null;\n    };\n    /**\n     * Reads line of the text.\n     * @private\n     */\n    StringTokenizer.prototype.peekLine = function () {\n        var pos = this.currentPosition;\n        var line = this.readLine();\n        this.currentPosition = pos;\n        return line;\n    };\n    /**\n     * Reads a word from the text.\n     * @private\n     */\n    StringTokenizer.prototype.readWord = function () {\n        var pos = this.currentPosition;\n        while (pos < this.length) {\n            var ch = this.text[pos];\n            switch (ch) {\n                case '\\r':\n                case '\\n':\n                    var textValue = this.text.substr(this.currentPosition, pos - this.currentPosition);\n                    this.currentPosition = pos + 1;\n                    if (((ch === '\\r') && (this.currentPosition < this.length)) && (this.text[this.currentPosition] === '\\n')) {\n                        this.currentPosition++;\n                    }\n                    return textValue;\n                case ' ':\n                case '\\t': {\n                    if (pos === this.currentPosition) {\n                        pos++;\n                    }\n                    var text = this.text.substr(this.currentPosition, pos - this.currentPosition);\n                    this.currentPosition = pos;\n                    return text;\n                }\n            }\n            pos++;\n        }\n        // The remaining text.\n        if (pos > this.currentPosition) {\n            var text2 = this.text.substr(this.currentPosition, pos - this.currentPosition);\n            this.currentPosition = pos;\n            return text2;\n        }\n        return null;\n    };\n    /**\n     * Peeks a word from the text.\n     * @private\n     */\n    StringTokenizer.prototype.peekWord = function () {\n        var pos = this.currentPosition;\n        var word = this.readWord();\n        this.currentPosition = pos;\n        return word;\n    };\n    StringTokenizer.prototype.read = function (count) {\n        if (typeof count === 'undefined') {\n            var ch = '0';\n            return ch;\n        }\n        else {\n            var num = 0;\n            var builder = '';\n            return builder;\n        }\n    };\n    /**\n     * Peeks char form the data.\n     * @private\n     */\n    StringTokenizer.prototype.peek = function () {\n        var ch = '0';\n        return ch;\n    };\n    /**\n     * Closes a reader.\n     * @private\n     */\n    StringTokenizer.prototype.close = function () {\n        this.text = null;\n    };\n    //Implementation\n    /**\n     * Checks whether array contains a symbol.\n     * @private\n     */\n    StringTokenizer.contains = function (array, symbol) {\n        var contains = false;\n        for (var i = 0; i < array.length; i++) {\n            if (array[i] === symbol) {\n                contains = true;\n                break;\n            }\n        }\n        return contains;\n    };\n    // Constants\n    /**\n     * `Whitespace` symbol.\n     * @private\n     */\n    StringTokenizer.whiteSpace = ' ';\n    /**\n     * `tab` symbol.\n     * @private\n     */\n    StringTokenizer.tab = '\\t';\n    /**\n     * Array of `spaces`.\n     * @private\n     */\n    StringTokenizer.spaces = [StringTokenizer.whiteSpace, StringTokenizer.tab];\n    /**\n     * `Pattern` for WhiteSpace.\n     * @private\n     */\n    StringTokenizer.whiteSpacePattern = '^[ \\t]+$';\n    return StringTokenizer;\n}());\nexport { StringTokenizer };\n","import { SizeF, RectangleF, PointF } from './../../drawing/pdf-drawing';\nimport { PdfWordWrapType } from './enum';\nimport { StringTokenizer } from './string-tokenizer';\n/**\n * Class `lay outing the text`.\n */\nvar PdfStringLayouter = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initializes a new instance of the `StringLayouter` class.\n     * @private\n     */\n    function PdfStringLayouter() {\n        /**\n         * Checks whether the x co-ordinate is need to set as client size or not.\n         * @hidden\n         * @private\n         */\n        this.isOverloadWithPosition = false;\n        //\n    }\n    PdfStringLayouter.prototype.layout = function (arg1, arg2, arg3, arg4, arg5, arg6, arg7) {\n        if (arg4 instanceof RectangleF) {\n            this.initialize(arg1, arg2, arg3, arg4, arg5);\n            this.isOverloadWithPosition = arg6;\n            this.clientSize = arg7;\n            var result = this.doLayout();\n            this.clear();\n            return result;\n        }\n        else {\n            this.initialize(arg1, arg2, arg3, arg4);\n            this.isOverloadWithPosition = arg5;\n            this.clientSize = arg6;\n            var result = this.doLayout();\n            this.clear();\n            return result;\n        }\n    };\n    PdfStringLayouter.prototype.initialize = function (text, font, format, rectSize, pageHeight) {\n        if (typeof pageHeight === 'number') {\n            if (text == null) {\n                throw new Error('ArgumentNullException:text');\n            }\n            if (font == null) {\n                throw new Error('ArgumentNullException:font');\n            }\n            this.text = text;\n            this.font = font;\n            this.format = format;\n            this.size = new SizeF(rectSize.width, rectSize.height);\n            this.rectangle = rectSize;\n            this.pageHeight = pageHeight;\n            this.reader = new StringTokenizer(text);\n        }\n        else {\n            this.initialize(text, font, format, new RectangleF(new PointF(0, 0), rectSize), 0);\n        }\n    };\n    /**\n     * `Clear` all resources.\n     * @private\n     */\n    PdfStringLayouter.prototype.clear = function () {\n        this.font = null;\n        this.format = null;\n        this.reader.close();\n        this.reader = null;\n        this.text = null;\n    };\n    /**\n     * `Layouts` the text.\n     * @private\n     */\n    PdfStringLayouter.prototype.doLayout = function () {\n        var result = new PdfStringLayoutResult();\n        var lineResult = new PdfStringLayoutResult();\n        var lines = [];\n        var line = this.reader.peekLine();\n        var lineIndent = this.getLineIndent(true);\n        while (line != null) {\n            lineResult = this.layoutLine(line, lineIndent);\n            // if (!lineResult.Empty) {\n            var numSymbolsInserted = 0;\n            /* tslint:disable */\n            var returnedValue = this.copyToResult(result, lineResult, lines, /*out*/ numSymbolsInserted);\n            /* tslint:enable */\n            var success = returnedValue.success;\n            numSymbolsInserted = returnedValue.numInserted;\n            this.reader.readLine();\n            line = this.reader.peekLine();\n            lineIndent = this.getLineIndent(false);\n        }\n        this.finalizeResult(result, lines);\n        return result;\n    };\n    /**\n     * Returns `line indent` for the line.\n     * @private\n     */\n    PdfStringLayouter.prototype.getLineIndent = function (firstLine) {\n        var lineIndent = 0;\n        if (this.format != null) {\n            lineIndent = (firstLine) ? this.format.firstLineIndent : this.format.paragraphIndent;\n            lineIndent = (this.size.width > 0) ? Math.min(this.size.width, lineIndent) : lineIndent;\n        }\n        return lineIndent;\n    };\n    /**\n     * Calculates `height` of the line.\n     * @private\n     */\n    PdfStringLayouter.prototype.getLineHeight = function () {\n        var height = this.font.height;\n        if (this.format != null && this.format.lineSpacing !== 0) {\n            height = this.format.lineSpacing + this.font.height;\n        }\n        return height;\n    };\n    /**\n     * Calculates `width` of the line.\n     * @private\n     */\n    PdfStringLayouter.prototype.getLineWidth = function (line) {\n        var width = this.font.getLineWidth(line, this.format);\n        return width;\n    };\n    // tslint:disable\n    /**\n     * `Layouts` line.\n     * @private\n     */\n    PdfStringLayouter.prototype.layoutLine = function (line, lineIndent) {\n        var lineResult = new PdfStringLayoutResult();\n        lineResult.layoutLineHeight = this.getLineHeight();\n        var lines = [];\n        var maxWidth = this.size.width;\n        var lineWidth = this.getLineWidth(line) + lineIndent;\n        var lineType = LineType.FirstParagraphLine;\n        var readWord = true;\n        // line is in bounds.\n        if (maxWidth <= 0 || Math.round(lineWidth) <= Math.round(maxWidth)) {\n            this.addToLineResult(lineResult, lines, line, lineWidth, LineType.NewLineBreak | lineType);\n        }\n        else {\n            var builder = '';\n            var curLine = '';\n            lineWidth = lineIndent;\n            var curIndent = lineIndent;\n            var reader = new StringTokenizer(line);\n            var word = reader.peekWord();\n            var isSingleWord = false;\n            while (word != null) {\n                curLine = curLine + word;\n                var curLineWidth = this.getLineWidth(curLine.toString()) + curIndent /*)*/;\n                if (curLineWidth > maxWidth) {\n                    if (this.getWrapType() == PdfWordWrapType.None)\n                        break;\n                    if (this.getWrapType() != PdfWordWrapType.Character || !readWord) {\n                        var ln = builder.toString();\n                        if (ln.indexOf(' ') === -1) {\n                            isSingleWord = true;\n                            this.addToLineResult(lineResult, lines, curLine, lineWidth, LineType.LayoutBreak | lineType);\n                        }\n                        else {\n                            this.addToLineResult(lineResult, lines, ln, lineWidth, LineType.LayoutBreak | lineType);\n                        }\n                        if (this.isOverloadWithPosition) {\n                            maxWidth = this.clientSize.width;\n                        }\n                        curLine = '';\n                        builder = '';\n                        lineWidth = 0;\n                        curIndent = 0;\n                        curLineWidth = 0;\n                        lineType = LineType.None;\n                        if (isSingleWord) {\n                            reader.readWord();\n                            readWord = false;\n                        }\n                        word = (readWord) ? word : reader.peekWord();\n                        isSingleWord = false;\n                        readWord = true;\n                    }\n                    else {\n                        readWord = false;\n                        curLine = curLine + builder.toString();\n                        word = reader.peek().toString();\n                    }\n                    continue;\n                }\n                builder = builder + word;\n                lineWidth = curLineWidth;\n                if (readWord) {\n                    reader.readWord();\n                    word = reader.peekWord();\n                    isSingleWord = false;\n                }\n                else {\n                    reader.read();\n                    word = reader.peek().toString();\n                }\n            }\n            if (builder.length > 0) {\n                var ln = builder.toString();\n                this.addToLineResult(lineResult, lines, ln, lineWidth, LineType.NewLineBreak | LineType.LastParagraphLine);\n            }\n            reader.close();\n        }\n        lineResult.layoutLines = [];\n        for (var index = 0; index < lines.length; index++) {\n            lineResult.layoutLines.push(lines[index]);\n        }\n        lines = [];\n        return lineResult;\n    };\n    /**\n     * `Adds` line to line result.\n     * @private\n     */\n    PdfStringLayouter.prototype.addToLineResult = function (lineResult, lines, line, lineWidth, breakType) {\n        var info = new LineInfo();\n        info.text = line;\n        info.width = lineWidth;\n        info.lineType = breakType;\n        lines.push(info);\n        var size = lineResult.actualSize;\n        size.height += this.getLineHeight();\n        size.width = Math.max(size.width, lineWidth);\n        lineResult.size = size;\n    };\n    /**\n     * `Copies` layout result from line result to entire result. Checks whether we can proceed lay outing or not.\n     * @private\n     */\n    PdfStringLayouter.prototype.copyToResult = function (result, lineResult, lines, \n        /*out*/ numInserted) {\n        var success = true;\n        var allowPartialLines = (this.format != null && !this.format.lineLimit);\n        var height = result.actualSize.height;\n        var maxHeight = this.size.height;\n        if ((this.pageHeight > 0) && (maxHeight + this.rectangle.y > this.pageHeight)) {\n            maxHeight = this.rectangle.y - this.pageHeight;\n            maxHeight = Math.max(maxHeight, -maxHeight);\n        }\n        numInserted = 0;\n        for (var i = 0, len = lineResult.lines.length; i < len; i++) {\n            var expHeight = height + lineResult.lineHeight;\n            var info = lineResult.lines[i];\n            numInserted += info.text.length;\n            info = this.trimLine(info, (lines.length === 0));\n            lines.push(info);\n            // Update width.\n            var size_1 = result.actualSize;\n            size_1.width = Math.max(size_1.width, info.width);\n            result.size = size_1;\n            height = expHeight;\n        }\n        var size = result.actualSize;\n        size.height = height;\n        result.size = size;\n        return { success: success, numInserted: numInserted };\n    };\n    /**\n     * `Finalizes` final result.\n     * @private\n     */\n    PdfStringLayouter.prototype.finalizeResult = function (result, lines) {\n        result.layoutLines = [];\n        for (var index = 0; index < lines.length; index++) {\n            result.layoutLines.push(lines[index]);\n        }\n        result.layoutLineHeight = this.getLineHeight();\n        lines = [];\n    };\n    /**\n     * `Trims` whitespaces at the line.\n     * @private\n     */\n    PdfStringLayouter.prototype.trimLine = function (info, firstLine) {\n        var line = info.text;\n        var lineWidth = info.width;\n        // Trim start whitespaces if the line is not a start of the paragraph only.\n        // let trimStartSpaces : boolean = ((info.LineType & LineType.FirstParagraphLine) === 0);\n        var start = (this.format == null || !this.format.rightToLeft);\n        var spaces = StringTokenizer.spaces;\n        line = (start) ? line.trim() : line.trim();\n        // Recalculate line width.\n        if (line.length !== info.text.length) {\n            lineWidth = this.getLineWidth(line);\n            lineWidth += this.getLineIndent(firstLine);\n        }\n        info.text = line;\n        info.width = lineWidth;\n        return info;\n    };\n    /**\n     * Returns `wrap` type.\n     * @private\n     */\n    PdfStringLayouter.prototype.getWrapType = function () {\n        var wrapType = (this.format != null) ? this.format.wordWrap : PdfWordWrapType.Word;\n        return wrapType;\n    };\n    return PdfStringLayouter;\n}());\nexport { PdfStringLayouter };\n//Internal declaration\nvar PdfStringLayoutResult = /** @class */ (function () {\n    function PdfStringLayoutResult() {\n    }\n    Object.defineProperty(PdfStringLayoutResult.prototype, \"remainder\", {\n        // Properties\n        /**\n         * Gets the `text` which is not lay outed.\n         * @private\n         */\n        get: function () {\n            return this.textRemainder;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringLayoutResult.prototype, \"actualSize\", {\n        /**\n         * Gets the actual layout text `bounds`.\n         * @private\n         */\n        get: function () {\n            if (typeof this.size === 'undefined') {\n                this.size = new SizeF(0, 0);\n            }\n            return this.size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringLayoutResult.prototype, \"lines\", {\n        /**\n         * Gets layout `lines` information.\n         * @private\n         */\n        get: function () {\n            return this.layoutLines;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringLayoutResult.prototype, \"lineHeight\", {\n        /**\n         * Gets the `height` of the line.\n         * @private\n         */\n        get: function () {\n            return this.layoutLineHeight;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringLayoutResult.prototype, \"empty\", {\n        /**\n         * Gets value that indicates whether any layout text [`empty`].\n         * @private\n         */\n        get: function () {\n            return (this.layoutLines == null || this.layoutLines.length === 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringLayoutResult.prototype, \"lineCount\", {\n        /**\n         * Gets `number of` the layout lines.\n         * @private\n         */\n        get: function () {\n            var count = (!this.empty) ? this.layoutLines.length : 0;\n            return count;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfStringLayoutResult;\n}());\nexport { PdfStringLayoutResult };\nvar LineInfo = /** @class */ (function () {\n    function LineInfo() {\n    }\n    Object.defineProperty(LineInfo.prototype, \"lineType\", {\n        //Properties\n        /**\n         * Gets the `type` of the line text.\n         * @private\n         */\n        get: function () {\n            return this.type;\n        },\n        set: function (value) {\n            this.type = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LineInfo.prototype, \"text\", {\n        /**\n         * Gets the line `text`.\n         * @private\n         */\n        get: function () {\n            return this.content;\n        },\n        set: function (value) {\n            this.content = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LineInfo.prototype, \"width\", {\n        /**\n         * Gets `width` of the line text.\n         * @private\n         */\n        get: function () {\n            return this.lineWidth;\n        },\n        set: function (value) {\n            this.lineWidth = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return LineInfo;\n}());\nexport { LineInfo };\n/**\n* Break type of the `line`.\n* @private\n*/\nexport var LineType;\n(function (LineType) {\n    /**\n     * Specifies the type of `None`.\n     * @private\n     */\n    LineType[LineType[\"None\"] = 0] = \"None\";\n    /**\n     * Specifies the type of `NewLineBreak`.\n     * @private\n     */\n    LineType[LineType[\"NewLineBreak\"] = 1] = \"NewLineBreak\";\n    /**\n     * Specifies the type of `LayoutBreak`.\n     * @private\n     */\n    LineType[LineType[\"LayoutBreak\"] = 2] = \"LayoutBreak\";\n    /**\n     * Specifies the type of `FirstParagraphLine`.\n     * @private\n     */\n    LineType[LineType[\"FirstParagraphLine\"] = 4] = \"FirstParagraphLine\";\n    /**\n     * Specifies the type of `LastParagraphLine`.\n     * @private\n     */\n    LineType[LineType[\"LastParagraphLine\"] = 8] = \"LastParagraphLine\";\n})(LineType || (LineType = {}));\n","/**\n * PdfFont.ts class for EJ2-PDF\n */\nimport { PdfFontStyle } from './enum';\nimport { SizeF } from './../../drawing/pdf-drawing';\nimport { PdfStringFormat } from './pdf-string-format';\nimport { PdfStringLayouter } from './string-layouter';\nimport { StringTokenizer } from './string-tokenizer';\n/**\n * Defines a particular format for text, including font face, size, and style attributes.\n * @private\n */\nvar PdfFont = /** @class */ (function () {\n    function PdfFont(size, style) {\n        /**\n         * `Style` of the font.\n         * @private\n         */\n        this.fontStyle = PdfFontStyle.Regular;\n        if (typeof size === 'number' && typeof style === 'undefined') {\n            this.fontSize = size;\n        }\n        else {\n            this.fontSize = size;\n            this.setStyle(style);\n        }\n    }\n    Object.defineProperty(PdfFont.prototype, \"name\", {\n        //Properties\n        /**\n         * Gets the face name of this Font.\n         * @private\n         */\n        get: function () {\n            return this.metrics.name;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"size\", {\n        /**\n         * Gets the size of this font.\n         * @private\n         */\n        get: function () {\n            return this.fontSize;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"height\", {\n        /**\n         * Gets the height of the font in points.\n         * @private\n         */\n        get: function () {\n            return this.metrics.getHeight(null);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"style\", {\n        /**\n         * Gets the style information for this font.\n         * @private\n         */\n        get: function () {\n            return this.fontStyle;\n        },\n        set: function (value) {\n            this.fontStyle = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"bold\", {\n        /**\n         * Gets a value indicating whether this `PdfFont` is `bold`.\n         * @private\n         */\n        get: function () {\n            return ((this.style & PdfFontStyle.Bold) > 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"italic\", {\n        /**\n         * Gets a value indicating whether this `PdfFont` has the `italic` style applied.\n         * @private\n         */\n        get: function () {\n            return ((this.style & PdfFontStyle.Italic) > 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"strikeout\", {\n        /**\n         * Gets a value indicating whether this `PdfFont` is `strikeout`.\n         * @private\n         */\n        get: function () {\n            return ((this.style & PdfFontStyle.Strikeout) > 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"underline\", {\n        /**\n         * Gets a value indicating whether this `PdfFont` is `underline`.\n         * @private\n         */\n        get: function () {\n            return ((this.style & PdfFontStyle.Underline) > 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"metrics\", {\n        /**\n         * Gets or sets the `metrics` for this font.\n         * @private\n         */\n        get: function () {\n            return this.fontMetrics;\n        },\n        set: function (value) {\n            this.fontMetrics = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"element\", {\n        // /**\n        //  * Gets and Sets the font `internals`.\n        //  * @private\n        //  */\n        // public get fontInternal() : IPdfPrimitive {\n        //     return this.pdfFontInternals;\n        // }\n        // public set fontInternal(value : IPdfPrimitive) {\n        //     this.pdfFontInternals = value;\n        // }\n        //IPdfWrapper Members\n        /**\n         * Gets the `element` representing the font.\n         * @private\n         */\n        get: function () {\n            return this.pdfFontInternals;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfFont.prototype.measureString = function (text, arg2, arg3, arg4, arg5) {\n        if (typeof text === 'string' && typeof arg2 === 'undefined') {\n            return this.measureString(text, null);\n        }\n        else if (typeof text === 'string' && (arg2 instanceof PdfStringFormat || arg2 == null) && typeof arg3 === 'undefined' && typeof arg4 === 'undefined') {\n            var temparg2 = arg2;\n            var charactersFitted = 0;\n            var linesFilled = 0;\n            return this.measureString(text, temparg2, charactersFitted, linesFilled);\n        }\n        else if (typeof text === 'string' && (arg2 instanceof PdfStringFormat || arg2 == null) && typeof arg3 === 'number' && typeof arg4 === 'number') {\n            var temparg2 = arg2;\n            return this.measureString(text, 0, temparg2, arg3, arg4);\n            // } else if (typeof text === 'string' && typeof arg2 === 'number' && typeof arg3 === 'undefined') {\n            //     return this.measureString(text, arg2, null);\n            // } else if (typeof text === 'string' && typeof arg2 === 'number' && (arg3 instanceof PdfStringFormat || arg3 == null) && typeof arg4 === 'undefined' && typeof arg5 === 'undefined') {\n            //     let temparg3 : PdfStringFormat = arg3 as PdfStringFormat;\n            //     let charactersFitted : number = 0;\n            //     let linesFilled : number = 0;\n            //     return this.measureString(text, arg2, temparg3, charactersFitted, linesFilled);\n        }\n        else if (typeof text === 'string' && typeof arg2 === 'number' && (arg3 instanceof PdfStringFormat || arg3 == null) && typeof arg4 === 'number' && typeof arg5 === 'number') {\n            var layoutArea = new SizeF(arg2, 0);\n            var temparg3 = arg3;\n            return this.measureString(text, layoutArea, temparg3, arg4, arg5);\n            // } else if (typeof text === 'string' && arg2 instanceof SizeF && typeof arg3 === 'undefined') {\n            //     return this.measureString(text, arg2, null);\n            // } else if (typeof text === 'string' && arg2 instanceof SizeF && (arg3 instanceof PdfStringFormat || arg3 == null) && typeof arg4 === 'undefined' && typeof arg5 === 'undefined') {\n            //     let temparg3 : PdfStringFormat = arg3 as PdfStringFormat;\n            //     let charactersFitted : number = 0;\n            //     let linesFilled : number = 0;\n            //     return this.measureString(text, arg2, temparg3, charactersFitted, linesFilled);\n        }\n        else {\n            if (text == null) {\n                throw Error(\"ArgumentNullException(\\\"text\\\")\");\n            }\n            var temparg2 = arg2;\n            var temparg3 = arg3;\n            var layouter = new PdfStringLayouter();\n            var result = layouter.layout(text, this, temparg3, temparg2, false, new SizeF(0, 0));\n            // arg4 = (result.Remainder == null) ? text.length : text.length - result.Remainder.length;\n            arg4 = text.length;\n            arg5 = (result.empty) ? 0 : result.lines.length;\n            return result.actualSize;\n        }\n    };\n    /* tslint:enable */\n    //IPdfCache Members\n    /**\n     * `Checks` whether the object is similar to another object.\n     * @private\n     */\n    PdfFont.prototype.equalsTo = function (obj) {\n        var result = this.equalsToFont(obj);\n        return result;\n    };\n    /**\n     * Returns `internals` of the object.\n     * @private\n     */\n    PdfFont.prototype.getInternals = function () {\n        return this.pdfFontInternals;\n    };\n    /**\n     * Sets `internals` to the object.\n     * @private\n     */\n    PdfFont.prototype.setInternals = function (internals) {\n        if (internals == null) {\n            throw new Error('ArgumentNullException:internals');\n        }\n        this.pdfFontInternals = internals;\n    };\n    /**\n     * Sets the `style` of the font.\n     * @private\n     */\n    PdfFont.prototype.setStyle = function (style) {\n        this.fontStyle = style;\n    };\n    /**\n     * Applies `settings` to the default line width.\n     * @private\n     */\n    PdfFont.prototype.applyFormatSettings = function (line, format, width) {\n        // if (line == null) {\n        //     throw new Error(`ArgumentNullException:line`);\n        // }\n        var realWidth = width;\n        if (format != null && width > 0) {\n            // Space among characters is not default.\n            if (format.characterSpacing !== 0) {\n                realWidth += (line.length - 1) * format.characterSpacing;\n            }\n            // Space among words is not default.\n            if (format.wordSpacing !== 0) {\n                var symbols = StringTokenizer.spaces;\n                var whitespacesCount = StringTokenizer.getCharsCount(line, symbols);\n                realWidth += whitespacesCount * format.wordSpacing;\n            }\n        }\n        return realWidth;\n    };\n    //Constants\n    /**\n     * `Multiplier` of the symbol width.\n     * @default 0.001\n     * @private\n     */\n    PdfFont.charSizeMultiplier = 0.001;\n    /**\n     * `Synchronization` object.\n     * @private\n     */\n    PdfFont.syncObject = new Object();\n    return PdfFont;\n}());\nexport { PdfFont };\n","/**\n * Used to `write a string` into output file.\n * @private\n */\nvar PdfWriter = /** @class */ (function () {\n    /**\n     * Initialize an instance of `PdfWriter` class.\n     * @private\n     */\n    function PdfWriter(stream) {\n        this.streamWriter = stream;\n    }\n    Object.defineProperty(PdfWriter.prototype, \"document\", {\n        //properties\n        /**\n         * Gets and Sets the `document`.\n         * @private\n         */\n        get: function () {\n            return this.pdfDocument;\n        },\n        set: function (value) {\n            this.pdfDocument = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWriter.prototype, \"position\", {\n        /**\n         * Gets the `position`.\n         * @private\n         */\n        get: function () {\n            return this.streamWriter.buffer.size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWriter.prototype, \"length\", {\n        /**\n         * Gets  the `length` of the stream'.\n         * @private\n         */\n        get: function () {\n            return this.streamWriter.buffer.size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWriter.prototype, \"stream\", {\n        /**\n         * Gets the `stream`.\n         * @private\n         */\n        get: function () {\n            var result = this.streamWriter;\n            return result;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //public Methods\n    /**\n     * `Writes the specified data`.\n     * @private\n     */\n    PdfWriter.prototype.write = function (overload) {\n        var data = [];\n        var tempOverload = overload;\n        this.streamWriter.write(tempOverload);\n    };\n    return PdfWriter;\n}());\nexport { PdfWriter };\n","/**\n * public Enum for `CompositeFontType`.\n * @private\n */\nexport var ObjectStatus;\n(function (ObjectStatus) {\n    /**\n     * Specifies the type of `None`.\n     * @private\n     */\n    ObjectStatus[ObjectStatus[\"None\"] = 0] = \"None\";\n    /**\n     * Specifies the type of `Registered`.\n     * @private\n     */\n    ObjectStatus[ObjectStatus[\"Registered\"] = 1] = \"Registered\";\n})(ObjectStatus || (ObjectStatus = {}));\n","/**\n * PdfMainObjectCollection.ts class for EJ2-PDF\n */\nimport { Dictionary } from './../collections/dictionary';\nimport { ObjectStatus } from './enum';\n/**\n * The collection of all `objects` within a PDF document.\n * @private\n */\nvar PdfMainObjectCollection = /** @class */ (function () {\n    function PdfMainObjectCollection() {\n        //Fields\n        /**\n         * The collection of the `indirect objects`.\n         * @default []\n         * @private\n         */\n        this.objectCollections = [];\n        /**\n         * The collection of the `Indirect objects`.\n         * @default new Dictionary<number, ObjectInfo>()\n         * @private\n         */\n        this.mainObjectCollection = new Dictionary();\n        /**\n         * The collection of `primitive objects`.\n         * @private\n         */\n        this.primitiveObjectCollection = new Dictionary();\n    }\n    Object.defineProperty(PdfMainObjectCollection.prototype, \"count\", {\n        //Properties\n        /**\n         * Gets the `count`.\n         * @private\n         */\n        get: function () {\n            return this.objectCollections.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the value of `ObjectInfo` from object collection.\n     * @private\n     */\n    PdfMainObjectCollection.prototype.items = function (index) {\n        return this.objectCollections[index];\n    };\n    Object.defineProperty(PdfMainObjectCollection.prototype, \"outIsNew\", {\n        //Methods\n        /**\n         * Specifies the value of `IsNew`.\n         * @private\n         */\n        get: function () {\n            return this.isNew;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Adds` the specified element.\n     * @private\n     */\n    PdfMainObjectCollection.prototype.add = function (element) {\n        var objInfo = new ObjectInfo(element);\n        this.objectCollections.push(objInfo);\n        if (!this.primitiveObjectCollection.containsKey(element)) {\n            this.primitiveObjectCollection.setValue(element, this.objectCollections.length - 1);\n        }\n        element.position = this.index = this.objectCollections.length - 1;\n        element.status = ObjectStatus.Registered;\n    };\n    /**\n     * `Looks` through the collection for the object specified.\n     * @private\n     */\n    PdfMainObjectCollection.prototype.lookFor = function (obj) {\n        var index = -1;\n        if (obj.position !== -1) {\n            return obj.position;\n        }\n        if (this.primitiveObjectCollection.containsKey(obj) && this.count === this.primitiveObjectCollection.size()) {\n            index = this.primitiveObjectCollection.getValue(obj);\n        }\n        else {\n            for (var i = this.count - 1; i >= 0; i--) {\n                var oi = this.objectCollections[i];\n                if (oi.object === obj) {\n                    index = i;\n                    break;\n                }\n            }\n        }\n        return index;\n    };\n    /**\n     * Gets the `reference of the object`.\n     * @private\n     */\n    PdfMainObjectCollection.prototype.getReference = function (index, isNew) {\n        this.index = this.lookFor(index);\n        var reference;\n        this.isNew = false;\n        var oi = this.objectCollections[this.index];\n        reference = oi.reference;\n        var obj = { reference: reference, wasNew: isNew };\n        return obj;\n    };\n    /**\n     * Tries to set the `reference to the object`.\n     * @private\n     */\n    PdfMainObjectCollection.prototype.trySetReference = function (obj, reference, found) {\n        var result = true;\n        found = true;\n        this.index = this.lookFor(obj);\n        var oi = this.objectCollections[this.index];\n        oi.setReference(reference);\n        return result;\n    };\n    PdfMainObjectCollection.prototype.destroy = function () {\n        for (var _i = 0, _a = this.objectCollections; _i < _a.length; _i++) {\n            var obj = _a[_i];\n            if (obj !== undefined) {\n                obj.pdfObject.position = -1;\n                obj.pdfObject.isSaving = undefined;\n                obj.pdfObject.objectCollectionIndex = undefined;\n                obj.pdfObject.position = undefined;\n            }\n        }\n        this.objectCollections = [];\n        this.mainObjectCollection = new Dictionary();\n        this.primitiveObjectCollection = new Dictionary();\n    };\n    return PdfMainObjectCollection;\n}());\nexport { PdfMainObjectCollection };\nvar ObjectInfo = /** @class */ (function () {\n    function ObjectInfo(obj, reference) {\n        this.pdfObject = obj;\n        this.pdfReference = reference;\n    }\n    Object.defineProperty(ObjectInfo.prototype, \"object\", {\n        //Properties\n        /**\n         * Gets the `object`.\n         * @private\n         */\n        get: function () {\n            return this.pdfObject;\n        },\n        set: function (value) {\n            this.pdfObject = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ObjectInfo.prototype, \"reference\", {\n        /**\n         * Gets the `reference`.\n         * @private\n         */\n        get: function () {\n            return this.pdfReference;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Sets the `reference`.\n     * @private\n     */\n    ObjectInfo.prototype.setReference = function (reference) {\n        this.pdfReference = reference;\n    };\n    return ObjectInfo;\n}());\nexport { ObjectInfo };\n","import { StreamWriter } from '@syncfusion/ej2-file-utils';\nimport { Encoding } from '@syncfusion/ej2-file-utils';\nimport { PdfDocument } from './pdf-document';\n/**\n * `PdfDocumentBase` class represent common properties of PdfDocument classes.\n * @private\n */\nvar PdfDocumentBase = /** @class */ (function () {\n    function PdfDocumentBase(document) {\n        /**\n         * If the stream is copied,  then it specifies true.\n         * @private\n         */\n        this.isStreamCopied = false;\n        if (document instanceof PdfDocument) {\n            this.document = document;\n        }\n    }\n    Object.defineProperty(PdfDocumentBase.prototype, \"pdfObjects\", {\n        //Prpperties\n        /**\n         * Gets the `PDF objects` collection, which stores all objects and references to it..\n         * @private\n         */\n        get: function () {\n            return this.objects;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentBase.prototype, \"crossTable\", {\n        /**\n         * Gets the `cross-reference` table.\n         * @private\n         */\n        get: function () {\n            return this.pdfCrossTable;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentBase.prototype, \"currentSavingObj\", {\n        /**\n         * Gets or sets the current saving `object number`.\n         * @private\n         */\n        get: function () {\n            return this.currentSavingObject;\n        },\n        set: function (value) {\n            this.currentSavingObject = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentBase.prototype, \"catalog\", {\n        /**\n         * Gets the PDF document `catalog`.\n         * @private\n         */\n        get: function () {\n            return this.pdfCatalog;\n        },\n        set: function (value) {\n            this.pdfCatalog = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Public methods\n    /**\n     * Sets the `main object collection`.\n     * @private\n     */\n    PdfDocumentBase.prototype.setMainObjectCollection = function (mainObjectCollection) {\n        this.objects = mainObjectCollection;\n    };\n    /**\n     * Sets the `cross table`.\n     * @private\n     */\n    PdfDocumentBase.prototype.setCrossTable = function (cTable) {\n        this.pdfCrossTable = cTable;\n    };\n    /**\n     * Sets the `catalog`.\n     * @private\n     */\n    PdfDocumentBase.prototype.setCatalog = function (catalog) {\n        this.pdfCatalog = catalog;\n    };\n    PdfDocumentBase.prototype.save = function (filename) {\n        var _this = this;\n        var encoding = new Encoding(true);\n        var SW = new StreamWriter(encoding);\n        if (typeof filename === 'undefined') {\n            var encoding_1 = new Encoding(true);\n            var SW_1 = new StreamWriter(encoding_1);\n            return new Promise(function (resolve, reject) {\n                /* tslint:disable-next-line:no-any */\n                var obj = {};\n                obj.blobData = new Blob([_this.document.docSave(SW_1, true)], { type: 'application/pdf' });\n                resolve(obj);\n            });\n        }\n        else {\n            this.document.docSave(SW, filename, true);\n        }\n    };\n    /**\n     * `Clone` of parent object - PdfDocument.\n     * @private\n     */\n    PdfDocumentBase.prototype.clone = function () {\n        return this.document;\n    };\n    return PdfDocumentBase;\n}());\nexport { PdfDocumentBase };\n","/**\n * public Enum for `ObjectType`.\n * @private\n */\nexport var ObjectType;\n(function (ObjectType) {\n    /**\n     * Specifies the type of `Free`.\n     * @private\n     */\n    ObjectType[ObjectType[\"Free\"] = 0] = \"Free\";\n    /**\n     * Specifies the type of `Normal`.\n     * @private\n     */\n    ObjectType[ObjectType[\"Normal\"] = 1] = \"Normal\";\n    /**\n     * Specifies the type of `Packed`.\n     * @private\n     */\n    ObjectType[ObjectType[\"Packed\"] = 2] = \"Packed\";\n})(ObjectType || (ObjectType = {}));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfCatalog.ts class for EJ2-PDF\n */\nimport { PdfDictionary } from './../primitives/pdf-dictionary';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\nimport { PdfName } from './../primitives/pdf-name';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\n/**\n * `PdfCatalog` class represents internal catalog of the Pdf document.\n * @private\n */\nvar PdfCatalog = /** @class */ (function (_super) {\n    __extends(PdfCatalog, _super);\n    //constructor\n    /**\n     * Initializes a new instance of the `PdfCatalog` class.\n     * @private\n     */\n    function PdfCatalog() {\n        var _this = _super.call(this) || this;\n        //fields\n        /**\n         * Internal variable to store collection of `sections`.\n         * @default null\n         * @private\n         */\n        _this.sections = null;\n        /**\n         * Internal variable for accessing fields from `DictionryProperties` class.\n         * @private\n         */\n        _this.tempDictionaryProperties = new DictionaryProperties();\n        _this.items.setValue(new DictionaryProperties().type, new PdfName('Catalog'));\n        return _this;\n    }\n    Object.defineProperty(PdfCatalog.prototype, \"pages\", {\n        //Properties\n        /**\n         * Gets or sets the sections, which contain `pages`.\n         * @private\n         */\n        get: function () {\n            return this.sections;\n        },\n        set: function (value) {\n            var dictionary = value.element;\n            // if (this.sections !== value) {\n            //     this.sections = value;\n            //     this.Items.setValue(this.tempDictionaryProperties.pages, new PdfReferenceHolder(value));\n            // }\n            this.sections = value;\n            this.items.setValue(this.tempDictionaryProperties.pages, new PdfReferenceHolder(value));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfCatalog;\n}(PdfDictionary));\nexport { PdfCatalog };\n","import { ObjectStatus } from './../input-output/enum';\nimport { PdfDictionary } from './../primitives/pdf-dictionary';\nimport { DictionaryProperties } from './pdf-dictionary-properties';\nimport { Operators } from './pdf-operators';\nimport { Dictionary } from './../collections/dictionary';\nimport { PdfReference } from './../primitives/pdf-reference';\nimport { ObjectType } from './cross-table';\nimport { PdfStream } from './../primitives/pdf-stream';\nimport { PdfNumber } from './../primitives/pdf-number';\nimport { PdfCatalog } from './../document/pdf-catalog';\n/**\n * `PdfCrossTable` is responsible for intermediate level parsing\n * and savingof a PDF document.\n * @private\n */\nvar PdfCrossTable = /** @class */ (function () {\n    function PdfCrossTable() {\n        /**\n         * The modified `objects` that should be saved.\n         * @private\n         */\n        this.objects = new Dictionary();\n        /**\n         * Holds `maximal generation number` or offset to object.\n         * @default 0\n         * @private\n         */\n        this.maxGenNumIndex = 0;\n        /**\n         * The `number of the objects`.\n         * @default 0\n         * @private\n         */\n        this.objectCount = 0;\n        /**\n         * Internal variable for accessing fields from `DictionryProperties` class.\n         * @default new PdfDictionaryProperties()\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n    }\n    Object.defineProperty(PdfCrossTable.prototype, \"isMerging\", {\n        //Properties\n        /**\n         * Gets or sets if the document `is merged`.\n         * @private\n         */\n        get: function () {\n            return this.merging;\n        },\n        set: function (value) {\n            this.merging = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCrossTable.prototype, \"trailer\", {\n        /**\n         * Gets the `trailer`.\n         * @private\n         */\n        get: function () {\n            if (this.internalTrailer == null) {\n                this.internalTrailer = new PdfStream();\n            }\n            return this.internalTrailer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCrossTable.prototype, \"document\", {\n        /**\n         * Gets or sets the main `PdfDocument` class instance.\n         * @private\n         */\n        get: function () {\n            return this.pdfDocument;\n        },\n        set: function (value) {\n            this.pdfDocument = value;\n            this.items = this.pdfDocument.pdfObjects;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCrossTable.prototype, \"pdfObjects\", {\n        /**\n         * Gets the catched `PDF object` main collection.\n         * @private\n         */\n        get: function () {\n            return this.items;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCrossTable.prototype, \"objectCollection\", {\n        /**\n         * Gets the `object collection`.\n         * @private\n         */\n        get: function () {\n            return this.pdfDocument.pdfObjects;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCrossTable.prototype, \"count\", {\n        /**\n         * Gets or sets the `number of the objects` within the document.\n         * @private\n         */\n        get: function () {\n            return this.objectCount;\n        },\n        set: function (value) {\n            this.objectCount = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCrossTable.prototype, \"nextObjNumber\", {\n        /**\n         * Returns `next available object number`.\n         * @private\n         */\n        get: function () {\n            this.count = this.count + 1;\n            return this.count;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfCrossTable.prototype.save = function (writer, filename) {\n        this.saveHead(writer);\n        var state = false;\n        this.mappedReferences = null;\n        this.objects.clear();\n        this.markTrailerReferences();\n        this.saveObjects(writer);\n        var saveCount = this.count;\n        var xrefPos = writer.position;\n        this.registerObject(0, new PdfReference(0, -1), true);\n        var prevXRef = 0;\n        writer.write(Operators.xref);\n        writer.write(Operators.newLine);\n        this.saveSections(writer);\n        this.saveTrailer(writer, this.count, prevXRef);\n        this.saveTheEndess(writer, xrefPos);\n        this.count = saveCount;\n        for (var i = 0; i < this.objectCollection.count; ++i) {\n            var oi = this.objectCollection.items(i);\n            oi.object.isSaving = false;\n        }\n        if (typeof filename === 'undefined') {\n            return writer.stream.buffer;\n        }\n        else {\n            writer.stream.save(filename);\n        }\n    };\n    /**\n     * `Saves the endess` of the file.\n     * @private\n     */\n    PdfCrossTable.prototype.saveTheEndess = function (writer, xrefPos) {\n        writer.write(Operators.newLine + Operators.startxref + Operators.newLine);\n        writer.write(xrefPos.toString() + Operators.newLine);\n        writer.write(Operators.eof + Operators.newLine);\n    };\n    /**\n     * `Saves the new trailer` dictionary.\n     * @private\n     */\n    PdfCrossTable.prototype.saveTrailer = function (writer, count, prevXRef) {\n        writer.write(Operators.trailer + Operators.newLine);\n        // Save the dictionary.\n        var trailer = this.trailer;\n        trailer.items.setValue(this.dictionaryProperties.size, new PdfNumber(this.objectCount + 1));\n        trailer = new PdfDictionary(trailer); // Make it real dictionary.\n        trailer.setEncrypt(false);\n        trailer.save(writer);\n    };\n    /**\n     * `Saves the xref section`.\n     * @private\n     */\n    PdfCrossTable.prototype.saveSections = function (writer) {\n        var objectNum = 0;\n        var count = 0;\n        do {\n            count = this.prepareSubsection(objectNum);\n            this.saveSubsection(writer, objectNum, count);\n            objectNum += count;\n        } while (count !== 0);\n    };\n    /**\n     * `Saves a subsection`.\n     * @private\n     */\n    PdfCrossTable.prototype.saveSubsection = function (writer, objectNum, count) {\n        if (count <= 0 || objectNum >= this.count) {\n            return;\n        }\n        var subsectionHead = '{0} {1}{2}';\n        writer.write(objectNum + ' ' + (count + 1) + Operators.newLine);\n        for (var i = objectNum; i <= objectNum + count; ++i) {\n            var obj = this.objects.getValue(i);\n            var str = '';\n            if (obj.type === ObjectType.Free) {\n                str = this.getItem(obj.offset, 65535, true);\n            }\n            else {\n                str = this.getItem(obj.offset, obj.generation, false);\n            }\n            writer.write(str);\n        }\n    };\n    /**\n     * Generates string for `xref table item`.\n     * @private\n     */\n    PdfCrossTable.prototype.getItem = function (offset, genNumber, isFree) {\n        var returnString = '';\n        var addOffsetLength = 10 - offset.toString().length;\n        if (genNumber <= 0) {\n            genNumber = 0;\n        }\n        var addGenNumberLength = (5 - genNumber.toString().length) <= 0 ? 0 : (5 - genNumber.toString().length);\n        for (var index = 0; index < addOffsetLength; index++) {\n            returnString = returnString + '0';\n        }\n        returnString = returnString + offset.toString() + ' ';\n        for (var index = 0; index < addGenNumberLength; index++) {\n            returnString = returnString + '0';\n        }\n        returnString = returnString + genNumber.toString() + ' ';\n        returnString = returnString + ((isFree) ? Operators.f : Operators.n) + Operators.newLine;\n        return returnString;\n    };\n    /**\n     * `Prepares a subsection` of the current section within the cross-reference table.\n     * @private\n     */\n    PdfCrossTable.prototype.prepareSubsection = function (objectNum) {\n        var count = 0;\n        var i;\n        var total = this.count;\n        for (var k = 0; k < this.document.pdfObjects.count; k++) {\n            var reference = this.document.pdfObjects.items(k).reference;\n            var refString = reference.toString();\n            var refArray = refString.split(' ');\n        }\n        if (objectNum >= total) {\n            return count;\n        }\n        // search for first changed indirect object.\n        for (i = objectNum; i < total; ++i) {\n            break;\n        }\n        objectNum = i;\n        // look up for all indirect objects in one subsection.\n        for (; i < total; ++i) {\n            ++count;\n        }\n        return count;\n    };\n    /**\n     * `Marks the trailer references` being saved.\n     * @private\n     */\n    PdfCrossTable.prototype.markTrailerReferences = function () {\n        var tempArray;\n        var keys = this.trailer.items.keys();\n        var values = this.trailer.items.values();\n    };\n    /**\n     * `Saves the head`.\n     * @private\n     */\n    PdfCrossTable.prototype.saveHead = function (writer) {\n        var version = this.generateFileVersion(writer.document);\n        writer.write('%PDF-' + version);\n        writer.write(Operators.newLine);\n    };\n    /**\n     * Generates the `version` of the file.\n     * @private\n     */\n    PdfCrossTable.prototype.generateFileVersion = function (document) {\n        var iVersion = 4;\n        var version = '1.' + iVersion.toString();\n        return version;\n    };\n    PdfCrossTable.prototype.getReference = function (obj, bNew) {\n        if (typeof bNew === 'undefined') {\n            var wasNew = false;\n            return this.getReference(obj, wasNew);\n        }\n        else {\n            //code splitted for reducing lines of code exceeds 100.\n            return this.getSubReference(obj, bNew);\n        }\n    };\n    /**\n     * Retrieves the `reference` of the object given.\n     * @private\n     */\n    PdfCrossTable.prototype.getSubReference = function (obj, bNew) {\n        var isNew = false;\n        var wasNew;\n        var reference = null;\n        // if (obj.IsSaving) {\n        if (this.items.count > 0 && obj.objectCollectionIndex > 0 && this.items.count > obj.objectCollectionIndex - 1) {\n            var tempObj = this.document.pdfObjects.getReference(obj, wasNew);\n            reference = tempObj.reference;\n            wasNew = tempObj.wasNew;\n        }\n        if (reference == null) {\n            if (obj.status === ObjectStatus.Registered) {\n                wasNew = false;\n            }\n            else {\n                wasNew = true;\n            }\n        }\n        else {\n            wasNew = false;\n        }\n        // need to add mapped reference code\n        if (reference == null) {\n            var objnumber = this.nextObjNumber;\n            reference = new PdfReference(objnumber, 0);\n            var found = void 0;\n            if (wasNew) {\n                this.document.pdfObjects.add(obj);\n                this.document.pdfObjects.trySetReference(obj, reference, found);\n                var tempIndex = this.document.pdfObjects.count - 1;\n                var tempkey = this.document.pdfObjects.objectCollections[tempIndex].reference.objNumber;\n                var tempvalue = this.document.pdfObjects.objectCollections[this.document.pdfObjects.count - 1];\n                this.document.pdfObjects.mainObjectCollection.setValue(tempkey, tempvalue);\n                obj.position = -1;\n            }\n            else {\n                this.document.pdfObjects.trySetReference(obj, reference, found);\n            }\n            obj.objectCollectionIndex = reference.objNumber;\n            obj.status = ObjectStatus.None;\n            isNew = true;\n        }\n        bNew = isNew || this.bForceNew;\n        return reference;\n    };\n    /**\n     * `Saves all objects` in the collection.\n     * @private\n     */\n    PdfCrossTable.prototype.saveObjects = function (writer) {\n        var objectCollection = this.objectCollection;\n        for (var i = 0; i < objectCollection.count; ++i) {\n            var oi = objectCollection.items(i);\n            var obj = oi.object;\n            obj.isSaving = true;\n            this.saveIndirectObject(obj, writer);\n        }\n    };\n    /**\n     * `Saves indirect object`.\n     * @private\n     */\n    PdfCrossTable.prototype.saveIndirectObject = function (obj, writer) {\n        var reference = this.getReference(obj);\n        if (obj instanceof PdfCatalog) {\n            this.trailer.items.setValue(this.dictionaryProperties.root, reference);\n        }\n        // NOTE :  This is needed for correct string objects encryption.\n        this.pdfDocument.currentSavingObj = reference;\n        var tempArchive = false;\n        tempArchive = obj.getArchive();\n        var allowedType = !((obj instanceof PdfStream) || !tempArchive || (obj instanceof PdfCatalog));\n        var sigFlag = false;\n        this.registerObject(writer.position, reference);\n        this.doSaveObject(obj, reference, writer);\n    };\n    /**\n     * Performs `real saving` of the save object.\n     * @private\n     */\n    PdfCrossTable.prototype.doSaveObject = function (obj, reference, writer) {\n        var correctPosition = writer.length;\n        writer.write(reference.objNumber.toString());\n        writer.write(Operators.whiteSpace);\n        writer.write(reference.genNumber.toString());\n        writer.write(Operators.whiteSpace);\n        writer.write(Operators.obj);\n        writer.write(Operators.newLine);\n        obj.save(writer);\n        var stream = writer.stream;\n        writer.write(Operators.endObj);\n        writer.write(Operators.newLine);\n    };\n    PdfCrossTable.prototype.registerObject = function (offset, reference, free) {\n        if (typeof free === 'boolean') {\n            // Register the object by its number.\n            this.objects.setValue(reference.objNumber, new RegisteredObject(offset, reference, free));\n            this.maxGenNumIndex = Math.max(this.maxGenNumIndex, reference.genNumber);\n        }\n        else if (typeof free === 'undefined') {\n            // Register the object by its number.\n            this.objects.setValue(reference.objNumber, new RegisteredObject(offset, reference));\n            this.maxGenNumIndex = Math.max(this.maxGenNumIndex, reference.genNumber);\n        }\n    };\n    /**\n     * `Dereferences` the specified primitive object.\n     * @private\n     */\n    PdfCrossTable.dereference = function (obj) {\n        var rh = obj;\n        if (rh != null) {\n            obj = rh.object;\n        }\n        return obj;\n    };\n    return PdfCrossTable;\n}());\nexport { PdfCrossTable };\nvar RegisteredObject = /** @class */ (function () {\n    function RegisteredObject(offset, reference, free) {\n        if (typeof free === 'undefined') {\n            var tempOffset = offset;\n            this.offsetNumber = tempOffset;\n            var tempReference = reference;\n            this.generation = tempReference.genNumber;\n            this.object = tempReference.objNumber;\n            this.type = ObjectType.Normal;\n        }\n        else {\n            var tempOffset = offset;\n            var tempReference = reference;\n            this.constructor(tempOffset, tempReference);\n            var tempFree = free;\n            this.type = ObjectType.Free;\n        }\n    }\n    Object.defineProperty(RegisteredObject.prototype, \"objectNumber\", {\n        //Properties\n        /**\n         * Gets the `object number`.\n         * @private\n         */\n        get: function () {\n            return this.object;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RegisteredObject.prototype, \"offset\", {\n        /**\n         * Gets the `offset`.\n         * @private\n         */\n        get: function () {\n            var result;\n            result = this.offsetNumber;\n            return result;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return RegisteredObject;\n}());\nexport { RegisteredObject };\n","/**\n * PdfPageSize.ts class for EJ2-PDF\n */\nimport { SizeF } from './../drawing/pdf-drawing';\n/**\n * Represents information about various predefined `page sizes`.\n */\nvar PdfPageSize = /** @class */ (function () {\n    //constructor\n    /**\n     * Initialize an instance for `PdfPageSize` class.\n     * @private\n     */\n    function PdfPageSize() {\n        // \n    }\n    /**\n     * Specifies the size of `letter`.\n     * @private\n     */\n    PdfPageSize.letter = new SizeF(612, 792);\n    /**\n     * Specifies the size of `note`.\n     * @private\n     */\n    PdfPageSize.note = new SizeF(540, 720);\n    /**\n     * Specifies the size of `legal`.\n     * @private\n     */\n    PdfPageSize.legal = new SizeF(612, 1008);\n    /**\n     * Specifies the size of `a0`.\n     * @private\n     */\n    PdfPageSize.a0 = new SizeF(2380, 3368);\n    /**\n     * Specifies the size of `a1`.\n     * @private\n     */\n    PdfPageSize.a1 = new SizeF(1684, 2380);\n    /**\n     * Specifies the size of `a2`.\n     * @private\n     */\n    PdfPageSize.a2 = new SizeF(1190, 1684);\n    /**\n     * Specifies the size of `a3`.\n     * @private\n     */\n    PdfPageSize.a3 = new SizeF(842, 1190);\n    /**\n     * Specifies the size of `a4`.\n     * @private\n     */\n    PdfPageSize.a4 = new SizeF(595, 842);\n    /**\n     * Specifies the size of `a5`.\n     * @private\n     */\n    PdfPageSize.a5 = new SizeF(421, 595);\n    /**\n     * Specifies the size of `a6`.\n     * @private\n     */\n    PdfPageSize.a6 = new SizeF(297, 421);\n    /**\n     * Specifies the size of `a7`.\n     * @private\n     */\n    PdfPageSize.a7 = new SizeF(210, 297);\n    /**\n     * Specifies the size of `a8`.\n     * @private\n     */\n    PdfPageSize.a8 = new SizeF(148, 210);\n    /**\n     * Specifies the size of `a9`.\n     * @private\n     */\n    PdfPageSize.a9 = new SizeF(105, 148);\n    /**\n     * Specifies the size of `a10`.\n     * @private\n     */\n    PdfPageSize.a10 = new SizeF(74, 105);\n    /**\n     * Specifies the size of `b0`.\n     * @private\n     */\n    PdfPageSize.b0 = new SizeF(2836, 4008);\n    /**\n     * Specifies the size of `b1`.\n     * @private\n     */\n    PdfPageSize.b1 = new SizeF(2004, 2836);\n    /**\n     * Specifies the size of `b2`.\n     * @private\n     */\n    PdfPageSize.b2 = new SizeF(1418, 2004);\n    /**\n     * Specifies the size of `b3`.\n     * @private\n     */\n    PdfPageSize.b3 = new SizeF(1002, 1418);\n    /**\n     * Specifies the size of `b4`.\n     * @private\n     */\n    PdfPageSize.b4 = new SizeF(709, 1002);\n    /**\n     * Specifies the size of `b5`.\n     * @private\n     */\n    PdfPageSize.b5 = new SizeF(501, 709);\n    /**\n     * Specifies the size of `archE`.\n     * @private\n     */\n    PdfPageSize.archE = new SizeF(2592, 3456);\n    /**\n     * Specifies the size of `archD`.\n     * @private\n     */\n    PdfPageSize.archD = new SizeF(1728, 2592);\n    /**\n     * Specifies the size of `archC`.\n     * @private\n     */\n    PdfPageSize.archC = new SizeF(1296, 1728);\n    /**\n     * Specifies the size of `archB`.\n     * @private\n     */\n    PdfPageSize.archB = new SizeF(864, 1296);\n    /**\n     * Specifies the size of `archA`.\n     * @private\n     */\n    PdfPageSize.archA = new SizeF(648, 864);\n    /**\n     * Specifies the size of `flsa`.\n     * @private\n     */\n    PdfPageSize.flsa = new SizeF(612, 936);\n    /**\n     * Specifies the size of `halfLetter`.\n     * @private\n     */\n    PdfPageSize.halfLetter = new SizeF(396, 612);\n    /**\n     * Specifies the size of `letter11x17`.\n     * @private\n     */\n    PdfPageSize.letter11x17 = new SizeF(792, 1224);\n    /**\n     * Specifies the size of `ledger`.\n     * @private\n     */\n    PdfPageSize.ledger = new SizeF(1224, 792);\n    return PdfPageSize;\n}());\nexport { PdfPageSize };\n","/**\n * public Enum for `PdfPageOrientation`.\n * @private\n */\nexport var PdfPageOrientation;\n(function (PdfPageOrientation) {\n    /**\n     * Specifies the type of `Portrait`.\n     * @private\n     */\n    PdfPageOrientation[PdfPageOrientation[\"Portrait\"] = 0] = \"Portrait\";\n    /**\n     * Specifies the type of `Landscape`.\n     * @private\n     */\n    PdfPageOrientation[PdfPageOrientation[\"Landscape\"] = 1] = \"Landscape\";\n})(PdfPageOrientation || (PdfPageOrientation = {}));\n/**\n * public Enum for `PdfPageRotateAngle`.\n * @private\n */\nexport var PdfPageRotateAngle;\n(function (PdfPageRotateAngle) {\n    /**\n     * Specifies the type of `RotateAngle0`.\n     * @private\n     */\n    PdfPageRotateAngle[PdfPageRotateAngle[\"RotateAngle0\"] = 0] = \"RotateAngle0\";\n    /**\n     * Specifies the type of `RotateAngle90`.\n     * @private\n     */\n    PdfPageRotateAngle[PdfPageRotateAngle[\"RotateAngle90\"] = 1] = \"RotateAngle90\";\n    /**\n     * Specifies the type of `RotateAngle180`.\n     * @private\n     */\n    PdfPageRotateAngle[PdfPageRotateAngle[\"RotateAngle180\"] = 2] = \"RotateAngle180\";\n    /**\n     * Specifies the type of `RotateAngle270`.\n     * @private\n     */\n    PdfPageRotateAngle[PdfPageRotateAngle[\"RotateAngle270\"] = 3] = \"RotateAngle270\";\n})(PdfPageRotateAngle || (PdfPageRotateAngle = {}));\n/**\n * public Enum for `PdfNumberStyle`.\n * @private\n */\nexport var PdfNumberStyle;\n(function (PdfNumberStyle) {\n    /**\n     * Specifies the type of `None`.\n     * @private\n     */\n    PdfNumberStyle[PdfNumberStyle[\"None\"] = 0] = \"None\";\n    /**\n     * Specifies the type of `Numeric`.\n     * @private\n     */\n    PdfNumberStyle[PdfNumberStyle[\"Numeric\"] = 1] = \"Numeric\";\n    /**\n     * Specifies the type of `LowerLatin`.\n     * @private\n     */\n    PdfNumberStyle[PdfNumberStyle[\"LowerLatin\"] = 2] = \"LowerLatin\";\n    /**\n     * Specifies the type of `LowerRoman`.\n     * @private\n     */\n    PdfNumberStyle[PdfNumberStyle[\"LowerRoman\"] = 3] = \"LowerRoman\";\n    /**\n     * Specifies the type of `UpperLatin`.\n     * @private\n     */\n    PdfNumberStyle[PdfNumberStyle[\"UpperLatin\"] = 4] = \"UpperLatin\";\n    /**\n     * Specifies the type of `UpperRoman`.\n     * @private\n     */\n    PdfNumberStyle[PdfNumberStyle[\"UpperRoman\"] = 5] = \"UpperRoman\";\n})(PdfNumberStyle || (PdfNumberStyle = {}));\n/**\n * public Enum for `PdfDockStyle`.\n * @private\n */\nexport var PdfDockStyle;\n(function (PdfDockStyle) {\n    /**\n     * Specifies the type of `None`.\n     * @private\n     */\n    PdfDockStyle[PdfDockStyle[\"None\"] = 0] = \"None\";\n    /**\n     * Specifies the type of `Bottom`.\n     * @private\n     */\n    PdfDockStyle[PdfDockStyle[\"Bottom\"] = 1] = \"Bottom\";\n    /**\n     * Specifies the type of `Top`.\n     * @private\n     */\n    PdfDockStyle[PdfDockStyle[\"Top\"] = 2] = \"Top\";\n    /**\n     * Specifies the type of `Left`.\n     * @private\n     */\n    PdfDockStyle[PdfDockStyle[\"Left\"] = 3] = \"Left\";\n    /**\n     * Specifies the type of `Right`.\n     * @private\n     */\n    PdfDockStyle[PdfDockStyle[\"Right\"] = 4] = \"Right\";\n    /**\n     * Specifies the type of `Fill`.\n     * @private\n     */\n    PdfDockStyle[PdfDockStyle[\"Fill\"] = 5] = \"Fill\";\n})(PdfDockStyle || (PdfDockStyle = {}));\n/**\n * public Enum for `PdfAlignmentStyle`.\n * @private\n */\nexport var PdfAlignmentStyle;\n(function (PdfAlignmentStyle) {\n    /**\n     * Specifies the type of `None`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"None\"] = 0] = \"None\";\n    /**\n     * Specifies the type of `TopLeft`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"TopLeft\"] = 1] = \"TopLeft\";\n    /**\n     * Specifies the type of `TopCenter`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"TopCenter\"] = 2] = \"TopCenter\";\n    /**\n     * Specifies the type of `TopRight`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"TopRight\"] = 3] = \"TopRight\";\n    /**\n     * Specifies the type of `MiddleLeft`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"MiddleLeft\"] = 4] = \"MiddleLeft\";\n    /**\n     * Specifies the type of `MiddleCenter`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"MiddleCenter\"] = 5] = \"MiddleCenter\";\n    /**\n     * Specifies the type of `MiddleRight`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"MiddleRight\"] = 6] = \"MiddleRight\";\n    /**\n     * Specifies the type of `BottomLeft`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"BottomLeft\"] = 7] = \"BottomLeft\";\n    /**\n     * Specifies the type of `BottomCenter`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"BottomCenter\"] = 8] = \"BottomCenter\";\n    /**\n     * Specifies the type of `BottomRight`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"BottomRight\"] = 9] = \"BottomRight\";\n})(PdfAlignmentStyle || (PdfAlignmentStyle = {}));\n/**\n * public Enum for `TemplateType`.\n * @private\n */\nexport var TemplateType;\n(function (TemplateType) {\n    /**\n     * Specifies the type of `None`.\n     * @private\n     */\n    TemplateType[TemplateType[\"None\"] = 0] = \"None\";\n    /**\n     * Specifies the type of `Top`.\n     * @private\n     */\n    TemplateType[TemplateType[\"Top\"] = 1] = \"Top\";\n    /**\n     * Specifies the type of `Bottom`.\n     * @private\n     */\n    TemplateType[TemplateType[\"Bottom\"] = 2] = \"Bottom\";\n    /**\n     * Specifies the type of `Left`.\n     * @private\n     */\n    TemplateType[TemplateType[\"Left\"] = 3] = \"Left\";\n    /**\n     * Specifies the type of `Right`.\n     * @private\n     */\n    TemplateType[TemplateType[\"Right\"] = 4] = \"Right\";\n})(TemplateType || (TemplateType = {}));\n","/**\n * PdfMargins.ts class for EJ2-PDF\n * A class representing PDF page margins.\n */\nvar PdfMargins = /** @class */ (function () {\n    /**\n     * Initializes a new instance of the `PdfMargins` class.\n     * @private\n     */\n    function PdfMargins() {\n        /**\n         * Represents the `Default Page Margin` value.\n         * @default 0.0\n         * @private\n         */\n        this.pdfMargin = 40.0;\n        this.setMargins(this.pdfMargin);\n    }\n    Object.defineProperty(PdfMargins.prototype, \"left\", {\n        //Properties\n        /**\n         * Gets or sets the `left margin` size.\n         * @private\n         */\n        get: function () {\n            return this.leftMargin;\n        },\n        set: function (value) {\n            this.leftMargin = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfMargins.prototype, \"top\", {\n        /**\n         * Gets or sets the `top margin` size.\n         * @private\n         */\n        get: function () {\n            return this.topMargin;\n        },\n        set: function (value) {\n            this.topMargin = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfMargins.prototype, \"right\", {\n        /**\n         * Gets or sets the `right margin` size.\n         * @private\n         */\n        get: function () {\n            return this.rightMargin;\n        },\n        set: function (value) {\n            this.rightMargin = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfMargins.prototype, \"bottom\", {\n        /**\n         * Gets or sets the `bottom margin` size.\n         * @private\n         */\n        get: function () {\n            return this.bottomMargin;\n        },\n        set: function (value) {\n            this.bottomMargin = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfMargins.prototype, \"all\", {\n        /**\n         * Sets the `margins`.\n         * @private\n         */\n        set: function (value) {\n            this.setMargins(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfMargins.prototype.setMargins = function (margin1, margin2, margin3, margin4) {\n        if (typeof margin2 === 'undefined') {\n            this.leftMargin = this.topMargin = this.rightMargin = this.bottomMargin = margin1;\n        }\n        else {\n            if (typeof margin3 === 'undefined') {\n                this.leftMargin = this.rightMargin = margin1;\n                this.bottomMargin = this.topMargin = margin2;\n            }\n            else {\n                this.leftMargin = margin1;\n                this.topMargin = margin2;\n                this.rightMargin = margin3;\n                this.bottomMargin = margin4;\n            }\n        }\n    };\n    /**\n     * `Clones` the object.\n     * @private\n     */\n    PdfMargins.prototype.clone = function () {\n        return this;\n    };\n    return PdfMargins;\n}());\nexport { PdfMargins };\n","/**\n * PdfPageSettings.ts class for EJ2-PDF\n */\nimport { SizeF, PointF } from './../drawing/pdf-drawing';\nimport { PdfPageSize } from './pdf-page-size';\nimport { PdfPageRotateAngle, PdfPageOrientation } from './enum';\nimport { PdfMargins } from './../graphics/pdf-margins';\n/**\n * The class provides various `setting` related with PDF pages.\n */\nvar PdfPageSettings = /** @class */ (function () {\n    function PdfPageSettings(margins) {\n        //Fields\n        /**\n         * The page `margins`.\n         * @private\n         */\n        this.pageMargins = new PdfMargins();\n        /**\n         * The page `size`.\n         * @default a4\n         * @private\n         */\n        this.pageSize = PdfPageSize.a4;\n        /**\n         * The page `rotation angle`.\n         * @default PdfPageRotateAngle.RotateAngle0\n         * @private\n         */\n        this.rotateAngle = PdfPageRotateAngle.RotateAngle0;\n        /**\n         * The page `orientation`.\n         * @default PdfPageOrientation.Portrait\n         * @private\n         */\n        this.pageOrientation = PdfPageOrientation.Portrait;\n        /**\n         * The page `origin`.\n         * @default 0,0\n         * @private\n         */\n        this.pageOrigin = new PointF(0, 0);\n        /**\n         * Checks the Whether the `rotation` is applied or not.\n         * @default false\n         * @private\n         */\n        this.isRotation = false;\n        if (typeof margins === 'number') {\n            this.pageMargins.setMargins(margins);\n        }\n    }\n    Object.defineProperty(PdfPageSettings.prototype, \"size\", {\n        //Properties\n        /**\n         * Gets or sets the `size` of the page.\n         * @private\n         */\n        get: function () {\n            return this.pageSize;\n        },\n        set: function (value) {\n            this.setSize(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageSettings.prototype, \"orientation\", {\n        /**\n         * Gets or sets the page `orientation`.\n         * @private\n         */\n        get: function () {\n            return this.pageOrientation;\n        },\n        set: function (orientation) {\n            if (this.pageOrientation !== orientation) {\n                this.pageOrientation = orientation;\n                this.updateSize(orientation);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageSettings.prototype, \"margins\", {\n        /**\n         * Gets or sets the `margins` of the page.\n         * @private\n         */\n        get: function () {\n            return this.pageMargins;\n        },\n        set: function (value) {\n            this.pageMargins = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageSettings.prototype, \"width\", {\n        /**\n         * Gets or sets the `width` of the page.\n         * @private\n         */\n        get: function () {\n            return this.pageSize.width;\n        },\n        set: function (value) {\n            this.pageSize.width = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageSettings.prototype, \"height\", {\n        /**\n         * Gets or sets the `height` of the page.\n         * @private\n         */\n        get: function () {\n            return this.pageSize.height;\n        },\n        set: function (value) {\n            this.pageSize.height = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageSettings.prototype, \"origin\", {\n        /**\n         * Gets or sets the `origin` of the page.\n         * @private\n         */\n        get: function () {\n            return this.pageOrigin;\n        },\n        set: function (value) {\n            this.pageOrigin = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageSettings.prototype, \"rotate\", {\n        /**\n         * Gets or sets the number of degrees by which the page should be `rotated` clockwise when displayed or printed.\n         * @private\n         */\n        get: function () {\n            return this.rotateAngle;\n        },\n        set: function (value) {\n            this.rotateAngle = value;\n            this.isRotation = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Methods\n    /**\n     * `Update page size` depending on orientation.\n     * @private\n     */\n    PdfPageSettings.prototype.updateSize = function (orientation) {\n        var min = Math.min(this.pageSize.width, this.pageSize.height);\n        var max = Math.max(this.pageSize.width, this.pageSize.height);\n        switch (orientation) {\n            case PdfPageOrientation.Portrait:\n                this.pageSize = new SizeF(min, max);\n                break;\n            case PdfPageOrientation.Landscape:\n                this.pageSize = new SizeF(max, min);\n                break;\n        }\n    };\n    /**\n     * Creates a `clone` of the object.\n     * @private\n     */\n    PdfPageSettings.prototype.clone = function () {\n        var settings = this;\n        settings.pageMargins = this.pageMargins.clone();\n        // if (GetTransition() != null)\n        // {\n        //     settings.Transition = (PdfPageTransition)Transition.clone();\n        // }\n        return settings;\n    };\n    /**\n     * Returns `size`, shrinked by the margins.\n     * @private\n     */\n    PdfPageSettings.prototype.getActualSize = function () {\n        var width = this.width - (this.margins.left + this.margins.right);\n        var height = this.height - (this.margins.top + this.margins.bottom);\n        var size = new SizeF(width, height);\n        return size;\n    };\n    /**\n     * Sets `size` to the page aaccording to the orientation.\n     * @private\n     */\n    PdfPageSettings.prototype.setSize = function (size) {\n        var min = Math.min(size.width, size.height);\n        var max = Math.max(size.width, size.height);\n        if (this.orientation === PdfPageOrientation.Portrait) {\n            this.pageSize = new SizeF(min, max);\n        }\n        else {\n            this.pageSize = new SizeF(max, min);\n        }\n    };\n    return PdfPageSettings;\n}());\nexport { PdfPageSettings };\n","import { Operators } from './pdf-operators';\nimport { PdfNumber } from './../primitives/pdf-number';\nimport { PointF, RectangleF } from './../drawing/pdf-drawing';\nimport { PdfString } from './../primitives/pdf-string';\nimport { PdfName } from './../primitives/pdf-name';\n/**\n * Helper class to `write PDF graphic streams` easily.\n * @private\n */\nvar PdfStreamWriter = /** @class */ (function () {\n    /**\n     * Initialize an instance of `PdfStreamWriter` class.\n     * @private\n     */\n    function PdfStreamWriter(stream) {\n        if (stream == null) {\n            throw new Error('ArgumentNullException:stream');\n        }\n        this.stream = stream;\n    }\n    //Implementation\n    /**\n     * `Clear` the stream.\n     * @public\n     */\n    PdfStreamWriter.prototype.clear = function () {\n        this.stream.clearStream();\n    };\n    PdfStreamWriter.prototype.setGraphicsState = function (dictionaryName) {\n        if (dictionaryName instanceof PdfName) {\n            this.stream.write(dictionaryName.toString());\n            this.stream.write(Operators.whiteSpace);\n            this.writeOperator(Operators.setGraphicsState);\n        }\n        else {\n            this.stream.write(Operators.slash);\n            this.stream.write(dictionaryName);\n            this.stream.write(Operators.whiteSpace);\n            this.writeOperator(Operators.setGraphicsState);\n        }\n    };\n    /**\n     * `Executes the XObject`.\n     * @private\n     */\n    PdfStreamWriter.prototype.executeObject = function (name) {\n        this.stream.write(name.toString());\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.paintXObject);\n        this.stream.write(Operators.newLine);\n    };\n    /**\n     * `Closes path object`.\n     * @private\n     */\n    PdfStreamWriter.prototype.closePath = function () {\n        this.writeOperator(Operators.closePath);\n    };\n    /**\n     * `Clips the path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.clipPath = function (useEvenOddRule) {\n        this.stream.write(Operators.clipPath);\n        if (useEvenOddRule) {\n            this.stream.write(Operators.evenOdd);\n        }\n        this.stream.write(Operators.whiteSpace);\n        this.stream.write(Operators.endPath);\n        this.stream.write(Operators.newLine);\n    };\n    /**\n     * `Closes, then fills and strokes the path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.closeFillStrokePath = function (useEvenOddRule) {\n        this.stream.write(Operators.closeFillStrokePath);\n        if (useEvenOddRule) {\n            this.stream.write(Operators.evenOdd);\n            this.stream.write(Operators.newLine);\n        }\n        else {\n            this.stream.write(Operators.newLine);\n        }\n    };\n    /**\n     * `Fills and strokes path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.fillStrokePath = function (useEvenOddRule) {\n        this.stream.write(Operators.fillStroke);\n        if (useEvenOddRule) {\n            this.stream.write(Operators.evenOdd);\n            this.stream.write(Operators.newLine);\n        }\n        else {\n            this.stream.write(Operators.newLine);\n        }\n    };\n    /**\n     * `Fills path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.fillPath = function (useEvenOddRule) {\n        this.stream.write(Operators.fill);\n        if (useEvenOddRule) {\n            this.stream.write(Operators.evenOdd);\n            this.stream.write(Operators.newLine);\n        }\n        else {\n            this.stream.write(Operators.newLine);\n        }\n    };\n    /**\n     * `Ends the path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.endPath = function () {\n        this.writeOperator(Operators.n);\n    };\n    /**\n     * `Closes and fills the path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.closeFillPath = function (useEvenOddRule) {\n        this.writeOperator(Operators.closePath);\n        this.stream.write(Operators.fill);\n        if (useEvenOddRule) {\n            this.stream.write(Operators.evenOdd);\n            this.stream.write(Operators.newLine);\n        }\n        else {\n            this.stream.write(Operators.newLine);\n        }\n    };\n    /**\n     * `Closes and strokes the path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.closeStrokePath = function () {\n        this.writeOperator(Operators.closeStrokePath);\n    };\n    /**\n     * `Sets the text scaling`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setTextScaling = function (textScaling) {\n        this.stream.write(PdfNumber.floatToString(textScaling));\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.setTextScaling);\n    };\n    /**\n     * `Strokes path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.strokePath = function () {\n        this.writeOperator(Operators.stroke);\n    };\n    /**\n     * `Restores` the graphics state.\n     * @private\n     */\n    PdfStreamWriter.prototype.restoreGraphicsState = function () {\n        this.writeOperator(Operators.restoreState);\n    };\n    /**\n     * `Saves` the graphics state.\n     * @private\n     */\n    PdfStreamWriter.prototype.saveGraphicsState = function () {\n        this.writeOperator(Operators.saveState);\n    };\n    PdfStreamWriter.prototype.startNextLine = function (arg1, arg2) {\n        if (typeof arg1 === 'undefined') {\n            this.writeOperator(Operators.goToNextLine);\n        }\n        else if (arg1 instanceof PointF) {\n            this.writePoint(arg1);\n            this.writeOperator(Operators.setCoords);\n        }\n        else {\n            this.writePoint(arg1, arg2);\n            this.writeOperator(Operators.setCoords);\n        }\n    };\n    /**\n     * Sets `text leading`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setLeading = function (leading) {\n        this.stream.write(PdfNumber.floatToString(leading));\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.setTextLeading);\n    };\n    /**\n     * `Begins the path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.beginPath = function (x, y) {\n        this.writePoint(x, y);\n        this.writeOperator(Operators.beginPath);\n    };\n    /**\n     * `Begins text`.\n     * @private\n     */\n    PdfStreamWriter.prototype.beginText = function () {\n        this.writeOperator(Operators.beginText);\n    };\n    /**\n     * `Ends text`.\n     * @private\n     */\n    PdfStreamWriter.prototype.endText = function () {\n        this.writeOperator(Operators.endText);\n    };\n    PdfStreamWriter.prototype.appendRectangle = function (arg1, arg2, arg3, arg4) {\n        if (arg1 instanceof RectangleF) {\n            this.appendRectangle(arg1.x, arg1.y, arg1.width, arg1.height);\n        }\n        else {\n            this.writePoint(arg1, arg2);\n            this.writePoint(arg3, arg4);\n            this.writeOperator(Operators.appendRectangle);\n        }\n    };\n    PdfStreamWriter.prototype.appendLineSegment = function (arg1, arg2) {\n        if (arg1 instanceof PointF) {\n            this.appendLineSegment(arg1.x, arg1.y);\n        }\n        else {\n            this.writePoint(arg1, arg2);\n            this.writeOperator(Operators.appendLineSegment);\n        }\n    };\n    /**\n     * Sets the `text rendering mode`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setTextRenderingMode = function (renderingMode) {\n        this.stream.write(renderingMode.toString());\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.setRenderingMode);\n    };\n    /**\n     * Sets the `character spacing`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setCharacterSpacing = function (charSpacing) {\n        this.stream.write(PdfNumber.floatToString(charSpacing));\n        this.stream.write(Operators.whiteSpace);\n        this.stream.write(Operators.setCharacterSpace);\n        this.stream.write(Operators.newLine);\n    };\n    /**\n     * Sets the `word spacing`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setWordSpacing = function (wordSpacing) {\n        this.stream.write(PdfNumber.floatToString(wordSpacing));\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.setWordSpace);\n    };\n    PdfStreamWriter.prototype.showNextLineText = function (arg1, arg2) {\n        if (arg1 instanceof PdfString) {\n            this.checkTextParam(arg1);\n            this.writeText(arg1);\n            this.writeOperator(Operators.setTextOnNewLine);\n        }\n        else {\n            this.checkTextParam(arg1);\n            this.writeText(arg1, arg2);\n            this.writeOperator(Operators.setTextOnNewLine);\n        }\n    };\n    PdfStreamWriter.prototype.setColorSpace = function (arg1, arg2) {\n        if (arg1 instanceof PdfName && typeof arg2 === 'boolean') {\n            var temparg1 = arg1;\n            var temparg2 = arg2;\n            // if (temparg1 == null) {\n            //     throw new Error('ArgumentNullException:name');\n            // }\n            var op = (temparg2) ? Operators.selectcolorspaceforstroking : Operators.selectcolorspacefornonstroking;\n            this.stream.write(temparg1.toString());\n            this.stream.write(Operators.whiteSpace);\n            this.stream.write(op);\n            this.stream.write(Operators.newLine);\n        }\n        else {\n            var temparg1 = arg1;\n            var temparg2 = arg2;\n            this.setColorSpace(new PdfName(temparg1), temparg2);\n        }\n    };\n    /**\n     * Modifies current `transformation matrix`.\n     * @private\n     */\n    PdfStreamWriter.prototype.modifyCtm = function (matrix) {\n        if (matrix == null) {\n            throw new Error('ArgumentNullException:matrix');\n        }\n        this.stream.write(matrix.toString());\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.modifyCtm);\n    };\n    PdfStreamWriter.prototype.setFont = function (font, name, size) {\n        if (typeof name === 'string') {\n            this.setFont(font, new PdfName(name), size);\n        }\n        else {\n            if (font == null) {\n                throw new Error('ArgumentNullException:font');\n            }\n            this.stream.write(name.toString());\n            this.stream.write(Operators.whiteSpace);\n            this.stream.write(PdfNumber.floatToString(size));\n            this.stream.write(Operators.whiteSpace);\n            this.writeOperator(Operators.setFont);\n        }\n    };\n    /**\n     * `Writes the operator`.\n     * @private\n     */\n    PdfStreamWriter.prototype.writeOperator = function (opcode) {\n        this.stream.write(opcode);\n        this.stream.write(Operators.newLine);\n    };\n    PdfStreamWriter.prototype.checkTextParam = function (text) {\n        if (text == null) {\n            throw new Error('ArgumentNullException:text');\n        }\n        if (typeof text === 'string' && text === '') {\n            throw new Error('ArgumentException:The text can not be an empty string, text');\n        }\n    };\n    PdfStreamWriter.prototype.writeText = function (arg1, arg2) {\n        if ((arg1 instanceof PdfString) && (typeof arg2 === 'undefined')) {\n            this.stream.write(arg1.value);\n        }\n        else {\n            var start = void 0;\n            var end = void 0;\n            if (arg2) {\n                start = PdfString.hexStringMark[0];\n                end = PdfString.hexStringMark[1];\n            }\n            else {\n                start = PdfString.stringMark[0];\n                end = PdfString.stringMark[1];\n            }\n            this.stream.write(start);\n            this.stream.write(arg1);\n            this.stream.write(end);\n        }\n    };\n    PdfStreamWriter.prototype.writePoint = function (arg1, arg2) {\n        if ((arg1 instanceof PointF) && (typeof arg2 === 'undefined')) {\n            this.writePoint(arg1.x, arg1.y);\n        }\n        else {\n            var temparg1 = arg1;\n            this.stream.write(PdfNumber.floatToString(temparg1));\n            this.stream.write(Operators.whiteSpace);\n            // NOTE: Change Y co-ordinate because we shifted co-ordinate system only.\n            arg2 = this.updateY(arg2);\n            this.stream.write(PdfNumber.floatToString(arg2));\n            this.stream.write(Operators.whiteSpace);\n        }\n    };\n    /**\n     * `Updates y` co-ordinate.\n     * @private\n     */\n    PdfStreamWriter.prototype.updateY = function (arg) {\n        return -arg;\n    };\n    /**\n     * `Writes string` to the file.\n     * @private\n     */\n    PdfStreamWriter.prototype.write = function (string) {\n        var builder = '';\n        builder += string;\n        builder += Operators.newLine;\n        this.writeOperator(builder);\n    };\n    /**\n     * `Writes comment` to the file.\n     * @private\n     */\n    PdfStreamWriter.prototype.writeComment = function (comment) {\n        if (comment != null && comment.length > 0) {\n            var builder = '';\n            builder += Operators.comment;\n            builder += Operators.whiteSpace;\n            builder += comment;\n            //builder.Append( Operators.NewLine );\n            this.writeOperator(builder);\n        }\n        else {\n            throw new Error('Invalid comment');\n        }\n    };\n    /**\n     * Sets the `color and space`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setColorAndSpace = function (color, colorSpace, forStroking) {\n        if (!color.isEmpty) {\n            // bool test = color is PdfExtendedColor;\n            this.stream.write(color.toString(colorSpace, forStroking));\n            this.stream.write(Operators.newLine);\n        }\n    };\n    // public setLineDashPattern(pattern : number[], patternOffset : number) : void\n    // {\n    //     let pat : PdfArray = new PdfArray(pattern);\n    //     let off : PdfNumber = new PdfNumber(patternOffset);\n    //     this.setLineDashPatternHelper(pat, off);\n    // }\n    // private setLineDashPatternHelper(pattern : PdfArray, patternOffset : PdfNumber) : void\n    // {\n    //     pattern.Save(this);\n    //     this.m_stream.write(Operators.whiteSpace);\n    //     patternOffset.Save(this);\n    //     this.m_stream.write(Operators.whiteSpace);\n    //     this.writeOperator(Operators.setDashPattern);\n    // }\n    /**\n     * Sets the `line dash pattern`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setLineDashPattern = function (pattern, patternOffset) {\n        // let pat : PdfArray = new PdfArray(pattern);\n        // let off : PdfNumber = new PdfNumber(patternOffset);\n        // this.setLineDashPatternHelper(pat, off);\n        this.setLineDashPatternHelper(pattern, patternOffset);\n    };\n    /**\n     * Sets the `line dash pattern`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setLineDashPatternHelper = function (pattern, patternOffset) {\n        var tempPattern = '[';\n        if (pattern.length > 1) {\n            for (var index = 0; index < pattern.length; index++) {\n                if (index === pattern.length - 1) {\n                    tempPattern += pattern[index].toString();\n                }\n                else {\n                    tempPattern += pattern[index].toString() + ' ';\n                }\n            }\n        }\n        tempPattern += '] ';\n        tempPattern += patternOffset.toString();\n        tempPattern += ' ' + Operators.setDashPattern;\n        this.stream.write(tempPattern);\n        this.stream.write(Operators.newLine);\n    };\n    /**\n     * Sets the `miter limit`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setMiterLimit = function (miterLimit) {\n        this.stream.write(PdfNumber.floatToString(miterLimit));\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.setMiterLimit);\n    };\n    /**\n     * Sets the `width of the line`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setLineWidth = function (width) {\n        this.stream.write(PdfNumber.floatToString(width));\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.setLineWidth);\n    };\n    /**\n     * Sets the `line cap`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setLineCap = function (lineCapStyle) {\n        this.stream.write((lineCapStyle).toString());\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.setLineCapStyle);\n    };\n    /**\n     * Sets the `line join`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setLineJoin = function (lineJoinStyle) {\n        this.stream.write((lineJoinStyle).toString());\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.setLineJoinStyle);\n    };\n    Object.defineProperty(PdfStreamWriter.prototype, \"position\", {\n        //IPdfWriter members\n        /**\n         * Gets or sets the current `position` within the stream.\n         * @private\n         */\n        get: function () {\n            return this.stream.position;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStreamWriter.prototype, \"length\", {\n        /**\n         * Gets `stream length`.\n         * @private\n         */\n        get: function () {\n            var returnValue = 0;\n            if (this.stream.data.length !== 0 && this.stream.data.length !== -1) {\n                for (var index = 0; index < this.stream.data.length; index++) {\n                    returnValue += this.stream.data[index].length;\n                }\n            }\n            return returnValue;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStreamWriter.prototype, \"document\", {\n        /**\n         * Gets and Sets the `current document`.\n         * @private\n         */\n        get: function () {\n            return null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfStreamWriter;\n}());\nexport { PdfStreamWriter };\n","/**\n * PdfPen.ts class for EJ2-PDF\n */\nimport { PdfColor } from './pdf-color';\nimport { PdfDashStyle, PdfColorSpace } from './enum';\nimport { PdfBrush } from './brushes/pdf-brush';\n/**\n * `PdfPen` class defining settings for drawing operations, that determines the color,\n * width, and style of the drawing elements.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // create a new page\n * let page1 : PdfPage = document.pages.add();\n * // set pen\n * let pen : PdfPen = new PdfPen(new PdfColor(0, 0, 0));\n * // draw rectangle\n * page1.graphics.drawRectangle(pen, new RectangleF({x : 0, y : 0}, {width : 100, height : 50}));\n * // save the document.\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfPen = /** @class */ (function () {\n    function PdfPen(arg1, arg2) {\n        //Fields\n        /**\n         * Specifies the `color of the pen`.\n         * @default new PdfColor()\n         * @private\n         */\n        this.pdfColor = new PdfColor(0, 0, 0);\n        /**\n         * Specifies the `dash offset of the pen`.\n         * @default 0\n         * @private\n         */\n        this.dashOffsetValue = 0;\n        /**\n         * Specifies the `dash pattern of the pen`.\n         * @default [0]\n         * @private\n         */\n        this.penDashPattern = [0];\n        /**\n         * Specifies the `dash style of the pen`.\n         * @default Solid\n         * @private\n         */\n        this.pdfDashStyle = PdfDashStyle.Solid;\n        /**\n         * Specifies the `line cap of the pen`.\n         * @default 0\n         * @private\n         */\n        this.pdfLineCap = 0;\n        /**\n         * Specifies the `line join of the pen`.\n         * @default 0\n         * @private\n         */\n        this.pdfLineJoin = 0;\n        /**\n         * Specifies the `width of the pen`.\n         * @default 1.0\n         * @private\n         */\n        this.penWidth = 1.0;\n        /**\n         * Specifies the `mitter limit of the pen`.\n         * @default 0.0\n         * @private\n         */\n        this.internalMiterLimit = 0.0;\n        /**\n         * Stores the `colorspace` value.\n         * @default Rgb\n         * @private\n         */\n        this.colorSpace = PdfColorSpace.Rgb;\n        if (typeof arg2 === 'number') {\n            this.constructor(arg1);\n            this.width = arg2;\n        }\n        else if (typeof arg2 === 'undefined' && arg1 instanceof PdfBrush) {\n            this.setBrush(arg1);\n        }\n        else if (typeof arg2 === 'undefined' && arg1 instanceof PdfColor) {\n            this.color = arg1;\n        }\n    }\n    Object.defineProperty(PdfPen.prototype, \"color\", {\n        //Properties\n        /**\n         * Gets or sets the `color of the pen`.\n         * @private\n         */\n        get: function () {\n            return this.pdfColor;\n        },\n        set: function (value) {\n            this.pdfColor = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPen.prototype, \"dashOffset\", {\n        /**\n         * Gets or sets the `dash offset of the pen`.\n         * @private\n         */\n        get: function () {\n            if (typeof this.dashOffsetValue === 'undefined' || this.dashOffsetValue == null) {\n                return 0;\n            }\n            else {\n                return this.dashOffsetValue;\n            }\n        },\n        set: function (value) {\n            this.dashOffsetValue = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPen.prototype, \"dashPattern\", {\n        /**\n         * Gets or sets the `dash pattern of the pen`.\n         * @private\n         */\n        get: function () {\n            return this.penDashPattern;\n        },\n        set: function (value) {\n            this.penDashPattern = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPen.prototype, \"dashStyle\", {\n        /**\n         * Gets or sets the `dash style of the pen`.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // create a new page\n         * let page1 : PdfPage = document.pages.add();\n         * // set pen\n         * let pen : PdfPen = new PdfPen(new PdfColor(0, 0, 0));\n         * //\n         * // set pen style\n         * pen.dashStyle = PdfDashStyle.DashDot;\n         * // get pen style\n         * let style : PdfDashStyle = pen.dashStyle;\n         * //\n         * // draw rectangle\n         * page1.graphics.drawRectangle(pen, new RectangleF({x : 0, y : 0}, {width : 100, height : 50}));\n         * // save the document.\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this.pdfDashStyle;\n        },\n        set: function (value) {\n            if (this.pdfDashStyle !== value) {\n                this.pdfDashStyle = value;\n                switch (this.pdfDashStyle) {\n                    case PdfDashStyle.Custom:\n                        break;\n                    case PdfDashStyle.Dash:\n                        this.penDashPattern = [3, 1];\n                        break;\n                    case PdfDashStyle.Dot:\n                        this.penDashPattern = [1, 1];\n                        break;\n                    case PdfDashStyle.DashDot:\n                        this.penDashPattern = [3, 1, 1, 1];\n                        break;\n                    case PdfDashStyle.DashDotDot:\n                        this.penDashPattern = [3, 1, 1, 1, 1, 1];\n                        break;\n                    case PdfDashStyle.Solid:\n                        break;\n                    default:\n                        this.pdfDashStyle = PdfDashStyle.Solid;\n                        this.penDashPattern = [0];\n                        break;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPen.prototype, \"lineCap\", {\n        /**\n         * Gets or sets the `line cap of the pen`.\n         * @private\n         */\n        get: function () {\n            return this.pdfLineCap;\n        },\n        set: function (value) {\n            this.pdfLineCap = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPen.prototype, \"lineJoin\", {\n        /**\n         * Gets or sets the `line join style of the pen`.\n         * @private\n         */\n        get: function () {\n            return this.pdfLineJoin;\n        },\n        set: function (value) {\n            this.pdfLineJoin = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPen.prototype, \"miterLimit\", {\n        /**\n         * Gets or sets the `miter limit`.\n         * @private\n         */\n        get: function () {\n            return this.internalMiterLimit;\n        },\n        set: function (value) {\n            this.internalMiterLimit = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPen.prototype, \"width\", {\n        /**\n         * Gets or sets the `width of the pen`.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // create a new page\n         * let page1 : PdfPage = document.pages.add();\n         * // set pen\n         * let pen : PdfPen = new PdfPen(new PdfColor(0, 0, 0));\n         * //\n         * // set pen width\n         * pen.width = 2;\n         * //\n         * // draw rectangle\n         * page1.graphics.drawRectangle(pen, new RectangleF({x : 0, y : 0}, {width : 100, height : 50}));\n         * // save the document.\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this.penWidth;\n        },\n        set: function (value) {\n            this.penWidth = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Helper\n    /**\n     * `Clones` this instance of PdfPen class.\n     * @private\n     */\n    PdfPen.prototype.clone = function () {\n        var pen = this;\n        return pen;\n    };\n    /**\n     * `Sets the brush`.\n     * @private\n     */\n    PdfPen.prototype.setBrush = function (brush) {\n        var sBrush = brush;\n        this.color = sBrush.color;\n        this.pdfBrush = sBrush;\n    };\n    /**\n     * `Monitors the changes`.\n     * @private\n     */\n    PdfPen.prototype.monitorChanges = function (currentPen, streamWriter, getResources, saveState, currentColorSpace, matrix) {\n        var diff = false;\n        saveState = true;\n        if (currentPen == null) {\n            diff = true;\n        }\n        diff = this.dashControl(currentPen, saveState, streamWriter);\n        streamWriter.setLineWidth(this.width);\n        streamWriter.setLineJoin(this.lineJoin);\n        streamWriter.setLineCap(this.lineCap);\n        var miterLimit = this.miterLimit;\n        if (miterLimit > 0) {\n            streamWriter.setMiterLimit(miterLimit);\n            diff = true;\n        }\n        var brush = this.pdfBrush;\n        streamWriter.setColorAndSpace(this.color, currentColorSpace, true);\n        diff = true;\n        return diff;\n    };\n    /**\n     * `Controls the dash style` and behaviour of each line.\n     * @private\n     */\n    PdfPen.prototype.dashControl = function (pen, saveState, streamWriter) {\n        saveState = true;\n        var lineWidth = this.width;\n        var pattern = this.getPattern();\n        streamWriter.setLineDashPattern(pattern, this.dashOffset * lineWidth);\n        return saveState;\n    };\n    /**\n     * `Gets the pattern` of PdfPen.\n     * @private\n     */\n    PdfPen.prototype.getPattern = function () {\n        var pattern = this.dashPattern;\n        for (var i = 0; i < pattern.length; ++i) {\n            pattern[i] *= this.width;\n        }\n        return pattern;\n    };\n    return PdfPen;\n}());\nexport { PdfPen };\n","/**\n * PdfTransformationMatrix.ts class for EJ2-PDF\n */\nimport { PointF } from './../drawing/pdf-drawing';\nimport { PdfNumber } from './../primitives/pdf-number';\n/**\n * Class for representing Root `transformation matrix`.\n */\nvar PdfTransformationMatrix = /** @class */ (function () {\n    function PdfTransformationMatrix(value) {\n        /**\n         * Value for `angle converting`.\n         * @default 180.0 / Math.PI\n         * @private\n         */\n        this.radDegFactor = 180.0 / Math.PI;\n        if (typeof value === 'undefined') {\n            this.transformationMatrix = new Matrix(1.00, 0.00, 0.00, 1.00, 0.00, 0.00);\n        }\n        else {\n            this.transformationMatrix = new Matrix(1.00, 0.00, 0.00, -1.00, 0.00, 0.00);\n        }\n    }\n    Object.defineProperty(PdfTransformationMatrix.prototype, \"matrix\", {\n        // Properties\n        /**\n         * Gets or sets the `internal matrix object`.\n         * @private\n         */\n        get: function () {\n            return this.transformationMatrix;\n        },\n        set: function (value) {\n            this.transformationMatrix = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Public methods\n    /**\n     * `Translates` coordinates by specified coordinates.\n     * @private\n     */\n    PdfTransformationMatrix.prototype.translate = function (offsetX, offsetY) {\n        this.transformationMatrix.translate(offsetX, offsetY);\n    };\n    /**\n     * `Scales` coordinates by specified coordinates.\n     * @private\n     */\n    PdfTransformationMatrix.prototype.scale = function (scaleX, scaleY) {\n        this.transformationMatrix.elements[0] = scaleX;\n        this.transformationMatrix.elements[3] = scaleY;\n    };\n    /**\n     * `Rotates` coordinate system in counterclockwise direction.\n     * @private\n     */\n    PdfTransformationMatrix.prototype.rotate = function (angle) {\n        //Convert from degree to radian \n        angle = (angle * Math.PI) / 180;\n        //Rotation \n        this.transformationMatrix.elements[0] = Math.cos(angle);\n        this.transformationMatrix.elements[1] = Math.sin(angle);\n        this.transformationMatrix.elements[2] = -Math.sin(angle);\n        this.transformationMatrix.elements[3] = Math.cos(angle);\n    };\n    // Overrides\n    /**\n     * Gets `PDF representation`.\n     * @private\n     */\n    PdfTransformationMatrix.prototype.toString = function () {\n        var builder = '';\n        var whitespace = ' ';\n        for (var i = 0, len = this.transformationMatrix.elements.length; i < len; i++) {\n            var temp = this.matrix.elements[i];\n            builder += PdfNumber.floatToString(this.transformationMatrix.elements[i]);\n            builder += whitespace;\n        }\n        return builder;\n    };\n    // Implementation\n    /**\n     * `Multiplies` matrices (changes coordinate system.)\n     * @private\n     */\n    PdfTransformationMatrix.prototype.multiply = function (matrix) {\n        this.transformationMatrix.multiply(matrix.matrix);\n    };\n    /**\n     * Converts `degrees to radians`.\n     * @private\n     */\n    PdfTransformationMatrix.degreesToRadians = function (degreesX) {\n        return this.degRadFactor * degreesX;\n    };\n    /**\n     * Converts `radians to degrees`.\n     * @private\n     */\n    PdfTransformationMatrix.prototype.radiansToDegrees = function (radians) {\n        return this.radDegFactor * radians;\n    };\n    /**\n     * `Clones` this instance of PdfTransformationMatrix.\n     * @private\n     */\n    PdfTransformationMatrix.prototype.clone = function () {\n        return this;\n    };\n    // Constants\n    /**\n     * Value for `angle converting`.\n     * @default Math.PI / 180.0\n     * @private\n     */\n    PdfTransformationMatrix.degRadFactor = Math.PI / 180.0;\n    return PdfTransformationMatrix;\n}());\nexport { PdfTransformationMatrix };\nvar Matrix = /** @class */ (function () {\n    function Matrix(arg1, arg2, arg3, arg4, arg5, arg6) {\n        if (typeof arg1 === 'undefined') {\n            this.metrixElements = [];\n        }\n        else if (typeof arg1 === 'number') {\n            this.constructor();\n            this.metrixElements.push(arg1);\n            this.metrixElements.push(arg2);\n            this.metrixElements.push(arg3);\n            this.metrixElements.push(arg4);\n            this.metrixElements.push(arg5);\n            this.metrixElements.push(arg6);\n        }\n        else {\n            this.metrixElements = arg1;\n        }\n    }\n    Object.defineProperty(Matrix.prototype, \"elements\", {\n        // Properties\n        /**\n         * Gets the `elements`.\n         * @private\n         */\n        get: function () {\n            return this.metrixElements;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Matrix.prototype, \"offsetX\", {\n        /**\n         * Gets the off set `X`.\n         * @private\n         */\n        get: function () {\n            return this.metrixElements[4];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Matrix.prototype, \"offsetY\", {\n        /**\n         * Gets the off set `Y`.\n         * @private\n         */\n        get: function () {\n            return this.metrixElements[5];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * `Translates` coordinates by specified coordinates.\n     * @private\n     */\n    Matrix.prototype.translate = function (offsetX, offsetY) {\n        this.metrixElements[4] = offsetX;\n        this.metrixElements[5] = offsetY;\n    };\n    /**\n     * `Translates` the specified offset X.\n     * @private\n     */\n    Matrix.prototype.transform = function (point) {\n        var x = point.x;\n        var y = point.y;\n        var x2 = x * this.elements[0] + y * this.elements[2] + this.offsetX;\n        var y2 = x * this.elements[1] + y * this.elements[3] + this.offsetY;\n        return new PointF(x2, y2);\n    };\n    /**\n     * `Multiplies matrices` (changes coordinate system.)\n     * @private\n     */\n    Matrix.prototype.multiply = function (matrix) {\n        var tempMatrix = [];\n        tempMatrix.push(this.elements[0] * matrix.elements[0] + this.elements[1] * matrix.elements[2]);\n        tempMatrix[1] = (this.elements[0] * matrix.elements[1] + this.elements[1] * matrix.elements[3]);\n        tempMatrix[2] = (this.elements[2] * matrix.elements[0] + this.elements[3] * matrix.elements[2]);\n        tempMatrix[3] = (this.elements[2] * matrix.elements[1] + this.elements[3] * matrix.elements[3]);\n        tempMatrix[4] = (this.offsetX * matrix.elements[0] + this.offsetY * matrix.elements[2] + matrix.offsetX);\n        tempMatrix[5] = (this.offsetX * matrix.elements[1] + this.offsetY * matrix.elements[3] + matrix.offsetY);\n        for (var i = 0; i < tempMatrix.length; i++) {\n            this.elements[i] = tempMatrix[i];\n        }\n    };\n    // IDisposable Members\n    /**\n     * `Dispose` this instance of PdfTransformationMatrix class.\n     * @private\n     */\n    Matrix.prototype.dispose = function () {\n        this.metrixElements = null;\n    };\n    // ICloneable Members\n    /**\n     * `Clones` this instance of PdfTransformationMatrix class.\n     * @private\n     */\n    Matrix.prototype.clone = function () {\n        var m = new Matrix(this.metrixElements);\n        return m;\n    };\n    return Matrix;\n}());\nexport { Matrix };\n","/**\n * `constants.ts` class for EJ2-PDF\n * @private\n */\nvar ProcedureSets = /** @class */ (function () {\n    function ProcedureSets() {\n        /**\n         * Specifies the `PDF` procedure set.\n         * @private\n         */\n        this.pdf = 'PDF';\n        /**\n         * Specifies the `Text` procedure set.\n         * @private\n         */\n        this.text = 'Text';\n        /**\n         * Specifies the `ImageB` procedure set.\n         * @private\n         */\n        this.imageB = 'ImageB';\n        /**\n         * Specifies the `ImageC` procedure set.\n         * @private\n         */\n        this.imageC = 'ImageC';\n        /**\n         * Specifies the `ImageI` procedure set.\n         * @private\n         */\n        this.imageI = 'ImageI';\n    }\n    return ProcedureSets;\n}());\nexport { ProcedureSets };\n","/**\n * Dictionary class\n * @private\n * @hidden\n */\nvar TemporaryDictionary = /** @class */ (function () {\n    function TemporaryDictionary() {\n        /**\n         * @hidden\n         * @private\n         */\n        this.mKeys = [];\n        /**\n         * @hidden\n         * @private\n         */\n        this.mValues = [];\n    }\n    /**\n     * @hidden\n     * @private\n     */\n    TemporaryDictionary.prototype.size = function () {\n        return this.mKeys.length;\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    TemporaryDictionary.prototype.add = function (key, value) {\n        if (key === undefined || key === null || value === undefined || value === null) {\n            throw new ReferenceError('Provided key or value is not valid.');\n        }\n        var index = this.mKeys.indexOf(key);\n        if (index < 0) {\n            this.mKeys.push(key);\n            this.mValues.push(value);\n            return 1;\n        }\n        else {\n            throw new RangeError('An item with the same key has already been added.');\n        }\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    TemporaryDictionary.prototype.keys = function () {\n        return this.mKeys;\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    TemporaryDictionary.prototype.values = function () {\n        return this.mValues;\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    TemporaryDictionary.prototype.getValue = function (key) {\n        if (key === undefined || key === null) {\n            throw new ReferenceError('Provided key is not valid.');\n        }\n        var index = this.mKeys.indexOf(key);\n        if (index < 0) {\n            throw new RangeError('No item with the specified key has been added.');\n        }\n        else {\n            return this.mValues[index];\n        }\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    TemporaryDictionary.prototype.setValue = function (key, value) {\n        if (key === undefined || key === null) {\n            throw new ReferenceError('Provided key is not valid.');\n        }\n        var index = this.mKeys.indexOf(key);\n        if (index < 0) {\n            this.mKeys.push(key);\n            this.mValues.push(value);\n        }\n        else {\n            this.mValues[index] = value;\n        }\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    TemporaryDictionary.prototype.remove = function (key) {\n        if (key === undefined || key === null) {\n            throw new ReferenceError('Provided key is not valid.');\n        }\n        var index = this.mKeys.indexOf(key);\n        if (index < 0) {\n            throw new RangeError('No item with the specified key has been added.');\n        }\n        else {\n            this.mKeys.splice(index, 1);\n            this.mValues.splice(index, 1);\n            return true;\n        }\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    TemporaryDictionary.prototype.containsKey = function (key) {\n        if (key === undefined || key === null) {\n            throw new ReferenceError('Provided key is not valid.');\n        }\n        var index = this.mKeys.indexOf(key);\n        if (index < 0) {\n            return false;\n        }\n        return true;\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    TemporaryDictionary.prototype.clear = function () {\n        this.mKeys = [];\n        this.mValues = [];\n    };\n    return TemporaryDictionary;\n}());\nexport { TemporaryDictionary };\n","import { PdfDictionary } from './../primitives/pdf-dictionary';\nimport { PdfNumber } from './../primitives/pdf-number';\nimport { PdfName } from './../primitives/pdf-name';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\n/**\n * Represents a simple `transparency`.\n * @private\n */\nvar PdfTransparency = /** @class */ (function () {\n    // Properties\n    // /**\n    //  * Gets the `stroke` operation alpha value.\n    //  * @private\n    //  */\n    // public get stroke() : number {\n    //     let result : number = this.getNumber(this.dictionaryProperties.CA);\n    //     return result;\n    // }\n    // /**\n    //  * Gets the `fill` operation alpha value.\n    //  * @private\n    //  */\n    // public get fill() : number {\n    //     let result : number = this.getNumber(this.dictionaryProperties.ca);\n    //     return result;\n    // }\n    // /**\n    //  * Gets the `blend mode`.\n    //  * @private\n    //  */\n    // public get mode() : PdfBlendMode {\n    //     let result : string = this.getName(this.dictionaryProperties.ca);\n    //     return PdfBlendMode.Normal;\n    // }\n    // Constructors\n    /**\n     * Initializes a new instance of the `Transparency` class.\n     * @private\n     */\n    function PdfTransparency(stroke, fill, mode) {\n        // Fields\n        /**\n         * Internal variable to store `dictionary`.\n         * @default new PdfDictionary()\n         * @private\n         */\n        this.dictionary = new PdfDictionary();\n        /**\n         * Internal variable for accessing fields from `DictionryProperties` class.\n         * @default new DictionaryProperties()\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        this.dictionary.items.setValue(this.dictionaryProperties.CA, new PdfNumber(stroke));\n        this.dictionary.items.setValue(this.dictionaryProperties.ca, new PdfNumber(fill));\n        this.dictionary.items.setValue(this.dictionaryProperties.BM, new PdfName(mode.toString()));\n    }\n    Object.defineProperty(PdfTransparency.prototype, \"element\", {\n        // // Implementation\n        // /**\n        //  * Gets the `number value`.\n        //  * @private\n        //  */\n        // private getNumber(keyName : string) : number {\n        //     let result : number = 0.0;\n        //     let numb : PdfNumber = this.dictionary.items.getValue(keyName) as PdfNumber;\n        //     result = numb.intValue;\n        //     return result;\n        // }\n        // /**\n        //  * Gets the `name value`.\n        //  * @private\n        //  */\n        // private getName(keyName : string) : string {\n        //     let result : string = null;\n        //     let name : PdfName = this.dictionary.items.getValue(keyName) as PdfName;\n        //     result = name.value;\n        //     return result;\n        // }\n        // IPdfWrapper Members\n        /**\n         * Gets the `element`.\n         * @private\n         */\n        get: function () {\n            return this.dictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfTransparency;\n}());\nexport { PdfTransparency };\n","/**\n * Represent a `collection of automatic fields information`.\n * @private\n */\nvar PdfAutomaticFieldInfoCollection = /** @class */ (function () {\n    /**\n     * Initializes a new instance of the 'PdfPageNumberFieldInfoCollection' class.\n     * @private\n     */\n    function PdfAutomaticFieldInfoCollection() {\n        /**\n         * Internal variable to store instance of `pageNumberFields` class.\n         * @private\n         */\n        this.automaticFieldsInformation = [];\n        //\n    }\n    Object.defineProperty(PdfAutomaticFieldInfoCollection.prototype, \"automaticFields\", {\n        /**\n         * Gets the `page number fields collection`.\n         * @private\n         */\n        get: function () {\n            return this.automaticFieldsInformation;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Public methods\n    /// Adds the specified field info.\n    /**\n     * Add page number field into collection.\n     * @private\n     */\n    PdfAutomaticFieldInfoCollection.prototype.add = function (fieldInfo) {\n        return this.automaticFields.push(fieldInfo);\n    };\n    return PdfAutomaticFieldInfoCollection;\n}());\nexport { PdfAutomaticFieldInfoCollection };\n","/**\n * Represents a base class for all page graphics elements.\n */\nvar PdfGraphicsElement = /** @class */ (function () {\n    // Constructors\n    function PdfGraphicsElement() {\n        //\n    }\n    /**\n     * `Draws` the page number field.\n     * @public\n     */\n    PdfGraphicsElement.prototype.drawHelper = function (graphics, x, y) {\n        var bNeedSave = (x !== 0 || y !== 0);\n        var gState = null;\n        // Translate co-ordinates.\n        if (bNeedSave) {\n            // Save state.\n            gState = graphics.save();\n            graphics.translateTransform(x, y);\n        }\n        this.drawInternal(graphics);\n        if (bNeedSave) {\n            // Restore state.\n            graphics.restore(gState);\n        }\n    };\n    return PdfGraphicsElement;\n}());\nexport { PdfGraphicsElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfAutomaticField.ts class for EJ2-PDF\n */\nimport { RectangleF, SizeF, PointF } from './../../drawing/pdf-drawing';\nimport { PdfSolidBrush } from './../../graphics/brushes/pdf-solid-brush';\nimport { PdfColor } from './../../graphics/pdf-color';\nimport { PdfDocument } from './../pdf-document';\nimport { PdfGraphicsElement } from './../../graphics/figures/base/graphics-element';\nimport { PdfAutomaticFieldInfo } from './automatic-field-info';\n/**\n * Represents a fields which is calculated before the document saves.\n */\nvar PdfAutomaticField = /** @class */ (function (_super) {\n    __extends(PdfAutomaticField, _super);\n    // Constructors\n    function PdfAutomaticField() {\n        var _this = _super.call(this) || this;\n        // Fields\n        _this.internalBounds = new RectangleF(0, 0, 0, 0);\n        _this.internalTemplateSize = new SizeF(0, 0);\n        return _this;\n    }\n    Object.defineProperty(PdfAutomaticField.prototype, \"bounds\", {\n        // Properties\n        get: function () {\n            return this.internalBounds;\n        },\n        set: function (value) {\n            this.internalBounds = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAutomaticField.prototype, \"size\", {\n        get: function () {\n            return new SizeF(this.bounds.width, this.bounds.height);\n        },\n        set: function (value) {\n            this.bounds.width = value.width;\n            this.bounds.height = value.height;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAutomaticField.prototype, \"location\", {\n        get: function () {\n            return new PointF(this.bounds.x, this.bounds.y);\n        },\n        set: function (value) {\n            this.bounds.x = value.x;\n            this.bounds.y = value.y;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAutomaticField.prototype, \"font\", {\n        get: function () {\n            return this.internalFont;\n        },\n        set: function (value) {\n            this.internalFont = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAutomaticField.prototype, \"brush\", {\n        get: function () {\n            return this.internalBrush;\n        },\n        set: function (value) {\n            this.internalBrush = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAutomaticField.prototype, \"pen\", {\n        get: function () {\n            return this.internalPen;\n        },\n        set: function (value) {\n            this.internalPen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAutomaticField.prototype, \"stringFormat\", {\n        get: function () {\n            return this.internalStringFormat;\n        },\n        set: function (value) {\n            this.internalStringFormat = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfAutomaticField.prototype.performDrawHelper = function (graphics, location, scalingX, scalingY) {\n        if (this.bounds.height === 0 || this.bounds.width === 0) {\n            var text = this.getValue(graphics);\n            this.internalTemplateSize = this.getFont().measureString(text, this.size, this.stringFormat);\n        }\n    };\n    PdfAutomaticField.prototype.draw = function (arg1, arg2, arg3) {\n        if (typeof arg2 === 'undefined') {\n            var location_1 = new PointF(0, 0);\n            this.draw(arg1, location_1);\n        }\n        else if (arg2 instanceof PointF) {\n            this.draw(arg1, arg2.x, arg2.y);\n        }\n        else {\n            this.drawHelper(arg1, arg2, arg3);\n            var info = new PdfAutomaticFieldInfo(this, new PointF(arg2, arg3));\n            arg1.automaticFields.add(info);\n        }\n    };\n    PdfAutomaticField.prototype.getSize = function () {\n        if (this.bounds.height === 0 || this.bounds.width === 0) {\n            return this.internalTemplateSize;\n        }\n        else {\n            return this.size;\n        }\n    };\n    PdfAutomaticField.prototype.drawInternal = function (graphics) {\n        //\n    };\n    /* tslint:disable */\n    PdfAutomaticField.prototype.getBrush = function () {\n        return (typeof this.internalBrush === 'undefined' || this.internalBrush == null) ? new PdfSolidBrush(new PdfColor(0, 0, 0)) : this.internalBrush;\n    };\n    PdfAutomaticField.prototype.getFont = function () {\n        return (typeof this.internalFont === 'undefined' || this.internalFont == null) ? PdfDocument.defaultFont : this.internalFont;\n    };\n    /* tslint:enable */\n    PdfAutomaticField.prototype.getPageFromGraphics = function (graphics) {\n        if (typeof graphics.page !== 'undefined' && graphics.page !== null) {\n            var page = graphics.page;\n            return page;\n        }\n        else {\n            var page = graphics.currentPage;\n            return page;\n        }\n    };\n    return PdfAutomaticField;\n}(PdfGraphicsElement));\nexport { PdfAutomaticField };\n","/**\n * PdfAutomaticFieldInfo.ts class for EJ2-PDF\n * @private\n */\nimport { PointF } from './../../drawing/pdf-drawing';\nimport { PdfAutomaticField } from './automatic-field';\n/**\n * Represents information about the automatic field.\n * @private\n */\nvar PdfAutomaticFieldInfo = /** @class */ (function () {\n    function PdfAutomaticFieldInfo(field, location, scaleX, scaleY) {\n        // Fields\n        /**\n         * Internal variable to store location of the field.\n         * @private\n         */\n        this.pageNumberFieldLocation = new PointF();\n        /**\n         * Internal variable to store field.\n         * @private\n         */\n        this.pageNumberField = null;\n        /**\n         * Internal variable to store x scaling factor.\n         * @private\n         */\n        this.scaleX = 1;\n        /**\n         * Internal variable to store y scaling factor.\n         * @private\n         */\n        this.scaleY = 1;\n        if (typeof location === 'undefined' && field instanceof PdfAutomaticFieldInfo) {\n            this.pageNumberField = field.field;\n            this.pageNumberFieldLocation = field.location;\n            this.scaleX = field.scalingX;\n            this.scaleY = field.scalingY;\n        }\n        else if (typeof scaleX === 'undefined' && location instanceof PointF && field instanceof PdfAutomaticField) {\n            this.pageNumberField = field;\n            this.pageNumberFieldLocation = location;\n        }\n        else {\n            this.pageNumberField = field;\n            this.pageNumberFieldLocation = location;\n            this.scaleX = scaleX;\n            this.scaleY = scaleY;\n        }\n    }\n    Object.defineProperty(PdfAutomaticFieldInfo.prototype, \"location\", {\n        /* tslint:enable */\n        // Properties\n        /**\n         * Gets or sets the location.\n         * @private\n         */\n        get: function () {\n            return this.pageNumberFieldLocation;\n        },\n        set: function (value) {\n            this.pageNumberFieldLocation = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAutomaticFieldInfo.prototype, \"field\", {\n        /**\n         * Gets or sets the field.\n         * @private\n         */\n        get: function () {\n            return this.pageNumberField;\n        },\n        set: function (value) {\n            this.pageNumberField = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAutomaticFieldInfo.prototype, \"scalingX\", {\n        /**\n         * Gets or sets the scaling X factor.\n         * @private\n         */\n        get: function () {\n            return this.scaleX;\n        },\n        set: function (value) {\n            this.scaleX = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAutomaticFieldInfo.prototype, \"scalingY\", {\n        /**\n         * Gets or sets the scaling Y factor.\n         * @private\n         */\n        get: function () {\n            return this.scaleY;\n        },\n        set: function (value) {\n            this.scaleY = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfAutomaticFieldInfo;\n}());\nexport { PdfAutomaticFieldInfo };\n","/**\n * PdfGraphics.ts class for EJ2-PDF\n */\nimport { PdfColorSpace, TextRenderingMode, PdfFillMode, PdfTextAlignment } from './enum';\nimport { PdfVerticalAlignment, PdfBlendMode } from './enum';\nimport { PdfSubSuperScript } from './fonts/enum';\nimport { PdfStreamWriter } from './../input-output/pdf-stream-writer';\nimport { PdfPen } from './pdf-pen';\nimport { PdfBrush } from './brushes/pdf-brush';\nimport { PdfSolidBrush } from './brushes/pdf-solid-brush';\nimport { PdfFont } from './fonts/pdf-font';\nimport { PdfTransformationMatrix } from './pdf-transformation-matrix';\nimport { PointF, SizeF, RectangleF } from './../drawing/pdf-drawing';\nimport { ProcedureSets } from './constants';\nimport { PdfString } from './../primitives/pdf-string';\nimport { PdfStringFormat } from './fonts/pdf-string-format';\nimport { TemporaryDictionary } from './../collections/object-object-pair/dictionary';\nimport { PdfTransparency } from './pdf-transparency';\nimport { PdfStringLayouter, LineType } from './fonts/string-layouter';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\nimport { StringTokenizer } from './fonts/string-tokenizer';\nimport { PdfAutomaticFieldInfoCollection } from './../document/automatic-fields/automatic-field-info-collection';\nimport { PdfAutomaticFieldInfo } from './../document/automatic-fields/automatic-field-info';\nimport { Operators } from './../input-output/pdf-operators';\n/**\n * `PdfGraphics` class represents a graphics context of the objects.\n * It's used for performing all the graphics operations.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // add a new page to the document\n * let page1 : PdfPage = document.pages.add();\n * // set the font\n * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n * // create black brush\n * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n * //\n * //graphics of the page\n * let page1Graphics : PdfGraphics = page1.graphics;\n * // draw the text on the page1 graphics\n * page1Graphics.drawString('Hello World', font, blackBrush, new PointF(0, 0));\n * //\n * // save the document\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfGraphics = /** @class */ (function () {\n    function PdfGraphics(arg1, arg2, arg3) {\n        /**\n         * Represents the `Current color space`.\n         * @private\n         */\n        this.currentColorSpace = PdfColorSpace.Rgb;\n        /**\n         * Stores `previous rendering mode`.\n         * @private\n         */\n        this.previousTextRenderingMode = TextRenderingMode.Fill;\n        /**\n         * Previous `character spacing` value or 0.\n         * @private\n         */\n        this.previousCharacterSpacing = 0.0;\n        /**\n         * Previous `word spacing` value or 0.\n         * @private\n         */\n        this.previousWordSpacing = 0.0;\n        /**\n         * The `previously used text scaling` value.\n         * @private\n         */\n        this.previousTextScaling = 100.0;\n        /**\n         * Instance of `ProcedureSets` class.\n         * @private\n         */\n        this.procedureSets = new ProcedureSets();\n        /**\n         * To check wihether it is a `direct text rendering`.\n         * @default true\n         * @private\n         */\n        this.isNormalRender = true;\n        /**\n         * check whether to `use font size` to calculate the shift.\n         * @default false\n         * @private\n         */\n        this.isUseFontSize = false;\n        /**\n         * check whether the font is in `italic type`.\n         * @default false\n         * @private\n         */\n        this.isItalic = false;\n        /**\n         * Check whether it is an `emf Text Matrix`.\n         * @default false\n         * @private\n         */\n        this.isEmfTextScaled = false;\n        /**\n         * Check whether it is an `emf` call.\n         * @default false\n         * @private\n         */\n        this.isEmf = false;\n        /**\n         * Check whether it is an `emf plus` call.\n         * @default false\n         * @private\n         */\n        this.isEmfPlus = false;\n        /**\n         * Check whether it is in `base line format`.\n         * @default true\n         * @private\n         */\n        this.isBaselineFormat = true;\n        /**\n         * Emf Text `Scaling Factor`.\n         * @private\n         */\n        this.emfScalingFactor = new SizeF(0, 0);\n        /**\n         * To check whether the `last color space` of document and garphics is saved.\n         * @private\n         */\n        this.colorSpaceChanged = false;\n        /**\n         * Stores an instance of `DictionaryProperties`.\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        /**\n         * Checks whether the x co-ordinate is need to set as client size or not.\n         * @hidden\n         * @private\n         */\n        this.isOverloadWithPosition = false;\n        /**\n         * Checks whether the x co-ordinate is need to set as client size or not.\n         * @hidden\n         * @private\n         */\n        this.isPointOverload = false;\n        /**\n         * Current colorspaces.\n         * @hidden\n         * @private\n         */\n        this.currentColorSpaces = ['RGB', 'CMYK', 'GrayScale', 'Indexed'];\n        /**\n         * Checks the current image `is optimized` or not.\n         * @default false.\n         * @private\n         */\n        this.isImageOptimized = false;\n        /**\n         * Stores the `graphics states`.\n         * @private\n         */\n        this.graphicsState = [];\n        /**\n         * Indicates whether the object `had trasparency`.\n         * @default false\n         * @private\n         */\n        this.istransparencySet = false;\n        /**\n         * Stores the instance of `PdfAutomaticFieldInfoCollection` class .\n         * @default null\n         * @private\n         */\n        this.internalAutomaticFields = null;\n        /**\n         * Stores the index of the start line that should draw with in the next page.\n         * @private\n         */\n        this.startCutIndex = -1;\n        if (arg3 instanceof PdfStreamWriter) {\n            this.pdfStreamWriter = arg3;\n            this.getResources = arg2;\n            this.canvasSize = arg1;\n            this.initialize();\n        }\n        else {\n            this.constructor(arg1, arg2, new PdfStreamWriter(arg3));\n        }\n    }\n    Object.defineProperty(PdfGraphics.prototype, \"stringLayoutResult\", {\n        //  Properties\n        /**\n         * Returns the `result` after drawing string.\n         * @private\n         */\n        get: function () {\n            return this.pdfStringLayoutResult;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphics.prototype, \"size\", {\n        /**\n         * Gets the `size` of the canvas.\n         * @private\n         */\n        get: function () {\n            return this.canvasSize;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphics.prototype, \"mediaBoxUpperRightBound\", {\n        /**\n         * Gets and Sets the value of `MediaBox upper right bound`.\n         * @private\n         */\n        get: function () {\n            if (typeof this.internalMediaBoxUpperRightBound === 'undefined') {\n                this.internalMediaBoxUpperRightBound = 0;\n            }\n            return this.internalMediaBoxUpperRightBound;\n        },\n        set: function (value) {\n            this.internalMediaBoxUpperRightBound = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphics.prototype, \"clientSize\", {\n        /**\n         * Gets the `size` of the canvas reduced by margins and page templates.\n         * @private\n         */\n        get: function () {\n            return new SizeF(this.clipBounds.width, this.clipBounds.height);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphics.prototype, \"colorSpace\", {\n        /**\n         * Gets or sets the current `color space` of the document\n         * @private\n         */\n        get: function () {\n            return this.currentColorSpace;\n        },\n        set: function (value) {\n            this.currentColorSpace = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphics.prototype, \"streamWriter\", {\n        /**\n         * Gets the `stream writer`.\n         * @private\n         */\n        get: function () {\n            return this.pdfStreamWriter;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphics.prototype, \"matrix\", {\n        /**\n         * Gets the `transformation matrix` reflecting current transformation.\n         * @private\n         */\n        get: function () {\n            if (this.transformationMatrix == null) {\n                this.transformationMatrix = new PdfTransformationMatrix();\n            }\n            return this.transformationMatrix;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphics.prototype, \"layer\", {\n        /**\n         * Gets the `layer` for the graphics, if exists.\n         * @private\n         */\n        get: function () {\n            return this.pageLayer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphics.prototype, \"page\", {\n        /**\n         * Gets the `page` for this graphics, if exists.\n         * @private\n         */\n        get: function () {\n            return this.pageLayer.page;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphics.prototype, \"automaticFields\", {\n        get: function () {\n            if (this.internalAutomaticFields == null || typeof this.internalAutomaticFields === 'undefined') {\n                this.internalAutomaticFields = new PdfAutomaticFieldInfoCollection();\n            }\n            return this.internalAutomaticFields;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Implementation\n    /**\n     * `Initializes` this instance.\n     * @private\n     */\n    PdfGraphics.prototype.initialize = function () {\n        this.bStateSaved = false;\n        this.currentPen = null;\n        this.currentBrush = null;\n        this.currentFont = null;\n        this.currentColorSpace = PdfColorSpace.Rgb;\n        this.bCSInitialized = false;\n        this.transformationMatrix = null;\n        this.previousTextRenderingMode = (-1); //.Fill;\n        this.previousCharacterSpacing = -1.0;\n        this.previousWordSpacing = -1.0;\n        this.previousTextScaling = -100.0;\n        // this.m_trasparencies = null;\n        this.currentStringFormat = null;\n        this.clipBounds = new RectangleF(new PointF(0, 0), this.size);\n        this.getResources.getResources().requireProcedureSet(this.procedureSets.pdf);\n    };\n    PdfGraphics.prototype.drawPdfTemplate = function (template, location, size) {\n        if (typeof size === 'undefined') {\n            if (template == null) {\n                throw Error('ArgumentNullException-template');\n            }\n            this.drawPdfTemplate(template, location, template.size);\n        }\n        else {\n            // let crossTable : PdfCrossTable = null;\n            // if (this.pageLayer != null) {\n            //     crossTable = (this.page as PdfPage).section.parentDocument.crossTable;\n            // }\n            if (template == null) {\n                throw Error('ArgumentNullException-template');\n            }\n            var scaleX = (template.width > 0) ? size.width / template.width : 1;\n            var scaleY = (template.height > 0) ? size.height / template.height : 1;\n            var bNeedScale = !(scaleX === 1 && scaleY === 1);\n            // Save state.\n            var state = this.save();\n            // Take into consideration that rect location is bottom/left.\n            var matrix = new PdfTransformationMatrix();\n            if (this.pageLayer != null) {\n                this.getTranslateTransform(location.x, location.y + size.height, matrix);\n            }\n            if (bNeedScale) {\n                this.getScaleTransform(scaleX, scaleY, matrix);\n            }\n            this.pdfStreamWriter.modifyCtm(matrix);\n            // Output template.\n            var resources = this.getResources.getResources();\n            var name_1 = resources.getName(template);\n            this.pdfStreamWriter.executeObject(name_1);\n            // Restore state.\n            this.restore(state);\n            //Transfer automatic fields from template.\n            var g = template.graphics;\n            if (g != null) {\n                for (var index = 0; index < g.automaticFields.automaticFields.length; index++) {\n                    var fieldInfo = g.automaticFields.automaticFields[index];\n                    var newLocation = new PointF(fieldInfo.location.x + location.x, fieldInfo.location.y + location.y);\n                    var scalingX = template.size.width == 0 ? 0 : size.width / template.size.width;\n                    var scalingY = template.size.height == 0 ? 0 : size.height / template.size.height;\n                    this.automaticFields.add(new PdfAutomaticFieldInfo(fieldInfo.field, newLocation, scalingX, scalingY));\n                    this.page.dictionary.modify();\n                }\n            }\n            this.getResources.getResources().requireProcedureSet(this.procedureSets.imageB);\n            this.getResources.getResources().requireProcedureSet(this.procedureSets.imageC);\n            this.getResources.getResources().requireProcedureSet(this.procedureSets.imageI);\n            this.getResources.getResources().requireProcedureSet(this.procedureSets.text);\n        }\n    };\n    /* tslint:disable */\n    /**\n     * @public\n     */\n    PdfGraphics.prototype.drawString = function (arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9) {\n        if (typeof arg1 === 'string' && arg2 instanceof PdfFont && (arg3 instanceof PdfPen || arg3 === null) && (arg4 instanceof PdfBrush || arg4 === null) && typeof arg5 === 'number' && typeof arg6 === 'number' && (arg7 instanceof PdfStringFormat || arg7 === null) && typeof arg8 === 'undefined') {\n            this.isOverloadWithPosition = true;\n            this.drawString(arg1, arg2, arg3, arg4, arg5, arg6, (this.clientSize.width - arg5), 0, arg7);\n        }\n        else {\n            var temparg3 = arg3;\n            var temparg4 = arg4;\n            var temparg5 = arg5;\n            var temparg6 = arg6;\n            var temparg7 = arg7;\n            var temparg8 = arg8;\n            var temparg9 = arg9;\n            var layouter = new PdfStringLayouter();\n            var result = layouter.layout(arg1, arg2, temparg9, new SizeF(temparg7, 0), this.isOverloadWithPosition, this.clientSize);\n            if (!result.empty) {\n                var rect = this.checkCorrectLayoutRectangle(result.actualSize, temparg5, temparg6, temparg9);\n                if (temparg7 <= 0) {\n                    temparg5 = rect.x;\n                    temparg7 = rect.width;\n                }\n                if (temparg8 <= 0) {\n                    temparg6 = rect.y;\n                    temparg8 = rect.height;\n                }\n                this.drawStringLayoutResult(result, arg2, temparg3, temparg4, new RectangleF(temparg5, temparg6, temparg7, temparg8), temparg9);\n                this.isEmfTextScaled = false;\n                this.emfScalingFactor = new SizeF(0, 0);\n            }\n            this.getResources.getResources().requireProcedureSet(this.procedureSets.text);\n            this.isNormalRender = true;\n            this.pdfStringLayoutResult = result;\n            this.isUseFontSize = false;\n        }\n    }; /* tslint:enable */\n    PdfGraphics.prototype.drawLine = function (arg1, arg2, arg3, arg4, arg5) {\n        if (arg2 instanceof PointF) {\n            var temparg2 = arg2;\n            var temparg3 = arg3;\n            this.drawLine(arg1, temparg2.x, temparg2.y, temparg3.x, temparg3.y);\n        }\n        else {\n            var temparg2 = arg2;\n            var temparg3 = arg3;\n            var temparg4 = arg4;\n            var temparg5 = arg5;\n            this.stateControl(arg1, null, null);\n            var sw = this.streamWriter;\n            sw.beginPath(temparg2, temparg3);\n            sw.appendLineSegment(temparg4, temparg5);\n            sw.strokePath();\n            this.getResources.getResources().requireProcedureSet(this.procedureSets.pdf);\n        }\n    };\n    /* tslint:disable */\n    PdfGraphics.prototype.drawRectangle = function (arg1, arg2, arg3, arg4, arg5, arg6) {\n        if (arg1 instanceof PdfPen && typeof arg2 === 'number') {\n            var temparg3 = arg3;\n            this.drawRectangle(arg1, null, arg2, temparg3, arg4, arg5);\n        }\n        else if (arg1 instanceof PdfBrush && typeof arg2 === 'number') {\n            var temparg3 = arg3;\n            this.drawRectangle(null, arg1, arg2, temparg3, arg4, arg5);\n        }\n        else {\n            var temparg3 = arg3;\n            var temparg4 = arg4;\n            var temparg5 = arg5;\n            var temparg6 = arg6;\n            if (arg2 instanceof PdfSolidBrush && arg2.color.isEmpty) {\n                arg2 = null;\n            }\n            var temparg1 = arg1;\n            var temparg2 = arg2;\n            this.stateControl(temparg1, temparg2, null);\n            this.streamWriter.appendRectangle(temparg3, temparg4, temparg5, temparg6);\n            this.drawPath(temparg1, temparg2, false);\n        }\n    };\n    PdfGraphics.prototype.drawPath = function (arg1, arg2, arg3, arg4) {\n        if (typeof arg3 === 'boolean') {\n            var temparg3 = arg3;\n            this.drawPath(arg1, arg2, PdfFillMode.Winding, temparg3);\n        }\n        else {\n            var temparg3 = arg3;\n            var temparg4 = arg4;\n            var isPen = arg1 != null;\n            var isBrush = arg2 != null;\n            var isEvenOdd = (temparg3 === PdfFillMode.Alternate);\n            if (isPen && isBrush) {\n                this.streamWriter.fillStrokePath(isEvenOdd);\n            }\n            else if (!isPen && !isBrush) {\n                this.streamWriter.endPath();\n            }\n            else if (isPen) {\n                this.streamWriter.strokePath();\n            }\n            else {\n                this.streamWriter.fillPath(isEvenOdd);\n            }\n        }\n    };\n    /* tslint:disable */\n    PdfGraphics.prototype.drawImage = function (arg1, arg2, arg3, arg4, arg5) {\n        if (typeof arg2 === 'number' && typeof arg3 === 'number' && typeof arg4 === 'undefined') {\n            var size = arg1.physicalDimension;\n            this.drawImage(arg1, arg2, arg3, size.width, size.height);\n        }\n        else {\n            var temparg2 = arg2;\n            var temparg3 = arg3;\n            var temparg4 = arg4;\n            var temparg5 = arg5;\n            arg1.save();\n            var matrix = new PdfTransformationMatrix();\n            this.getTranslateTransform(temparg2, (temparg3 + temparg5), matrix);\n            this.getScaleTransform(arg4, arg5, matrix);\n            this.pdfStreamWriter.write('q');\n            this.pdfStreamWriter.modifyCtm(matrix);\n            // Output template.\n            var resources = this.getResources.getResources();\n            if (typeof this.pageLayer !== 'undefined' && this.page != null) {\n                resources.document = this.page.document;\n            }\n            var name_2 = resources.getName(arg1);\n            if (typeof this.pageLayer !== 'undefined') {\n                this.page.setResources(resources);\n            }\n            this.pdfStreamWriter.executeObject(name_2);\n            this.pdfStreamWriter.write(Operators.restoreState);\n            this.pdfStreamWriter.write(Operators.newLine);\n            var resource = this.getResources.getResources();\n            resource.requireProcedureSet(this.procedureSets.imageB);\n            resource.requireProcedureSet(this.procedureSets.imageC);\n            resource.requireProcedureSet(this.procedureSets.imageI);\n            resource.requireProcedureSet(this.procedureSets.text);\n        }\n    };\n    //Implementation\n    /* tslint:disable */\n    /**\n     * Returns `bounds` of the line info.\n     * @private\n     */\n    PdfGraphics.prototype.getLineBounds = function (lineIndex, result, font, layoutRectangle, format) {\n        var bounds;\n        if (!result.empty && lineIndex < result.lineCount && lineIndex >= 0) {\n            var line = result.lines[lineIndex];\n            var vShift = this.getTextVerticalAlignShift(result.actualSize.height, layoutRectangle.height, format);\n            var y = vShift + layoutRectangle.y + (result.lineHeight * lineIndex);\n            var lineWidth = line.width;\n            var hShift = this.getHorizontalAlignShift(lineWidth, layoutRectangle.width, format);\n            var lineIndent = this.getLineIndent(line, format, layoutRectangle, (lineIndex === 0));\n            hShift += (!this.rightToLeft(format)) ? lineIndent : 0;\n            var x = layoutRectangle.x + hShift;\n            /* tslint:disable */\n            var width = (!this.shouldJustify(line, layoutRectangle.width, format)) ? lineWidth - lineIndent : layoutRectangle.width - lineIndent; /* tslint:enable */\n            var height = result.lineHeight;\n            bounds = new RectangleF(x, y, width, height);\n        }\n        else {\n            bounds = new RectangleF(0, 0, 0, 0);\n        }\n        return bounds;\n    };\n    /**\n     * Creates `lay outed rectangle` depending on the text settings.\n     * @private\n     */\n    PdfGraphics.prototype.checkCorrectLayoutRectangle = function (textSize, x, y, format) {\n        var layoutedRectangle = new RectangleF(x, y, textSize.width, textSize.width);\n        if (format != null) {\n            switch (format.alignment) {\n                case PdfTextAlignment.Center:\n                    layoutedRectangle.x -= layoutedRectangle.width / 2;\n                    break;\n                case PdfTextAlignment.Right:\n                    layoutedRectangle.x -= layoutedRectangle.width;\n                    break;\n            }\n            switch (format.lineAlignment) {\n                case PdfVerticalAlignment.Middle:\n                    layoutedRectangle.y -= layoutedRectangle.height / 2;\n                    break;\n                case PdfVerticalAlignment.Bottom:\n                    layoutedRectangle.y -= layoutedRectangle.height;\n                    break;\n            }\n        }\n        return layoutedRectangle;\n    };\n    /**\n     * Sets the `layer` for the graphics.\n     * @private\n     */\n    PdfGraphics.prototype.setLayer = function (layer) {\n        this.pageLayer = layer;\n        var page = layer.page;\n        if (page != null && typeof page !== 'undefined') {\n            page.beginSave = this.pageSave;\n        }\n    };\n    /**\n     * Adding page number field before page saving.\n     * @private\n     */\n    /* tslint:disable */\n    PdfGraphics.prototype.pageSave = function (page) {\n        if (page.graphics.automaticFields != null) {\n            for (var i = 0; i < page.graphics.automaticFields.automaticFields.length; i++) {\n                var fieldInfo = page.graphics.automaticFields.automaticFields[i];\n                fieldInfo.field.performDraw(page.graphics, fieldInfo.location, fieldInfo.scalingX, fieldInfo.scalingY);\n            }\n        }\n    };\n    /**\n     * `Draws a layout result`.\n     * @private\n     */\n    PdfGraphics.prototype.drawStringLayoutResult = function (result, font, pen, brush, layoutRectangle, format) {\n        if (!result.empty) {\n            this.applyStringSettings(font, pen, brush, format, layoutRectangle);\n            // Set text scaling\n            var textScaling = (format != null) ? format.horizontalScalingFactor : 100.0;\n            if (textScaling !== this.previousTextScaling && !this.isEmfTextScaled) {\n                this.pdfStreamWriter.setTextScaling(textScaling);\n                this.previousTextScaling = textScaling;\n            }\n            var height = (format == null || format.lineSpacing === 0) ? font.height : format.lineSpacing + font.height;\n            var subScript = (format != null && format.subSuperScript === PdfSubSuperScript.SubScript);\n            var shift = 0;\n            shift = (subScript) ? height - (font.height + font.metrics.getDescent(format)) : (height - font.metrics.getAscent(format));\n            this.shift = shift;\n            this.pdfStreamWriter.startNextLine(layoutRectangle.x, layoutRectangle.y - shift);\n            this.pdfStreamWriter.setLeading(+height);\n            var resultHeight = 0;\n            var remainingString = '';\n            for (var i = 0; i < result.lines.length; i++) {\n                resultHeight += result.lineHeight;\n                if ((layoutRectangle.y + resultHeight) > this.clientSize.height) {\n                    this.startCutIndex = i;\n                    break;\n                }\n            }\n            for (var j = this.startCutIndex; (j < result.lines.length && j >= 0); j++) {\n                remainingString += result.lines[j].text;\n            }\n            var bounds = new RectangleF(layoutRectangle.x, layoutRectangle.y, layoutRectangle.width, layoutRectangle.height);\n            this.drawLayoutResult(result, font, format, layoutRectangle);\n            this.underlineStrikeoutText(pen, brush, result, font, bounds, format);\n            this.isEmfPlus = false;\n            this.isUseFontSize = false;\n            if (this.startCutIndex !== -1) {\n                var page = this.getNextPage();\n                page.graphics.drawString(remainingString, font, pen, brush, layoutRectangle.x, 0, layoutRectangle.width, 0, format);\n            }\n        }\n        else {\n            throw new Error('ArgumentNullException:result');\n        }\n    };\n    /**\n     * Gets the `next page`.\n     * @private\n     */\n    PdfGraphics.prototype.getNextPage = function () {\n        var section = this.currentPage.section;\n        var nextPage = null;\n        var index = section.indexOf(this.currentPage);\n        if (index === section.count - 1) {\n            nextPage = section.add();\n        }\n        else {\n            nextPage = section.getPages()[index + 1];\n        }\n        return nextPage;\n    };\n    PdfGraphics.prototype.setClip = function (rectangle, mode) {\n        if (typeof mode === 'undefined') {\n            this.setClip(rectangle, PdfFillMode.Winding);\n        }\n        else {\n            this.pdfStreamWriter.appendRectangle(rectangle);\n            this.pdfStreamWriter.clipPath((mode === PdfFillMode.Alternate));\n        }\n    };\n    /**\n     * Applies all the `text settings`.\n     * @private\n     */\n    PdfGraphics.prototype.applyStringSettings = function (font, pen, brush, format, bounds) {\n        var setLineWidth = false;\n        var tm = this.getTextRenderingMode(pen, brush, format);\n        this.stateControl(pen, brush, font, format);\n        this.pdfStreamWriter.beginText();\n        if ((tm) !== this.previousTextRenderingMode) {\n            this.pdfStreamWriter.setTextRenderingMode(tm);\n            this.previousTextRenderingMode = tm;\n        }\n        // Set character spacing.\n        var cs = (format != null) ? format.characterSpacing : 0;\n        if (cs !== this.previousCharacterSpacing && !this.isEmfTextScaled) {\n            this.pdfStreamWriter.setCharacterSpacing(cs);\n            this.previousCharacterSpacing = cs;\n        }\n        // Set word spacing.\n        // NOTE: it works only if the space code is equal to 32 (0x20).\n        var ws = (format != null) ? format.wordSpacing : 0;\n        if (ws !== this.previousWordSpacing) {\n            this.pdfStreamWriter.setWordSpacing(ws);\n            this.previousWordSpacing = ws;\n        }\n    };\n    /**\n     * Calculates `shift value` if the text is vertically aligned.\n     * @private\n     */\n    PdfGraphics.prototype.getTextVerticalAlignShift = function (textHeight, boundsHeight, format) {\n        var shift = 0;\n        if (boundsHeight >= 0 && format != null && format.lineAlignment !== PdfVerticalAlignment.Top) {\n            switch (format.lineAlignment) {\n                case PdfVerticalAlignment.Middle:\n                    shift = (boundsHeight - textHeight) / 2;\n                    break;\n                case PdfVerticalAlignment.Bottom:\n                    shift = boundsHeight - textHeight;\n                    break;\n            }\n        }\n        return shift;\n    };\n    /* tslint:disable */\n    /**\n     * `Draws layout result`.\n     * @private\n     */\n    PdfGraphics.prototype.drawLayoutResult = function (result, font, format, layoutRectangle) {\n        var vAlignShift = this.getTextVerticalAlignShift(result.actualSize.height, layoutRectangle.height, format);\n        if (vAlignShift !== 0) {\n            this.pdfStreamWriter.startNextLine(0, vAlignShift);\n        }\n        var lines = result.lines;\n        for (var i = 0, len = lines.length; (i < len && i !== this.startCutIndex); i++) {\n            var lineInfo = lines[i];\n            var line = lineInfo.text;\n            var lineWidth = lineInfo.width;\n            var hAlignShift = this.getHorizontalAlignShift(lineWidth, layoutRectangle.width, format);\n            var lineIndent = this.getLineIndent(lineInfo, format, layoutRectangle, (i === 0));\n            hAlignShift += (!this.rightToLeft(format)) ? lineIndent : 0;\n            if (hAlignShift !== 0 && !this.isEmfTextScaled) {\n                this.pdfStreamWriter.startNextLine(hAlignShift, 0);\n            }\n            this.drawAsciiLine(lineInfo, layoutRectangle, font, format);\n            if (hAlignShift !== 0 && !this.isEmfTextScaled) {\n                this.pdfStreamWriter.startNextLine(-hAlignShift, 0);\n            }\n            if (this.isOverloadWithPosition && lines.length > 1) {\n                this.pdfStreamWriter.startNextLine(-(layoutRectangle.x), 0);\n                layoutRectangle.x = 0;\n                layoutRectangle.width = this.clientSize.width;\n                this.isOverloadWithPosition = false;\n                this.isPointOverload = true;\n            }\n        }\n        this.getResources.getResources().requireProcedureSet(this.procedureSets.text);\n        if (vAlignShift !== 0) {\n            this.pdfStreamWriter.startNextLine(0, -(vAlignShift - result.lineHeight));\n        }\n        this.pdfStreamWriter.endText();\n    };\n    /**\n     * `Draws Ascii line`.\n     * @private\n     */\n    PdfGraphics.prototype.drawAsciiLine = function (lineInfo, layoutRectangle, font, format) {\n        this.justifyLine(lineInfo, layoutRectangle.width, format);\n        var value = '';\n        if (lineInfo.text.indexOf('(') !== -1 || lineInfo.text.indexOf(')') !== -1) {\n            for (var i = 0; i < lineInfo.text.length; i++) {\n                if (lineInfo.text[i] === '(') {\n                    value += '\\\\\\(';\n                }\n                else if (lineInfo.text[i] === ')') {\n                    value += '\\\\\\)';\n                }\n                else {\n                    value += lineInfo.text[i];\n                }\n            }\n        }\n        if (value === '') {\n            value = lineInfo.text;\n        }\n        var line = '(' + value + ')';\n        this.pdfStreamWriter.showNextLineText(new PdfString(line));\n    };\n    /**\n     * `Justifies` the line if needed.\n     * @private\n     */\n    PdfGraphics.prototype.justifyLine = function (lineInfo, boundsWidth, format) {\n        var line = lineInfo.text;\n        var lineWidth = lineInfo.width;\n        var shouldJustify = this.shouldJustify(lineInfo, boundsWidth, format);\n        var hasWordSpacing = (format != null && format.wordSpacing !== 0);\n        var symbols = StringTokenizer.spaces;\n        var whitespacesCount = StringTokenizer.getCharsCount(line, symbols);\n        var wordSpace = 0;\n        if (shouldJustify) {\n            // Correct line width.\n            if (hasWordSpacing) {\n                lineWidth -= (whitespacesCount * format.wordSpacing);\n            }\n            var difference = boundsWidth - lineWidth;\n            wordSpace = difference / whitespacesCount;\n            this.pdfStreamWriter.setWordSpacing(wordSpace);\n        }\n        else {\n            // If there is justifying, but the line shouldn't be justified, restore default word spacing.\n            if (hasWordSpacing) {\n                this.pdfStreamWriter.setWordSpacing(format.wordSpacing);\n            }\n            else {\n                this.pdfStreamWriter.setWordSpacing(0);\n            }\n        }\n        return wordSpace;\n    };\n    /**\n     * `Reset` or reinitialize the current graphic value.\n     * @private\n     */\n    PdfGraphics.prototype.reset = function (size) {\n        this.canvasSize = size;\n        this.streamWriter.clear();\n        this.initialize();\n        this.initializeCoordinates();\n    };\n    /**\n     * Checks whether the line should be `justified`.\n     * @private\n     */\n    PdfGraphics.prototype.shouldJustify = function (lineInfo, boundsWidth, format) {\n        var line = lineInfo.text;\n        var lineWidth = lineInfo.width;\n        var justifyStyle = (format != null && format.alignment === PdfTextAlignment.Justify);\n        var goodWidth = (boundsWidth >= 0 && lineWidth < boundsWidth);\n        var symbols = StringTokenizer.spaces;\n        var whitespacesCount = StringTokenizer.getCharsCount(line, symbols);\n        var hasSpaces = (whitespacesCount > 0 && line[0] !== StringTokenizer.whiteSpace);\n        var goodLineBreakStyle = ((lineInfo.lineType & LineType.LayoutBreak) > 0);\n        /* tslint:disable */\n        var shouldJustify = (justifyStyle && goodWidth && hasSpaces && (goodLineBreakStyle || format.alignment === PdfTextAlignment.Justify)); /* tslint:enable */\n        return shouldJustify;\n    };\n    /* tslint:disable */\n    /**\n     * Emulates `Underline, Strikeout` of the text if needed.\n     * @private\n     */\n    PdfGraphics.prototype.underlineStrikeoutText = function (pen, brush, result, font, layoutRectangle, format) {\n        if (font.underline || font.strikeout) {\n            // Calculate line width.\n            var linePen = this.createUnderlineStikeoutPen(pen, brush, font, format);\n            if (linePen != null) {\n                // Approximate line positions.\n                var vShift = this.getTextVerticalAlignShift(result.actualSize.height, layoutRectangle.height, format);\n                var underlineYOffset = 0;\n                underlineYOffset = layoutRectangle.y + vShift + font.metrics.getAscent(format) + 1.5 * linePen.width;\n                var strikeoutYOffset = layoutRectangle.y + vShift + font.metrics.getHeight(format) / 2 + 1.5 * linePen.width;\n                var lines = result.lines;\n                // Run through the text and draw lines.\n                for (var i = 0, len = result.lineCount; i < len; i++) {\n                    var lineInfo = lines[i];\n                    var line = lineInfo.text;\n                    var lineWidth = lineInfo.width;\n                    var hShift = this.getHorizontalAlignShift(lineWidth, layoutRectangle.width, format);\n                    var lineIndent = this.getLineIndent(lineInfo, format, layoutRectangle, (i === 0));\n                    hShift += (!this.rightToLeft(format)) ? lineIndent : 0;\n                    var x1 = layoutRectangle.x + hShift;\n                    /* tslint:disable */\n                    var x2 = (!this.shouldJustify(lineInfo, layoutRectangle.width, format)) ? x1 + lineWidth - lineIndent : x1 + layoutRectangle.width - lineIndent;\n                    /* tslint:enable */\n                    if (font.underline) {\n                        var y = underlineYOffset;\n                        this.drawLine(linePen, x1, y, x2, y);\n                        underlineYOffset += result.lineHeight;\n                    }\n                    if (font.strikeout) {\n                        var y = strikeoutYOffset;\n                        this.drawLine(linePen, x1, y, x2, y);\n                        strikeoutYOffset += result.lineHeight;\n                    }\n                    if (this.isPointOverload && lines.length > 1) {\n                        layoutRectangle.x = 0;\n                        layoutRectangle.width = this.clientSize.width;\n                    }\n                }\n                this.isPointOverload = false;\n            }\n        }\n    };\n    /**\n     * `Creates a pen` for drawing lines in the text.\n     * @private\n     */\n    PdfGraphics.prototype.createUnderlineStikeoutPen = function (pen, brush, font, format) {\n        // Calculate line width.\n        var lineWidth = font.metrics.getSize(format) / 20;\n        var linePen = null;\n        // Create a pen fo the lines.\n        if (pen != null) {\n            linePen = new PdfPen(pen.color, lineWidth);\n        }\n        else if (brush != null) {\n            linePen = new PdfPen(brush, lineWidth);\n        }\n        return linePen;\n    };\n    /**\n     * Return `text rendering mode`.\n     * @private\n     */\n    PdfGraphics.prototype.getTextRenderingMode = function (pen, brush, format) {\n        var tm = TextRenderingMode.None;\n        if (pen != null && brush != null) {\n            tm = TextRenderingMode.FillStroke;\n        }\n        else if (pen != null) {\n            tm = TextRenderingMode.Stroke;\n        }\n        else {\n            tm = TextRenderingMode.Fill;\n        }\n        if (format != null && format.clipPath) {\n            tm |= TextRenderingMode.ClipFlag;\n        }\n        return tm;\n    };\n    /**\n     * Returns `line indent` for the line.\n     * @private\n     */\n    PdfGraphics.prototype.getLineIndent = function (lineInfo, format, layoutBounds, firstLine) {\n        var lineIndent = 0;\n        var firstParagraphLine = ((lineInfo.lineType & LineType.FirstParagraphLine) > 0);\n        if (format != null && firstParagraphLine) {\n            lineIndent = (firstLine) ? format.firstLineIndent : format.paragraphIndent;\n            lineIndent = (layoutBounds.width > 0) ? Math.min(layoutBounds.width, lineIndent) : lineIndent;\n        }\n        return lineIndent;\n    };\n    /**\n     * Calculates shift value if the line is `horizontaly aligned`.\n     * @private\n     */\n    PdfGraphics.prototype.getHorizontalAlignShift = function (lineWidth, boundsWidth, format) {\n        var shift = 0;\n        if (boundsWidth >= 0 && format != null && format.alignment !== PdfTextAlignment.Left) {\n            switch (format.alignment) {\n                case PdfTextAlignment.Center:\n                    shift = (boundsWidth - lineWidth) / 2;\n                    break;\n                case PdfTextAlignment.Right:\n                    shift = boundsWidth - lineWidth;\n                    break;\n            }\n        }\n        return shift;\n    };\n    /**\n     * Gets or sets the value that indicates `text direction` mode.\n     * @private\n     */\n    PdfGraphics.prototype.rightToLeft = function (format) {\n        var rtl = (format != null && format.rightToLeft);\n        return rtl;\n    };\n    PdfGraphics.prototype.stateControl = function (pen, brush, font, format) {\n        if (typeof format === 'undefined') {\n            this.stateControl(pen, brush, font, null);\n        }\n        else {\n            var saveState = false;\n            if (brush !== null) {\n                var solidBrush = brush;\n                if (typeof this.pageLayer !== 'undefined' && this.pageLayer != null) {\n                    if (this.colorSpaceChanged === false) {\n                        this.lastDocumentCS = this.pageLayer.page.document.colorSpace;\n                        this.lastGraphicsCS = this.pageLayer.page.graphics.colorSpace;\n                        this.colorSpace = this.pageLayer.page.document.colorSpace;\n                        this.currentColorSpace = this.pageLayer.page.document.colorSpace;\n                        this.colorSpaceChanged = true;\n                    }\n                }\n                this.initCurrentColorSpace(this.currentColorSpace);\n            }\n            else if (pen != null) {\n                var pdfPen = pen;\n                if (typeof this.pageLayer !== 'undefined' && this.pageLayer != null) {\n                    /* tslint:disable */\n                    this.colorSpace = this.pageLayer.page.document.colorSpace;\n                    this.currentColorSpace = this.pageLayer.page.document.colorSpace;\n                }\n                this.initCurrentColorSpace(this.currentColorSpace);\n            }\n            this.penControl(pen, saveState);\n            this.brushControl(brush, saveState);\n            this.fontControl(font, format, saveState);\n        }\n    };\n    /**\n     * Initializes the `current color space`.\n     * @private\n     */\n    PdfGraphics.prototype.initCurrentColorSpace = function (colorspace) {\n        var re = this.getResources.getResources();\n        if (!this.bCSInitialized) {\n            this.pdfStreamWriter.setColorSpace('Device' + this.currentColorSpaces[this.currentColorSpace], true);\n            this.pdfStreamWriter.setColorSpace('Device' + this.currentColorSpaces[this.currentColorSpace], false);\n            this.bCSInitialized = true;\n        }\n    };\n    /**\n     * Controls the `pen state`.\n     * @private\n     */\n    PdfGraphics.prototype.penControl = function (pen, saveState) {\n        if (pen != null) {\n            this.currentPen = pen;\n            this.colorSpace = PdfColorSpace.Rgb;\n            /* tslint:disable */\n            pen.monitorChanges(this.currentPen, this.pdfStreamWriter, this.getResources, saveState, this.colorSpace, this.matrix.clone());\n            /* tslint:enable */\n            this.currentPen = pen.clone();\n        }\n    };\n    /**\n     * Controls the `brush state`.\n     * @private\n     */\n    PdfGraphics.prototype.brushControl = function (brush, saveState) {\n        if (brush != null) {\n            this.currentBrush = brush;\n            /* tslint:disable */\n            brush.monitorChanges(this.currentBrush, this.pdfStreamWriter, this.getResources, saveState, this.colorSpace);\n            /* tslint:enable */\n            this.currentBrush = brush;\n            brush = null;\n        }\n    };\n    /**\n     * Saves the font and other `font settings`.\n     * @private\n     */\n    PdfGraphics.prototype.fontControl = function (font, format, saveState) {\n        if (font != null) {\n            var curSubSuper = (format != null) ? format.subSuperScript : PdfSubSuperScript.None;\n            /* tslint:disable */\n            var prevSubSuper = (this.currentStringFormat != null) ? this.currentStringFormat.subSuperScript : PdfSubSuperScript.None; /* tslint:enable */\n            if (saveState || font !== this.currentFont || curSubSuper !== prevSubSuper) {\n                var resources = this.getResources.getResources();\n                this.currentFont = font;\n                this.currentStringFormat = format;\n                var size = font.metrics.getSize(format);\n                /* tslint:disable */\n                this.isEmfTextScaled = false;\n                var fontName = resources.getName(font);\n                this.pdfStreamWriter.setFont(font, fontName, size);\n            }\n        }\n    };\n    PdfGraphics.prototype.setTransparency = function (arg1, arg2, arg3) {\n        if (typeof arg2 === 'undefined') {\n            this.istransparencySet = true;\n            this.setTransparency(arg1, arg1, PdfBlendMode.Normal);\n        }\n        else if (typeof arg2 === 'number' && typeof arg3 === 'undefined') {\n            this.setTransparency(arg1, arg2, PdfBlendMode.Normal);\n        }\n        else {\n            if (this.trasparencies == null) {\n                this.trasparencies = new TemporaryDictionary();\n            }\n            var transp = null;\n            var td = new TransparencyData(arg1, arg2, arg3);\n            if (this.trasparencies.containsKey(td)) {\n                transp = this.trasparencies.getValue(td);\n            }\n            if (transp == null) {\n                transp = new PdfTransparency(arg1, arg2, arg3);\n                this.trasparencies.setValue(td, transp);\n            }\n            var resources = this.getResources.getResources();\n            var name_3 = resources.getName(transp);\n            var sw = this.streamWriter;\n            sw.setGraphicsState(name_3);\n        }\n    };\n    PdfGraphics.prototype.clipTranslateMargins = function (x, y, left, top, right, bottom) {\n        if (x instanceof RectangleF && typeof y === 'undefined') {\n            this.clipBounds = x;\n            this.pdfStreamWriter.writeComment('Clip margins.');\n            this.pdfStreamWriter.appendRectangle(x);\n            this.pdfStreamWriter.closePath();\n            this.pdfStreamWriter.clipPath(false);\n            this.pdfStreamWriter.writeComment('Translate co-ordinate system.');\n            this.translateTransform(x.x, x.y);\n        }\n        else if (typeof x === 'number') {\n            var clipArea = new RectangleF(left, top, this.size.width - left - right, this.size.height - top - bottom);\n            this.clipBounds = clipArea;\n            this.pdfStreamWriter.writeComment(\"Clip margins.\");\n            this.pdfStreamWriter.appendRectangle(clipArea);\n            this.pdfStreamWriter.closePath();\n            this.pdfStreamWriter.clipPath(false);\n            this.pdfStreamWriter.writeComment(\"Translate co-ordinate system.\");\n            this.translateTransform(x, y);\n        }\n    };\n    /**\n     * `Updates y` co-ordinate.\n     * @private\n     */\n    PdfGraphics.prototype.updateY = function (y) {\n        return -y;\n    };\n    /**\n     * Used to `translate the transformation`.\n     * ```typescript\n     * // create a new PDF document\n     * let document : PdfDocument = new PdfDocument();\n     * // create a new page\n     * let page1 : PdfPage = document.pages.add();\n     * // set pen\n     * let pen : PdfPen = new PdfPen(new PdfColor(0, 0, 0));\n     * //\n     * // set translate transform\n     * page1.graphics.translateTransform(100, 100);\n     * //\n     * // draw the rectangle after applying translate transform\n     * page1.graphics.drawRectangle(pen, new RectangleF({x : 0, y : 0}, {width : 100, height : 50}));\n     * // save the document.\n     * document.save('output.pdf');\n     * // destroy the document\n     * document.destroy();\n     * ```\n     * @param offsetX The x-coordinate of the translation.\n     * @param offsetY The y-coordinate of the translation.\n     */\n    PdfGraphics.prototype.translateTransform = function (offsetX, offsetY) {\n        var matrix = new PdfTransformationMatrix();\n        this.getTranslateTransform(offsetX, offsetY, matrix);\n        this.pdfStreamWriter.modifyCtm(matrix);\n        this.matrix.multiply(matrix);\n    };\n    /**\n     * `Translates` coordinates of the input matrix.\n     * @private\n     */\n    PdfGraphics.prototype.getTranslateTransform = function (x, y, input) {\n        input.translate(x, this.updateY(y));\n        return input;\n    };\n    /* tslint:disable */\n    /**\n     * Applies the specified `scaling operation` to the transformation matrix of this Graphics by prepending it to the object's transformation matrix.\n     * ```typescript\n     * // create a new PDF document\n     * let document : PdfDocument = new PdfDocument();\n     * // create a new page\n     * let page1 : PdfPage = document.pages.add();\n     * // create pen\n     * let pen : PdfPen = new PdfPen(new PdfColor(0, 0, 0));\n     * //\n     * // apply scaling trasformation\n     * page1.graphics.scaleTransform(1.5, 2);\n     * //\n     * // draw the rectangle after applying scaling transform\n     * page1.graphics.drawRectangle(pen, new RectangleF({x : 100, y : 100}, {width : 100, height : 50}));\n     * // save the document.\n     * document.save('output.pdf');\n     * // destroy the document\n     * document.destroy();\n     * ```\n     * @param scaleX Scale factor in the x direction.\n     * @param scaleY Scale factor in the y direction.\n     */\n    /* tslint:enable */\n    PdfGraphics.prototype.scaleTransform = function (scaleX, scaleY) {\n        var matrix = new PdfTransformationMatrix();\n        this.getScaleTransform(scaleX, scaleY, matrix);\n        this.pdfStreamWriter.modifyCtm(matrix);\n        this.matrix.multiply(matrix);\n    };\n    /**\n     * `Scales` coordinates of the input matrix.\n     * @private\n     */\n    PdfGraphics.prototype.getScaleTransform = function (x, y, input) {\n        if (input == null) {\n            input = new PdfTransformationMatrix();\n        }\n        input.scale(x, y);\n        return input;\n    };\n    /**\n     * Applies the specified `rotation` to the transformation matrix of this Graphics.\n     * ```typescript\n     * // create a new PDF document\n     * let document : PdfDocument = new PdfDocument();\n     * // create a new page\n     * let page1 : PdfPage = document.pages.add();\n     * // create pen\n     * let pen : PdfPen = new PdfPen(new PdfColor(0, 0, 0));\n     * //\n     * // set RotateTransform with 25 degree of angle\n     * page1.graphics.rotateTransform(25);\n     * //\n     * // draw the rectangle after RotateTransformation\n     * page1.graphics.drawRectangle(pen, new RectangleF({x : 100, y : 100}, {width : 100, height : 50}));\n     * // save the document.\n     * document.save('output.pdf');\n     * // destroy the document\n     * document.destroy();\n     * ```\n     * @param angle Angle of rotation in degrees.\n     */\n    PdfGraphics.prototype.rotateTransform = function (angle) {\n        var matrix = new PdfTransformationMatrix();\n        this.getRotateTransform(angle, matrix);\n        this.pdfStreamWriter.modifyCtm(matrix);\n        this.matrix.multiply(matrix);\n    };\n    /**\n     * `Initializes coordinate system`.\n     * @private\n     */\n    PdfGraphics.prototype.initializeCoordinates = function () {\n        // Matrix equation: TM(T-1)=M', where T=[1 0 0 -1 0 h]\n        this.pdfStreamWriter.writeComment('Change co-ordinate system to left/top.');\n        // Translate co-ordinates only, don't flip.\n        if (this.mediaBoxUpperRightBound !== -(this.size.height)) {\n            if (this.cropBox == null) {\n                if (this.mediaBoxUpperRightBound === this.size.height || this.mediaBoxUpperRightBound === 0) {\n                    this.translateTransform(0, this.updateY(this.size.height));\n                }\n                else {\n                    this.translateTransform(0, this.updateY(this.mediaBoxUpperRightBound));\n                }\n            }\n        }\n    };\n    /**\n     * `Rotates` coordinates of the input matrix.\n     * @private\n     */\n    PdfGraphics.prototype.getRotateTransform = function (angle, input) {\n        if (input == null || typeof input === 'undefined') {\n            input = new PdfTransformationMatrix();\n        }\n        input.rotate(this.updateY(angle));\n        return input;\n    };\n    /**\n     * `Saves` the current state of this Graphics and identifies the saved state with a GraphicsState.\n     * ```typescript\n     * // create a new PDF document\n     * let document : PdfDocument = new PdfDocument();\n     * // create a new page\n     * let page1 : PdfPage = document.pages.add();\n     * // create pen\n     * let pen : PdfPen = new PdfPen(new PdfColor(0, 0, 0));\n     * //\n     * // save the graphics state\n     * let state1 : PdfGraphicsState = page1.graphics.save();\n     * //\n     * page1.graphics.scaleTransform(1.5, 2);\n     * // draw the rectangle\n     * page1.graphics.drawRectangle(pen, new RectangleF({x : 100, y : 100}, {width : 100, height : 50}));\n     * // restore the graphics state\n     * page1.graphics.restore(state1);\n     * // save the document.\n     * document.save('output.pdf');\n     * // destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfGraphics.prototype.save = function () {\n        var state = new PdfGraphicsState(this, this.matrix.clone());\n        state.brush = this.currentBrush;\n        state.pen = this.currentPen;\n        state.font = this.currentFont;\n        state.colorSpace = this.currentColorSpace;\n        state.characterSpacing = this.previousCharacterSpacing;\n        state.wordSpacing = this.previousWordSpacing;\n        state.textScaling = this.previousTextScaling;\n        state.textRenderingMode = this.previousTextRenderingMode;\n        this.graphicsState.push(state);\n        this.pdfStreamWriter.saveGraphicsState();\n        return state;\n    };\n    PdfGraphics.prototype.restore = function (state) {\n        if (typeof state === 'undefined') {\n            if (this.graphicsState.length > 0) {\n                this.doRestoreState();\n            }\n        }\n        else {\n            if (this.graphicsState.indexOf(state) !== -1) {\n                for (;;) {\n                    if (this.graphicsState.length === 0) {\n                        break;\n                    }\n                    var popState = this.doRestoreState();\n                    if (popState === state) {\n                        break;\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * `Restores graphics state`.\n     * @private\n     */\n    PdfGraphics.prototype.doRestoreState = function () {\n        var state = this.graphicsState.pop();\n        this.transformationMatrix = state.matrix;\n        this.currentBrush = state.brush;\n        this.currentPen = state.pen;\n        this.currentFont = state.font;\n        this.currentColorSpace = state.colorSpace;\n        this.previousCharacterSpacing = state.characterSpacing;\n        this.previousWordSpacing = state.wordSpacing;\n        this.previousTextScaling = state.textScaling;\n        this.previousTextRenderingMode = state.textRenderingMode;\n        this.pdfStreamWriter.restoreGraphicsState();\n        return state;\n    };\n    // Constants\n    /**\n     * Specifies the mask of `path type values`.\n     * @private\n     */\n    PdfGraphics.pathTypesValuesMask = 0xf;\n    /**\n     * Checks whether the object is `transparencyObject`.\n     * @hidden\n     * @private\n     */\n    PdfGraphics.transparencyObject = false;\n    return PdfGraphics;\n}());\nexport { PdfGraphics };\n/**\n * `GetResourceEventHandler` class is alternate for event handlers and delegates.\n * @private\n * @hidden\n */\nvar GetResourceEventHandler = /** @class */ (function () {\n    /**\n     * Initialize instance of `GetResourceEventHandler` class.\n     * Alternate for event handlers and delegates.\n     * @private\n     */\n    function GetResourceEventHandler(sender) {\n        this.sender = sender;\n    }\n    /**\n     * Return the instance of `PdfResources` class.\n     * @private\n     */\n    GetResourceEventHandler.prototype.getResources = function () {\n        return this.sender.getResources();\n    };\n    return GetResourceEventHandler;\n}());\nexport { GetResourceEventHandler };\nvar PdfGraphicsState = /** @class */ (function () {\n    function PdfGraphicsState(graphics, matrix) {\n        /**\n         * Stores `previous rendering mode`.\n         * @default TextRenderingMode.Fill\n         * @private\n         */\n        this.internalTextRenderingMode = TextRenderingMode.Fill;\n        /**\n         * `Previous character spacing` value or 0.\n         * @default 0.0\n         * @private\n         */\n        this.internalCharacterSpacing = 0.0;\n        /**\n         * `Previous word spacing` value or 0.\n         * @default 0.0\n         * @private\n         */\n        this.internalWordSpacing = 0.0;\n        /**\n         * The previously used `text scaling value`.\n         * @default 100.0\n         * @private\n         */\n        this.internalTextScaling = 100.0;\n        /**\n         * `Current color space`.\n         * @default PdfColorSpace.Rgb\n         * @private\n         */\n        this.pdfColorSpace = PdfColorSpace.Rgb;\n        if (typeof graphics !== 'undefined') {\n            this.pdfGraphics = graphics;\n            this.transformationMatrix = matrix;\n        }\n    }\n    Object.defineProperty(PdfGraphicsState.prototype, \"graphics\", {\n        // Properties\n        /**\n         * Gets the parent `graphics object`.\n         * @private\n         */\n        get: function () {\n            return this.pdfGraphics;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphicsState.prototype, \"matrix\", {\n        /**\n         * Gets the `current matrix`.\n         * @private\n         */\n        get: function () {\n            return this.transformationMatrix;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphicsState.prototype, \"characterSpacing\", {\n        /**\n         * Gets or sets the `current character spacing`.\n         * @private\n         */\n        get: function () {\n            return this.internalCharacterSpacing;\n        },\n        set: function (value) {\n            this.internalCharacterSpacing = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphicsState.prototype, \"wordSpacing\", {\n        /**\n         * Gets or sets the `word spacing` value.\n         * @private\n         */\n        get: function () {\n            return this.internalWordSpacing;\n        },\n        set: function (value) {\n            this.internalWordSpacing = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphicsState.prototype, \"textScaling\", {\n        /**\n         * Gets or sets the `text scaling` value.\n         * @private\n         */\n        get: function () {\n            return this.internalTextScaling;\n        },\n        set: function (value) {\n            this.internalTextScaling = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphicsState.prototype, \"pen\", {\n        /**\n         * Gets or sets the `current pen` object.\n         * @private\n         */\n        get: function () {\n            return this.pdfPen;\n        },\n        set: function (value) {\n            this.pdfPen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphicsState.prototype, \"brush\", {\n        /**\n         * Gets or sets the `brush`.\n         * @private\n         */\n        get: function () {\n            return this.pdfBrush;\n        },\n        set: function (value) {\n            this.pdfBrush = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphicsState.prototype, \"font\", {\n        /**\n         * Gets or sets the `current font` object.\n         * @private\n         */\n        get: function () {\n            return this.pdfFont;\n        },\n        set: function (value) {\n            this.pdfFont = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphicsState.prototype, \"colorSpace\", {\n        /**\n         * Gets or sets the `current color space` value.\n         * @private\n         */\n        get: function () {\n            return this.pdfColorSpace;\n        },\n        set: function (value) {\n            this.pdfColorSpace = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphicsState.prototype, \"textRenderingMode\", {\n        /**\n         * Gets or sets the `text rendering mode`.\n         * @private\n         */\n        get: function () {\n            return this.internalTextRenderingMode;\n        },\n        set: function (value) {\n            this.internalTextRenderingMode = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfGraphicsState;\n}());\nexport { PdfGraphicsState };\nvar TransparencyData = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initializes a new instance of the `TransparencyData` class.\n     * @private\n     */\n    function TransparencyData(alphaPen, alphaBrush, blendMode) {\n        this.alphaPen = alphaPen;\n        this.alphaBrush = alphaBrush;\n        this.blendMode = blendMode;\n    }\n    return TransparencyData;\n}());\n","import { PdfStream } from './../primitives/pdf-stream';\nimport { PdfGraphics, GetResourceEventHandler } from './../graphics/pdf-graphics';\nimport { PdfPageLayerCollection } from './pdf-page-layer-collection';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\nimport { PdfColorSpace } from './../graphics/enum';\n/**\n * The `PdfPageLayer` used to create layers in PDF document.\n * @private\n */\nvar PdfPageLayer = /** @class */ (function () {\n    function PdfPageLayer(page, streamClipPageTemplates) {\n        // private bSaved : boolean;\n        /**\n         * Local Variable to store the `color space` of the document.\n         * @private\n         */\n        this.pdfColorSpace = PdfColorSpace.Rgb;\n        /**\n         * Local Variable to set `visibility`.\n         * @default true\n         * @private\n         */\n        this.isVisible = true;\n        /**\n         * Indicates if `Sublayer` is present.\n         * @default false\n         * @private\n         */\n        this.sublayer = false;\n        /**\n         * Local variable to store `length` of the graphics.\n         * @default 0\n         * @private\n         */\n        this.contentLength = 0;\n        /**\n         * Instance for `PdfDictionaryProperties` Class.\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        if (typeof streamClipPageTemplates === 'undefined') {\n            this.pdfPage = page;\n            this.clipPageTemplates = true;\n            this.content = new PdfStream();\n        }\n        else if (streamClipPageTemplates instanceof PdfStream || streamClipPageTemplates === null) {\n            if (page == null) {\n                throw new Error('ArgumentNullException:page');\n            }\n            if (streamClipPageTemplates == null) {\n                throw new Error('ArgumentNullException:stream');\n            }\n            this.pdfPage = page;\n            this.content = streamClipPageTemplates;\n        }\n        else {\n            this.constructor(page);\n            this.clipPageTemplates = streamClipPageTemplates;\n        }\n    }\n    Object.defineProperty(PdfPageLayer.prototype, \"colorSpace\", {\n        // Properties\n        /**\n         * Get or set the `color space`.\n         * @private\n         */\n        get: function () {\n            return this.pdfColorSpace;\n        },\n        set: function (value) {\n            this.pdfColorSpace = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageLayer.prototype, \"page\", {\n        /**\n         * Gets parent `page` of the layer.\n         * @private\n         */\n        get: function () {\n            return this.pdfPage;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageLayer.prototype, \"layerId\", {\n        /**\n         * Gets and Sets the `id of the layer`.\n         * @private\n         */\n        get: function () {\n            return this.layerid;\n        },\n        set: function (value) {\n            this.layerid = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageLayer.prototype, \"name\", {\n        /**\n         * Gets or sets the `name` of the layer.\n         * @private\n         */\n        get: function () {\n            return this.layerName;\n        },\n        set: function (value) {\n            this.layerName = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageLayer.prototype, \"visible\", {\n        /**\n         * Gets or sets the `visibility` of the layer.\n         * @private\n         */\n        get: function () {\n            return this.isVisible;\n        },\n        set: function (value) {\n            this.isVisible = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageLayer.prototype, \"graphics\", {\n        /**\n         * Gets `Graphics` context of the layer, used to draw various graphical content on layer.\n         * @private\n         */\n        get: function () {\n            if ((this.pdfGraphics == null)) {\n                this.initializeGraphics(this.page);\n            }\n            return this.pdfGraphics;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageLayer.prototype, \"layers\", {\n        /**\n         * Gets the collection of `PdfPageLayer`, this collection handle by the class 'PdfPageLayerCollection'.\n         * @private\n         */\n        get: function () {\n            if (this.layer == null) {\n                this.layer = new PdfPageLayerCollection(this.page);\n                this.layer.sublayer = true;\n                return this.layer;\n            }\n            else {\n                return this.layer;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * `Adds` a new PDF Page layer.\n     * @private\n     */\n    PdfPageLayer.prototype.add = function () {\n        var layer = new PdfPageLayer(this.pdfPage);\n        layer.name = '';\n        return layer;\n    };\n    /**\n     * Returns a value indicating the `sign` of a single-precision floating-point number.\n     * @private\n     */\n    PdfPageLayer.prototype.sign = function (number) {\n        if (number === 0) {\n            return 0;\n        }\n        else if (number > 0) {\n            return 1;\n        }\n        else {\n            return -1;\n        }\n    };\n    /**\n     * `Initializes Graphics context` of the layer.\n     * @private\n     */\n    PdfPageLayer.prototype.initializeGraphics = function (page) {\n        var oPage = page;\n        var gr = new GetResourceEventHandler(this.page);\n        var cropBox = null;\n        this.pdfGraphics = new PdfGraphics(page.size, gr, this.content);\n        this.pdfGraphics.mediaBoxUpperRightBound = 0;\n        if (oPage != null) {\n            var sc = oPage.section.parent;\n            if (sc != null) {\n                this.pdfGraphics.colorSpace = sc.document.colorSpace;\n                this.colorSpace = sc.document.colorSpace;\n            }\n        }\n        // Transform coordinates to the left/top and activate margins.\n        var isSame = (this.sign(page.origin.y) === this.sign(page.origin.x));\n        // if (page != null) {\n        if (page.origin.x >= 0 && page.origin.y >= 0 || !(isSame)) {\n            this.pdfGraphics.initializeCoordinates();\n        }\n        else {\n            // this.m_graphics.InitializeCoordinates(page);\n        }\n        var clipRect = oPage.section.getActualBounds(oPage, true);\n        var margins = oPage.section.pageSettings.margins;\n        if (this.clipPageTemplates) {\n            if (page.origin.x >= 0 && page.origin.y >= 0) {\n                this.pdfGraphics.clipTranslateMargins(clipRect);\n            }\n        }\n        else {\n            this.graphics.clipTranslateMargins(clipRect.x, clipRect.y, margins.left, margins.top, margins.right, margins.bottom);\n        }\n        this.pdfGraphics.setLayer(this);\n        // this.bSaved = false;\n    };\n    Object.defineProperty(PdfPageLayer.prototype, \"element\", {\n        // IPdfWrapper Members\n        /**\n         * Gets the wrapped `element`.\n         * @private\n         */\n        get: function () {\n            return this.content;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfPageLayer;\n}());\nexport { PdfPageLayer };\n","/**\n * PdfCollection.ts class for EJ2-PDF\n * The class used to handle the collection of PdF objects.\n */\nvar PdfCollection = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initializes a new instance of the `Collection` class.\n     * @private\n     */\n    function PdfCollection() {\n        //\n    }\n    Object.defineProperty(PdfCollection.prototype, \"count\", {\n        // Properties\n        /**\n         * Gets the `Count` of stored objects.\n         * @private\n         */\n        get: function () {\n            if (typeof this.collection === 'undefined') {\n                this.collection = [];\n            }\n            return this.collection.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCollection.prototype, \"list\", {\n        /**\n         * Gets the `list` of stored objects.\n         * @private\n         */\n        get: function () {\n            if (typeof this.collection === 'undefined') {\n                this.collection = [];\n            }\n            return this.collection;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfCollection;\n}());\nexport { PdfCollection };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfPageLayerCollection.ts class for EJ2-PDF\n */\nimport { PdfPageBase } from './pdf-page-base';\nimport { PdfDictionary } from './../primitives/pdf-dictionary';\nimport { PdfPageLayer } from './pdf-page-layer';\nimport { PdfCollection } from './../general/pdf-collection';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { PdfStream } from './../primitives/pdf-stream';\n/**\n * The class provides methods and properties to handle the collections of `PdfPageLayer`.\n */\nvar PdfPageLayerCollection = /** @class */ (function (_super) {\n    __extends(PdfPageLayerCollection, _super);\n    function PdfPageLayerCollection(page) {\n        var _this = _super.call(this) || this;\n        /**\n         * Stores the `number of first level layers` in the document.\n         * @default 0\n         * @private\n         */\n        _this.parentLayerCount = 0;\n        /**\n         * Indicates if `Sublayer` is present.\n         * @default false\n         * @private\n         */\n        _this.sublayer = false;\n        /**\n         * Stores the `optional content dictionary`.\n         * @private\n         */\n        _this.optionalContent = new PdfDictionary();\n        if (page instanceof PdfPageBase) {\n            // if (page == null) {\n            //     throw new Error('ArgumentNullException:page');\n            // }\n            _this.page = page;\n            var lPage = page;\n            // if (lPage != null) {\n            _this.parseLayers(lPage);\n            // }\n        }\n        return _this;\n    }\n    PdfPageLayerCollection.prototype.items = function (index, value) {\n        if (typeof index === 'number' && typeof value === 'undefined') {\n            var obj = this.list[index];\n            return obj;\n        }\n        else {\n            if (value == null) {\n                throw new Error('ArgumentNullException: layer');\n            }\n            if (value.page !== this.page) {\n                throw new Error('ArgumentException: The layer belongs to another page');\n            }\n            // // Add/remove the layer.\n            // let layer : PdfPageLayer = this.items(index);\n            // if (layer != null) {\n            //     this.RemoveLayer(layer);\n            // }\n            // this.List[index] = value;\n            // this.InsertLayer(index, value);\n        }\n    };\n    PdfPageLayerCollection.prototype.add = function (firstArgument, secondArgument) {\n        if (typeof firstArgument === 'undefined') {\n            var layer = new PdfPageLayer(this.page);\n            layer.name = '';\n            this.add(layer);\n            return layer;\n        }\n        else if (firstArgument instanceof PdfPageLayer) {\n            // if (layer == null)\n            //     throw new ArgumentNullException(\"layer\");\n            // if (layer.Page != m_page)\n            //     throw new ArgumentException(\"The layer belongs to another page\");\n            var index = this.list.push(firstArgument);\n            // Register layer.\n            this.addLayer(index, firstArgument);\n            return index;\n        }\n        else {\n            return 0;\n        }\n    };\n    /**\n     * Registers `layer` at the page.\n     * @private\n     */\n    PdfPageLayerCollection.prototype.addLayer = function (index, layer) {\n        var reference = new PdfReferenceHolder(layer);\n        this.page.contents.add(reference);\n    };\n    // private RemoveLayer(layer : PdfPageLayer) : void {\n    //     if (layer == null) {\n    //         throw new Error('ArgumentNullException:layer');\n    //     }\n    //     let reference : PdfReferenceHolder = new PdfReferenceHolder(layer);\n    //     if (this.page != null) {\n    //         this.page.Contents.Remove(reference);\n    //     }\n    // }\n    /**\n     * Inserts `PdfPageLayer` into the collection at specified index.\n     * @private\n     */\n    PdfPageLayerCollection.prototype.insert = function (index, layer) {\n        // if (index < 0)\n        //     throw new ArgumentOutOfRangeException(\"index\", \"Value can not be less 0\");\n        // if (layer == null)\n        //     throw new ArgumentNullException(\"layer\");\n        // if (layer.Page != m_page)\n        //     throw new ArgumentException(\"The layer belongs to another page\");\n        var list = [];\n        var length = this.list.length;\n        for (var i = index; i < length; i++) {\n            list.push(this.list.pop());\n        }\n        this.list.push(layer);\n        for (var i = 0; i < list.length; i++) {\n            this.list.push(list[i]);\n        }\n        // Register layer.\n        this.insertLayer(index, layer);\n    };\n    /**\n     * Registers layer at the page.\n     * @private\n     */\n    PdfPageLayerCollection.prototype.insertLayer = function (index, layer) {\n        if (layer == null) {\n            throw new Error('ArgumentNullException:layer');\n        }\n        var reference = new PdfReferenceHolder(layer);\n        this.page.contents.insert(index, reference);\n    };\n    // tslint:disable\n    /**\n     * `Parses the layers`.\n     * @private\n     */\n    PdfPageLayerCollection.prototype.parseLayers = function (loadedPage) {\n        // if (loadedPage == null) {\n        //     throw new Error('ArgumentNullException:loadedPage');\n        // }\n        var contents = this.page.contents;\n        var resource = this.page.getResources();\n        var crossTable = null;\n        var ocproperties = null;\n        var propertie = null;\n        var isLayerAdded = false;\n        // if (loadedPage instanceof PdfPage) {\n        crossTable = loadedPage.crossTable;\n        // } else {\n        //     crossTable = (loadedPage as PdfLoadedPage).CrossTable;\n        //     Propertie = PdfCrossTable.Dereference(Resource[DictionaryProperties.Properties]) as PdfDictionary;\n        //     ocproperties = PdfCrossTable.Dereference((loadedPage as PdfLoadedPage).\n        //     Document.Catalog[DictionaryProperties.OCProperties]) as PdfDictionary;\n        // }\n        var saveStream = new PdfStream();\n        var restoreStream = new PdfStream();\n        var saveState = 'q';\n        var newLine = '\\n';\n        var restoreState = 'Q';\n        // for (let index : number = 0; index < contents.Items.length; index++) {\n        //     let obj : IPdfPrimitive = contents[index];\n        //     let stream : PdfStream = crossTable.GetObject(obj) as PdfStream;\n        //     if (stream == null)\n        //         throw new PdfDocumentException(\"Invalid contents array.\");\n        //     // if (stream.Compress)\n        //     {\n        //         if (!loadedPage.Imported)\n        //             stream.Decompress();\n        //     }\n        //     byte[] contentId = stream.Data;\n        //     string str = PdfString.ByteToString(contentId);\n        //     if (!loadedPage.Imported && (contents.Count == 1) && ((stream.Data[stream.Data.Length - 2] ==\n        //     RestoreState) || (stream.Data[stream.Data.Length - 1] == RestoreState)))\n        //     {\n        //         byte[] content = stream.Data;\n        //         byte[] data = new byte[content.Length + 4];\n        //         data[0] = SaveState;\n        //         data[1] = NewLine;\n        //         content.CopyTo(data, 2);\n        //         data[data.Length - 2] = NewLine;\n        //         data[data.Length - 1] = RestoreState;\n        //         stream.Data = data;\n        //     }\n        //     if (ocproperties != null)\n        //     {\n        //         if (Propertie != null)\n        //         {\n        //             foreach (KeyValuePair<PdfName, IPdfPrimitive> prop in Propertie.Items)\n        //             {\n        //                 String Key = prop.Key.ToString();\n        //                 PdfReferenceHolder refh = prop.Value as PdfReferenceHolder;\n        //                 PdfDictionary Dict = null;\n        //                 if (refh != null)\n        //                 {\n        //                     Dict = refh.Object as PdfDictionary;\n        //                 }\n        //                 else\n        //                 {\n        //                     Dict = prop.Value as PdfDictionary;\n        //                 }\n        //                 PdfDictionary m_usage = PdfCrossTable.Dereference(Dict[DictionaryProperties.Usage]) as PdfDictionary;\n        //                 if (m_usage != null)\n        //                 {\n        //                     if (str.Contains(Key))\n        //                     {\n        //                         PdfPageLayer layer = new PdfPageLayer(loadedPage, stream);\n        //                         PdfDictionary printoption = PdfCrossTable.Dereference(m_usage[DictionaryProperties.Print])\n        //                         as PdfDictionary;\n        //                         if (printoption != null)\n        //                         {\n        //                             layer.m_printOption = printoption;\n        //                             foreach (KeyValuePair<PdfName, IPdfPrimitive> value in printoption.Items)\n        //                             {\n        //                                 if (value.Key.Value.Equals(DictionaryProperties.PrintState))\n        //                                 {\n        //                                     string printState = (value.Value as PdfName).Value;\n        //                                     if (printState.Equals(DictionaryProperties.OCGON))\n        //                                     {\n        //                                         layer.PrintState = PdfPrintState.AlwaysPrint;\n        //                                         break;\n        //                                     }\n        //                                     else\n        //                                     {\n        //                                         layer.PrintState = PdfPrintState.NeverPrint;\n        //                                         break;\n        //                                     }\n        //                                 }\n        //                             }\n        //                         }\n        //                         PdfString layerName = PdfCrossTable.Dereference(Dict[DictionaryProperties.Name]) as PdfString;\n        //                         layer.Name = layerName.Value;\n        //                         List.add(layer);\n        //                         isLayerAdded = true;\n        //                         if(!str.Contains(\"EMC\"))\n        //                         break;\n        //                     }\n        //                 }\n        //                 else\n        //                 {\n        //                     if (str.Contains(Key))\n        //                     {\n        //                         PdfPageLayer layer = new PdfPageLayer(loadedPage, stream);\n        //                         List.add(layer);\n        //                         if(Dict.ContainsKey(DictionaryProperties.Name))\n        //                         {\n        //                         PdfString layerName = PdfCrossTable.Dereference(Dict[DictionaryProperties.Name]) as PdfString;\n        //                         layer.Name = layerName.Value;\n        //                         }\n        //                         isLayerAdded = true;\n        //                         break;\n        //                     }\n        //                 }\n        //             }\n        //         }\n        //     }\n        //     if (!isLayerAdded)\n        //     {\n        //         PdfPageLayer layer = new PdfPageLayer(loadedPage, stream);\n        //         List.add(layer);\n        //     }\n        //     else\n        //         isLayerAdded = false;\n        // }\n        var saveData = [];\n        saveData.push(saveState);\n        saveStream.data = saveData;\n        contents.insert(0, new PdfReferenceHolder(saveStream));\n        saveData = [];\n        saveData.push(restoreState);\n        restoreStream.data = saveData;\n        contents.insert(contents.count, new PdfReferenceHolder(restoreStream));\n    };\n    /**\n     * Returns `index of` the `PdfPageLayer` in the collection if exists, -1 otherwise.\n     * @private\n     */\n    PdfPageLayerCollection.prototype.indexOf = function (layer) {\n        if (layer == null) {\n            throw new Error('ArgumentNullException: layer');\n        }\n        var index = this.list.indexOf(layer);\n        return index;\n    };\n    return PdfPageLayerCollection;\n}(PdfCollection));\nexport { PdfPageLayerCollection };\n","/**\n * PdfTemplate.ts class for EJ2-PDF\n */\nimport { PdfStream } from './../../primitives/pdf-stream';\nimport { DictionaryProperties } from './../../input-output/pdf-dictionary-properties';\nimport { PdfArray } from './../../primitives/pdf-array';\nimport { PdfGraphics } from './../pdf-graphics';\nimport { PdfResources } from './../pdf-resources';\nimport { PdfName } from './../../primitives/pdf-name';\nimport { PointF, SizeF, RectangleF } from './../../drawing/pdf-drawing';\nimport { GetResourceEventHandler } from './../pdf-graphics';\n/**\n * Represents `Pdf Template` object.\n * @private\n */\nvar PdfTemplate = /** @class */ (function () {\n    function PdfTemplate(arg1, arg2) {\n        /**\n         * Initialize an instance for `DictionaryProperties` class.\n         * @private\n         * @hidden\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        /**\n         * Checks whether the transformation 'is performed'.\n         * @default true\n         * @private\n         */\n        this.writeTransformation = true;\n        if (typeof arg1 === 'undefined') {\n            //\n        }\n        else if (arg1 instanceof SizeF && typeof arg2 === 'undefined') {\n            this.content = new PdfStream();\n            var tempSize = new SizeF(arg1.width, arg1.height);\n            this.setSize(tempSize);\n            this.initialize();\n        }\n        else {\n            this.content = new PdfStream();\n            this.setSize(new SizeF(arg1, arg2));\n            this.initialize();\n        }\n    }\n    Object.defineProperty(PdfTemplate.prototype, \"size\", {\n        //Properties\n        /**\n         * Gets the size of the 'PdfTemplate'.\n         */\n        get: function () {\n            return this.templateSize;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTemplate.prototype, \"width\", {\n        /**\n         * Gets the width of the 'PdfTemplate'.\n         */\n        get: function () {\n            return this.size.width;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTemplate.prototype, \"height\", {\n        /**\n         * Gets the height of the 'PdfTemplate'.\n         */\n        get: function () {\n            return this.size.height;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTemplate.prototype, \"graphics\", {\n        /**\n         * Gets the `graphics` of the 'PdfTemplate'.\n         */\n        get: function () {\n            if (this.pdfGraphics == null || typeof this.pdfGraphics === 'undefined') {\n                var gr = new GetResourceEventHandler(this);\n                var g = new PdfGraphics(this.size, gr, this.content);\n                this.pdfGraphics = g;\n                // if(this.writeTransformation) {\n                // Transform co-ordinates to Top/Left.\n                this.pdfGraphics.initializeCoordinates();\n                // }\n            }\n            return this.pdfGraphics;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the resources and modifies the template dictionary.\n     * @private\n     */\n    PdfTemplate.prototype.getResources = function () {\n        if (this.resources == null) {\n            this.resources = new PdfResources();\n            this.content.items.setValue(this.dictionaryProperties.resources, this.resources);\n        }\n        return this.resources;\n    };\n    // Public methods\n    /**\n     * `Initialize` the type and subtype of the template.\n     * @private\n     */\n    PdfTemplate.prototype.initialize = function () {\n        this.addType();\n        this.addSubType();\n    };\n    /**\n     * `Adds type key`.\n     * @private\n     */\n    PdfTemplate.prototype.addType = function () {\n        var value = new PdfName(this.dictionaryProperties.xObject);\n        this.content.items.setValue(this.dictionaryProperties.type, value);\n    };\n    /**\n     * `Adds SubType key`.\n     * @private\n     */\n    PdfTemplate.prototype.addSubType = function () {\n        var value = new PdfName(this.dictionaryProperties.form);\n        this.content.items.setValue(this.dictionaryProperties.subtype, value);\n    };\n    PdfTemplate.prototype.reset = function (size) {\n        if (typeof size === 'undefined') {\n            if (this.resources != null) {\n                this.resources = null;\n                this.content.remove(this.dictionaryProperties.resources);\n            }\n            if (this.graphics != null) {\n                this.graphics.reset(this.size);\n            }\n        }\n        else {\n            this.setSize(size);\n            this.reset();\n        }\n    };\n    /**\n     * `Set the size` of the 'PdfTemplate'.\n     * @private\n     */\n    PdfTemplate.prototype.setSize = function (size) {\n        var rect = new RectangleF(new PointF(0, 0), size);\n        var val = PdfArray.fromRectangle(rect);\n        this.content.items.setValue(this.dictionaryProperties.bBox, val);\n        this.templateSize = size;\n    };\n    Object.defineProperty(PdfTemplate.prototype, \"element\", {\n        // /**\n        //  * Returns the value of current graphics.\n        //  * @private\n        //  */\n        // public GetGraphics(g : PdfGraphics) : PdfGraphics {\n        //     if (this.graphics == null || typeof this.graphics === 'undefined') {\n        //         this.graphics = g;\n        //         this.graphics.Size = this.Size;\n        //         this.graphics.StreamWriter = new PdfStreamWriter(this.content)\n        //         this.graphics.Initialize();\n        //         if(this.writeTransformation) {\n        //             this.graphics.InitializeCoordinates();\n        //         }\n        //     }\n        //     return this.graphics;\n        // }\n        // IPdfWrapper Members\n        /**\n         * Gets the `content stream` of 'PdfTemplate' class.\n         * @private\n         */\n        get: function () {\n            return this.content;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfTemplate;\n}());\nexport { PdfTemplate };\n","/**\n * ByteArray class\n * Used to keep information about image stream as byte array.\n * @private\n */\nvar ByteArray = /** @class */ (function () {\n    /**\n     * Initialize the new instance for `byte-array` class\n     * @hidden\n     * @private\n     */\n    function ByteArray(length) {\n        /**\n         * Current stream `position`.\n         * @default 0\n         * @private\n         */\n        this.mPosition = 0;\n        this.buffer = new Uint8Array(length);\n        this.dataView = new DataView(this.buffer.buffer);\n    }\n    Object.defineProperty(ByteArray.prototype, \"position\", {\n        /**\n         * Gets and Sets a current `position` of byte array.\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.mPosition;\n        },\n        set: function (value) {\n            this.mPosition = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Read` from current stream position.\n     * @default 0\n     * @hidden\n     * @private\n     */\n    ByteArray.prototype.read = function (buffer, offset, count) {\n        for (var index = offset; index < count; index++) {\n            var position = this.position;\n            buffer.buffer[index] = this.readByte(position);\n            this.position++;\n        }\n    };\n    /**\n     * @hidden\n     */\n    ByteArray.prototype.getBuffer = function (index) {\n        return this.buffer[index];\n    };\n    /**\n     * @hidden\n     */\n    ByteArray.prototype.writeFromBase64String = function (base64) {\n        var arr = this.encodedString(base64);\n        this.buffer = arr;\n    };\n    /**\n     * @hidden\n     */\n    ByteArray.prototype.encodedString = function (input) {\n        var keyStr = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n        var chr1;\n        var chr2;\n        var chr3;\n        var enc1;\n        var enc2;\n        var enc3;\n        var enc4;\n        var i = 0;\n        var resultIndex = 0;\n        var dataUrlPrefix = 'data:';\n        input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, '');\n        var totalLength = input.length * 3 / 4;\n        if (input.charAt(input.length - 1) === keyStr.charAt(64)) {\n            totalLength--;\n        }\n        var output = new Uint8Array(totalLength | 0);\n        while (i < input.length) {\n            enc1 = keyStr.indexOf(input.charAt(i++));\n            enc2 = keyStr.indexOf(input.charAt(i++));\n            enc3 = keyStr.indexOf(input.charAt(i++));\n            enc4 = keyStr.indexOf(input.charAt(i++));\n            chr1 = (enc1 << 2) | (enc2 >> 4);\n            chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\n            chr3 = ((enc3 & 3) << 6) | enc4;\n            output[resultIndex++] = chr1;\n            output[resultIndex++] = chr2;\n            output[resultIndex++] = chr3;\n        }\n        return output;\n    };\n    /**\n     * @hidden\n     */\n    ByteArray.prototype.readByte = function (offset) {\n        return (this.buffer[offset]);\n    };\n    Object.defineProperty(ByteArray.prototype, \"internalBuffer\", {\n        /**\n         * @hidden\n         */\n        get: function () {\n            return this.buffer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ByteArray.prototype, \"count\", {\n        /**\n         * @hidden\n         */\n        get: function () {\n            return this.buffer.byteLength;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return ByteArray;\n}());\nexport { ByteArray };\n","/**\n * `PdfBoolean` class is used to perform boolean related primitive operations.\n * @private\n */\nvar PdfBoolean = /** @class */ (function () {\n    //constructor\n    /**\n     * Initializes a new instance of the `PdfBoolean` class.\n     * @private\n     */\n    function PdfBoolean(value) {\n        /**\n         * Internal variable to store the `position`.\n         * @default -1\n         * @private\n         */\n        this.currentPosition = -1;\n        this.value = value;\n    }\n    Object.defineProperty(PdfBoolean.prototype, \"status\", {\n        //Properties\n        /**\n         * Gets or sets the `Status` of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.objectStatus;\n        },\n        set: function (value) {\n            this.objectStatus = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBoolean.prototype, \"isSaving\", {\n        /**\n         * Gets or sets a value indicating whether this document `is saving` or not.\n         * @private\n         */\n        get: function () {\n            return this.saving;\n        },\n        set: function (value) {\n            this.saving = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBoolean.prototype, \"objectCollectionIndex\", {\n        /**\n         * Gets or sets the `index` value of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.index;\n        },\n        set: function (value) {\n            this.index = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBoolean.prototype, \"position\", {\n        /**\n         * Gets or sets the `position` of the object.\n         * @private\n         */\n        get: function () {\n            return this.currentPosition;\n        },\n        set: function (value) {\n            this.currentPosition = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBoolean.prototype, \"clonedObject\", {\n        /**\n         * Returns `cloned object`.\n         * @private\n         */\n        get: function () {\n            var rValue = null;\n            return rValue;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Saves` the object using the specified writer.\n     * @private\n     */\n    PdfBoolean.prototype.save = function (writer) {\n        writer.write(this.boolToStr(this.value));\n    };\n    /**\n     * Creates a `copy of PdfBoolean`.\n     * @private\n     */\n    PdfBoolean.prototype.clone = function (crossTable) {\n        var newNumber = new PdfBoolean(this.value);\n        return newNumber;\n    };\n    // Implementation\n    /**\n     * Converts `boolean to string` - 0/1 'true'/'false'.\n     * @private\n     */\n    PdfBoolean.prototype.boolToStr = function (value) {\n        return value ? 'true' : 'false';\n    };\n    return PdfBoolean;\n}());\nexport { PdfBoolean };\n","/**\n * ImageDecoder class\n */\nimport { ByteArray } from './byte-array';\nimport { PdfStream } from './../../primitives/pdf-stream';\nimport { DictionaryProperties } from './../../input-output/pdf-dictionary-properties';\nimport { PdfName } from './../../primitives/pdf-name';\nimport { PdfNumber } from './../../primitives/pdf-number';\nimport { PdfBoolean } from './../../primitives/pdf-boolean';\nimport { PdfDictionary } from './../../primitives/pdf-dictionary';\n/**\n * Specifies the image `format`.\n * @private\n */\nexport var ImageFormat;\n(function (ImageFormat) {\n    /**\n     * Specifies the type of `Unknown`.\n     * @hidden\n     * @private\n     */\n    ImageFormat[ImageFormat[\"Unknown\"] = 0] = \"Unknown\";\n    /**\n     * Specifies the type of `Bmp`.\n     * @hidden\n     * @private\n     */\n    ImageFormat[ImageFormat[\"Bmp\"] = 1] = \"Bmp\";\n    /**\n     * Specifies the type of `Emf`.\n     * @hidden\n     * @private\n     */\n    ImageFormat[ImageFormat[\"Emf\"] = 2] = \"Emf\";\n    /**\n     * Specifies the type of `Gif`.\n     * @hidden\n     * @private\n     */\n    ImageFormat[ImageFormat[\"Gif\"] = 3] = \"Gif\";\n    /**\n     * Specifies the type of `Jpeg`.\n     * @hidden\n     * @private\n     */\n    ImageFormat[ImageFormat[\"Jpeg\"] = 4] = \"Jpeg\";\n    /**\n     * Specifies the type of `Png`.\n     * @hidden\n     * @private\n     */\n    ImageFormat[ImageFormat[\"Png\"] = 5] = \"Png\";\n    /**\n     * Specifies the type of `Wmf`.\n     * @hidden\n     * @private\n     */\n    ImageFormat[ImageFormat[\"Wmf\"] = 6] = \"Wmf\";\n    /**\n     * Specifies the type of `Icon`.\n     * @hidden\n     * @private\n     */\n    ImageFormat[ImageFormat[\"Icon\"] = 7] = \"Icon\";\n})(ImageFormat || (ImageFormat = {}));\n/**\n * `Decode the image stream`.\n * @private\n */\nvar ImageDecoder = /** @class */ (function () {\n    /**\n     * Initialize the new instance for `image-decoder` class.\n     * @private\n     */\n    function ImageDecoder(stream) {\n        /**\n         * Specifies `format` of image.\n         * @hidden\n         * @private\n         */\n        this.mFormat = ImageFormat.Unknown;\n        /**\n         * `Bits per component`.\n         * @default 8\n         * @hidden\n         * @private\n         */\n        this.mbitsPerComponent = 8;\n        /**\n         * Internal variable for accessing fields from `DictionryProperties` class.\n         * @hidden\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        this.mStream = stream;\n        this.initialize();\n    }\n    Object.defineProperty(ImageDecoder.prototype, \"height\", {\n        /**\n         * Gets the `height` of image.\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.mHeight;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ImageDecoder.prototype, \"width\", {\n        /**\n         * Gets the `width` of image.\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.mWidth;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ImageDecoder.prototype, \"bitsPerComponent\", {\n        /**\n         * Gets `bits per component`.\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.mbitsPerComponent;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ImageDecoder.prototype, \"size\", {\n        /**\n         * Gets the `size` of an image data.\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.mImageData.count;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ImageDecoder.prototype, \"imageData\", {\n        /**\n         * Gets the value of an `image data`.\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.mImageData;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ImageDecoder.prototype, \"imageDataAsNumberArray\", {\n        /**\n         * Gets the value of an `image data as number array`.\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.mImageData.internalBuffer.buffer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Initialize` image data and image stream.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.initialize = function () {\n        if (this.mFormat === ImageFormat.Unknown && this.checkIfJpeg()) {\n            this.mFormat = ImageFormat.Jpeg;\n            this.parseJpegImage();\n        }\n        this.reset();\n        this.mImageData = new ByteArray(this.mStream.count);\n        this.mStream.read(this.mImageData, 0, this.mImageData.count);\n    };\n    /**\n     * `Reset` stream position into 0.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.reset = function () {\n        this.mStream.position = 0;\n    };\n    /**\n     * `Parse` Jpeg image.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.parseJpegImage = function () {\n        this.reset();\n        var imgData = new ByteArray(this.mStream.count);\n        this.mStream.read(imgData, 0, imgData.count);\n        var i = 4;\n        /* tslint:disable */\n        if (String.fromCharCode(imgData.getBuffer(i + 2)) === 'J' && String.fromCharCode(imgData.getBuffer(i + 3)) === 'F' && String.fromCharCode(imgData.getBuffer(i + 4)) === 'I' && String.fromCharCode(imgData.getBuffer(i + 5)) === 'F' && imgData.getBuffer(i + 6) === 0) {\n            var length_1 = imgData.getBuffer(i) * 256 + imgData.getBuffer(i + 1);\n            while (i + length_1 < imgData.count) {\n                i += length_1;\n                if (imgData.getBuffer(i + 1) === 192) {\n                    this.mHeight = imgData.getBuffer(i + 5) * 256 + imgData.getBuffer(i + 6);\n                    this.mWidth = imgData.getBuffer(i + 7) * 256 + imgData.getBuffer(i + 8);\n                    return;\n                }\n                else {\n                    i += 2;\n                    length_1 = imgData.getBuffer(i) * 256 + imgData.getBuffer(i + 1);\n                }\n            }\n        }\n        /* tslint:enable */\n    };\n    Object.defineProperty(ImageDecoder.prototype, \"format\", {\n        /**\n         * Gets the image `format`.\n         * @private\n         * @hidden\n         */\n        get: function () {\n            return this.mFormat;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Checks if JPG`.\n     * @private\n     * @hidden\n     */\n    ImageDecoder.prototype.checkIfJpeg = function () {\n        this.reset();\n        for (var i = 0; i < ImageDecoder.mJpegHeader.length; i++) {\n            if (ImageDecoder.mJpegHeader[i] !== this.mStream.readByte(i)) {\n                return false;\n            }\n            this.mStream.position++;\n        }\n        return true;\n    };\n    /**\n     * Return image `dictionary`.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.getImageDictionary = function () {\n        if (this.mFormat === ImageFormat.Jpeg) {\n            var tempArrayBuffer = this.imageData.internalBuffer.length;\n            this.imageStream = new PdfStream();\n            this.imageStream.isImage = true;\n            var tempString = '';\n            var decodedString = '';\n            for (var i = 0; i < this.imageDataAsNumberArray.byteLength; i++) {\n                tempString += String.fromCharCode(null, this.mStream.readByte(i));\n            }\n            for (var i = 0; i < tempString.length; i++) {\n                if (i % 2 !== 0) {\n                    decodedString += tempString[i];\n                }\n            }\n            this.imageStream.data = [decodedString];\n            this.imageStream.compress = false;\n            this.imageStream.items.setValue(this.dictionaryProperties.type, new PdfName(this.dictionaryProperties.xObject));\n            this.imageStream.items.setValue(this.dictionaryProperties.subtype, new PdfName(this.dictionaryProperties.image));\n            this.imageStream.items.setValue(this.dictionaryProperties.width, new PdfNumber(this.width));\n            this.imageStream.items.setValue(this.dictionaryProperties.height, new PdfNumber(this.height));\n            this.imageStream.items.setValue(this.dictionaryProperties.bitsPerComponent, new PdfNumber(this.bitsPerComponent));\n            this.imageStream.items.setValue(this.dictionaryProperties.filter, new PdfName(this.dictionaryProperties.dctdecode));\n            this.imageStream.items.setValue(this.dictionaryProperties.colorSpace, new PdfName(this.getColorSpace()));\n            this.imageStream.items.setValue(this.dictionaryProperties.decodeParms, this.getDecodeParams());\n            return this.imageStream;\n        }\n        else {\n            return this.imageStream;\n        }\n    };\n    /**\n     * Return `colorSpace` of an image.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.getColorSpace = function () {\n        return this.dictionaryProperties.deviceRgb;\n    };\n    /**\n     * Return `decode parameters` of an image.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.getDecodeParams = function () {\n        var decodeParams = new PdfDictionary();\n        decodeParams.items.setValue(this.dictionaryProperties.columns, new PdfNumber(this.width));\n        decodeParams.items.setValue(this.dictionaryProperties.blackIs1, new PdfBoolean(true));\n        decodeParams.items.setValue(this.dictionaryProperties.k, new PdfNumber(-1));\n        decodeParams.items.setValue(this.dictionaryProperties.predictor, new PdfNumber(15));\n        decodeParams.items.setValue(this.dictionaryProperties.bitsPerComponent, new PdfNumber(this.bitsPerComponent));\n        return decodeParams;\n    };\n    /**\n     * Number array for `png header`.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.mPngHeader = [137, 80, 78, 71, 13, 10, 26, 10];\n    /**\n     * Number Array for `jpeg header`.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.mJpegHeader = [255, 216];\n    /**\n     * Number array for `gif header`.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.GIF_HEADER = 'G,I,F,8';\n    /**\n     * Number array for `bmp header.`\n     * @hidden\n     * @private\n     */\n    ImageDecoder.BMP_HEADER = 'B,M';\n    return ImageDecoder;\n}());\nexport { ImageDecoder };\n","/**\n * Used to perform `convertion between pixels and points`.\n * @private\n */\nvar PdfUnitConverter = /** @class */ (function () {\n    //constructors\n    /**\n     * Initializes a new instance of the `UnitConvertor` class with DPI value.\n     * @private\n     */\n    function PdfUnitConverter(dpi) {\n        this.updateProportionsHelper(dpi);\n    }\n    /**\n     * `Converts` the value, from one graphics unit to another graphics unit.\n     * @private\n     */\n    PdfUnitConverter.prototype.convertUnits = function (value, from, to) {\n        return this.convertFromPixels(this.convertToPixels(value, from), to);\n    };\n    /**\n     * Converts the value `to pixel` from specified graphics unit.\n     * @private\n     */\n    PdfUnitConverter.prototype.convertToPixels = function (value, from) {\n        var index = from;\n        var result = (value * this.proportions[index]);\n        return result;\n    };\n    /**\n     * Converts value, to specified graphics unit `from Pixel`.\n     * @private\n     */\n    PdfUnitConverter.prototype.convertFromPixels = function (value, to) {\n        var index = to;\n        var result = (value / this.proportions[index]);\n        return result;\n    };\n    /**\n     * `Update proportions` matrix according to Graphics settings.\n     * @private\n     */\n    PdfUnitConverter.prototype.updateProportionsHelper = function (pixelPerInch) {\n        this.proportions = [\n            pixelPerInch / 2.54,\n            pixelPerInch / 6.0,\n            1,\n            pixelPerInch / 72.0,\n            pixelPerInch,\n            pixelPerInch / 300.0,\n            pixelPerInch / 25.4 // Millimeter\n        ];\n    };\n    //Fields\n    /**\n     * Indicates default `horizontal resolution`.\n     * @default 96\n     * @private\n     */\n    PdfUnitConverter.horizontalResolution = 96;\n    /**\n     * Indicates default `vertical resolution`.\n     * @default 96\n     * @private\n     */\n    PdfUnitConverter.verticalResolution = 96;\n    return PdfUnitConverter;\n}());\nexport { PdfUnitConverter };\n","import { SizeF } from './../../drawing/pdf-drawing';\nimport { PdfGraphicsUnit } from './../enum';\nimport { PdfUnitConverter } from './../unit-convertor';\n/**\n * `PdfImage` class represents the base class for images and provides functionality for the 'PdfBitmap' class.\n * @private\n */\nvar PdfImage = /** @class */ (function () {\n    function PdfImage() {\n    }\n    Object.defineProperty(PdfImage.prototype, \"width\", {\n        /**\n         * Gets and Sets the `width` of an image.\n         * @private\n         */\n        get: function () {\n            return this.imageWidth;\n        },\n        set: function (value) {\n            this.imageWidth = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfImage.prototype, \"height\", {\n        /**\n         * Gets and Sets the `height` of an image.\n         * @private\n         */\n        get: function () {\n            return this.imageHeight;\n        },\n        set: function (value) {\n            this.imageHeight = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfImage.prototype, \"size\", {\n        /**\n         * Gets or sets the size of the image.\n         * @private\n         */\n        set: function (value) {\n            this.width = value.width;\n            this.height = value.height;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfImage.prototype, \"physicalDimension\", {\n        /**\n         * Gets the `physical dimension` of an image.\n         * @private\n         */\n        get: function () {\n            this.imagePhysicalDimension = this.getPointSize(this.width, this.height, this.horizontalResolution, this.verticalResolution);\n            return new SizeF(this.width, this.height);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfImage.prototype, \"element\", {\n        // /**\n        //  * Gets the `image stream as string`.\n        //  * @private\n        //  */\n        // public static fromString(string : string) : PdfImage {\n        //     let image : PdfImage = new PdfBitmap(string);\n        //     return image;\n        // }\n        /**\n         * Gets the `element` image stream.\n         * @private\n         */\n        get: function () {\n            return this.imageStream;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfImage.prototype.getPointSize = function (width, height, horizontalResolution, verticalResolution) {\n        if (typeof horizontalResolution === 'undefined') {\n            var dpiX = PdfUnitConverter.horizontalResolution;\n            var dpiY = PdfUnitConverter.verticalResolution;\n            var size = this.getPointSize(width, height, dpiX, dpiY);\n            return size;\n        }\n        else {\n            var ucX = new PdfUnitConverter(horizontalResolution);\n            var ucY = new PdfUnitConverter(verticalResolution);\n            var ptWidth = ucX.convertUnits(width, PdfGraphicsUnit.Pixel, PdfGraphicsUnit.Point);\n            var ptHeight = ucY.convertUnits(height, PdfGraphicsUnit.Pixel, PdfGraphicsUnit.Point);\n            var size = new SizeF(ptWidth, ptHeight);\n            return size;\n        }\n    };\n    return PdfImage;\n}());\nexport { PdfImage };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfBitmap.ts class for EJ2-PDF\n */\nimport { ImageDecoder } from './../../graphics/images/image-decoder';\nimport { ByteArray } from './../../graphics/images/byte-array';\nimport { DictionaryProperties } from './../../input-output/pdf-dictionary-properties';\nimport { PdfImage } from './pdf-image';\n/**\n * The 'PdfBitmap' contains methods and properties to handle the Bitmap images.\n * ```typescript\n * // create a new PDF document.\n * let document : PdfDocument = new PdfDocument();\n * // add a page to the document.\n * let page1 : PdfPage = document.pages.add();\n * // base64 string of an image\n * let imageString : string = '/9j/3+2w7em7HzY/KiijFw … 1OEYRUYrQ45yc5OUtz/9k=';\n * // load the image from the base64 string of original image.\n * let image : PdfBitmap = new PdfBitmap(imageString);\n * // draw the image\n * page1.graphics.drawImage(image, new RectangleF({x : 10, y : 10}, {width : 200, height : 200}));\n * // save the document.\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfBitmap = /** @class */ (function (_super) {\n    __extends(PdfBitmap, _super);\n    /**\n     * Create an instance for `PdfBitmap` class.\n     * @param encodedString Base64 string of an image.\n     * ```typescript\n     * // create a new PDF document.\n     * let document : PdfDocument = new PdfDocument();\n     * // add a page to the document.\n     * let page1 : PdfPage = document.pages.add();\n     * // base64 string of an image\n     * let imageString : string = '/9j/3+2w7em7HzY/KiijFw … 1OEYRUYrQ45yc5OUtz/9k=';\n     * //\n     * // load the image from the base64 string of original image.\n     * let image : PdfBitmap = new PdfBitmap(imageString);\n     * //\n     * // draw the image\n     * page1.graphics.drawImage(image, new RectangleF({x : 10, y : 10}, {width : 200, height : 200}));\n     * // save the document.\n     * document.save('output.pdf');\n     * // destroy the document\n     * document.destroy();\n     * ```\n     */\n    function PdfBitmap(encodedString) {\n        var _this = _super.call(this) || this;\n        //Fields\n        /**\n         * Specifies the `status` of an image.\n         * @default true.\n         * @hidden\n         * @private\n         */\n        _this.imageStatus = true;\n        /**\n         * Internal variable for accessing fields from `DictionryProperties` class.\n         * @hidden\n         * @private\n         */\n        _this.dictionaryProperties = new DictionaryProperties();\n        _this.loadImage(encodedString);\n        return _this;\n    }\n    /**\n     * `Load image`.\n     * @hidden\n     * @private\n     */\n    PdfBitmap.prototype.loadImage = function (encodedString) {\n        var task = this.initializeAsync(encodedString);\n    };\n    /**\n     * `Initialize` image parameters.\n     * @private\n     */\n    PdfBitmap.prototype.initializeAsync = function (encodedString) {\n        var byteArray = new ByteArray(encodedString.length);\n        byteArray.writeFromBase64String(encodedString);\n        this.decoder = new ImageDecoder(byteArray);\n        this.height = this.decoder.height;\n        this.width = this.decoder.width;\n        // FrameCount = BitmapImageDecoder.FrameCount;\n        this.bitsPerComponent = this.decoder.bitsPerComponent;\n    };\n    /**\n     * `Saves` the image into stream.\n     * @private\n     */\n    PdfBitmap.prototype.save = function () {\n        this.imageStatus = true;\n        this.imageStream = this.decoder.getImageDictionary();\n    };\n    return PdfBitmap;\n}(PdfImage));\nexport { PdfBitmap };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfResources.ts class for EJ2-PDF\n */\nimport { PdfDictionary } from './../primitives/pdf-dictionary';\nimport { TemporaryDictionary } from './../collections/object-object-pair/dictionary';\nimport { PdfName } from './../primitives/pdf-name';\nimport { PdfArray } from './../primitives/pdf-array';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { PdfCrossTable } from './../input-output/pdf-cross-table';\nimport { PdfFont } from './fonts/pdf-font';\nimport { PdfTemplate } from './figures/pdf-template';\nimport { PdfBrush } from './brushes/pdf-brush';\nimport { PdfTransparency } from './pdf-transparency';\nimport { PdfBitmap } from './../graphics/images/pdf-bitmap';\nimport { PdfImage } from './../graphics/images/pdf-image';\n/**\n * `PdfResources` class used to set resource contents like font, image.\n * @private\n */\nvar PdfResources = /** @class */ (function (_super) {\n    __extends(PdfResources, _super);\n    function PdfResources(baseDictionary) {\n        var _this = _super.call(this) || this;\n        /**\n         * Dictionary for the `properties names`.\n         * @private\n         */\n        _this.properties = new PdfDictionary();\n        if (baseDictionary instanceof PdfDictionary) {\n            _this = _super.call(this, baseDictionary) || this;\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfResources.prototype, \"names\", {\n        //Properties\n        /**\n         * Gets the `font names`.\n         * @private\n         */\n        get: function () {\n            return this.getNames();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfResources.prototype, \"document\", {\n        /**\n         * Get or set the `page document`.\n         * @private\n         */\n        get: function () {\n            return this.pdfDocument;\n        },\n        set: function (value) {\n            this.pdfDocument = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Public Methods\n    /**\n     * `Generates name` for the object and adds to the resource if the object is new.\n     * @private\n     */\n    PdfResources.prototype.getName = function (obj) {\n        var primitive = obj.element;\n        var name = null;\n        if (this.names.containsKey(primitive)) {\n            name = this.names.getValue(primitive);\n        }\n        // Object is new.\n        if (name == null) {\n            var sName = this.generateName();\n            name = new PdfName(sName);\n            this.names.setValue(primitive, name);\n            if (obj instanceof PdfFont) {\n                this.add(obj, name);\n            }\n            else if (obj instanceof PdfTemplate) {\n                this.add(obj, name);\n            }\n            else if (obj instanceof PdfTransparency) {\n                this.add(obj, name);\n            }\n            else if (obj instanceof PdfImage || obj instanceof PdfBitmap) {\n                this.add(obj, name);\n            }\n        }\n        return name;\n    };\n    /**\n     * Gets `resource names` to font dictionaries.\n     * @private\n     */\n    PdfResources.prototype.getNames = function () {\n        if (this.pdfNames == null) {\n            this.pdfNames = new TemporaryDictionary();\n        }\n        var fonts = this.items.getValue(this.dictionaryProperties.font);\n        if (fonts != null) {\n            var reference = fonts;\n            var dictionary = fonts;\n            dictionary = PdfCrossTable.dereference(fonts);\n        }\n        return this.pdfNames;\n    };\n    /**\n     * Add `RequireProcedureSet` into procset array.\n     * @private\n     */\n    PdfResources.prototype.requireProcedureSet = function (procedureSetName) {\n        if (procedureSetName == null) {\n            throw new Error('ArgumentNullException:procedureSetName');\n        }\n        var procSets = this.items.getValue(this.dictionaryProperties.procset);\n        if (procSets == null) {\n            procSets = new PdfArray();\n            this.items.setValue(this.dictionaryProperties.procset, procSets);\n        }\n        var name = new PdfName(procedureSetName);\n        if (!procSets.contains(name)) {\n            procSets.add(name);\n        }\n    };\n    //Helper Methods\n    /**\n     * `Remove font` from array.\n     * @private\n     */\n    PdfResources.prototype.removeFont = function (name) {\n        var key = null;\n        var keys = this.pdfNames.keys();\n        for (var index = 0; index < this.pdfNames.size(); index++) {\n            if (this.pdfNames.getValue(keys[index]) === new PdfName(name)) {\n                key = keys[index];\n                break;\n            }\n        }\n        if (key != null) {\n            this.pdfNames.remove(key);\n        }\n    };\n    /**\n     * Generates `Unique string name`.\n     * @private\n     */\n    PdfResources.prototype.generateName = function () {\n        var name = Guid.getNewGuidString();\n        return name;\n    };\n    PdfResources.prototype.add = function (arg1, arg2) {\n        if (arg1 instanceof PdfFont) {\n            var dictionary = null;\n            var fonts = this.items.getValue(this.dictionaryProperties.font);\n            if (fonts != null) {\n                var reference = fonts;\n                dictionary = fonts;\n                dictionary = fonts;\n            }\n            else {\n                dictionary = new PdfDictionary();\n                this.items.setValue(this.dictionaryProperties.font, dictionary);\n            }\n            dictionary.items.setValue(arg2.value, new PdfReferenceHolder(arg1.element));\n        }\n        else if (arg1 instanceof PdfTemplate) {\n            var xobjects = void 0;\n            xobjects = this.items.getValue(this.dictionaryProperties.xObject);\n            // Create fonts dictionary.\n            if (xobjects == null) {\n                xobjects = new PdfDictionary();\n                this.items.setValue(this.dictionaryProperties.xObject, xobjects);\n            }\n            xobjects.items.setValue(arg2.value, new PdfReferenceHolder(arg1.element));\n        }\n        else if (arg1 instanceof PdfBrush) {\n            // let savable : IPdfPrimitive = (arg1 as IPdfWrapper).Element;\n            // if (savable != null)\n            // {\n            //     let pattern : PdfDictionary = this.Items.getValue(this.dictionaryProperties.pattern) as PdfDictionary;\n            //     // Create a new pattern dictionary.\n            //     if (pattern == null) {\n            //         pattern = new PdfDictionary();\n            //         this.Items.setValue(this.dictionaryProperties.pattern, pattern);\n            //     }\n            //     pattern.Items.setValue(name, new PdfReferenceHolder(savable));\n            // }\n        }\n        else if (arg1 instanceof PdfTransparency) {\n            var savable = arg1.element;\n            var transDic = null;\n            transDic = this.items.getValue(this.dictionaryProperties.extGState);\n            // Create a new pattern dictionary.\n            if (transDic == null) {\n                transDic = new PdfDictionary();\n                this.items.setValue(this.dictionaryProperties.extGState, transDic);\n            }\n            transDic.items.setValue(arg2.value, new PdfReferenceHolder(savable));\n        }\n        else {\n            /* tslint:disable */\n            var xobjects = this.Dictionary.items.getValue(this.dictionaryProperties.xObject);\n            var parentXObjects = void 0;\n            if (typeof this.pdfDocument !== 'undefined') {\n                parentXObjects = this.pdfDocument.sections.element.items.getValue(this.dictionaryProperties.resources).items.getValue(this.dictionaryProperties.xObject);\n            }\n            var values = this.Dictionary.items.values();\n            var hasSameImageStream = false;\n            var oldReference = void 0;\n            if (typeof this.pdfDocument !== 'undefined' && (typeof parentXObjects === undefined || parentXObjects == null)) {\n                parentXObjects = new PdfDictionary();\n                this.pdfDocument.sections.element.items.getValue(this.dictionaryProperties.resources).items.setValue(this.dictionaryProperties.xObject, parentXObjects);\n            }\n            else if (typeof this.pdfDocument !== 'undefined') {\n                var values_1 = parentXObjects.items.values();\n                for (var i = 0; i < values_1.length; i++) {\n                    if (typeof values_1[i] !== 'undefined' && typeof values_1[i].element !== 'undefined') {\n                        if (values_1[i].element.data[0] === arg1.element.data[0]) {\n                            oldReference = values_1[i];\n                            hasSameImageStream = true;\n                        }\n                    }\n                }\n            }\n            if (xobjects == null) {\n                xobjects = new PdfDictionary();\n                this.Dictionary.items.setValue(this.dictionaryProperties.xObject, xobjects);\n            }\n            if (hasSameImageStream && typeof oldReference !== 'undefined') {\n                xobjects.items.setValue(arg2.value, oldReference);\n            }\n            else {\n                var reference = new PdfReferenceHolder(arg1.element);\n                xobjects.items.setValue(arg2.value, reference);\n                if (typeof this.pdfDocument !== 'undefined') {\n                    parentXObjects.items.setValue(arg2.value, reference);\n                }\n            }\n            /* tslint:enable */\n        }\n    };\n    return PdfResources;\n}(PdfDictionary));\nexport { PdfResources };\n/**\n * Used to create new guid for resources.\n * @private\n */\nvar Guid = /** @class */ (function () {\n    /**\n     * Initialize an `instance of GUID` class.\n     * @private\n     */\n    function Guid(stringValue) {\n        this.stringValue = stringValue || Guid.getNewGuidString();\n    }\n    Object.defineProperty(Guid, \"randomNumber\", {\n        /**\n         * Generate `Random number` for GUID.\n         * @private\n         */\n        get: function () {\n            Guid.guid = Guid.guid + 1;\n            Guid.guid = Guid.guid > 999999999999 ? 0 : Guid.guid;\n            return Guid.guid;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Return the value of `GUID as string`.\n     * @private\n     */\n    Guid.prototype.toString = function () {\n        return this.stringValue;\n    };\n    /**\n     * Generate `new GUID`.\n     * @private\n     */\n    Guid.getNewGuidString = function () {\n        var guid = 'abc7def4-ghi9-jkl2-m6n3-';\n        var temproaryString = 'opqrstuvwxyz';\n        var randomString = Guid.randomNumber.toString();\n        randomString = guid + temproaryString.substr(0, (12 - randomString.length)) + randomString;\n        return randomString;\n    };\n    /**\n     * static field to store `endding value of current GUID`.\n     * @private\n     */\n    Guid.guid = 0;\n    return Guid;\n}());\nexport { Guid };\n","import { PdfArray } from './../primitives/pdf-array';\nimport { PdfPageLayerCollection } from './pdf-page-layer-collection';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\nimport { PdfResources } from './../graphics/pdf-resources';\n/**\n * The abstract base class for all pages,\n * `PdfPageBase` class provides methods and properties to create PDF pages and its elements.\n * @private\n */\nvar PdfPageBase = /** @class */ (function () {\n    //constructors\n    /**\n     * Initializes a new instance of the `PdfPageBase` class.\n     * @private\n     */\n    function PdfPageBase(dictionary) {\n        /**\n         * `Index` of the default layer.\n         * @default -1.\n         * @private\n         */\n        this.defLayerIndex = -1;\n        /**\n         * Local variable to store if page `updated`.\n         * @default false.\n         * @private\n         */\n        this.modified = false;\n        /**\n         * Instance of `DictionaryProperties` class.\n         * @hidden\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        this.pageDictionary = dictionary;\n    }\n    Object.defineProperty(PdfPageBase.prototype, \"section\", {\n        //Properties\n        /**\n         * Gets the `section` of a page.\n         * @private\n         */\n        get: function () {\n            // if (this.pdfSection === null) {\n            //     throw new Error('PdfException : Page must be added to some section before using.');\n            // }\n            return this.pdfSection;\n        },\n        set: function (value) {\n            this.pdfSection = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageBase.prototype, \"dictionary\", {\n        /**\n         * Gets the page `dictionary`.\n         * @private\n         */\n        get: function () {\n            return this.pageDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageBase.prototype, \"element\", {\n        /**\n         * Gets the wrapped `element`.\n         * @private\n         */\n        get: function () {\n            return this.pageDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageBase.prototype, \"defaultLayer\", {\n        /**\n         * Gets the `default layer` of the page (Read only).\n         * @private\n         */\n        get: function () {\n            var layer = this.layers;\n            var index = this.defaultLayerIndex;\n            var returnlayer = layer.items(index);\n            return returnlayer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageBase.prototype, \"defaultLayerIndex\", {\n        /**\n         * Gets or sets `index of the default layer`.\n         * @private\n         */\n        get: function () {\n            if (this.layerCollection.count === 0 || this.defLayerIndex === -1) {\n                var layer = this.layerCollection.add();\n                this.defLayerIndex = this.layerCollection.indexOf(layer);\n            }\n            return this.defLayerIndex;\n        },\n        /**\n         * Gets or sets` index of the default layer`.\n         * @private\n         */\n        set: function (value) {\n            if (value < 0 || value > this.layers.count - 1) {\n                throw new Error('ArgumentOutOfRangeException : value, Index can not be less 0 and greater Layers.Count - 1');\n            }\n            else {\n                this.defLayerIndex = value;\n                this.modified = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageBase.prototype, \"layers\", {\n        /**\n         * Gets the collection of the page's `layers` (Read only).\n         * @private\n         */\n        get: function () {\n            if (this.layerCollection == null || typeof this.layerCollection === 'undefined') {\n                this.layerCollection = new PdfPageLayerCollection(this);\n            }\n            return this.layerCollection;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Return an instance of `PdfResources` class.\n     * @private\n     */\n    PdfPageBase.prototype.getResources = function () {\n        if (this.resources == null) {\n            this.resources = new PdfResources();\n            this.dictionary.items.setValue(this.dictionaryProperties.resources, this.resources);\n        }\n        return this.resources;\n    };\n    Object.defineProperty(PdfPageBase.prototype, \"contents\", {\n        /**\n         * Gets `array of page's content`.\n         * @private\n         */\n        get: function () {\n            var obj = this.pageDictionary.items.getValue(this.dictionaryProperties.contents);\n            var contents = obj;\n            var rh = obj;\n            if (contents == null) {\n                contents = new PdfArray();\n                this.pageDictionary.items.setValue(this.dictionaryProperties.contents, contents);\n            }\n            return contents;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Sets the `resources`.\n     * @private\n     */\n    PdfPageBase.prototype.setResources = function (res) {\n        this.resources = res;\n        this.dictionary.items.setValue(this.dictionaryProperties.resources, this.resources);\n        this.modified = true;\n    };\n    return PdfPageBase;\n}());\nexport { PdfPageBase };\n","import { PdfArray } from './../primitives/pdf-array';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\nimport { SizeF, RectangleF, PointF } from './../drawing/pdf-drawing';\nimport { PdfStringLayouter } from './../graphics/fonts/string-layouter';\nimport { PdfColorSpace } from './../graphics/enum';\n/**\n * `PdfAnnotationCollection` class represents the collection of 'PdfAnnotation' objects.\n * @private\n */\nvar PdfAnnotationCollection = /** @class */ (function () {\n    function PdfAnnotationCollection(page) {\n        // Constants\n        /**\n         * `Error` constant message.\n         * @private\n         */\n        this.alreadyExistsAnnotationError = 'This annotatation had been already added to page';\n        /**\n         * `Error` constant message.\n         * @private\n         */\n        this.missingAnnotationException = 'Annotation is not contained in collection.';\n        /**\n         * Specifies the Internal variable to store fields of `PdfDictionaryProperties`.\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        /**\n         * Array of the `annotations`.\n         * @private\n         */\n        this.internalAnnotations = new PdfArray();\n        /**\n         * privte `list` for the annotations.\n         * @private\n         */\n        this.lists = [];\n        if (typeof page !== 'undefined') {\n            this.page = page;\n        }\n    }\n    Object.defineProperty(PdfAnnotationCollection.prototype, \"annotations\", {\n        /**\n         * Gets the `PdfAnnotation` object at the specified index. Read-Only.\n         * @private\n         */\n        get: function () {\n            return this.internalAnnotations;\n        },\n        set: function (value) {\n            this.internalAnnotations = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Public methods\n    /**\n     * `Adds` a new annotation to the collection.\n     * @private\n     */\n    PdfAnnotationCollection.prototype.add = function (annotation) {\n        // this.SetPrint(annotation);\n        this.doAdd(annotation);\n    };\n    /**\n     * `Adds` a Annotation to collection.\n     * @private\n     */\n    /* tslint:disable */\n    PdfAnnotationCollection.prototype.doAdd = function (annotation) {\n        if (typeof annotation.destination !== 'undefined') {\n            var layout = new PdfStringLayouter();\n            var layoutResult = layout.layout(annotation.text, annotation.font, annotation.stringFormat, new SizeF((annotation.bounds.width), 0), false, new SizeF(0, 0));\n            var lastPosition = annotation.bounds.y;\n            if (layoutResult.lines.length === 1) {\n                var size = annotation.font.measureString(layoutResult.lines[0].text);\n                annotation.bounds = new RectangleF(new PointF(annotation.bounds.x, lastPosition), size);\n                annotation.text = layoutResult.lines[0].text;\n                //Draw Annotation Text.\n                this.page.graphics.drawString(annotation.text, annotation.font, null, annotation.brush, annotation.bounds.x, annotation.bounds.y, annotation.bounds.width, annotation.bounds.height, null);\n                //Add annotation to dictionary.\n                annotation.setPage(this.page);\n                this.setColor(annotation);\n                this.internalAnnotations.add(new PdfReferenceHolder(annotation));\n                this.lists.push(annotation);\n            }\n            else {\n                for (var i = 0; i < layoutResult.lines.length; i++) {\n                    var size = annotation.font.measureString(layoutResult.lines[i].text);\n                    if (i === 0) {\n                        annotation.bounds = new RectangleF(annotation.bounds.x, lastPosition, size.width, size.height);\n                        annotation.text = layoutResult.lines[i].text;\n                        //Draw Annotation Text.\n                        this.page.graphics.drawString(annotation.text, annotation.font, null, annotation.brush, annotation.bounds.x, lastPosition, size.width, size.height, null);\n                        //Add annotation to dictionary.\n                        annotation.setPage(this.page);\n                        this.setColor(annotation);\n                        this.internalAnnotations.add(new PdfReferenceHolder(annotation));\n                        this.lists.push(annotation);\n                        //Update y for drawing next line of the text.\n                        lastPosition += annotation.bounds.height;\n                    }\n                    else {\n                        var annot = annotation.clone();\n                        annot.bounds = new RectangleF(new PointF(annotation.bounds.x, lastPosition), size);\n                        annot.text = layoutResult.lines[i].text;\n                        //Draw Annotation Text.\n                        this.page.graphics.drawString(annot.text, annot.font, null, annot.brush, annot.bounds.x, annot.bounds.y, annot.bounds.width, annot.bounds.height, null);\n                        //Add annotation to dictionary.\n                        annot.setPage(this.page);\n                        this.setColor(annot);\n                        this.internalAnnotations.add(new PdfReferenceHolder(annot));\n                        this.lists.push(annot);\n                        //Update y for drawing next line of the text.\n                        lastPosition += annot.bounds.height;\n                    }\n                }\n            }\n        }\n        else {\n            annotation.setPage(this.page);\n            this.internalAnnotations.add(new PdfReferenceHolder(annotation));\n            return this.lists.push(annotation);\n        }\n    };\n    /* tslint:enable */\n    /**\n     * `Set a color of an annotation`.\n     * @private\n     */\n    PdfAnnotationCollection.prototype.setColor = function (annotation) {\n        var cs = PdfColorSpace.Rgb;\n        var colours = annotation.color.toArray(cs);\n        annotation.dictionary.items.setValue(this.dictionaryProperties.c, colours);\n    };\n    Object.defineProperty(PdfAnnotationCollection.prototype, \"element\", {\n        // IPdfWrapper Members\n        /**\n         * Gets the `Element` representing this object.\n         * @private\n         */\n        get: function () {\n            return this.internalAnnotations;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfAnnotationCollection;\n}());\nexport { PdfAnnotationCollection };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfPageBase } from './pdf-page-base';\nimport { PdfDictionary, SaveTemplateEventHandler } from './../primitives/pdf-dictionary';\nimport { PdfName } from './../primitives/pdf-name';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { SizeF } from './../drawing/pdf-drawing';\nimport { PdfAnnotationCollection } from './../annotations/annotation-collection';\nimport { PdfPageLayer } from './pdf-page-layer';\n/**\n * Provides methods and properties to create pages and its elements.\n * `PdfPage` class inherited from the `PdfPageBase` class.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * //\n * // add a new page to the document\n * let page1 : PdfPage = document.pages.add();\n * //\n * // set the font\n * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n * // create black brush\n * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n * // draw the text\n * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(0, 0));\n * // save the document\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfPage = /** @class */ (function (_super) {\n    __extends(PdfPage, _super);\n    //constructors\n    /**\n     * Initialize the new instance for `PdfPage` class.\n     * @private\n     */\n    function PdfPage() {\n        var _this = _super.call(this, new PdfDictionary()) || this;\n        /**\n         * Stores the instance of `PdfAnnotationCollection` class.\n         * @hidden\n         * @default null\n         * @private\n         */\n        _this.annotationCollection = null;\n        /**\n         * Stores the instance of `PageBeginSave` event for Page Number Field.\n         * @default null\n         * @private\n         */\n        _this.beginSave = null;\n        _this.initialize();\n        return _this;\n    }\n    Object.defineProperty(PdfPage.prototype, \"document\", {\n        //Properties\n        /**\n         * Gets current `document`.\n         * @private\n         */\n        get: function () {\n            if (this.section !== null && this.section.parent !== null) {\n                return this.section.parent.document;\n            }\n            else {\n                return null;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPage.prototype, \"graphics\", {\n        /**\n         * Get the current `graphics`.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // add a new page to the document\n         * let page1 : PdfPage = document.pages.add();\n         * //\n         * // get graphics\n         * let graphics : PdfGraphics = page1.graphics;\n         * //\n         * // set the font\n         * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n         * // create black brush\n         * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n         * // draw the text\n         * graphics.drawString('Hello World', font, blackBrush, new PointF(0, 0));\n         * // save the document\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var result = this.defaultLayer.graphics;\n            result.currentPage = this;\n            return result;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPage.prototype, \"crossTable\", {\n        /**\n         * Gets the `cross table`.\n         * @private\n         */\n        get: function () {\n            if (this.section === null) {\n                throw new Error('PdfDocumentException : Page is not created');\n            }\n            return this.section.parent === null ? this.section.parentDocument.crossTable : this.section.parent.document.crossTable;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPage.prototype, \"size\", {\n        /**\n         * Gets the size of the PDF page- Read only.\n         * @public\n         */\n        get: function () {\n            return this.section.pageSettings.size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPage.prototype, \"origin\", {\n        /**\n         * Gets the `origin` of the page.\n         * @private\n         */\n        get: function () {\n            return this.section.pageSettings.origin;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPage.prototype, \"annotations\", {\n        /**\n         * Gets a collection of the `annotations` of the page- Read only.\n         * @private\n         */\n        get: function () {\n            if (this.annotationCollection == null) {\n                this.annotationCollection = new PdfAnnotationCollection(this);\n                // if (!this.Dictionary.ContainsKey(this.dictionaryProperties.annots)) {\n                this.dictionary.items.setValue(this.dictionaryProperties.annots, this.annotationCollection.element);\n                // }\n                this.annotationCollection.annotations = this.dictionary.items.getValue(this.dictionaryProperties.annots);\n            }\n            return this.annotationCollection;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Implementation\n    /**\n     * `Initializes` a page.\n     * @private\n     */\n    PdfPage.prototype.initialize = function () {\n        this.dictionary.items.setValue(this.dictionaryProperties.type, new PdfName('Page'));\n        this.dictionary.pageBeginDrawTemplate = new SaveTemplateEventHandler(this);\n    };\n    /**\n     * Sets parent `section` to the page.\n     * @private\n     */\n    PdfPage.prototype.setSection = function (section) {\n        this.section = section;\n        this.dictionary.items.setValue(this.dictionaryProperties.parent, new PdfReferenceHolder(section));\n    };\n    /**\n     * `Resets the progress`.\n     * @private\n     */\n    PdfPage.prototype.resetProgress = function () {\n        this.isProgressOn = false;\n    };\n    /**\n     * Get the page size reduced by page margins and page template dimensions.\n     * ```typescript\n     * // create a new PDF document\n     * let document : PdfDocument = new PdfDocument();\n     * // add a pages to the document\n     * let page1 : PdfPage = document.pages.add();\n     * // create new standard font\n     * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n     * // set brush\n     * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n     * //\n     * // set the specified point using `getClientSize` method\n     * let point : PointF = new PointF(page1.getClientSize().width - 200, page1.getClientSize().height - 200);\n     * // draw the text\n     * page1.graphics.drawString('Hello World', font, blackBrush, point);\n     * //\n     * // save the document\n     * document.save('output.pdf');\n     * // destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfPage.prototype.getClientSize = function () {\n        var returnValue = this.section.getActualBounds(this, true);\n        return new SizeF(returnValue.width, returnValue.height);\n    };\n    /**\n     * Helper method to retrive the instance of `PageBeginSave` event for header and footer elements.\n     * @private\n     */\n    PdfPage.prototype.pageBeginSave = function () {\n        var doc = this.document;\n        if (typeof doc !== undefined && doc != null) {\n            this.drawPageTemplates(doc);\n        }\n        if (this.beginSave != null && typeof this.beginSave !== 'undefined') {\n            this.beginSave(this);\n        }\n    };\n    /**\n     * Helper method to draw template elements.\n     * @private\n     */\n    PdfPage.prototype.drawPageTemplates = function (document) {\n        // Draw Background templates.\n        var hasBackTemplates = this.section.containsTemplates(document, this, false);\n        if (hasBackTemplates) {\n            var backLayer = new PdfPageLayer(this, false);\n            this.layers.insert(0, backLayer);\n            this.section.drawTemplates(this, backLayer, document, false);\n            if (backLayer.graphics !== null && typeof backLayer.graphics !== 'undefined') {\n                for (var i = 0; i < backLayer.graphics.automaticFields.automaticFields.length; i++) {\n                    var fieldInfo = backLayer.graphics.automaticFields.automaticFields[i];\n                    fieldInfo.field.performDraw(backLayer.graphics, fieldInfo.location, fieldInfo.scalingX, fieldInfo.scalingY);\n                }\n            }\n        }\n        // Draw Foreground templates.\n        var hasFrontTemplates = this.section.containsTemplates(document, this, true);\n        if (hasFrontTemplates) {\n            var frontLayer = new PdfPageLayer(this, false);\n            this.layers.add(frontLayer);\n            this.section.drawTemplates(this, frontLayer, document, true);\n        }\n    };\n    return PdfPage;\n}(PdfPageBase));\nexport { PdfPage };\n","/**\n * Provides data for `PageAddedEventHandler` event.\n * This event raises when adding the new PDF page to the PDF document.\n */\nvar PageAddedEventArgs = /** @class */ (function () {\n    function PageAddedEventArgs(page) {\n        if (typeof page !== 'undefined') {\n            this.pdfPage = page;\n        }\n        else {\n            this.pdfPage = null;\n        }\n    }\n    Object.defineProperty(PageAddedEventArgs.prototype, \"page\", {\n        /**\n         * Gets the `newly added page`.\n         * @private\n         */\n        get: function () {\n            return this.pdfPage;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PageAddedEventArgs;\n}());\nexport { PageAddedEventArgs };\n","/**\n * Represents the `collection of pages in a section`.\n * @private\n */\nvar PdfSectionPageCollection = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initializes a new instance of the `PdfSectionPageCollection` class.\n     * @private\n     */\n    function PdfSectionPageCollection(section) {\n        //  Fields\n        /**\n         * @hidden\n         * @private\n         */\n        this.pdfSection = null;\n        if (section == null) {\n            throw Error('ArgumentNullException(\"section\")');\n        }\n        this.section = section;\n    }\n    Object.defineProperty(PdfSectionPageCollection.prototype, \"section\", {\n        // Properties\n        /**\n         * Gets the `PdfPage` at the specified index.\n         * @private\n         */\n        get: function () {\n            return this.pdfSection;\n        },\n        set: function (value) {\n            this.pdfSection = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Public Methods\n    /**\n     * `Determines` whether the specified page is within the collection.\n     * @private\n     */\n    PdfSectionPageCollection.prototype.contains = function (page) {\n        return this.section.contains(page);\n    };\n    /**\n     * `Removes` the specified page from collection.\n     * @private\n     */\n    PdfSectionPageCollection.prototype.remove = function (page) {\n        this.section.remove(page);\n    };\n    /**\n     * `Adds` a new page from collection.\n     * @private\n     */\n    PdfSectionPageCollection.prototype.add = function () {\n        return this.section.add();\n    };\n    return PdfSectionPageCollection;\n}());\nexport { PdfSectionPageCollection };\n","import { TemplateType } from './../pages/enum';\n// import { PdfStampCollection } from `./../Pages/PdfStampCollection`;\n/**\n * `PdfDocumentTemplate` class encapsulates a page template for all the pages in the document.\n * @private\n */\nvar PdfDocumentTemplate = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initializes a new instance of the `PdfDocumentTemplate` class.\n     * @public\n     */\n    function PdfDocumentTemplate() {\n        //\n    }\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"left\", {\n        // private m_stamps : PdfStampCollection;\n        // Properties\n        /**\n         * `Left` page template object.\n         * @public\n         */\n        get: function () {\n            return this.leftTemplate;\n        },\n        set: function (value) {\n            this.leftTemplate = this.checkElement(value, TemplateType.Left);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"top\", {\n        /**\n         * `Top` page template object.\n         * @public\n         */\n        get: function () {\n            return this.topTemplate;\n        },\n        set: function (value) {\n            this.topTemplate = this.checkElement(value, TemplateType.Top);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"right\", {\n        /**\n         * `Right` page template object.\n         * @public\n         */\n        get: function () {\n            return this.rightTemplate;\n        },\n        set: function (value) {\n            this.rightTemplate = this.checkElement(value, TemplateType.Right);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"bottom\", {\n        /**\n         * `Bottom` page template object.\n         * @public\n         */\n        get: function () {\n            return this.bottomTemplate;\n        },\n        set: function (value) {\n            this.bottomTemplate = this.checkElement(value, TemplateType.Bottom);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"EvenLeft\", {\n        /**\n         * `EvenLeft` page template object.\n         * @public\n         */\n        get: function () {\n            return this.evenLeft;\n        },\n        set: function (value) {\n            this.evenLeft = this.checkElement(value, TemplateType.Left);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"EvenTop\", {\n        /**\n         * `EvenTop` page template object.\n         * @public\n         */\n        get: function () {\n            return this.evenTop;\n        },\n        set: function (value) {\n            this.evenTop = this.checkElement(value, TemplateType.Top);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"EvenRight\", {\n        /**\n         * `EvenRight` page template object.\n         * @public\n         */\n        get: function () {\n            return this.evenRight;\n        },\n        set: function (value) {\n            this.evenRight = this.checkElement(value, TemplateType.Right);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"EvenBottom\", {\n        /**\n         * `EvenBottom` page template object.\n         * @public\n         */\n        get: function () {\n            return this.evenBottom;\n        },\n        set: function (value) {\n            this.evenBottom = this.checkElement(value, TemplateType.Bottom);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"OddLeft\", {\n        /**\n         * `OddLeft` page template object.\n         * @public\n         */\n        get: function () {\n            return this.oddLeft;\n        },\n        set: function (value) {\n            this.oddLeft = this.checkElement(value, TemplateType.Left);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"OddTop\", {\n        /**\n         * `OddTop` page template object.\n         * @public\n         */\n        get: function () {\n            return this.oddTop;\n        },\n        set: function (value) {\n            this.oddTop = this.checkElement(value, TemplateType.Top);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"OddRight\", {\n        /**\n         * `OddRight` page template object.\n         * @public\n         */\n        get: function () {\n            return this.oddRight;\n        },\n        set: function (value) {\n            this.oddRight = this.checkElement(value, TemplateType.Right);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"OddBottom\", {\n        /**\n         * `OddBottom` page template object.\n         * @public\n         */\n        get: function () {\n            return this.oddBottom;\n        },\n        set: function (value) {\n            this.oddBottom = this.checkElement(value, TemplateType.Bottom);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * Returns `left` template.\n     * @public\n     */\n    PdfDocumentTemplate.prototype.getLeft = function (page) {\n        if (page == null) {\n            throw new Error('ArgumentNullException:page');\n        }\n        var template = null;\n        // if (page.Document.Pages != null) {\n        var even = this.isEven(page);\n        if (even) {\n            template = (this.EvenLeft != null) ? this.EvenLeft : this.left;\n        }\n        else {\n            template = (this.OddLeft != null) ? this.OddLeft : this.left;\n        }\n        // }\n        return template;\n    };\n    /**\n     * Returns `top` template.\n     * @public\n     */\n    PdfDocumentTemplate.prototype.getTop = function (page) {\n        if (page == null) {\n            throw new Error('ArgumentNullException:page');\n        }\n        var template = null;\n        // if (page.Document.Pages != null) {\n        var even = this.isEven(page);\n        if (even) {\n            template = (this.EvenTop != null) ? this.EvenTop : this.top;\n        }\n        else {\n            template = (this.OddTop != null) ? this.OddTop : this.top;\n        }\n        // }\n        return template;\n    };\n    /**\n     * Returns `right` template.\n     * @public\n     */\n    PdfDocumentTemplate.prototype.getRight = function (page) {\n        if (page == null) {\n            throw new Error('ArgumentNullException:page');\n        }\n        var template = null;\n        // if (page.Document.Pages != null) {\n        var even = this.isEven(page);\n        if (even) {\n            template = (this.EvenRight != null) ? this.EvenRight : this.right;\n        }\n        else {\n            template = (this.OddRight != null) ? this.OddRight : this.right;\n        }\n        // }\n        return template;\n    };\n    /**\n     * Returns `bottom` template.\n     * @public\n     */\n    PdfDocumentTemplate.prototype.getBottom = function (page) {\n        if (page == null) {\n            throw new Error('ArgumentNullException:page');\n        }\n        var template = null;\n        // if (page.Document.Pages != null) {\n        var even = this.isEven(page);\n        if (even) {\n            template = (this.EvenBottom != null) ? this.EvenBottom : this.bottom;\n        }\n        else {\n            template = (this.OddBottom != null) ? this.OddBottom : this.bottom;\n        }\n        // }\n        return template;\n    };\n    /**\n     * Checks whether the page `is even`.\n     * @private\n     */\n    PdfDocumentTemplate.prototype.isEven = function (page) {\n        var pages = page.section.document.pages;\n        var index = 0;\n        if (pages.pageCollectionIndex.containsKey(page)) {\n            index = pages.pageCollectionIndex.getValue(page) + 1;\n        }\n        else {\n            index = pages.indexOf(page) + 1;\n        }\n        var even = ((index % 2) === 0);\n        return even;\n    };\n    /**\n     * Checks a `template element`.\n     * @private\n     */\n    PdfDocumentTemplate.prototype.checkElement = function (templateElement, type) {\n        if (templateElement != null) {\n            if ((typeof templateElement.type !== 'undefined') && (templateElement.type !== TemplateType.None)) {\n                throw new Error('NotSupportedException:Can not reassign the template element. Please, create new one.');\n            }\n            templateElement.type = type;\n        }\n        return templateElement;\n    };\n    return PdfDocumentTemplate;\n}());\nexport { PdfDocumentTemplate };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfSectionTemplate.ts class for EJ2-PDF\n */\nimport { PdfDocumentTemplate } from './../document/pdf-document-template';\n/**\n * Represents a `page template` for all the pages in the section.\n */\nvar PdfSectionTemplate = /** @class */ (function (_super) {\n    __extends(PdfSectionTemplate, _super);\n    // Constructors\n    /**\n     * `Creates a new object`.\n     * @private\n     */\n    function PdfSectionTemplate() {\n        var _this = _super.call(this) || this;\n        _this.leftValue = _this.topValue = _this.rightValue = _this.bottomValue = _this.stampValue = true;\n        return _this;\n    }\n    Object.defineProperty(PdfSectionTemplate.prototype, \"applyDocumentLeftTemplate\", {\n        // Properties\n        /**\n         * Gets or sets value indicating whether parent `Left page template should be used or not`.\n         * @private\n         */\n        get: function () {\n            return this.leftValue;\n        },\n        set: function (value) {\n            this.leftValue = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSectionTemplate.prototype, \"applyDocumentTopTemplate\", {\n        /**\n         * Gets or sets value indicating whether parent `Top page template should be used or not`.\n         * @private\n         */\n        get: function () {\n            return this.topValue;\n        },\n        set: function (value) {\n            this.topValue = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSectionTemplate.prototype, \"applyDocumentRightTemplate\", {\n        /**\n         * Gets or sets value indicating whether parent `Right page template should be used or not`.\n         * @private\n         */\n        get: function () {\n            return this.rightValue;\n        },\n        set: function (value) {\n            this.rightValue = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSectionTemplate.prototype, \"applyDocumentBottomTemplate\", {\n        /**\n         * Gets or sets value indicating whether parent `Bottom page template should be used or not`.\n         * @private\n         */\n        get: function () {\n            return this.bottomValue;\n        },\n        set: function (value) {\n            this.bottomValue = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSectionTemplate.prototype, \"applyDocumentStamps\", {\n        /**\n         * Gets or sets value indicating whether the `stamp value` is true or not.\n         * @private\n         */\n        get: function () {\n            return this.stampValue;\n        },\n        set: function (value) {\n            this.stampValue = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfSectionTemplate;\n}(PdfDocumentTemplate));\nexport { PdfSectionTemplate };\n","import { PdfPage } from './pdf-page';\nimport { PageAddedEventArgs } from './page-added-event-arguments';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { PdfArray } from './../primitives/pdf-array';\nimport { PdfNumber } from './../primitives/pdf-number';\nimport { PdfName } from './../primitives/pdf-name';\nimport { PdfDictionary } from './../primitives/pdf-dictionary';\nimport { SaveSectionEventHandler } from './../primitives/pdf-dictionary';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\nimport { PdfSectionCollection } from './pdf-section-collection';\nimport { PdfSectionPageCollection } from './pdf-section-page-collection';\nimport { RectangleF } from './../drawing/pdf-drawing';\nimport { PdfSectionTemplate } from './pdf-section-templates';\n/**\n * Represents a `section` entity. A section it's a set of the pages with similar page settings.\n */\nvar PdfSection = /** @class */ (function () {\n    function PdfSection(document, pageSettings) {\n        //Fields\n        //public PageAdded() : PageAddedEventArgs.PageAddedEventHandler = new PageAddedEventArgs.PageAddedEventHandler(Object,args)\n        /**\n         * @hidden\n         * @private\n         */\n        this.pageAdded = new PageAddedEventArgs();\n        /**\n         * @hidden\n         * @private\n         */\n        this.pdfPages = [];\n        /**\n         * @hidden\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        if (typeof pageSettings === 'undefined') {\n            this.constructor(document, document.pageSettings);\n        }\n        else {\n            this.pdfDocument = document;\n            this.settings = pageSettings.clone();\n            this.initialSettings = this.settings.clone();\n            this.initialize();\n        }\n    }\n    Object.defineProperty(PdfSection.prototype, \"parent\", {\n        //Property\n        /**\n         * Gets or sets the `parent`.\n         * @private\n         */\n        get: function () {\n            return this.sectionCollection;\n        },\n        set: function (value) {\n            this.sectionCollection = value;\n            this.section.items.setValue(this.dictionaryProperties.parent, new PdfReferenceHolder(value));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSection.prototype, \"parentDocument\", {\n        /**\n         * Gets the `parent document`.\n         * @private\n         */\n        get: function () {\n            return this.pdfDocument;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSection.prototype, \"pageSettings\", {\n        /**\n         * Gets or sets the `page settings` of the section.\n         * @private\n         */\n        get: function () {\n            return this.settings;\n        },\n        set: function (value) {\n            if (value != null) {\n                this.settings = value;\n            }\n            else {\n                throw Error('Value can not be null.');\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSection.prototype, \"element\", {\n        /**\n         * Gets the wrapped `element`.\n         * @private\n         */\n        get: function () {\n            return this.section;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSection.prototype, \"count\", {\n        /**\n         * Gets the `count` of the pages in the section.\n         * @private\n         */\n        get: function () {\n            return this.pagesReferences.count;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSection.prototype, \"template\", {\n        /**\n         * Gets or sets a `template` for the pages in the section.\n         * @private\n         */\n        get: function () {\n            if (this.pageTemplate == null) {\n                this.pageTemplate = new PdfSectionTemplate();\n            }\n            return this.pageTemplate;\n        },\n        set: function (value) {\n            this.pageTemplate = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSection.prototype, \"document\", {\n        /**\n         * Gets the `document`.\n         * @private\n         */\n        get: function () {\n            return this.sectionCollection.document;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSection.prototype, \"pages\", {\n        /**\n         * Gets the collection of `pages` in a section (Read only)\n         * @private\n         */\n        get: function () {\n            if (this.pagesCollection == null || typeof this.pagesCollection === 'undefined') {\n                this.pagesCollection = new PdfSectionPageCollection(this);\n            }\n            return this.pagesCollection;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //methods\n    /**\n     * `Return the page collection` of current section.\n     * @private\n     */\n    PdfSection.prototype.getPages = function () {\n        return this.pdfPages;\n    };\n    /**\n     * `Translates` point into native coordinates of the page.\n     * @private\n     */\n    PdfSection.prototype.pointToNativePdf = function (page, point) {\n        var bounds = this.getActualBounds(page, true);\n        point.x += bounds.x;\n        point.y = this.pageSettings.height - (point.y);\n        return point;\n    };\n    /**\n     * Sets the page setting of the current section.\n     * @public\n     * @param settings Instance of `PdfPageSettings`\n     */\n    PdfSection.prototype.setPageSettings = function (settings) {\n        this.settings = settings;\n        this.state.orientation = settings.orientation;\n        this.state.rotate = settings.rotate;\n        this.state.size = settings.size;\n        this.state.origin = settings.origin;\n    };\n    /**\n     * `Initializes` the object.\n     * @private\n     */\n    PdfSection.prototype.initialize = function () {\n        this.pagesReferences = new PdfArray();\n        this.section = new PdfDictionary();\n        this.state = new PageSettingsState(this.pdfDocument);\n        this.section.sectionBeginSave = new SaveSectionEventHandler(this, this.state);\n        this.pageCount = new PdfNumber(0);\n        this.section.items.setValue(this.dictionaryProperties.count, this.pageCount);\n        this.section.items.setValue(this.dictionaryProperties.type, new PdfName(this.dictionaryProperties.pages));\n        this.section.items.setValue(this.dictionaryProperties.kids, this.pagesReferences);\n    };\n    /**\n     * Checks whether any template should be printed on this layer.\n     * @private\n     * @param document The parent document.\n     * @param page The parent page.\n     * @param foreground Layer z-order.\n     * @returns True - if some content should be printed on the layer, False otherwise.\n     */\n    PdfSection.prototype.containsTemplates = function (document, page, foreground) {\n        var documentHeaders = this.getDocumentTemplates(document, page, true, foreground);\n        var documentTemplates = this.getDocumentTemplates(document, page, false, foreground);\n        var contains = (documentHeaders.length > 0 || documentTemplates.length > 0);\n        return contains;\n    };\n    /**\n     * Returns array of the document templates.\n     * @private\n     * @param document The parent document.\n     * @param page The parent page.\n     * @param headers If true - return headers/footers, if false - return simple templates.\n     * @param foreground If true - return foreground templates, if false - return background templates.\n     * @returns Returns array of the document templates.\n     */\n    /* tslint:disable */\n    PdfSection.prototype.getDocumentTemplates = function (document, page, headers, foreground) {\n        var templates = [];\n        if (headers) {\n            if (this.template.applyDocumentTopTemplate && document.template.getTop(page) != null) {\n                if ((!(document.template.getTop(page).foreground || foreground)) || (document.template.getTop(page).foreground && foreground)) {\n                    templates.push(document.template.getTop(page));\n                }\n            }\n            if (this.template.applyDocumentBottomTemplate && document.template.getBottom(page) != null) {\n                if ((!(document.template.getBottom(page).foreground || foreground)) || (document.template.getBottom(page).foreground && foreground)) {\n                    templates.push(document.template.getBottom(page));\n                }\n            }\n            if (this.template.applyDocumentLeftTemplate && document.template.getLeft(page) != null) {\n                if ((!(document.template.getLeft(page).foreground || foreground)) || (document.template.getLeft(page).foreground && foreground)) {\n                    templates.push(document.template.getLeft(page));\n                }\n            }\n            if (this.template.applyDocumentRightTemplate && document.template.getRight(page) != null) {\n                if ((!(document.template.getRight(page).foreground || foreground)) || (document.template.getRight(page).foreground && foreground)) {\n                    templates.push(document.template.getRight(page));\n                }\n            }\n        }\n        return templates;\n    };\n    /* tslint:enable */\n    /**\n     * `Adds` the specified page.\n     * @private\n     */\n    PdfSection.prototype.add = function (page) {\n        if (typeof page === 'undefined') {\n            var page_1 = new PdfPage();\n            this.add(page_1);\n            return page_1;\n        }\n        else {\n            var r = this.checkPresence(page);\n            this.pdfPages.push(page);\n            this.pagesReferences.add(r);\n            page.setSection(this);\n            page.resetProgress();\n            this.pageAddedMethod(page);\n        }\n    };\n    /**\n     * `Checks the presence`.\n     * @private\n     */\n    PdfSection.prototype.checkPresence = function (page) {\n        var rh = new PdfReferenceHolder(page);\n        var contains = false;\n        var sc = this.parent;\n        for (var index = 0; index < sc.section.length; index++) {\n            var section = sc.section[index];\n            contains = contains || section.contains(page);\n        }\n        return rh;\n    };\n    /**\n     * `Determines` whether the page in within the section.\n     * @private\n     */\n    PdfSection.prototype.contains = function (page) {\n        var index = this.indexOf(page);\n        return (0 <= index);\n    };\n    /**\n     * Get the `index of` the page.\n     * @private\n     */\n    PdfSection.prototype.indexOf = function (page) {\n        for (var index = 0; index < this.pdfPages.length; index++) {\n            if (this.pdfPages[index] === page) {\n                return this.pdfPages.indexOf(page);\n            }\n        }\n        var r = new PdfReferenceHolder(page);\n        return this.pagesReferences.indexOf(r);\n    };\n    /**\n     * Call two event's methods.\n     * @hidden\n     * @private\n     */\n    PdfSection.prototype.pageAddedMethod = function (page) {\n        //Create event's arguments\n        var args = new PageAddedEventArgs(page);\n        this.onPageAdded(args);\n        var parent = this.parent;\n        parent.document.pages.onPageAdded(args);\n        this.pageCount.intValue = this.count;\n    };\n    /**\n     * Called when the page has been added.\n     * @hidden\n     * @private\n     */\n    PdfSection.prototype.onPageAdded = function (args) {\n        //\n    };\n    PdfSection.prototype.getActualBounds = function (arg1, arg2, arg3) {\n        if (arg1 instanceof PdfPage && typeof arg2 === 'boolean') {\n            var result = void 0;\n            var document_1 = this.parent.document;\n            result = this.getActualBounds(document_1, arg1, arg2);\n            return result;\n        }\n        else {\n            arg1 = arg1;\n            arg2 = arg2;\n            arg3 = arg3;\n            var bounds = new RectangleF(0, 0, 0, 0);\n            bounds.height = (arg3) ? this.pageSettings.size.height : this.pageSettings.getActualSize().height;\n            bounds.width = (arg3) ? this.pageSettings.size.width : this.pageSettings.getActualSize().width;\n            var left = this.getLeftIndentWidth(arg1, arg2, arg3);\n            var top_1 = this.getTopIndentHeight(arg1, arg2, arg3);\n            var right = this.getRightIndentWidth(arg1, arg2, arg3);\n            var bottom = this.getBottomIndentHeight(arg1, arg2, arg3);\n            bounds.x += left;\n            bounds.y += top_1;\n            bounds.width -= (left + right);\n            bounds.height -= (top_1 + bottom);\n            return bounds;\n        }\n    };\n    /**\n     * Calculates width of the `left indent`.\n     * @private\n     */\n    PdfSection.prototype.getLeftIndentWidth = function (document, page, includeMargins) {\n        if (document == null) {\n            throw new Error('ArgumentNullException:document');\n        }\n        if (page == null) {\n            throw new Error('ArgumentNullException:page');\n        }\n        var value = (includeMargins) ? this.pageSettings.margins.left : 0;\n        var templateWidth = (this.template.getLeft(page) != null) ? this.template.getLeft(page).width : 0;\n        var docTemplateWidth = (document.template.getLeft(page) != null) ? document.template.getLeft(page).width : 0;\n        value += (this.template.applyDocumentLeftTemplate) ? Math.max(templateWidth, docTemplateWidth) : templateWidth;\n        return value;\n    };\n    /**\n     * Calculates `Height` of the top indent.\n     * @private\n     */\n    PdfSection.prototype.getTopIndentHeight = function (document, page, includeMargins) {\n        if (document == null) {\n            throw new Error('ArgumentNullException:document');\n        }\n        if (page == null) {\n            throw new Error('ArgumentNullException:page');\n        }\n        var value = (includeMargins) ? this.pageSettings.margins.top : 0;\n        var templateHeight = (this.template.getTop(page) != null) ? this.template.getTop(page).height : 0;\n        var docTemplateHeight = (document.template.getTop(page) != null) ? document.template.getTop(page).height : 0;\n        value += (this.template.applyDocumentTopTemplate) ? Math.max(templateHeight, docTemplateHeight) : templateHeight;\n        return value;\n    };\n    /**\n     * Calculates `width` of the right indent.\n     * @private\n     */\n    PdfSection.prototype.getRightIndentWidth = function (document, page, includeMargins) {\n        if (document == null) {\n            throw new Error('ArgumentNullException:document');\n        }\n        if (page == null) {\n            throw new Error('ArgumentNullException:page');\n        }\n        var value = (includeMargins) ? this.pageSettings.margins.right : 0;\n        var templateWidth = (this.template.getRight(page) != null) ? this.template.getRight(page).width : 0;\n        var docTemplateWidth = (document.template.getRight(page) != null) ? document.template.getRight(page).width : 0;\n        value += (this.template.applyDocumentRightTemplate) ? Math.max(templateWidth, docTemplateWidth) : templateWidth;\n        return value;\n    };\n    /**\n     * Calculates `Height` of the bottom indent.\n     * @private\n     */\n    PdfSection.prototype.getBottomIndentHeight = function (document, page, includeMargins) {\n        if (document == null) {\n            throw new Error('ArgumentNullException:document');\n        }\n        if (page == null) {\n            throw new Error('ArgumentNullException:page');\n        }\n        var value = (includeMargins) ? this.pageSettings.margins.bottom : 0;\n        var templateHeight = (this.template.getBottom(page) != null) ? this.template.getBottom(page).height : 0;\n        var docTemplateHeight = (document.template.getBottom(page) != null) ? document.template.getBottom(page).height : 0;\n        value += (this.template.applyDocumentBottomTemplate) ? Math.max(templateHeight, docTemplateHeight) : templateHeight;\n        return value;\n    };\n    /**\n     * `Removes` the page from the section.\n     * @private\n     */\n    PdfSection.prototype.remove = function (page) {\n        if (page == null) {\n            throw Error('ArgumentNullException(\"page\")');\n        }\n        var index = this.pdfPages.indexOf(page);\n        this.pagesReferences.removeAt(index);\n        var temproaryPages = [];\n        for (var j = 0; j < index; j++) {\n            temproaryPages.push(this.pdfPages[j]);\n        }\n        for (var j = index + 1; j < this.pdfPages.length; j++) {\n            temproaryPages.push(this.pdfPages[j]);\n        }\n        this.pdfPages = temproaryPages;\n    };\n    /**\n     * In fills dictionary by the data from `Page settings`.\n     * @private\n     */\n    PdfSection.prototype.applyPageSettings = function (container, parentSettings, state) {\n        var bounds = new RectangleF(state.origin, state.size);\n        container.items.setValue(this.dictionaryProperties.mediaBox, PdfArray.fromRectangle(bounds));\n        var rotate = 0;\n        rotate = PdfSectionCollection.rotateFactor * state.rotate;\n        var angle = new PdfNumber(rotate);\n        container.items.setValue(this.dictionaryProperties.rotate, angle);\n    };\n    /**\n     * Catches the Save event of the dictionary.\n     * @hidden\n     * @private\n     */\n    PdfSection.prototype.beginSave = function (state, writer) {\n        var doc = writer.document;\n        this.applyPageSettings(this.section, doc.pageSettings, state);\n    };\n    /**\n     * Draws page templates on the page.\n     * @private\n     */\n    PdfSection.prototype.drawTemplates = function (page, layer, document, foreground) {\n        var documentHeaders = this.getDocumentTemplates(document, page, true, foreground);\n        var documentTemplates = this.getDocumentTemplates(document, page, false, foreground);\n        if (foreground) {\n            this.drawTemplatesHelper(layer, document, documentHeaders);\n            this.drawTemplatesHelper(layer, document, documentTemplates);\n        }\n        else {\n            this.drawTemplatesHelper(layer, document, documentHeaders);\n            this.drawTemplatesHelper(layer, document, documentTemplates);\n        }\n    };\n    /**\n     * Draws page templates on the page.\n     * @private\n     */\n    PdfSection.prototype.drawTemplatesHelper = function (layer, document, templates) {\n        if (templates != null && templates.length > 0) {\n            var len = templates.length;\n            for (var i = 0; i < len; i++) {\n                var template = templates[i];\n                template.draw(layer, document);\n            }\n        }\n    };\n    return PdfSection;\n}());\nexport { PdfSection };\nvar PageSettingsState = /** @class */ (function () {\n    //Public Constructor\n    /**\n     * New instance to store the `PageSettings`.\n     * @private\n     */\n    function PageSettingsState(document) {\n        this.pageOrientation = document.pageSettings.orientation;\n        this.pageRotate = document.pageSettings.rotate;\n        this.pageSize = document.pageSettings.size;\n        this.pageOrigin = document.pageSettings.origin;\n    }\n    Object.defineProperty(PageSettingsState.prototype, \"orientation\", {\n        //public Properties\n        /**\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.pageOrientation;\n        },\n        set: function (value) {\n            this.pageOrientation = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PageSettingsState.prototype, \"rotate\", {\n        /**\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.pageRotate;\n        },\n        set: function (value) {\n            this.pageRotate = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PageSettingsState.prototype, \"size\", {\n        /**\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.pageSize;\n        },\n        set: function (value) {\n            this.pageSize = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PageSettingsState.prototype, \"origin\", {\n        /**\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.pageOrigin;\n        },\n        set: function (value) {\n            this.pageOrigin = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PageSettingsState;\n}());\nexport { PageSettingsState };\n","import { PdfNumber } from './../primitives/pdf-number';\nimport { PdfName } from './../primitives/pdf-name';\nimport { PdfArray } from './../primitives/pdf-array';\nimport { PdfDictionary, SaveSectionCollectionEventHandler } from './../primitives/pdf-dictionary';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { RectangleF, PointF } from './../drawing/pdf-drawing';\nimport { PdfSection } from './pdf-section';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\n/**\n * Represents the `collection of the sections`.\n * @private\n */\nvar PdfSectionCollection = /** @class */ (function () {\n    //constructor\n    /**\n     * Initializes a new instance of the `PdfSectionCollection` class.\n     * @private\n     */\n    function PdfSectionCollection(document) {\n        /**\n         * @hidden\n         * @private\n         */\n        this.sections = [];\n        /**\n         * @hidden\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        // if (document === null) {\n        //     throw new Error('ArgumentNullException : document');\n        // }\n        this.pdfDocument = document.clone();\n        this.initialize();\n    }\n    Object.defineProperty(PdfSectionCollection.prototype, \"section\", {\n        //Properties\n        /**\n         * Gets the `Section` collection.\n         */\n        get: function () {\n            return this.sections;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSectionCollection.prototype, \"document\", {\n        /**\n         * Gets a parent `document`.\n         * @private\n         */\n        get: function () {\n            return this.pdfDocument;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSectionCollection.prototype, \"count\", {\n        /**\n         * Gets the `number of sections` in a document.\n         * @private\n         */\n        get: function () {\n            return this.sections.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSectionCollection.prototype, \"element\", {\n        /**\n         * Gets the wrapped `element`.\n         * @private\n         */\n        get: function () {\n            return this.pages;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Methods\n    /**\n     * `Initializes the object`.\n     * @private\n     */\n    PdfSectionCollection.prototype.initialize = function () {\n        this.sectionCount = new PdfNumber(0);\n        this.sectionCollection = new PdfArray();\n        this.pages = new PdfDictionary();\n        this.pages.beginSave = new SaveSectionCollectionEventHandler(this);\n        this.pages.items.setValue(this.dictionaryProperties.type, new PdfName('Pages'));\n        this.pages.items.setValue(this.dictionaryProperties.kids, this.sectionCollection);\n        this.pages.items.setValue(this.dictionaryProperties.count, this.sectionCount);\n        this.pages.items.setValue(this.dictionaryProperties.resources, new PdfDictionary());\n        this.setPageSettings(this.pages, this.pdfDocument.pageSettings);\n    };\n    /**\n     * Initializes a new instance of the `PdfSectionCollection` class.\n     * @private\n     */\n    PdfSectionCollection.prototype.pdfSectionCollection = function (index) {\n        if (index < 0 || index >= this.count) {\n            throw new Error('IndexOutOfRangeException()');\n        }\n        return this.sections[index];\n    };\n    /**\n     * In fills dictionary by the data from `Page settings`.\n     * @private\n     */\n    PdfSectionCollection.prototype.setPageSettings = function (container, pageSettings) {\n        // if (container === null) {\n        //     throw new Error('ArgumentNullException : container');\n        // }\n        // if (pageSettings === null) {\n        //     throw new Error('ArgumentNullException : pageSettings');\n        // }\n        var bounds = new RectangleF(new PointF(), pageSettings.size);\n        container.items.setValue(this.dictionaryProperties.mediaBox, PdfArray.fromRectangle(bounds));\n    };\n    /**\n     * `Adds` the specified section.\n     * @private\n     */\n    PdfSectionCollection.prototype.add = function (section) {\n        if (typeof section === 'undefined') {\n            var section_1 = new PdfSection(this.pdfDocument);\n            this.add(section_1);\n            return section_1;\n        }\n        else {\n            // if (section === null) {\n            //     throw new Error('ArgumentNullException : section');\n            // }\n            var r = this.checkSection(section);\n            this.sections.push(section);\n            section.parent = this;\n            this.sectionCollection.add(r);\n            return this.sections.indexOf(section);\n        }\n    };\n    /**\n     * `Checks` if the section is within the collection.\n     * @private\n     */\n    PdfSectionCollection.prototype.checkSection = function (section) {\n        var r = new PdfReferenceHolder(section);\n        var contains = this.sectionCollection.contains(r);\n        // if (contains) {\n        //     throw new Error('ArgumentException : The object can not be added twice to the collection,section');\n        // }\n        return r;\n    };\n    /**\n     * Catches the Save event of the dictionary to `count the pages`.\n     * @private\n     */\n    PdfSectionCollection.prototype.countPages = function () {\n        var count = 0;\n        this.sections.forEach(function (n) { return (count += n.count); });\n        return count;\n    };\n    /**\n     * Catches the Save event of the dictionary to `count the pages`.\n     * @hidden\n     * @private\n     */\n    PdfSectionCollection.prototype.beginSave = function () {\n        this.sectionCount.intValue = this.countPages();\n    };\n    //Fields\n    /**\n     * Rotate factor for page `rotation`.\n     * @default 90\n     * @private\n     */\n    PdfSectionCollection.rotateFactor = 90;\n    return PdfSectionCollection;\n}());\nexport { PdfSectionCollection };\n","import { PdfPage } from './pdf-page';\nimport { Dictionary } from './../collections/dictionary';\nimport { PdfPageOrientation } from './enum';\n/**\n * Represents a virtual collection of all the pages in the document.\n * @private\n */\nvar PdfDocumentPageCollection = /** @class */ (function () {\n    //constructor\n    /**\n     * Initializes a new instance of the `PdfPageCollection` class.\n     * @private\n     */\n    function PdfDocumentPageCollection(document) {\n        /**\n         * It holds the page collection with the `index`.\n         * @private\n         */\n        this.pdfPageCollectionIndex = new Dictionary();\n        /**\n         * Stores the previous pages's `orientation`.\n         * @default PdfPageOrientation.Portrait\n         * @private\n         */\n        this.previousPageOrientation = PdfPageOrientation.Portrait;\n        this.document = document;\n    }\n    Object.defineProperty(PdfDocumentPageCollection.prototype, \"count\", {\n        //Property\n        /**\n         * Gets the total `number of the pages`.\n         * @private\n         */\n        get: function () {\n            return this.countPages();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentPageCollection.prototype, \"pageCollectionIndex\", {\n        /**\n         * Gets a `page index` from the document.\n         * @private\n         */\n        get: function () {\n            return this.pdfPageCollectionIndex;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfDocumentPageCollection.prototype.add = function (page) {\n        if (typeof page === 'undefined') {\n            var page_1 = new PdfPage();\n            this.add(page_1);\n            return page_1;\n        }\n        else {\n            var section = this.getLastSection();\n            if (section.pageSettings.orientation !== this.previousPageOrientation) {\n                section = this.document.sections.add();\n                section.pageSettings.orientation = this.document.pageSettings.orientation;\n            }\n            section.add(page);\n        }\n    };\n    /**\n     * Returns `last section` in the document.\n     * @private\n     */\n    PdfDocumentPageCollection.prototype.getLastSection = function () {\n        var sc = this.document.sections;\n        if (sc.section.length === 0) {\n            sc.add();\n        }\n        var section = sc.section[sc.section.length - 1];\n        return section;\n    };\n    /**\n     * Called when `new page has been added`.\n     * @private\n     */\n    PdfDocumentPageCollection.prototype.onPageAdded = function (args) {\n        // if (PageAdded !== null)\n        // {\n        //     PageAdded(this, args);\n        // }\n    };\n    /**\n     * Gets the `total number of pages`.\n     * @private\n     */\n    PdfDocumentPageCollection.prototype.countPages = function () {\n        var sc = this.document.sections;\n        var count = 0;\n        for (var index = 0; index < sc.section.length; index++) {\n            count += sc.section[index].count;\n        }\n        return count;\n    };\n    /**\n     * Gets the `page object` from page index.\n     * @private\n     */\n    PdfDocumentPageCollection.prototype.getPageByIndex = function (index) {\n        return this.getPage(index);\n    };\n    /**\n     * Gets a page by its `index` in the document.\n     * @private\n     */\n    PdfDocumentPageCollection.prototype.getPage = function (index) {\n        if ((index < 0) || (index >= this.count)) {\n            throw Error('ArgumentOutOfRangeException(\"index\", \"Value can not be less 0\")');\n        }\n        var page = null;\n        var sectionStartIndex = 0;\n        var sectionCount = 0;\n        var pageIndex = 0;\n        var length = this.document.sections.count;\n        for (var i = 0; i < length; i++) {\n            var section = this.document.sections.section[i];\n            sectionCount = section.count;\n            pageIndex = index - sectionStartIndex;\n            // We found a section containing the page.\n            if ((index >= sectionStartIndex && pageIndex < sectionCount)) {\n                page = section.getPages()[pageIndex];\n                break;\n            }\n            sectionStartIndex += sectionCount;\n        }\n        return page;\n    };\n    /**\n     * Gets the `index of` the page in the document.\n     * @private\n     */\n    PdfDocumentPageCollection.prototype.indexOf = function (page) {\n        var index = -1;\n        if (page == null) {\n            throw new Error('ArgumentNullException: page');\n        }\n        else {\n            var numPages = 0;\n            for (var i = 0, len = this.document.sections.count; i < len; i++) {\n                var section = this.document.sections.pdfSectionCollection(i);\n                index = section.indexOf(page);\n                if (index >= 0) {\n                    index += numPages;\n                    break;\n                }\n                else {\n                    index = -1;\n                }\n                numPages += section.count;\n            }\n        }\n        return index;\n    };\n    /**\n     * `Removes` the specified page.\n     * @private\n     */\n    PdfDocumentPageCollection.prototype.remove = function (page) {\n        if (page == null) {\n            throw Error('ArgumentNullException(\"page\")');\n        }\n        var section = null;\n        var len;\n        for (var i = 0, len_1 = this.document.sections.count; i < len_1; i++) {\n            section = this.document.sections.pdfSectionCollection(i);\n            if (section.pages.contains(page)) {\n                section.pages.remove(page);\n                break;\n            }\n        }\n        return section;\n    };\n    return PdfDocumentPageCollection;\n}());\nexport { PdfDocumentPageCollection };\n","/**\n * PdfCacheCollection.ts class for EJ2-PDF\n */\nimport { Dictionary } from './../collections/dictionary';\n/**\n * `Collection of the cached objects`.\n * @private\n */\nvar PdfCacheCollection = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initializes a new instance of the `PdfCacheCollection` class.\n     * @private\n     */\n    function PdfCacheCollection() {\n        this.referenceObjects = [];\n        this.pdfFontCollection = new Dictionary();\n    }\n    // Public methods\n    /**\n     * `Searches` for the similar cached object. If is not found - adds the object to the cache.\n     * @private\n     */\n    PdfCacheCollection.prototype.search = function (obj) {\n        var result = null;\n        var group = this.createNewGroup();\n        group.push(obj);\n        return result;\n    };\n    // Implementation\n    /**\n     * `Creates` a new group.\n     * @private\n     */\n    PdfCacheCollection.prototype.createNewGroup = function () {\n        var group = [];\n        this.referenceObjects.push(group);\n        return group;\n    };\n    PdfCacheCollection.prototype.destroy = function () {\n        this.pdfFontCollection = undefined;\n        this.referenceObjects = undefined;\n    };\n    return PdfCacheCollection;\n}());\nexport { PdfCacheCollection };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfWriter } from './../input-output/pdf-writer';\nimport { PdfMainObjectCollection } from './../input-output/pdf-main-object-collection';\nimport { PdfDocumentBase } from './pdf-document-base';\nimport { PdfCrossTable } from './../input-output/pdf-cross-table';\nimport { PdfCatalog } from './pdf-catalog';\nimport { PdfPageSettings } from './../pages/pdf-page-settings';\nimport { PdfSectionCollection } from './../pages/pdf-section-collection';\nimport { PdfDocumentPageCollection } from './../pages/pdf-document-page-collection';\nimport { PdfCacheCollection } from './../general/pdf-cache-collection';\nimport { PdfColorSpace } from './../graphics/enum';\nimport { PdfDocumentTemplate } from './pdf-document-template';\nimport { PdfFontFamily } from './../graphics/fonts/enum';\nimport { PdfStandardFont } from './../graphics/fonts/pdf-standard-font';\n/**\n * Represents a PDF document and can be used to create a new PDF document from the scratch.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // add a new page to the document\n * let page1 : PdfPage = document.pages.add();\n * // set the font\n * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n * // create black brush\n * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n * // draw the text\n * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(0, 0));\n * // save the document\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfDocument = /** @class */ (function (_super) {\n    __extends(PdfDocument, _super);\n    function PdfDocument(isMerging) {\n        var _this = _super.call(this) || this;\n        /**\n         * Default `margin` value.\n         * @default 40.0\n         * @private\n         */\n        _this.defaultMargin = 40.0;\n        /**\n         * Internal variable to store instance of `StreamWriter` classes..\n         * @default null\n         * @private\n         */\n        _this.streamWriter = null;\n        _this = _super.call(this, _this) || this;\n        if (isMerging === true || isMerging === false || typeof isMerging !== 'undefined') {\n            var objects = new PdfMainObjectCollection();\n            _this.setMainObjectCollection(objects);\n            var crossTable = new PdfCrossTable();\n            crossTable.isMerging = isMerging;\n            crossTable.document = _this;\n            _this.setCrossTable(crossTable);\n            var catalog = new PdfCatalog();\n            _this.setCatalog(catalog);\n            objects.add(catalog);\n            catalog.position = -1;\n            _this.sectionCollection = new PdfSectionCollection(_this);\n            _this.documentPageCollection = new PdfDocumentPageCollection(_this);\n            catalog.pages = _this.sectionCollection;\n        }\n        else {\n            PdfDocument.cacheCollection = new PdfCacheCollection();\n            _this.constructor(false);\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfDocument, \"defaultFont\", {\n        //Properties\n        /**\n         * Gets the `default font`. It is used for complex objects when font is not explicitly defined.\n         * @private\n         */\n        get: function () {\n            if (this.defaultStandardFont == null) {\n                this.defaultStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 8);\n            }\n            return this.defaultStandardFont;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"sections\", {\n        /**\n         * Gets the collection of the `sections` in the document.\n         * @private\n         */\n        get: function () {\n            return this.sectionCollection;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"pageSettings\", {\n        /**\n         * Gets the document's page setting.\n         * @public\n         */\n        get: function () {\n            if (this.settings == null) {\n                this.settings = new PdfPageSettings(this.defaultMargin);\n            }\n            return this.settings;\n        },\n        /**\n         * Sets the document's page setting.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         *\n         * // sets the right margin of the page\n         * document.pageSettings.margins.right = 0;\n         * // set the page size.\n         * document.pageSettings.size = new SizeF(500, 500);\n         * // change the page orientation to landscape\n         * document.pageSettings.orientation = PdfPageOrientation.Landscape;\n         * // apply 90 degree rotation on the page\n         * document.pageSettings.rotate = PdfPageRotateAngle.RotateAngle90;\n         *\n         * // add a pages to the document\n         * let page1 : PdfPage = document.pages.add();\n         * // set font\n         * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n         * // set brush\n         * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n         * // set the specified Point\n         * let point : PointF = new PointF(page1.getClientSize().width - 200, page1.getClientSize().height - 200);\n         * // draw the text\n         * page1.graphics.drawString('Hello World', font, blackBrush, point);\n         * // save the document\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this.settings = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"pages\", {\n        /**\n         * Represents the collection of pages in the PDF document.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * //\n         * // get the collection of pages in the document\n         * let pageCollection : PdfDocumentPageCollection  = document.pages;\n         * //\n         * // add pages\n         * let page1 : PdfPage = pageCollection.add();\n         * // save the document\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this.documentPageCollection;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument, \"cache\", {\n        /**\n         * Gets collection of the `cached objects`.\n         * @private\n         */\n        get: function () {\n            if (typeof PdfDocument.cacheCollection === 'undefined' || PdfDocument.cacheCollection == null) {\n                return new PdfCacheCollection();\n            }\n            return PdfDocument.cacheCollection;\n        },\n        /**\n         * Sets collection of the `cached objects`.\n         * @private\n         */\n        set: function (value) {\n            this.cacheCollection = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"colorSpace\", {\n        /* tslint:disable */\n        /**\n         * Gets or sets the `color space` of the document. This property can be used to create PDF document in RGB, Gray scale or CMYK color spaces.\n         * @private\n         */\n        get: function () {\n            if ((this.pdfColorSpace === PdfColorSpace.Rgb) || ((this.pdfColorSpace === PdfColorSpace.Cmyk)\n                || (this.pdfColorSpace === PdfColorSpace.GrayScale))) {\n                return this.pdfColorSpace;\n            }\n            else {\n                return PdfColorSpace.Rgb;\n            }\n        },\n        set: function (value) {\n            if ((value === PdfColorSpace.Rgb) || ((value === PdfColorSpace.Cmyk) ||\n                (value === PdfColorSpace.GrayScale))) {\n                this.pdfColorSpace = value;\n            }\n            else {\n                this.pdfColorSpace = PdfColorSpace.Rgb;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"template\", {\n        /* tslint:enable */\n        /**\n         * Gets or sets a `template` to all pages in the document.\n         * @private\n         */\n        get: function () {\n            if (this.pageTemplate == null) {\n                this.pageTemplate = new PdfDocumentTemplate();\n            }\n            return this.pageTemplate;\n        },\n        set: function (value) {\n            this.pageTemplate = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfDocument.prototype.docSave = function (stream, arg2, arg3) {\n        this.checkPagesPresence();\n        if (stream === null) {\n            throw new Error('ArgumentNullException : stream');\n        }\n        this.streamWriter = stream;\n        var writer = new PdfWriter(stream);\n        writer.document = this;\n        if (typeof arg2 === 'boolean' && typeof arg3 === 'undefined') {\n            return this.crossTable.save(writer);\n        }\n        else {\n            this.crossTable.save(writer, arg2);\n        }\n    };\n    /**\n     * Checks the pages `presence`.\n     * @private\n     */\n    PdfDocument.prototype.checkPagesPresence = function () {\n        if (this.pages.count === 0) {\n            this.pages.add();\n        }\n    };\n    /**\n     * disposes the current instance of `PdfDocument` class.\n     * ```typescript\n     * // create a new PDF document\n     * let document : PdfDocument = new PdfDocument();\n     * // add a new page to the document\n     * let page1 : PdfPage = document.pages.add();\n     * // set the font\n     * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n     * // create black brush\n     * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n     * // draw the text\n     * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(0, 0));\n     * // save the document\n     * document.save('output.pdf');\n     * // destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfDocument.prototype.destroy = function () {\n        this.catalog = undefined;\n        this.colorSpace = undefined;\n        this.currentSavingObj = undefined;\n        this.documentPageCollection = undefined;\n        this.isStreamCopied = undefined;\n        this.pageSettings = undefined;\n        this.pageTemplate = undefined;\n        this.pdfColorSpace = undefined;\n        this.sectionCollection = undefined;\n        PdfDocument.cache.destroy();\n        this.crossTable.pdfObjects.destroy();\n        PdfDocument.cache = undefined;\n        this.streamWriter.destroy();\n    };\n    /**\n     * `Font` used in complex objects to draw strings and text when it is not defined explicitly.\n     * @default null\n     * @private\n     */\n    PdfDocument.defaultStandardFont = null;\n    return PdfDocument;\n}(PdfDocumentBase));\nexport { PdfDocument };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfFont } from './pdf-font';\nimport { PdfSubSuperScript } from './enum';\nimport { PdfArray } from './../../primitives/pdf-array';\n/**\n * `Metrics` of the font.\n * @private\n */\nvar PdfFontMetrics = /** @class */ (function () {\n    function PdfFontMetrics() {\n        /**\n         * `Line gap`.\n         * @private\n         */\n        this.lineGap = 0;\n    }\n    //  Public methods\n    /**\n     * Returns `ascent` taking into consideration font`s size.\n     * @private\n     */\n    PdfFontMetrics.prototype.getAscent = function (format) {\n        var returnValue = this.ascent * PdfFont.charSizeMultiplier * this.getSize(format);\n        return returnValue;\n    };\n    /**\n     * Returns `descent` taking into consideration font`s size.\n     * @private\n     */\n    PdfFontMetrics.prototype.getDescent = function (format) {\n        var returnValue = this.descent * PdfFont.charSizeMultiplier * this.getSize(format);\n        return returnValue;\n    };\n    /**\n     * Returns `Line gap` taking into consideration font`s size.\n     * @private\n     */\n    PdfFontMetrics.prototype.getLineGap = function (format) {\n        var returnValue = this.lineGap * PdfFont.charSizeMultiplier * this.getSize(format);\n        return returnValue;\n    };\n    /**\n     * Returns `height` taking into consideration font`s size.\n     * @private\n     */\n    PdfFontMetrics.prototype.getHeight = function (format) {\n        var height;\n        var clearTypeFonts = ['cambria', 'candara', 'constantia', 'corbel', 'cariadings'];\n        var clearTypeFontCollection = [];\n        for (var index = 0; index < clearTypeFonts.length; index++) {\n            var font = clearTypeFonts[index];\n            clearTypeFontCollection.push(font);\n        }\n        if (this.getDescent(format) < 0) {\n            // if ((clearTypeFontCollection.indexOf(this.name.toLowerCase()) !== -1) && !this.isUnicodeFont) {\n            //     height = (this.GetAscent(format) - this.GetDescent(format) - this.GetLineGap(format));\n            // } else {\n            height = (this.getAscent(format) - this.getDescent(format) + this.getLineGap(format));\n            // }\n        }\n        else {\n            height = (this.getAscent(format) + this.getDescent(format) + this.getLineGap(format));\n        }\n        return height;\n    };\n    /**\n     * Calculates `size` of the font depending on the subscript/superscript value.\n     * @private\n     */\n    PdfFontMetrics.prototype.getSize = function (format) {\n        var size = this.size;\n        if (format != null) {\n            switch (format.subSuperScript) {\n                case PdfSubSuperScript.SubScript:\n                    size /= this.subScriptSizeFactor;\n                    break;\n                case PdfSubSuperScript.SuperScript:\n                    size /= this.superscriptSizeFactor;\n                    break;\n            }\n        }\n        return size;\n    };\n    /**\n     * `Clones` the metrics.\n     * @private\n     */\n    PdfFontMetrics.prototype.clone = function () {\n        var metrics = this;\n        metrics.widthTable = WidthTable.clone();\n        return metrics;\n    };\n    Object.defineProperty(PdfFontMetrics.prototype, \"widthTable\", {\n        //  Properies\n        /**\n         * Gets or sets the `width table`.\n         * @private\n         */\n        get: function () {\n            return this.internalWidthTable;\n        },\n        set: function (value) {\n            this.internalWidthTable = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfFontMetrics;\n}());\nexport { PdfFontMetrics };\nvar WidthTable = /** @class */ (function () {\n    function WidthTable() {\n    }\n    /**\n     * Static `clones` this instance of the WidthTable class.\n     * @private\n     */\n    WidthTable.clone = function () {\n        return null;\n    };\n    return WidthTable;\n}());\nexport { WidthTable };\nvar StandardWidthTable = /** @class */ (function (_super) {\n    __extends(StandardWidthTable, _super);\n    // Constructors\n    /**\n     * Initializes a new instance of the `StandardWidthTable` class.\n     * @private\n     */\n    function StandardWidthTable(widths) {\n        var _this = _super.call(this) || this;\n        if (widths == null) {\n            throw new Error('ArgumentNullException:widths');\n        }\n        _this.widths = widths;\n        return _this;\n    }\n    //Properties\n    /**\n     * Gets the `32 bit number` at the specified index.\n     * @private\n     */\n    StandardWidthTable.prototype.items = function (index) {\n        if (index < 0 || index >= this.widths.length) {\n            throw new Error('ArgumentOutOfRangeException:index, The character is not supported by the font.');\n        }\n        var result = this.widths[index];\n        return result;\n    };\n    Object.defineProperty(StandardWidthTable.prototype, \"length\", {\n        /**\n         * Gets the `length` of the internal array.\n         * @private\n         */\n        get: function () {\n            return this.widths.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Overrides\n    /**\n     * `Clones` this instance of the WidthTable class.\n     * @private\n     */\n    StandardWidthTable.prototype.clone = function () {\n        var swt = this;\n        swt.widths = this.widths;\n        return swt;\n    };\n    /**\n     * Converts width table to a `PDF array`.\n     * @private\n     */\n    StandardWidthTable.prototype.toArray = function () {\n        var arr = new PdfArray(this.widths);\n        return arr;\n    };\n    return StandardWidthTable;\n}(WidthTable));\nexport { StandardWidthTable };\n","/**\n * PdfStandardFontMetricsFactory.ts class for EJ2-PDF\n */\nimport { PdfFontStyle, PdfFontFamily } from './enum';\nimport { PdfFontMetrics, StandardWidthTable } from './pdf-font-metrics';\n/**\n * @private\n * `Factory of the standard fonts metrics`.\n */\nvar PdfStandardFontMetricsFactory = /** @class */ (function () {\n    function PdfStandardFontMetricsFactory() {\n    }\n    /**\n     * Returns `metrics` of the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.getMetrics = function (fontFamily, fontStyle, size) {\n        var metrics = null;\n        switch (fontFamily) {\n            case PdfFontFamily.Helvetica:\n                metrics = this.getHelveticaMetrics(fontFamily, fontStyle, size);\n                break;\n            case PdfFontFamily.Courier:\n                metrics = this.getCourierMetrics(fontFamily, fontStyle, size);\n                break;\n            case PdfFontFamily.TimesRoman:\n                metrics = this.getTimesMetrics(fontFamily, fontStyle, size);\n                break;\n            case PdfFontFamily.Symbol:\n                metrics = this.getSymbolMetrics(fontFamily, fontStyle, size);\n                break;\n            case PdfFontFamily.ZapfDingbats:\n                metrics = this.getZapfDingbatsMetrics(fontFamily, fontStyle, size);\n                break;\n            default:\n                metrics = this.getHelveticaMetrics(PdfFontFamily.Helvetica, fontStyle, size);\n                break;\n        }\n        metrics.name = fontFamily.toString();\n        metrics.subScriptSizeFactor = this.subSuperScriptFactor;\n        metrics.superscriptSizeFactor = this.subSuperScriptFactor;\n        return metrics;\n    };\n    // Implementation\n    /**\n     * Creates `Helvetica font metrics`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.getHelveticaMetrics = function (fontFamily, fontStyle, size) {\n        var metrics = new PdfFontMetrics();\n        if ((fontStyle & PdfFontStyle.Bold) > 0 && (fontStyle & PdfFontStyle.Italic) > 0) {\n            metrics.ascent = this.helveticaBoldItalicAscent;\n            metrics.descent = this.helveticaBoldItalicDescent;\n            metrics.postScriptName = this.helveticaBoldItalicName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.arialBoldWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        else if ((fontStyle & PdfFontStyle.Bold) > 0) {\n            metrics.ascent = this.helveticaBoldAscent;\n            metrics.descent = this.helveticaBoldDescent;\n            metrics.postScriptName = this.helveticaBoldName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.arialBoldWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        else if ((fontStyle & PdfFontStyle.Italic) > 0) {\n            metrics.ascent = this.helveticaItalicAscent;\n            metrics.descent = this.helveticaItalicDescent;\n            metrics.postScriptName = this.helveticaItalicName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.arialWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        else {\n            metrics.ascent = this.helveticaAscent;\n            metrics.descent = this.helveticaDescent;\n            metrics.postScriptName = this.helveticaName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.arialWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        return metrics;\n    };\n    /**\n     * Creates `Courier font metrics`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.getCourierMetrics = function (fontFamily, fontStyle, size) {\n        var metrics = new PdfFontMetrics();\n        if ((fontStyle & PdfFontStyle.Bold) > 0 && (fontStyle & PdfFontStyle.Italic) > 0) {\n            metrics.ascent = this.courierBoldItalicAscent;\n            metrics.descent = this.courierBoldItalicDescent;\n            metrics.postScriptName = this.courierBoldItalicName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.fixedWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        else if ((fontStyle & PdfFontStyle.Bold) > 0) {\n            metrics.ascent = this.courierBoldAscent;\n            metrics.descent = this.courierBoldDescent;\n            metrics.postScriptName = this.courierBoldName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.fixedWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        else if ((fontStyle & PdfFontStyle.Italic) > 0) {\n            metrics.ascent = this.courierItalicAscent;\n            metrics.descent = this.courierItalicDescent;\n            metrics.postScriptName = this.courierItalicName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.fixedWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        else {\n            metrics.ascent = this.courierAscent;\n            metrics.descent = this.courierDescent;\n            metrics.postScriptName = this.courierName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.fixedWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        return metrics;\n    };\n    /**\n     * Creates `Times font metrics`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.getTimesMetrics = function (fontFamily, fontStyle, size) {\n        var metrics = new PdfFontMetrics();\n        if ((fontStyle & PdfFontStyle.Bold) > 0 && (fontStyle & PdfFontStyle.Italic) > 0) {\n            metrics.ascent = this.timesBoldItalicAscent;\n            metrics.descent = this.timesBoldItalicDescent;\n            metrics.postScriptName = this.timesBoldItalicName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.timesRomanBoldItalicWidths);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        else if ((fontStyle & PdfFontStyle.Bold) > 0) {\n            metrics.ascent = this.timesBoldAscent;\n            metrics.descent = this.timesBoldDescent;\n            metrics.postScriptName = this.timesBoldName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.timesRomanBoldWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        else if ((fontStyle & PdfFontStyle.Italic) > 0) {\n            metrics.ascent = this.timesItalicAscent;\n            metrics.descent = this.timesItalicDescent;\n            metrics.postScriptName = this.timesItalicName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.timesRomanItalicWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        else {\n            metrics.ascent = this.timesAscent;\n            metrics.descent = this.timesDescent;\n            metrics.postScriptName = this.timesName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.timesRomanWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        return metrics;\n    };\n    /**\n     * Creates `Symbol font metrics`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.getSymbolMetrics = function (fontFamily, fontStyle, size) {\n        var metrics = new PdfFontMetrics();\n        metrics.ascent = this.symbolAscent;\n        metrics.descent = this.symbolDescent;\n        metrics.postScriptName = this.symbolName;\n        metrics.size = size;\n        metrics.widthTable = new StandardWidthTable(this.symbolWidth);\n        metrics.height = metrics.ascent - metrics.descent;\n        return metrics;\n    };\n    /**\n     * Creates `ZapfDingbats font metrics`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.getZapfDingbatsMetrics = function (fontFamily, fontStyle, size) {\n        var metrics = new PdfFontMetrics();\n        metrics.ascent = this.zapfDingbatsAscent;\n        metrics.descent = this.zapfDingbatsDescent;\n        metrics.postScriptName = this.zapfDingbatsName;\n        metrics.size = size;\n        metrics.widthTable = new StandardWidthTable(this.zapfDingbatsWidth);\n        metrics.height = metrics.ascent - metrics.descent;\n        return metrics;\n    };\n    /**\n     * `Multiplier` os subscript superscript.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.subSuperScriptFactor = 1.52;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaAscent = 931;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaDescent = -225;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaName = 'Helvetica';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaBoldAscent = 962;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaBoldDescent = -228;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaBoldName = 'Helvetica-Bold';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaItalicAscent = 931;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaItalicDescent = -225;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaItalicName = 'Helvetica-Oblique';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaBoldItalicAscent = 962;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaBoldItalicDescent = -228;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaBoldItalicName = 'Helvetica-BoldOblique';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierAscent = 805;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierDescent = -250;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierName = 'Courier';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierBoldAscent = 801;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierBoldDescent = -250;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierBoldName = 'Courier-Bold';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierItalicAscent = 805;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierItalicDescent = -250;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierItalicName = 'Courier-Oblique';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierBoldItalicAscent = 801;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierBoldItalicDescent = -250;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierBoldItalicName = 'Courier-BoldOblique';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesAscent = 898;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesDescent = -218;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesName = 'Times-Roman';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesBoldAscent = 935;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesBoldDescent = -218;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesBoldName = 'Times-Bold';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesItalicAscent = 883;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesItalicDescent = -217;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesItalicName = 'Times-Italic';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesBoldItalicAscent = 921;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesBoldItalicDescent = -218;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesBoldItalicName = 'Times-BoldItalic';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.symbolAscent = 1010;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.symbolDescent = -293;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.symbolName = 'Symbol';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.zapfDingbatsAscent = 820;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.zapfDingbatsDescent = -143;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.zapfDingbatsName = 'ZapfDingbats';\n    /**\n     * `Arial` widths table.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.arialWidth = [\n        278, 278, 355, 556, 556, 889, 667, 191, 333, 333, 389, 584, 278, 333,\n        278, 278, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 278, 278, 584, 584,\n        584, 556, 1015, 667, 667, 722, 722, 667, 611, 778, 722, 278, 500, 667, 556, 833,\n        722, 778, 667, 778, 722, 667, 611, 722, 667, 944, 667, 667, 611, 278, 278, 278,\n        469, 556, 333, 556, 556, 500, 556, 556, 278, 556, 556, 222, 222, 500, 222, 833,\n        556, 556, 556, 556, 333, 500, 278, 556, 500, 722, 500, 500, 500, 334, 260, 334,\n        584, 0, 556, 0, 222, 556, 333, 1000, 556, 556, 333, 1000, 667, 333, 1000, 0,\n        611, 0, 0, 222, 222, 333, 333, 350, 556, 1000, 333, 1000, 500, 333, 944, 0,\n        500, 667, 0, 333, 556, 556, 556, 556, 260, 556, 333, 737, 370, 556, 584, 0,\n        737, 333, 400, 584, 333, 333, 333, 556, 537, 278, 333, 333, 365, 556, 834, 834,\n        834, 611, 667, 667, 667, 667, 667, 667, 1000, 722, 667, 667, 667, 667, 278, 278,\n        278, 278, 722, 722, 778, 778, 778, 778, 778, 584, 778, 722, 722, 722, 722, 667,\n        667, 611, 556, 556, 556, 556, 556, 556, 889, 500, 556, 556, 556, 556, 278, 278,\n        278, 278, 556, 556, 556, 556, 556, 556, 556, 584, 611, 556, 556, 556, 556, 500,\n        556, 500\n    ];\n    /**\n     * `Arial bold` widths table.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.arialBoldWidth = [\n        278, 333, 474, 556, 556, 889, 722, 238, 333, 333, 389, 584, 278, 333,\n        278, 278, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 333, 333, 584, 584,\n        584, 611, 975, 722, 722, 722, 722, 667, 611, 778, 722, 278, 556, 722, 611, 833,\n        722, 778, 667, 778, 722, 667, 611, 722, 667, 944, 667, 667, 611, 333, 278, 333,\n        584, 556, 333, 556, 611, 556, 611, 556, 333, 611, 611, 278, 278, 556, 278, 889,\n        611, 611, 611, 611, 389, 556, 333, 611, 556, 778, 556, 556, 500, 389, 280, 389,\n        584, 0, 556, 0, 278, 556, 500, 1000, 556, 556, 333, 1000, 667, 333, 1000, 0,\n        611, 0, 0, 278, 278, 500, 500, 350, 556, 1000, 333, 1000, 556, 333, 944, 0,\n        500, 667, 0, 333, 556, 556, 556, 556, 280, 556, 333, 737, 370, 556, 584, 0,\n        737, 333, 400, 584, 333, 333, 333, 611, 556, 278, 333, 333, 365, 556, 834, 834,\n        834, 611, 722, 722, 722, 722, 722, 722, 1000, 722, 667, 667, 667, 667, 278, 278,\n        278, 278, 722, 722, 778, 778, 778, 778, 778, 584, 778, 722, 722, 722, 722, 667,\n        667, 611, 556, 556, 556, 556, 556, 556, 889, 556, 556, 556, 556, 556, 278, 278,\n        278, 278, 611, 611, 611, 611, 611, 611, 611, 584, 611, 611, 611, 611, 611, 556,\n        611, 556\n    ];\n    /**\n     * `Fixed` widths table.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.fixedWidth = [\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600\n    ];\n    /**\n     * `Times` widths table.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesRomanWidth = [\n        250, 333, 408, 500, 500, 833, 778, 180, 333, 333, 500, 564, 250, 333,\n        250, 278, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 278, 278, 564, 564,\n        564, 444, 921, 722, 667, 667, 722, 611, 556, 722, 722, 333, 389, 722, 611, 889,\n        722, 722, 556, 722, 667, 556, 611, 722, 722, 944, 722, 722, 611, 333, 278, 333,\n        469, 500, 333, 444, 500, 444, 500, 444, 333, 500, 500, 278, 278, 500, 278, 778,\n        500, 500, 500, 500, 333, 389, 278, 500, 500, 722, 500, 500, 444, 480, 200, 480,\n        541, 0, 500, 0, 333, 500, 444, 1000, 500, 500, 333, 1000, 556, 333, 889, 0,\n        611, 0, 0, 333, 333, 444, 444, 350, 500, 1000, 333, 980, 389, 333, 722, 0,\n        444, 722, 0, 333, 500, 500, 500, 500, 200, 500, 333, 760, 276, 500, 564, 0,\n        760, 333, 400, 564, 300, 300, 333, 500, 453, 250, 333, 300, 310, 500, 750, 750,\n        750, 444, 722, 722, 722, 722, 722, 722, 889, 667, 611, 611, 611, 611, 333, 333,\n        333, 333, 722, 722, 722, 722, 722, 722, 722, 564, 722, 722, 722, 722, 722, 722,\n        556, 500, 444, 444, 444, 444, 444, 444, 667, 444, 444, 444, 444, 444, 278, 278,\n        278, 278, 500, 500, 500, 500, 500, 500, 500, 564, 500, 500, 500, 500, 500, 500,\n        500, 500\n    ];\n    /**\n     * `Times bold` widths table.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesRomanBoldWidth = [\n        250, 333, 555, 500, 500, 1000, 833, 278, 333, 333, 500, 570, 250, 333,\n        250, 278, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 333, 333, 570, 570,\n        570, 500, 930, 722, 667, 722, 722, 667, 611, 778, 778, 389, 500, 778, 667, 944,\n        722, 778, 611, 778, 722, 556, 667, 722, 722, 1000, 722, 722, 667, 333, 278, 333,\n        581, 500, 333, 500, 556, 444, 556, 444, 333, 500, 556, 278, 333, 556, 278, 833,\n        556, 500, 556, 556, 444, 389, 333, 556, 500, 722, 500, 500, 444, 394, 220, 394,\n        520, 0, 500, 0, 333, 500, 500, 1000, 500, 500, 333, 1000, 556, 333, 1000, 0,\n        667, 0, 0, 333, 333, 500, 500, 350, 500, 1000, 333, 1000, 389, 333, 722, 0,\n        444, 722, 0, 333, 500, 500, 500, 500, 220, 500, 333, 747, 300, 500, 570, 0,\n        747, 333, 400, 570, 300, 300, 333, 556, 540, 250, 333, 300, 330, 500, 750, 750,\n        750, 500, 722, 722, 722, 722, 722, 722, 1000, 722, 667, 667, 667, 667, 389, 389,\n        389, 389, 722, 722, 778, 778, 778, 778, 778, 570, 778, 722, 722, 722, 722, 722,\n        611, 556, 500, 500, 500, 500, 500, 500, 722, 444, 444, 444, 444, 444, 278, 278,\n        278, 278, 500, 556, 500, 500, 500, 500, 500, 570, 500, 556, 556, 556, 556, 500,\n        556, 500\n    ];\n    /**\n     * `Times italic` widths table.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesRomanItalicWidth = [\n        250, 333, 420, 500, 500, 833, 778, 214, 333, 333, 500, 675, 250, 333,\n        250, 278, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 333, 333, 675, 675,\n        675, 500, 920, 611, 611, 667, 722, 611, 611, 722, 722, 333, 444, 667, 556, 833,\n        667, 722, 611, 722, 611, 500, 556, 722, 611, 833, 611, 556, 556, 389, 278, 389,\n        422, 500, 333, 500, 500, 444, 500, 444, 278, 500, 500, 278, 278, 444, 278, 722,\n        500, 500, 500, 500, 389, 389, 278, 500, 444, 667, 444, 444, 389, 400, 275, 400,\n        541, 0, 500, 0, 333, 500, 556, 889, 500, 500, 333, 1000, 500, 333, 944, 0,\n        556, 0, 0, 333, 333, 556, 556, 350, 500, 889, 333, 980, 389, 333, 667, 0,\n        389, 556, 0, 389, 500, 500, 500, 500, 275, 500, 333, 760, 276, 500, 675, 0,\n        760, 333, 400, 675, 300, 300, 333, 500, 523, 250, 333, 300, 310, 500, 750, 750,\n        750, 500, 611, 611, 611, 611, 611, 611, 889, 667, 611, 611, 611, 611, 333, 333,\n        333, 333, 722, 667, 722, 722, 722, 722, 722, 675, 722, 722, 722, 722, 722, 556,\n        611, 500, 500, 500, 500, 500, 500, 500, 667, 444, 444, 444, 444, 444, 278, 278,\n        278, 278, 500, 500, 500, 500, 500, 500, 500, 675, 500, 500, 500, 500, 500, 444,\n        500, 444\n    ];\n    /**\n     * `Times bold italic` widths table.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesRomanBoldItalicWidths = [\n        250, 389, 555, 500, 500, 833, 778, 278, 333, 333, 500, 570, 250, 333,\n        250, 278, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 333, 333, 570, 570,\n        570, 500, 832, 667, 667, 667, 722, 667, 667, 722, 778, 389, 500, 667, 611, 889,\n        722, 722, 611, 722, 667, 556, 611, 722, 667, 889, 667, 611, 611, 333, 278, 333,\n        570, 500, 333, 500, 500, 444, 500, 444, 333, 500, 556, 278, 278, 500, 278, 778,\n        556, 500, 500, 500, 389, 389, 278, 556, 444, 667, 500, 444, 389, 348, 220, 348,\n        570, 0, 500, 0, 333, 500, 500, 1000, 500, 500, 333, 1000, 556, 333, 944, 0,\n        611, 0, 0, 333, 333, 500, 500, 350, 500, 1000, 333, 1000, 389, 333, 722, 0,\n        389, 611, 0, 389, 500, 500, 500, 500, 220, 500, 333, 747, 266, 500, 606, 0,\n        747, 333, 400, 570, 300, 300, 333, 576, 500, 250, 333, 300, 300, 500, 750, 750,\n        750, 500, 667, 667, 667, 667, 667, 667, 944, 667, 667, 667, 667, 667, 389, 389,\n        389, 389, 722, 722, 722, 722, 722, 722, 722, 570, 722, 722, 722, 722, 722, 611,\n        611, 500, 500, 500, 500, 500, 500, 500, 722, 444, 444, 444, 444, 444, 278, 278,\n        278, 278, 500, 556, 500, 500, 500, 500, 500, 570, 500, 556, 556, 556, 556, 444,\n        500, 444\n    ];\n    /**\n     * `Symbol` widths table.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.symbolWidth = [\n        250, 333, 713, 500, 549, 833, 778, 439, 333, 333, 500, 549, 250, 549,\n        250, 278, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 278, 278,\n        549, 549, 549, 444, 549, 722, 667, 722, 612, 611, 763, 603, 722, 333,\n        631, 722, 686, 889, 722, 722, 768, 741, 556, 592, 611, 690, 439, 768,\n        645, 795, 611, 333, 863, 333, 658, 500, 500, 631, 549, 549, 494, 439,\n        521, 411, 603, 329, 603, 549, 549, 576, 521, 549, 549, 521, 549, 603,\n        439, 576, 713, 686, 493, 686, 494, 480, 200, 480, 549, 750, 620, 247,\n        549, 167, 713, 500, 753, 753, 753, 753, 1042, 987, 603, 987, 603, 400,\n        549, 411, 549, 549, 713, 494, 460, 549, 549, 549, 549, 1000, 603, 1000,\n        658, 823, 686, 795, 987, 768, 768, 823, 768, 768, 713, 713, 713, 713,\n        713, 713, 713, 768, 713, 790, 790, 890, 823, 549, 250, 713, 603, 603,\n        1042, 987, 603, 987, 603, 494, 329, 790, 790, 786, 713, 384, 384, 384,\n        384, 384, 384, 494, 494, 494, 494, 329, 274, 686, 686, 686, 384, 384,\n        384, 384, 384, 384, 494, 494, 494, -1\n    ];\n    /**\n     * `Zip dingbats` widths table.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.zapfDingbatsWidth = [\n        278, 974, 961, 974, 980, 719, 789, 790, 791, 690, 960, 939, 549, 855,\n        911, 933, 911, 945, 974, 755, 846, 762, 761, 571, 677, 763, 760, 759,\n        754, 494, 552, 537, 577, 692, 786, 788, 788, 790, 793, 794, 816, 823,\n        789, 841, 823, 833, 816, 831, 923, 744, 723, 749, 790, 792, 695, 776,\n        768, 792, 759, 707, 708, 682, 701, 826, 815, 789, 789, 707, 687, 696,\n        689, 786, 787, 713, 791, 785, 791, 873, 761, 762, 762, 759, 759, 892,\n        892, 788, 784, 438, 138, 277, 415, 392, 392, 668, 668, 390, 390, 317,\n        317, 276, 276, 509, 509, 410, 410, 234, 234, 334, 334, 732, 544, 544,\n        910, 667, 760, 760, 776, 595, 694, 626, 788, 788, 788, 788, 788, 788,\n        788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788,\n        788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788,\n        788, 788, 788, 788, 788, 788, 894, 838, 1016, 458, 748, 924, 748, 918,\n        927, 928, 928, 834, 873, 828, 924, 924, 917, 930, 931, 463, 883, 836,\n        836, 867, 867, 696, 696, 874, 874, 760, 946, 771, 865, 771, 888, 967,\n        888, 831, 873, 927, 970, 918\n    ];\n    return PdfStandardFontMetricsFactory;\n}());\nexport { PdfStandardFontMetricsFactory };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfFontFamily, PdfFontStyle, FontEncoding } from './enum';\nimport { PdfFont } from './pdf-font';\nimport { PdfDocument } from './../../document/pdf-document';\nimport { PdfStandardFontMetricsFactory } from './pdf-standard-font-metrics-factory';\nimport { PdfDictionary } from './../../primitives/pdf-dictionary';\nimport { DictionaryProperties } from './../../input-output/pdf-dictionary-properties';\nimport { PdfName } from './../../primitives/pdf-name';\n/**\n * Represents one of the 14 standard fonts.\n * It's used to create a standard PDF font to draw the text in to the PDF.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // add a new page to the document\n * let page1 : PdfPage = document.pages.add();\n * //\n * // create new standard font\n * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n * //\n * // create black brush\n * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n * // draw the text\n * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(0, 0));\n * // save the document\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfStandardFont = /** @class */ (function (_super) {\n    __extends(PdfStandardFont, _super);\n    function PdfStandardFont(fontFamilyPrototype, size, style) {\n        var _this = _super.call(this, size, style) || this;\n        /**\n         * Gets `ascent` of the font.\n         * @private\n         */\n        _this.dictionaryProperties = new DictionaryProperties();\n        /**\n         * Gets `encodings` for internal class use.\n         * @hidden\n         * @private\n         */\n        _this.encodings = ['Unknown', 'StandardEncoding', 'MacRomanEncoding', 'MacExpertEncoding',\n            'WinAnsiEncoding', 'PDFDocEncoding', 'IdentityH'];\n        if ((typeof fontFamilyPrototype === 'number') && (typeof style === 'undefined')) {\n            _this.constructor(fontFamilyPrototype, size, PdfFontStyle.Regular);\n        }\n        else if ((typeof fontFamilyPrototype === 'number') && (typeof style !== 'undefined')) {\n            _this = _super.call(this, size, style) || this;\n            _this.pdfFontFamily = fontFamilyPrototype;\n            _this.checkStyle();\n            _this.initializeInternals();\n        }\n        else if ((fontFamilyPrototype instanceof PdfStandardFont) && (typeof style === 'undefined')) {\n            _this.constructor(fontFamilyPrototype.fontFamily, size, fontFamilyPrototype.style);\n        }\n        else if ((fontFamilyPrototype instanceof PdfStandardFont) && (typeof style !== 'undefined')) {\n            _this.constructor(fontFamilyPrototype.fontFamily, size, style);\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfStandardFont.prototype, \"fontFamily\", {\n        //Properties\n        /**\n         * Gets the `FontFamily`.\n         * @private\n         */\n        get: function () {\n            return this.pdfFontFamily;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //methods\n    /**\n     * Checks font `style` of the font.\n     * @private\n     */\n    PdfStandardFont.prototype.checkStyle = function () {\n        if (this.fontFamily === PdfFontFamily.Symbol || this.fontFamily === PdfFontFamily.ZapfDingbats) {\n            var style = this.style;\n            style &= ~(PdfFontStyle.Bold | PdfFontStyle.Italic);\n            this.setStyle(style);\n        }\n    };\n    /**\n     * Returns `width` of the line.\n     * @public\n     */\n    PdfStandardFont.prototype.getLineWidth = function (line, format) {\n        if (line == null) {\n            throw new Error('ArgumentNullException:line');\n        }\n        var width = 0;\n        var name = this.name;\n        line = PdfStandardFont.convert(line);\n        for (var i = 0, len = line.length; i < len; i++) {\n            var ch = line[i];\n            var charWidth = this.getCharWidthInternal(ch, format);\n            width += charWidth;\n        }\n        var size = this.metrics.getSize(format);\n        width *= (PdfFont.charSizeMultiplier * size);\n        width = this.applyFormatSettings(line, format, width);\n        return width;\n    };\n    /**\n     * Checks whether fonts are `equals`.\n     * @private\n     */\n    PdfStandardFont.prototype.equalsToFont = function (font) {\n        var equal = false;\n        var stFont = font;\n        if (stFont != null) {\n            var fontFamilyEqual = (this.fontFamily === stFont.fontFamily);\n            var lineReducer = (~(PdfFontStyle.Underline | PdfFontStyle.Strikeout));\n            var styleEqual = (this.style & lineReducer) === (stFont.style & lineReducer);\n            equal = (fontFamilyEqual && styleEqual);\n        }\n        return equal;\n    };\n    /**\n     * `Initializes` font internals..\n     * @private\n     */\n    PdfStandardFont.prototype.initializeInternals = function () {\n        var equalFont = null;\n        // if (PdfDocument.EnableCache) {\n        equalFont = PdfDocument.cache.search(this);\n        // }\n        var internals = null;\n        // if (equalFont == null) {\n        // Create font metrics.\n        var metrics = PdfStandardFontMetricsFactory.getMetrics(this.pdfFontFamily, this.style, this.size);\n        this.metrics = metrics;\n        internals = this.createInternals();\n        this.setInternals(internals);\n    };\n    /**\n     * `Creates` font`s dictionary.\n     * @private\n     */\n    PdfStandardFont.prototype.createInternals = function () {\n        var dictionary = new PdfDictionary();\n        dictionary.items.setValue(this.dictionaryProperties.type, new PdfName(this.dictionaryProperties.font));\n        dictionary.items.setValue(this.dictionaryProperties.subtype, new PdfName(this.dictionaryProperties.type1));\n        dictionary.items.setValue(this.dictionaryProperties.baseFont, new PdfName(this.metrics.postScriptName));\n        if (this.fontFamily !== PdfFontFamily.Symbol && this.fontFamily !== PdfFontFamily.ZapfDingbats) {\n            var encoding = this.encodings[FontEncoding.WinAnsiEncoding];\n            dictionary.items.setValue(this.dictionaryProperties.encoding, new PdfName(encoding));\n        }\n        return dictionary;\n    };\n    /**\n     * Returns `width` of the char. This methods doesn`t takes into consideration font`s size.\n     * @private\n     */\n    PdfStandardFont.prototype.getCharWidthInternal = function (charCode, format) {\n        var width = 0;\n        var code = 0;\n        code = charCode.charCodeAt(0);\n        if (this.name === '0' || this.name === '1' || this.name === '2' ||\n            this.name === '3' || this.name === '4') {\n            code = code - PdfStandardFont.charOffset;\n        }\n        code = (code >= 0 && code !== 128) ? code : 0;\n        var metrics = this.metrics;\n        var widthTable = metrics.widthTable;\n        width = widthTable.items(code);\n        return width;\n    };\n    /**\n     * `Converts` the specified text.\n     * @private\n     */\n    PdfStandardFont.convert = function (text) {\n        return text;\n    };\n    //Constants\n    /**\n     * First character `position`.\n     * @private\n     */\n    PdfStandardFont.charOffset = 32;\n    return PdfStandardFont;\n}(PdfFont));\nexport { PdfStandardFont };\n","import { PdfColor } from './../graphics/pdf-color';\nimport { RectangleF, PointF } from './../drawing/pdf-drawing';\nimport { PdfDictionary, SaveAnnotationEventHandler } from './../primitives/pdf-dictionary';\nimport { PdfArray } from './../primitives/pdf-array';\nimport { PdfNumber } from './../primitives/pdf-number';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { PdfString } from './../primitives/pdf-string';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\nimport { PdfName } from './../primitives/pdf-name';\nimport { PdfSolidBrush } from './../graphics/brushes/pdf-solid-brush';\nimport { PdfStandardFont } from './../graphics/fonts/pdf-standard-font';\nimport { PdfFontFamily } from './../graphics/fonts/enum';\nimport { PdfStringFormat } from './../graphics/fonts/pdf-string-format';\nimport { PdfTextAlignment } from './../graphics/enum';\n/**\n * `PdfAnnotation` class represents the base class for annotation objects.\n * @private\n */\nvar PdfAnnotation = /** @class */ (function () {\n    function PdfAnnotation(arg1) {\n        // Fields\n        /**\n         * Specifies the Internal variable to store fields of `PdfDictionaryProperties`.\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        /**\n         * `Color` of the annotation\n         * @private\n         */\n        this.pdfColor = new PdfColor(255, 255, 255);\n        /**\n         * `Bounds` of the annotation.\n         * @private\n         */\n        this.rectangle = new RectangleF(0, 0, 0, 0);\n        /**\n         * Parent `page` of the annotation.\n         * @private\n         */\n        this.pdfPage = null;\n        /**\n         * `Brush of the text` of the annotation.\n         * @default new PdfSolidBrush(new PdfColor(0, 0, 0))\n         * @private\n         */\n        this.textBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n        /**\n         * `Font of the text` of the annotation.\n         * @default new PdfStandardFont(PdfFontFamily.TimesRoman, 10)\n         * @private\n         */\n        this.textFont = new PdfStandardFont(PdfFontFamily.TimesRoman, 10);\n        /**\n         * `StringFormat of the text` of the annotation.\n         * @default new PdfStringFormat(PdfTextAlignment.Left)\n         * @private\n         */\n        this.format = new PdfStringFormat(PdfTextAlignment.Left);\n        /**\n         * `Text` of the annotation.\n         * @private\n         */\n        this.content = '';\n        /**\n         * Internal variable to store `dictionary`.\n         * @private\n         */\n        this.pdfDictionary = new PdfDictionary();\n        /**\n         * To specifying the `Inner color` with which to fill the annotation\n         * @private\n         */\n        this.internalColor = new PdfColor();\n        /**\n         * `opacity or darkness` of the annotation.\n         * @private\n         * @default 1.0\n         */\n        this.darkness = 1.0;\n        if (typeof arg1 === 'undefined') {\n            this.initialize();\n        }\n        else {\n            this.initialize();\n            this.bounds = arg1;\n        }\n    }\n    Object.defineProperty(PdfAnnotation.prototype, \"color\", {\n        // Properties\n        /**\n         * `Color` of the annotation\n         * @private\n         */\n        get: function () {\n            return this.pdfColor;\n        },\n        set: function (value) {\n            this.pdfColor = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"innerColor\", {\n        /**\n         * To specifying the `Inner color` with which to fill the annotation\n         * @private\n         */\n        get: function () {\n            return this.internalColor;\n        },\n        set: function (value) {\n            this.internalColor = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"bounds\", {\n        /**\n         * `bounds` of the annotation.\n         * @private\n         */\n        get: function () {\n            return this.rectangle;\n        },\n        set: function (value) {\n            this.rectangle = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"page\", {\n        /**\n         * Parent `page` of the annotation.\n         * @private\n         */\n        get: function () {\n            return this.pdfPage;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"font\", {\n        /**\n         * To specifying the `Font of the text` in the annotation.\n         * @private\n         */\n        get: function () {\n            return this.textFont;\n        },\n        set: function (value) {\n            this.textFont = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"stringFormat\", {\n        /**\n         * To specifying the `StringFormat of the text` in the annotation.\n         * @private\n         */\n        get: function () {\n            return this.format;\n        },\n        set: function (value) {\n            this.format = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"brush\", {\n        /**\n         * To specifying the `Brush of the text` in the annotation.\n         * @private\n         */\n        get: function () {\n            return this.textBrush;\n        },\n        set: function (value) {\n            this.textBrush = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"text\", {\n        /**\n         * `Text` of the annotation.\n         * @private\n         */\n        get: function () {\n            return this.content;\n        },\n        set: function (value) {\n            this.content = value;\n            this.dictionary.items.setValue(this.dictionaryProperties.contents, new PdfString(this.content));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"dictionary\", {\n        /**\n         * Internal variable to store `dictionary`.\n         * @hidden\n         */\n        get: function () {\n            return this.pdfDictionary;\n        },\n        set: function (value) {\n            this.pdfDictionary = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * `Initialize` the annotation event handler and specifies the type of the annotation.\n     * @private\n     */\n    PdfAnnotation.prototype.initialize = function () {\n        this.pdfDictionary.annotationBeginSave = new SaveAnnotationEventHandler(this);\n        this.pdfDictionary.items.setValue(this.dictionaryProperties.type, new PdfName(this.dictionaryProperties.annot));\n    };\n    /**\n     * Sets related `page` of the annotation.\n     * @private\n     */\n    PdfAnnotation.prototype.setPage = function (page) {\n        this.pdfPage = page;\n        this.pdfDictionary.items.setValue(this.dictionaryProperties.p, new PdfReferenceHolder(this.pdfPage));\n    };\n    /**\n     * Handles the `BeginSave` event of the Dictionary.\n     * @private\n     */\n    PdfAnnotation.prototype.beginSave = function () {\n        this.save();\n    };\n    /**\n     * `Saves` an annotation.\n     * @private\n     */\n    /* tslint:disable */\n    PdfAnnotation.prototype.save = function () {\n        var nativeRectangle = new RectangleF(this.rectangle.x, this.rectangle.y, this.rectangle.width, this.rectangle.height);\n        var section = this.pdfPage.section;\n        var initialHeight = nativeRectangle.height;\n        var tempLoacation = section.pointToNativePdf(this.page, new PointF(nativeRectangle.x, nativeRectangle.y));\n        nativeRectangle.x = tempLoacation.x;\n        nativeRectangle.width = tempLoacation.x + nativeRectangle.width;\n        nativeRectangle.y = (tempLoacation.y - this.page.document.pageSettings.margins.top);\n        nativeRectangle.height = nativeRectangle.y - initialHeight;\n        this.pdfDictionary.items.setValue(this.dictionaryProperties.rect, PdfArray.fromRectangle(nativeRectangle));\n        this.dictionary.items.setValue(this.dictionaryProperties.ca, new PdfNumber(this.darkness));\n    };\n    Object.defineProperty(PdfAnnotation.prototype, \"element\", {\n        /* tslint:enable */\n        // IPdfWrapper Members\n        /**\n         * Gets the `element`.\n         * @private\n         */\n        get: function () {\n            return this.pdfDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfAnnotation;\n}());\nexport { PdfAnnotation };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfAnnotation } from './annotation';\nimport { PdfName } from './../primitives/pdf-name';\n/**\n * `PdfLinkAnnotation` class represents the ink annotation class.\n * @private\n */\nvar PdfLinkAnnotation = /** @class */ (function (_super) {\n    __extends(PdfLinkAnnotation, _super);\n    function PdfLinkAnnotation(rectangle) {\n        var _this = this;\n        if (typeof rectangle === 'undefined') {\n            _this = _super.call(this) || this;\n        }\n        else {\n            _this = _super.call(this, rectangle) || this;\n        }\n        return _this;\n    }\n    // Implementation\n    /**\n     * `Initializes` annotation object.\n     * @private\n     */\n    PdfLinkAnnotation.prototype.initialize = function () {\n        _super.prototype.initialize.call(this);\n        this.dictionary.items.setValue(this.dictionaryProperties.subtype, new PdfName(this.dictionaryProperties.link));\n    };\n    return PdfLinkAnnotation;\n}(PdfAnnotation));\nexport { PdfLinkAnnotation };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfLinkAnnotation } from './link-annotation';\n/**\n * Represents base class for `link annotations` with associated action.\n * @private\n */\nvar PdfActionLinkAnnotation = /** @class */ (function (_super) {\n    __extends(PdfActionLinkAnnotation, _super);\n    // Constructors\n    /**\n     * Specifies the constructor for `ActionLinkAnnotation`.\n     * @private\n     */\n    function PdfActionLinkAnnotation(rectangle) {\n        var _this = _super.call(this, rectangle) || this;\n        // Fields\n        /**\n         * Internal variable to store annotation's `action`.\n         * @default null\n         * @private\n         */\n        _this.pdfAction = null;\n        return _this;\n    }\n    //Public method\n    /**\n     * get and set the `action`.\n     * @hidden\n     */\n    PdfActionLinkAnnotation.prototype.getSetAction = function (value) {\n        if (typeof value === 'undefined') {\n            return this.pdfAction;\n        }\n        else {\n            this.pdfAction = value;\n        }\n    };\n    return PdfActionLinkAnnotation;\n}(PdfLinkAnnotation));\nexport { PdfActionLinkAnnotation };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfLinkAnnotation } from './link-annotation';\n/**\n * `PdfDocumentLinkAnnotation` class represents an annotation object with holds link on another location within a document.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // create new pages\n * let page1 : PdfPage = document.pages.add();\n * let page2 : PdfPage = document.pages.add();\n * // create a new rectangle\n * let bounds : RectangleF = new RectangleF({x : 10, y : 200}, {width : 300, height : 25});\n * //\n * // create a new document link annotation\n * let documentLinkAnnotation : PdfDocumentLinkAnnotation = new PdfDocumentLinkAnnotation(bounds);\n * // set the annotation text\n * documentLinkAnnotation.text = 'Document link annotation';\n * // set the destination\n * documentLinkAnnotation.destination = new PdfDestination(page2);\n * // set the documentlink annotation location\n * documentLinkAnnotation.destination.location = new PointF(10, 0);\n * // add this annotation to a new page\n * page1.annotations.add(documentLinkAnnotation);\n * //\n * // save the document to disk\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfDocumentLinkAnnotation = /** @class */ (function (_super) {\n    __extends(PdfDocumentLinkAnnotation, _super);\n    function PdfDocumentLinkAnnotation(rectangle, destination) {\n        var _this = _super.call(this, rectangle) || this;\n        // Fields\n        /**\n         * `Destination` of the annotation.\n         * @default null\n         * @private\n         */\n        _this.pdfDestination = null;\n        if (typeof destination !== 'undefined') {\n            _this.destination = destination;\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfDocumentLinkAnnotation.prototype, \"destination\", {\n        // Properties\n        /**\n         * Gets or sets the `destination` of the annotation.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // create new pages\n         * let page1 : PdfPage = document.pages.add();\n         * let page2 : PdfPage = document.pages.add();\n         * // create a new rectangle\n         * let bounds : RectangleF = new RectangleF({x : 10, y : 200}, {width : 300, height : 25});\n         * //\n         * // create a new document link annotation\n         * let documentLinkAnnotation : PdfDocumentLinkAnnotation = new PdfDocumentLinkAnnotation(bounds);\n         * // set the annotation text\n         * documentLinkAnnotation.text = 'Document link annotation';\n         * // set the destination\n         * documentLinkAnnotation.destination = new PdfDestination(page2);\n         * // set the documentlink annotation location\n         * documentLinkAnnotation.destination.location = new PointF(10, 0);\n         * // add this annotation to a new page\n         * page1.annotations.add(documentLinkAnnotation);\n         * //\n         * // save the document to disk\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         * @default null\n         */\n        get: function () {\n            return this.pdfDestination;\n        },\n        set: function (value) {\n            // if (this.pdfDestination !== value) {\n            this.pdfDestination = value;\n            // }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * `Saves` annotation object.\n     * @private\n     */\n    PdfDocumentLinkAnnotation.prototype.save = function () {\n        _super.prototype.save.call(this);\n        if (this.pdfDestination != null) {\n            this.dictionary.items.setValue(this.dictionaryProperties.dest, this.pdfDestination.element);\n        }\n    };\n    /**\n     * `Clone` the document link annotation.\n     * @private\n     */\n    PdfDocumentLinkAnnotation.prototype.clone = function () {\n        var annot = new PdfDocumentLinkAnnotation(this.bounds, this.destination);\n        annot.color = this.color;\n        annot.brush = this.brush;\n        annot.destination = this.destination;\n        annot.font = this.font;\n        return annot;\n    };\n    return PdfDocumentLinkAnnotation;\n}(PdfLinkAnnotation));\nexport { PdfDocumentLinkAnnotation };\n","/**\n * public Enum for `PdfLayoutType`.\n * @private\n */\nexport var PdfLayoutType;\n(function (PdfLayoutType) {\n    /**\n     * Specifies the type of `Paginate`.\n     * @private\n     */\n    PdfLayoutType[PdfLayoutType[\"Paginate\"] = 0] = \"Paginate\";\n    /**\n     * Specifies the type of `OnePage`.\n     * @private\n     */\n    PdfLayoutType[PdfLayoutType[\"OnePage\"] = 1] = \"OnePage\";\n})(PdfLayoutType || (PdfLayoutType = {}));\n/**\n * public Enum for `PdfLayoutBreakType`.\n * @private\n */\nexport var PdfLayoutBreakType;\n(function (PdfLayoutBreakType) {\n    /**\n     * Specifies the type of `FitPage`.\n     * @private\n     */\n    PdfLayoutBreakType[PdfLayoutBreakType[\"FitPage\"] = 0] = \"FitPage\";\n    /**\n     * Specifies the type of `FitElement`.\n     * @private\n     */\n    PdfLayoutBreakType[PdfLayoutBreakType[\"FitElement\"] = 1] = \"FitElement\";\n    /**\n     * Specifies the type of `FitColumnsToPage`.\n     * @private\n     */\n    PdfLayoutBreakType[PdfLayoutBreakType[\"FitColumnsToPage\"] = 2] = \"FitColumnsToPage\";\n})(PdfLayoutBreakType || (PdfLayoutBreakType = {}));\n","/**\n * ElementLayouter.ts class for EJ2-PDF\n */\nimport { RectangleF } from './../../../drawing/pdf-drawing';\nimport { PdfLayoutType, PdfLayoutBreakType } from './../enum';\n/**\n * Base class for `elements lay outing`.\n * @private\n */\nvar ElementLayouter = /** @class */ (function () {\n    // Constructor\n    /**\n     * Initializes a new instance of the `ElementLayouter` class.\n     * @private\n     */\n    function ElementLayouter(element) {\n        this.layoutElement = element;\n    }\n    Object.defineProperty(ElementLayouter.prototype, \"elements\", {\n        // Properties\n        /**\n         * Gets the `element`.\n         * @private\n         */\n        get: function () {\n            return this.layoutElement;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the `element`.\n     * @private\n     */\n    ElementLayouter.prototype.getElement = function () {\n        return this.layoutElement;\n    };\n    ElementLayouter.prototype.layout = function (param, isBoundsChanged) {\n        if (typeof isBoundsChanged === 'boolean' && isBoundsChanged === true) {\n            return this.layoutInternal(param, true);\n        }\n        else {\n            return this.layoutInternal(param);\n        }\n    };\n    /**\n     * Returns the `next page`.\n     * @private\n     */\n    ElementLayouter.prototype.getNextPage = function (currentPage) {\n        var section = currentPage.section;\n        var nextPage = section.add();\n        return nextPage;\n    };\n    return ElementLayouter;\n}());\nexport { ElementLayouter };\nvar PdfLayoutFormat = /** @class */ (function () {\n    function PdfLayoutFormat(baseFormat) {\n        if (typeof baseFormat === 'undefined') {\n            //\n        }\n        else {\n            this.break = baseFormat.break;\n            this.layout = baseFormat.layout;\n            this.paginateBounds = baseFormat.paginateBounds;\n            this.boundsSet = baseFormat.usePaginateBounds;\n        }\n    }\n    Object.defineProperty(PdfLayoutFormat.prototype, \"layout\", {\n        // Properties\n        /**\n         * Gets or sets `layout` type of the element.\n         * @private\n         */\n        get: function () {\n            if (typeof this.layoutType === 'undefined' || this.layoutType == null) {\n                this.layoutType = PdfLayoutType.Paginate;\n            }\n            return this.layoutType;\n        },\n        set: function (value) {\n            this.layoutType = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLayoutFormat.prototype, \"break\", {\n        /**\n         * Gets or sets `break` type of the element.\n         * @private\n         */\n        get: function () {\n            if (typeof this.breakType === 'undefined' || this.boundsSet == null) {\n                this.breakType = PdfLayoutBreakType.FitPage;\n            }\n            return this.breakType;\n        },\n        set: function (value) {\n            this.breakType = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLayoutFormat.prototype, \"paginateBounds\", {\n        /**\n         * Gets or sets the `bounds` on the next page.\n         * @private\n         */\n        get: function () {\n            if (typeof this.layoutPaginateBounds === 'undefined' && this.layoutPaginateBounds == null) {\n                this.layoutPaginateBounds = new RectangleF(0, 0, 0, 0);\n            }\n            return this.layoutPaginateBounds;\n        },\n        set: function (value) {\n            this.layoutPaginateBounds = value;\n            this.boundsSet = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLayoutFormat.prototype, \"usePaginateBounds\", {\n        /**\n         * Gets a value indicating whether [`use paginate bounds`].\n         * @private\n         */\n        get: function () {\n            if (typeof this.boundsSet === 'undefined' || this.boundsSet == null) {\n                this.boundsSet = false;\n            }\n            return this.boundsSet;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfLayoutFormat;\n}());\nexport { PdfLayoutFormat };\nvar PdfLayoutParams = /** @class */ (function () {\n    function PdfLayoutParams() {\n    }\n    Object.defineProperty(PdfLayoutParams.prototype, \"page\", {\n        // Properties\n        /**\n         * Gets or sets the layout `page` for the element.\n         * @private\n         */\n        get: function () {\n            return this.pdfPage;\n        },\n        set: function (value) {\n            this.pdfPage = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLayoutParams.prototype, \"bounds\", {\n        /**\n         * Gets or sets layout `bounds` for the element.\n         * @private\n         */\n        get: function () {\n            return new RectangleF(this.layoutBounds.x, this.layoutBounds.y, this.layoutBounds.width, this.layoutBounds.height);\n        },\n        set: function (value) {\n            this.layoutBounds = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLayoutParams.prototype, \"format\", {\n        /**\n         * Gets or sets `layout settings` for the element.\n         * @private\n         */\n        get: function () {\n            return this.layoutFormat;\n        },\n        set: function (value) {\n            this.layoutFormat = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfLayoutParams;\n}());\nexport { PdfLayoutParams };\nvar PdfLayoutResult = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initializes the new instance of `PdfLayoutResult` class.\n     * @private\n     */\n    function PdfLayoutResult(page, bounds) {\n        this.pdfPage = page;\n        this.layoutBounds = bounds;\n    }\n    Object.defineProperty(PdfLayoutResult.prototype, \"page\", {\n        // Properties\n        /**\n         * Gets the last `page` where the element was drawn.\n         * @private\n         */\n        get: function () {\n            return this.pdfPage;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLayoutResult.prototype, \"bounds\", {\n        /**\n         * Gets the `bounds` of the element on the last page where it was drawn.\n         * @private\n         */\n        get: function () {\n            return this.layoutBounds;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfLayoutResult;\n}());\nexport { PdfLayoutResult };\n","import { RectangleF, PointF } from './../../drawing/pdf-drawing';\nimport { PdfLayoutParams, PdfLayoutFormat } from './base/element-layouter';\n/**\n * `PdfLayoutElement` class represents the base class for all elements that can be layout on the pages.\n * @private\n */\nvar PdfLayoutElement = /** @class */ (function () {\n    function PdfLayoutElement() {\n    }\n    PdfLayoutElement.prototype.drawHelper = function (arg2, arg3, arg4, arg5) {\n        if (arg3 instanceof PointF && typeof arg3.width === 'undefined' && typeof arg3 === 'undefined') {\n            return this.drawHelper(arg2, arg3.x, arg3.y);\n        }\n        else if (typeof arg3 === 'number' && typeof arg4 === 'number' && typeof arg5 === 'undefined') {\n            return this.drawHelper(arg2, arg3, arg4, null);\n        }\n        else if (arg3 instanceof RectangleF && typeof arg3.width !== 'undefined' && typeof arg4 === 'undefined') {\n            return this.drawHelper(arg2, arg3, null);\n        }\n        else if (arg3 instanceof PointF && typeof arg3.width === 'undefined' && arg4 instanceof PdfLayoutFormat) {\n            return this.drawHelper(arg2, arg3.x, arg3.y, arg4);\n        }\n        else if (typeof arg3 === 'number' && typeof arg4 === 'number' && (arg5 instanceof PdfLayoutFormat || arg5 == null)) {\n            var width = (arg2.graphics.clientSize.width - arg3);\n            var layoutRectangle = new RectangleF(arg3, arg4, width, 0);\n            return this.drawHelper(arg2, layoutRectangle, arg5);\n        }\n        else if (arg3 instanceof RectangleF && typeof arg3.width !== 'undefined' && typeof arg4 === 'boolean') {\n            this.bEmbedFonts = arg4;\n            return this.drawHelper(arg2, arg3, null);\n        }\n        else {\n            var param = new PdfLayoutParams();\n            var temparg3 = arg3;\n            var temparg4 = arg4;\n            param.page = arg2;\n            param.bounds = temparg3;\n            param.format = (temparg4 != null) ? temparg4 : new PdfLayoutFormat();\n            var result = this.layout(param);\n            return result;\n        }\n    };\n    return PdfLayoutElement;\n}());\nexport { PdfLayoutElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * TextLayouter.ts class for EJ2-PDF\n */\nimport { ElementLayouter, PdfLayoutResult } from './element-layouter';\nimport { RectangleF, SizeF } from './../../../drawing/pdf-drawing';\nimport { PdfStringLayouter } from './../../fonts/string-layouter';\nimport { PdfLayoutBreakType } from './../../figures/enum';\nimport { PdfColor } from './../../pdf-color';\nimport { PdfTextWebLink } from './../../../annotations/pdf-text-web-link';\n/**\n * Class that `layouts the text`.\n * @private\n */\nvar TextLayouter = /** @class */ (function (_super) {\n    __extends(TextLayouter, _super);\n    // Constructors\n    /**\n     * Initializes a new instance of the `TextLayouter` class.\n     * @private\n     */\n    function TextLayouter(element) {\n        return _super.call(this, element) || this;\n    }\n    Object.defineProperty(TextLayouter.prototype, \"element\", {\n        /**\n         * Gets the layout `element`.\n         * @private\n         */\n        get: function () {\n            return _super.prototype.getElement.call(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * `Layouts` the element.\n     * @private\n     */\n    TextLayouter.prototype.layoutInternal = function (param) {\n        /* tslint:disable */\n        this.format = (this.element.stringFormat != null && typeof this.element.stringFormat !== 'undefined') ? this.element.stringFormat : null;\n        var currentPage = param.page;\n        var currentBounds = param.bounds;\n        var text = this.element.value;\n        var result = null;\n        var pageResult = new TextPageLayoutResult();\n        pageResult.page = currentPage;\n        pageResult.remainder = text;\n        for (;;) {\n            pageResult = this.layoutOnPage(text, currentPage, currentBounds, param);\n            result = this.getLayoutResult(pageResult);\n            break;\n        }\n        /* tslint:enable */\n        return result;\n    };\n    /**\n     * Raises `PageLayout` event if needed.\n     * @private\n     */\n    TextLayouter.prototype.getLayoutResult = function (pageResult) {\n        var result = new PdfTextLayoutResult(pageResult.page, pageResult.bounds, pageResult.remainder, pageResult.lastLineBounds);\n        return result;\n    };\n    /* tslint:disable */\n    /**\n     * `Layouts` the text on the page.\n     * @private\n     */\n    TextLayouter.prototype.layoutOnPage = function (text, currentPage, currentBounds, param) {\n        var result = new TextPageLayoutResult();\n        result.remainder = text;\n        result.page = currentPage;\n        currentBounds = this.checkCorrectBounds(currentPage, currentBounds);\n        var layouter = new PdfStringLayouter();\n        var stringResult = layouter.layout(text, this.element.font, this.format, currentBounds, currentPage.getClientSize().height, false, new SizeF(0, 0));\n        var textFinished = (stringResult.remainder == null);\n        var doesntFit = (param.format.break === PdfLayoutBreakType.FitElement);\n        var canDraw = !(doesntFit || stringResult.empty);\n        // Draw the text.\n        var graphics = currentPage.graphics;\n        var brush = this.element.getBrush();\n        if (this.element instanceof PdfTextWebLink) {\n            brush.color = new PdfColor(0, 0, 255);\n        }\n        graphics.drawStringLayoutResult(stringResult, this.element.font, this.element.pen, brush, currentBounds, this.format);\n        var lineInfo = stringResult.lines[stringResult.lineCount - 1];\n        result.lastLineBounds = graphics.getLineBounds(stringResult.lineCount - 1, stringResult, this.element.font, currentBounds, this.format);\n        result.bounds = this.getTextPageBounds(currentPage, currentBounds, stringResult);\n        result.remainder = stringResult.remainder;\n        result.end = (textFinished);\n        return result;\n    };\n    /* tslint:enable */\n    /**\n     * `Corrects current bounds` on the page.\n     * @private\n     */\n    TextLayouter.prototype.checkCorrectBounds = function (currentPage, currentBounds) {\n        var pageSize = currentPage.graphics.clientSize;\n        currentBounds.height = (currentBounds.height > 0) ? currentBounds.height : pageSize.height - currentBounds.y;\n        return currentBounds;\n    };\n    /**\n     * Returns a `rectangle` where the text was printed on the page.\n     * @private\n     */\n    /* tslint:disable */\n    TextLayouter.prototype.getTextPageBounds = function (currentPage, currentBounds, stringResult) {\n        var textSize = stringResult.actualSize;\n        var x = currentBounds.x;\n        var y = currentBounds.y;\n        var width = (currentBounds.width > 0) ? currentBounds.width : textSize.width;\n        var height = textSize.height;\n        var shiftedRect = currentPage.graphics.checkCorrectLayoutRectangle(textSize, currentBounds.x, currentBounds.y, this.format);\n        // if (currentBounds.width <= 0) {\n        x = shiftedRect.x;\n        // }\n        var verticalShift = currentPage.graphics.getTextVerticalAlignShift(textSize.height, currentBounds.height, this.format);\n        y += verticalShift;\n        var bounds = new RectangleF(x, y, width, height);\n        return bounds;\n    };\n    return TextLayouter;\n}(ElementLayouter));\nexport { TextLayouter };\nvar TextPageLayoutResult = /** @class */ (function () {\n    function TextPageLayoutResult() {\n    }\n    return TextPageLayoutResult;\n}());\nexport { TextPageLayoutResult };\nvar PdfTextLayoutResult = /** @class */ (function (_super) {\n    __extends(PdfTextLayoutResult, _super);\n    // Constructors\n    /**\n     * Initializes the new instance of `PdfTextLayoutResult` class.\n     * @private\n     */\n    function PdfTextLayoutResult(page, bounds, remainder, lastLineBounds) {\n        var _this = _super.call(this, page, bounds) || this;\n        _this.remainderText = remainder;\n        _this.lastLineTextBounds = lastLineBounds;\n        return _this;\n    }\n    Object.defineProperty(PdfTextLayoutResult.prototype, \"remainder\", {\n        // Properties\n        /**\n         * Gets a value that contains the `text` that was not printed.\n         * @private\n         */\n        get: function () {\n            return this.remainderText;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextLayoutResult.prototype, \"lastLineBounds\", {\n        /**\n         * Gets a value that indicates the `bounds` of the last line that was printed on the page.\n         * @private\n         */\n        get: function () {\n            return this.lastLineTextBounds;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfTextLayoutResult;\n}(PdfLayoutResult));\nexport { PdfTextLayoutResult };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfTextElement.ts class for EJ2-PDF\n */\nimport { PdfLayoutElement } from './../figures/layout-element';\nimport { PdfBrush } from './../brushes/pdf-brush';\nimport { PdfFont } from './../fonts/pdf-font';\nimport { PdfStandardFont } from './../fonts/pdf-standard-font';\nimport { PdfPen } from './../pdf-pen';\nimport { PdfLayoutParams } from './../figures/base/element-layouter';\nimport { TextLayouter } from './base/text-layouter';\nimport { PdfSolidBrush } from './../brushes/pdf-solid-brush';\nimport { PdfColor } from './../pdf-color';\nimport { RectangleF, SizeF, PointF } from './../../drawing/pdf-drawing';\nimport { PdfLayoutFormat } from './base/element-layouter';\nimport { PdfStringLayouter } from './../fonts/string-layouter';\nimport { PdfTextAlignment } from './../enum';\n/**\n * `PdfTextElement` class represents the text area with the ability to span several pages\n * and inherited from the 'PdfLayoutElement' class.\n * @private\n */\nvar PdfTextElement = /** @class */ (function (_super) {\n    __extends(PdfTextElement, _super);\n    function PdfTextElement(arg1, arg2, arg3, arg4, arg5) {\n        var _this = _super.call(this) || this;\n        // Fields\n        /**\n         * `Text` data.\n         * @private\n         */\n        _this.content = '';\n        /**\n         * `Value` of text data.\n         * @private\n         */\n        _this.elementValue = '';\n        /**\n         * indicate whether the drawText with PointF overload is called or not.\n         * @default false\n         * @private\n         */\n        _this.hasPointOverload = false;\n        /**\n         * indicate whether the PdfGridCell value is `PdfTextElement`\n         * @default false\n         * @private\n         */\n        _this.isPdfTextElement = false;\n        if (typeof arg1 === 'undefined') {\n            //\n        }\n        else if (typeof arg1 === 'string' && typeof arg2 === 'undefined') {\n            _this = _super.call(this) || this;\n            _this.content = arg1;\n            _this.elementValue = arg1;\n        }\n        else if (typeof arg1 === 'string' && arg2 instanceof PdfFont && typeof arg3 === 'undefined') {\n            _this = _super.call(this) || this;\n            _this.content = arg1;\n            _this.elementValue = arg1;\n            _this.pdfFont = arg2;\n        }\n        else if (typeof arg1 === 'string' && arg2 instanceof PdfFont && arg3 instanceof PdfPen && typeof arg4 === 'undefined') {\n            _this = _super.call(this) || this;\n            _this.content = arg1;\n            _this.elementValue = arg1;\n            _this.pdfFont = arg2;\n            _this.pdfPen = arg3;\n        }\n        else if (typeof arg1 === 'string' && arg2 instanceof PdfFont && arg3 instanceof PdfBrush && typeof arg4 === 'undefined') {\n            _this = _super.call(this) || this;\n            _this.content = arg1;\n            _this.elementValue = arg1;\n            _this.pdfFont = arg2;\n            _this.pdfBrush = arg3;\n        }\n        else {\n            _this = _super.call(this) || this;\n            _this.content = arg1;\n            _this.elementValue = arg1;\n            _this.pdfFont = arg2;\n            _this.pdfPen = arg3;\n            _this.pdfBrush = arg4;\n            _this.format = arg5;\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfTextElement.prototype, \"text\", {\n        // Properties\n        /**\n         * Gets or sets a value indicating the `text` that should be printed.\n         * ```typescript\n         * // create a new PDF document.\n         * let document : PdfDocument = new PdfDocument();\n         * // add a page to the document.\n         * let page1 : PdfPage = document.pages.add();\n         * // create the font\n         * let font : PdfFont = new PdfStandardFont(PdfFontFamily.Helvetica, 12);\n         * // create the Text Web Link\n         * let textLink : PdfTextWebLink = new PdfTextWebLink();\n         * // set the hyperlink\n         * textLink.url = 'http://www.google.com';\n         * //\n         * // set the link text\n         * textLink.text = 'Google';\n         * //\n         * // set the font\n         * textLink.font = font;\n         * // draw the hyperlink in PDF page\n         * textLink.draw(page1, new PointF(10, 40));\n         * // save the document.\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this.content;\n        },\n        set: function (value) {\n            this.elementValue = value;\n            this.content = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextElement.prototype, \"value\", {\n        //get value\n        /**\n         * Gets or sets a `value` indicating the text that should be printed.\n         * @private\n         */\n        get: function () {\n            return this.elementValue;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextElement.prototype, \"pen\", {\n        //get pen\n        /**\n         * Gets or sets a `PdfPen` that determines the color, width, and style of the text\n         * @private\n         */\n        get: function () {\n            return this.pdfPen;\n        },\n        //Set pen value\n        set: function (value) {\n            this.pdfPen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextElement.prototype, \"brush\", {\n        //get brush\n        /**\n         * Gets or sets the `PdfBrush` that will be used to draw the text with color and texture.\n         * @private\n         */\n        get: function () {\n            return this.pdfBrush;\n        },\n        //Set brush value\n        set: function (value) {\n            this.pdfBrush = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextElement.prototype, \"font\", {\n        //get font\n        /**\n         * Gets or sets a `PdfFont` that defines the text format.\n         * ```typescript\n         * // create a new PDF document.\n         * let document : PdfDocument = new PdfDocument();\n         * // add a page to the document.\n         * let page1 : PdfPage = document.pages.add();\n         * // create the font\n         * let font : PdfFont = new PdfStandardFont(PdfFontFamily.Helvetica, 12);\n         * // create the Text Web Link\n         * let textLink : PdfTextWebLink = new PdfTextWebLink();\n         * // set the hyperlink\n         * textLink.url = 'http://www.google.com';\n         * // set the link text\n         * textLink.text = 'Google';\n         * //\n         * // set the font\n         * textLink.font = font;\n         * //\n         * // draw the hyperlink in PDF page\n         * textLink.draw(page1, new PointF(10, 40));\n         * // save the document.\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this.pdfFont;\n        },\n        set: function (value) {\n            this.pdfFont = value;\n            if (this.pdfFont instanceof PdfStandardFont && this.content != null) {\n                this.elementValue = PdfStandardFont.convert(this.content);\n            }\n            else {\n                this.elementValue = this.content;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextElement.prototype, \"stringFormat\", {\n        /**\n         * Gets or sets the `PdfStringFormat` that will be used to set the string format\n         * @private\n         */\n        get: function () {\n            return this.format;\n        },\n        set: function (value) {\n            this.format = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * Gets a `brush` for drawing.\n     * @private\n     */\n    PdfTextElement.prototype.getBrush = function () {\n        return (this.pdfBrush == null || typeof this.pdfBrush === 'undefined') ? new PdfSolidBrush(new PdfColor(0, 0, 0)) : this.pdfBrush;\n    };\n    // /**\n    //  * `Draws` an element on the Graphics.\n    //  * @private\n    //  */\n    // public drawInternal(graphics : PdfGraphics) : void {\n    //     graphics.drawString(this.elementValue, this.pdfFont, this.pdfPen, this.getBrush(), 0, 0, this.stringFormat);\n    // }\n    /**\n     * `Layouts` the element.\n     * @private\n     */\n    PdfTextElement.prototype.layout = function (param) {\n        var layouter = new TextLayouter(this);\n        var result = layouter.layout(param);\n        return result;\n    };\n    PdfTextElement.prototype.drawText = function (arg2, arg3, arg4, arg5) {\n        if (arg3 instanceof PointF && typeof arg3.width === 'undefined' && typeof arg4 === 'undefined') {\n            this.hasPointOverload = true;\n            return this.drawText(arg2, arg3.x, arg3.y);\n        }\n        else if (typeof arg3 === 'number' && typeof arg4 === 'number' && typeof arg5 === 'undefined') {\n            this.hasPointOverload = true;\n            return this.drawText(arg2, arg3, arg4, null);\n        }\n        else if (arg3 instanceof RectangleF && typeof arg3.width !== 'undefined' && typeof arg4 === 'undefined') {\n            return this.drawText(arg2, arg3, null);\n        }\n        else if (arg3 instanceof PointF && typeof arg3.width === 'undefined' && arg4 instanceof PdfLayoutFormat) {\n            this.hasPointOverload = true;\n            return this.drawText(arg2, arg3.x, arg3.y, arg4);\n        }\n        else if (typeof arg3 === 'number' && typeof arg4 === 'number' && (arg5 instanceof PdfLayoutFormat || arg5 == null)) {\n            this.hasPointOverload = true;\n            var width = (arg2.graphics.clientSize.width - arg3);\n            var layoutRectangle = new RectangleF(arg3, arg4, width, 0);\n            return this.drawText(arg2, layoutRectangle, arg5);\n        }\n        else if (arg3 instanceof RectangleF && typeof arg3.width !== 'undefined' && typeof arg4 === 'boolean') {\n            return this.drawText(arg2, arg3, null);\n        }\n        else {\n            var layout = new PdfStringLayouter();\n            if (this.hasPointOverload) {\n                var stringLayoutResult = layout.layout(this.value, this.font, this.stringFormat, new SizeF((arg2.graphics.clientSize.width - arg3.x), 0), true, arg2.graphics.clientSize);\n                var layoutResult = void 0;\n                var param = new PdfLayoutParams();\n                var temparg3 = arg3;\n                var temparg4 = arg4;\n                param.page = arg2;\n                var previousPage = arg2;\n                param.bounds = temparg3;\n                param.format = (temparg4 != null) ? temparg4 : new PdfLayoutFormat();\n                if (stringLayoutResult.lines.length > 1) {\n                    this.text = stringLayoutResult.layoutLines[0].text;\n                    if (param.bounds.y <= param.page.graphics.clientSize.height) {\n                        var previousPosition = new PointF(param.bounds.x, param.bounds.y);\n                        layoutResult = this.layout(param);\n                        var bounds = new RectangleF(0, layoutResult.bounds.y + stringLayoutResult.lineHeight, arg2.graphics.clientSize.width, stringLayoutResult.lineHeight);\n                        var isPaginate = false;\n                        for (var i = 1; i < stringLayoutResult.lines.length; i++) {\n                            param.page = layoutResult.page;\n                            param.bounds = new RectangleF(new PointF(bounds.x, bounds.y), new SizeF(bounds.width, bounds.height));\n                            this.text = stringLayoutResult.layoutLines[i].text;\n                            if (bounds.y + stringLayoutResult.lineHeight > layoutResult.page.graphics.clientSize.height) {\n                                isPaginate = true;\n                                param.page = param.page.graphics.getNextPage();\n                                if (previousPosition.y > (layoutResult.page.graphics.clientSize.height - layoutResult.bounds.height)) {\n                                    bounds = new RectangleF(0, layoutResult.bounds.height, layoutResult.page.graphics.clientSize.width, stringLayoutResult.lineHeight);\n                                }\n                                else {\n                                    bounds = new RectangleF(0, 0, layoutResult.page.graphics.clientSize.width, stringLayoutResult.lineHeight);\n                                }\n                                param.bounds = bounds;\n                            }\n                            layoutResult = this.layout(param);\n                            if (i !== (stringLayoutResult.lines.length - 1)) {\n                                bounds = new RectangleF(0, layoutResult.bounds.y + stringLayoutResult.lineHeight, layoutResult.page.graphics.clientSize.width, stringLayoutResult.lineHeight);\n                            }\n                            else {\n                                var lineWidth = this.font.measureString(this.text, this.format).width;\n                                layoutResult = this.calculateResultBounds(layoutResult, lineWidth, layoutResult.page.graphics.clientSize.width, 0);\n                            }\n                        }\n                    }\n                    return layoutResult;\n                }\n                else {\n                    var lineSize = this.font.measureString(this.text, this.format);\n                    if (param.bounds.y <= param.page.graphics.clientSize.height) {\n                        layoutResult = this.layout(param);\n                        layoutResult = this.calculateResultBounds(layoutResult, lineSize.width, layoutResult.page.graphics.clientSize.width, 0);\n                    }\n                    return layoutResult;\n                }\n            }\n            else {\n                var layoutResult = layout.layout(this.value, this.font, this.stringFormat, new SizeF(arg3.width, 0), false, arg2.graphics.clientSize);\n                var result = void 0;\n                var param = new PdfLayoutParams();\n                var temparg3 = arg3;\n                var temparg4 = arg4;\n                param.page = arg2;\n                param.bounds = temparg3;\n                param.format = (temparg4 != null) ? temparg4 : new PdfLayoutFormat();\n                if (layoutResult.lines.length > 1) {\n                    this.text = layoutResult.layoutLines[0].text;\n                    if (param.bounds.y <= param.page.graphics.clientSize.height) {\n                        var previousPosition = new PointF(param.bounds.x, param.bounds.y);\n                        result = this.layout(param);\n                        var bounds = new RectangleF(temparg3.x, result.bounds.y + layoutResult.lineHeight, temparg3.width, layoutResult.lineHeight);\n                        var isPaginate = false;\n                        for (var i = 1; i < layoutResult.lines.length; i++) {\n                            param.page = result.page;\n                            param.bounds = new RectangleF(bounds.x, bounds.y, bounds.width, bounds.height);\n                            this.text = layoutResult.layoutLines[i].text;\n                            if (bounds.y + layoutResult.lineHeight > result.page.graphics.clientSize.height) {\n                                isPaginate = true;\n                                param.page = param.page.graphics.getNextPage();\n                                if (previousPosition.y > (result.page.graphics.clientSize.height - result.bounds.height)) {\n                                    bounds = new RectangleF(temparg3.x, layoutResult.lineHeight, temparg3.width, layoutResult.lineHeight);\n                                }\n                                else {\n                                    bounds = new RectangleF(temparg3.x, 0, temparg3.width, layoutResult.lineHeight);\n                                }\n                                param.bounds = bounds;\n                            }\n                            result = this.layout(param);\n                            if (i !== (layoutResult.lines.length - 1)) {\n                                bounds = new RectangleF(temparg3.x, result.bounds.y + layoutResult.lineHeight, temparg3.width, layoutResult.lineHeight);\n                            }\n                            else {\n                                var lineWidth = this.font.measureString(this.text, this.format).width;\n                                result = this.calculateResultBounds(result, lineWidth, temparg3.width, temparg3.x);\n                            }\n                        }\n                    }\n                    return result;\n                }\n                else {\n                    var lineSize = this.font.measureString(this.text, this.format);\n                    if (param.bounds.y <= param.page.graphics.clientSize.height) {\n                        result = this.layout(param);\n                        result = this.calculateResultBounds(result, lineSize.width, temparg3.width, temparg3.x);\n                    }\n                    return result;\n                }\n            }\n        }\n    };\n    PdfTextElement.prototype.calculateResultBounds = function (result, lineWidth, maximumWidth, startPosition) {\n        var shift = 0;\n        if (this.stringFormat != null && typeof this.stringFormat !== 'undefined' && this.stringFormat.alignment === PdfTextAlignment.Center) {\n            result.bounds.x = startPosition + (maximumWidth - lineWidth) / 2;\n            result.bounds.width = lineWidth;\n        }\n        else if (this.stringFormat != null && typeof this.stringFormat !== 'undefined' && this.stringFormat.alignment === PdfTextAlignment.Right) {\n            result.bounds.x = startPosition + (maximumWidth - lineWidth);\n            result.bounds.width = lineWidth;\n        }\n        else if (this.stringFormat != null && typeof this.stringFormat !== 'undefined' && this.stringFormat.alignment === PdfTextAlignment.Justify) {\n            result.bounds.x = startPosition;\n            result.bounds.width = maximumWidth;\n        }\n        else {\n            result.bounds.width = startPosition;\n            result.bounds.width = lineWidth;\n        }\n        return result;\n    };\n    return PdfTextElement;\n}(PdfLayoutElement));\nexport { PdfTextElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfActionLinkAnnotation } from './action-link-annotation';\nimport { PdfName } from './../primitives/pdf-name';\nimport { PdfUriAction } from './../actions/uri-action';\n/**\n * `PdfUriAnnotation` class represents the Uri annotation.\n * @private\n */\nvar PdfUriAnnotation = /** @class */ (function (_super) {\n    __extends(PdfUriAnnotation, _super);\n    function PdfUriAnnotation(rectangle, uri) {\n        var _this = _super.call(this, rectangle) || this;\n        if (typeof uri !== 'undefined') {\n            _this.uri = uri;\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfUriAnnotation.prototype, \"uriAction\", {\n        /**\n         * Get `action` of the annotation.\n         * @private\n         */\n        get: function () {\n            if (typeof this.pdfUriAction === 'undefined') {\n                this.pdfUriAction = new PdfUriAction();\n            }\n            return this.pdfUriAction;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfUriAnnotation.prototype, \"uri\", {\n        // Properties\n        /**\n         * Gets or sets the `Uri` address.\n         * @private\n         */\n        get: function () {\n            return this.uriAction.uri;\n        },\n        set: function (value) {\n            if (this.uriAction.uri !== value) {\n                this.uriAction.uri = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfUriAnnotation.prototype, \"action\", {\n        /**\n         * Gets or sets the `action`.\n         * @private\n         */\n        get: function () {\n            return this.getSetAction();\n        },\n        set: function (value) {\n            this.getSetAction(value);\n            this.uriAction.next = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * `Initializes` annotation object.\n     * @private\n     */\n    PdfUriAnnotation.prototype.initialize = function () {\n        _super.prototype.initialize.call(this);\n        this.dictionary.items.setValue(this.dictionaryProperties.subtype, new PdfName(this.dictionaryProperties.link));\n        var tempPrimitive = this.uriAction.element;\n        this.dictionary.items.setValue(this.dictionaryProperties.a, this.uriAction.element);\n    };\n    return PdfUriAnnotation;\n}(PdfActionLinkAnnotation));\nexport { PdfUriAnnotation };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfPage } from './../pages/pdf-page';\nimport { PointF, RectangleF, SizeF } from './../drawing/pdf-drawing';\nimport { PdfTextElement } from './../graphics/figures/text-element';\nimport { PdfUriAnnotation } from './uri-annotation';\nimport { PdfStringLayouter } from './../graphics/fonts/string-layouter';\nimport { PdfFontStyle } from './../graphics/fonts/enum';\nimport { PdfTextAlignment } from './../graphics/enum';\nimport { PdfArray } from './../primitives/pdf-array';\nimport { PdfNumber } from './../primitives/pdf-number';\n/**\n * `PdfTextWebLink` class represents the class for text web link annotation.\n * ```typescript\n * // create a new PDF document.\n * let document : PdfDocument = new PdfDocument();\n * // add a page to the document.\n * let page1 : PdfPage = document.pages.add();\n * // create the font\n * let font : PdfFont = new PdfStandardFont(PdfFontFamily.Helvetica, 12);\n * //\n * // create the Text Web Link\n * let textLink : PdfTextWebLink = new PdfTextWebLink();\n * // set the hyperlink\n * textLink.url = 'http://www.google.com';\n * // set the link text\n * textLink.text = 'Google';\n * // set the font\n * textLink.font = font;\n * // draw the hyperlink in PDF page\n * textLink.draw(page1, new PointF(10, 40));\n * //\n * // save the document.\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfTextWebLink = /** @class */ (function (_super) {\n    __extends(PdfTextWebLink, _super);\n    // Constructors\n    /**\n     * Initializes a new instance of the `PdfTextWebLink` class.\n     * @private\n     */\n    function PdfTextWebLink() {\n        var _this = _super.call(this) || this;\n        // Fields\n        /**\n         * Internal variable to store `Url`.\n         * @default ''\n         * @private\n         */\n        _this.uniformResourceLocator = '';\n        /**\n         * Internal variable to store `Uri Annotation` object.\n         * @default null\n         * @private\n         */\n        _this.uriAnnotation = null;\n        /**\n         * Checks whether the drawTextWebLink method with `PointF` overload is called or not.\n         * If it set as true, then the start position of each lines excluding firest line is changed as (0, Y).\n         * @private\n         * @hidden\n         */\n        _this.recalculateBounds = false;\n        _this.defaultBorder = new PdfArray();\n        for (var i = 0; i < 3; i++) {\n            _this.defaultBorder.add(new PdfNumber(0));\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfTextWebLink.prototype, \"url\", {\n        // Properties\n        /**\n         * Gets or sets the `Uri address`.\n         * ```typescript\n         * // create a new PDF document.\n         * let document : PdfDocument = new PdfDocument();\n         * // add a page to the document.\n         * let page1 : PdfPage = document.pages.add();\n         * // create the font\n         * let font : PdfFont = new PdfStandardFont(PdfFontFamily.Helvetica, 12);\n         * // create the Text Web Link\n         * let textLink : PdfTextWebLink = new PdfTextWebLink();\n         * //\n         * // set the hyperlink\n         * textLink.url = 'http://www.google.com';\n         * //\n         * // set the link text\n         * textLink.text = 'Google';\n         * // set the font\n         * textLink.font = font;\n         * // draw the hyperlink in PDF page\n         * textLink.draw(page1, new PointF(10, 40));\n         * // save the document.\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this.uniformResourceLocator;\n        },\n        set: function (value) {\n            if (value.length === 0) {\n                throw new Error('ArgumentException : Url - string can not be empty');\n            }\n            this.uniformResourceLocator = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfTextWebLink.prototype.draw = function (arg1, arg2) {\n        if (arg1 instanceof PdfPage) {\n            var layout = new PdfStringLayouter();\n            var previousFontStyle = this.font.style;\n            if (arg2 instanceof PointF) {\n                this.recalculateBounds = true;\n                this.font.style = PdfFontStyle.Underline;\n                var layoutResult = layout.layout(this.value, this.font, this.stringFormat, new SizeF((arg1.graphics.clientSize.width - arg2.x), 0), true, arg1.graphics.clientSize);\n                if (layoutResult.lines.length === 1) {\n                    var textSize = this.font.measureString(this.value);\n                    var rect = new RectangleF(arg2, textSize);\n                    rect = this.calculateBounds(rect, textSize.width, arg1.graphics.clientSize.width, arg2.x);\n                    this.uriAnnotation = new PdfUriAnnotation(rect, this.url);\n                    this.uriAnnotation.dictionary.items.setValue('Border', this.defaultBorder);\n                    arg1.annotations.add(this.uriAnnotation);\n                    var result = this.drawText(arg1, arg2);\n                    this.font.style = previousFontStyle;\n                    return result;\n                }\n                else {\n                    var result = this.drawMultipleLineWithPoint(layoutResult, arg1, arg2);\n                    this.font.style = previousFontStyle;\n                    return result;\n                }\n            }\n            else {\n                var layoutResult = layout.layout(this.value, this.font, this.stringFormat, new SizeF(arg2.width, 0), false, new SizeF(0, 0));\n                this.font.style = PdfFontStyle.Underline;\n                if (layoutResult.lines.length === 1) {\n                    var textSize = this.font.measureString(this.value);\n                    var rect = new RectangleF(new PointF(arg2.x, arg2.y), textSize);\n                    rect = this.calculateBounds(rect, textSize.width, arg2.width, arg2.x);\n                    this.uriAnnotation = new PdfUriAnnotation(rect, this.url);\n                    this.uriAnnotation.dictionary.items.setValue('Border', this.defaultBorder);\n                    arg1.annotations.add(this.uriAnnotation);\n                    var returnValue = this.drawText(arg1, arg2);\n                    this.font.style = previousFontStyle;\n                    return returnValue;\n                }\n                else {\n                    var returnValue = this.drawMultipleLineWithBounds(layoutResult, arg1, arg2);\n                    this.font.style = previousFontStyle;\n                    return returnValue;\n                }\n            }\n        }\n        else {\n            var page = new PdfPage();\n            page = arg1.page;\n            return this.draw(page, arg2);\n        }\n    };\n    /* tslint:enable */\n    //Private methods\n    /**\n     * Helper method `Draw` a Multiple Line Text Web Link on the Graphics with the specified location.\n     * @private\n     */\n    PdfTextWebLink.prototype.drawMultipleLineWithPoint = function (result, page, location) {\n        var layoutResult;\n        for (var i = 0; i < result.layoutLines.length; i++) {\n            var size = this.font.measureString(result.lines[i].text);\n            var bounds = new RectangleF(location, size);\n            if (i !== 0) {\n                bounds.x = 0;\n            }\n            this.text = result.lines[i].text;\n            if (bounds.y + size.height > page.graphics.clientSize.height) {\n                if (i !== 0) {\n                    page = page.graphics.getNextPage();\n                    bounds = new RectangleF(0, 0, page.graphics.clientSize.width, size.height);\n                    location.y = 0;\n                }\n                else {\n                    break;\n                }\n            }\n            bounds = this.calculateBounds(bounds, size.width, page.graphics.clientSize.width, bounds.x);\n            this.uriAnnotation = new PdfUriAnnotation(bounds, this.url);\n            this.uriAnnotation.dictionary.items.setValue('Border', this.defaultBorder);\n            page.annotations.add(this.uriAnnotation);\n            if (i !== 0) {\n                layoutResult = this.drawText(page, new PointF(0, bounds.y));\n            }\n            else {\n                layoutResult = this.drawText(page, bounds.x, bounds.y);\n            }\n            location.y += size.height;\n        }\n        return layoutResult;\n    };\n    /**\n     * Helper method `Draw` a Multiple Line Text Web Link on the Graphics with the specified bounds.\n     * @private\n     */\n    PdfTextWebLink.prototype.drawMultipleLineWithBounds = function (result, page, bounds) {\n        var layoutResult;\n        for (var i = 0; i < result.layoutLines.length; i++) {\n            var size = this.font.measureString(result.lines[i].text);\n            var internalBounds = new RectangleF(new PointF(bounds.x, bounds.y), size);\n            internalBounds = this.calculateBounds(internalBounds, size.width, bounds.width, bounds.x);\n            this.text = result.lines[i].text;\n            if (bounds.y + size.height > page.graphics.clientSize.height) {\n                if (i !== 0) {\n                    page = page.graphics.getNextPage();\n                    bounds = new RectangleF(bounds.x, 0, bounds.width, size.height);\n                    internalBounds.y = 0;\n                }\n                else {\n                    break;\n                }\n            }\n            this.uriAnnotation = new PdfUriAnnotation(internalBounds, this.url);\n            this.uriAnnotation.dictionary.items.setValue('Border', this.defaultBorder);\n            page.annotations.add(this.uriAnnotation);\n            layoutResult = this.drawText(page, bounds);\n            bounds.y += size.height;\n        }\n        return layoutResult;\n    };\n    /* tslint:disable */\n    PdfTextWebLink.prototype.calculateBounds = function (currentBounds, lineWidth, maximumWidth, startPosition) {\n        var shift = 0;\n        if (this.stringFormat != null && typeof this.stringFormat !== 'undefined' && this.stringFormat.alignment === PdfTextAlignment.Center) {\n            currentBounds.x = startPosition + (maximumWidth - lineWidth) / 2;\n            currentBounds.width = lineWidth;\n        }\n        else if (this.stringFormat != null && typeof this.stringFormat !== 'undefined' && this.stringFormat.alignment === PdfTextAlignment.Right) {\n            currentBounds.x = startPosition + (maximumWidth - lineWidth);\n            currentBounds.width = lineWidth;\n        }\n        else if (this.stringFormat != null && typeof this.stringFormat !== 'undefined' && this.stringFormat.alignment === PdfTextAlignment.Justify) {\n            currentBounds.x = startPosition;\n            currentBounds.width = maximumWidth;\n        }\n        else {\n            currentBounds.width = startPosition;\n            currentBounds.width = lineWidth;\n        }\n        return currentBounds;\n    };\n    return PdfTextWebLink;\n}(PdfTextElement));\nexport { PdfTextWebLink };\n","/**\n * PdfNumbersConvertor.ts class for EJ2-PDF\n * @private\n */\nimport { PdfNumberStyle } from './../../pages/enum';\n/**\n * `PdfNumbersConvertor` for convert page number into numbers, roman letters, etc.,\n * @private\n */\nvar PdfNumbersConvertor = /** @class */ (function () {\n    function PdfNumbersConvertor() {\n    }\n    // Static methods\n    /**\n     * Convert string value from page number with correct format.\n     * @private\n     */\n    PdfNumbersConvertor.convert = function (intArabic, numberStyle) {\n        var result = '';\n        switch (numberStyle) {\n            case PdfNumberStyle.None:\n                result = '';\n                break;\n            case PdfNumberStyle.Numeric:\n                result = intArabic.toString();\n                break;\n            case PdfNumberStyle.LowerLatin:\n                result = this.arabicToLetter(intArabic).toLowerCase();\n                break;\n            case PdfNumberStyle.LowerRoman:\n                result = this.arabicToRoman(intArabic).toLowerCase();\n                break;\n            case PdfNumberStyle.UpperLatin:\n                result = this.arabicToLetter(intArabic);\n                break;\n            case PdfNumberStyle.UpperRoman:\n                result = this.arabicToRoman(intArabic);\n                break;\n        }\n        return result;\n    };\n    /**\n     * Converts `arabic to roman` letters.\n     * @private\n     */\n    PdfNumbersConvertor.arabicToRoman = function (intArabic) {\n        var retval = '';\n        retval += this.generateNumber(intArabic, 1000, 'M');\n        retval += this.generateNumber(intArabic, 900, 'CM');\n        retval += this.generateNumber(intArabic, 500, 'D');\n        retval += this.generateNumber(intArabic, 400, 'CD');\n        retval += this.generateNumber(intArabic, 100, 'C');\n        retval += this.generateNumber(intArabic, 90, 'XC');\n        retval += this.generateNumber(intArabic, 50, 'L');\n        retval += this.generateNumber(intArabic, 40, 'XL');\n        retval += this.generateNumber(intArabic, 10, 'X');\n        retval += this.generateNumber(intArabic, 9, 'IX');\n        retval += this.generateNumber(intArabic, 5, 'V');\n        retval += this.generateNumber(intArabic, 4, 'IV');\n        retval += this.generateNumber(intArabic, 1, 'I');\n        return retval.toString();\n    };\n    /**\n     * Converts `arabic to normal letters`.\n     * @private\n     */\n    PdfNumbersConvertor.arabicToLetter = function (arabic) {\n        var stack = this.convertToLetter(arabic);\n        var result = '';\n        while (stack.length > 0) {\n            var num = stack.pop();\n            result = this.appendChar(result, num);\n        }\n        return result.toString();\n    };\n    /**\n     * Generate a string value of an input number.\n     * @private\n     */\n    PdfNumbersConvertor.generateNumber = function (value, magnitude, letter) {\n        var numberstring = '';\n        while (value >= magnitude) {\n            value -= magnitude;\n            numberstring += letter;\n        }\n        return numberstring.toString();\n    };\n    /**\n     * Convert a input number into letters.\n     * @private\n     */\n    PdfNumbersConvertor.convertToLetter = function (arabic) {\n        if (arabic <= 0) {\n            throw Error('ArgumentOutOfRangeException-arabic, Value can not be less 0');\n        }\n        var stack = [];\n        while (arabic > this.letterLimit) {\n            var remainder = arabic % this.letterLimit;\n            if (remainder === 0.0) {\n                arabic = arabic / this.letterLimit - 1;\n                remainder = this.letterLimit;\n            }\n            else {\n                arabic /= this.letterLimit;\n            }\n            stack.push(remainder);\n        }\n        stack.push(arabic);\n        return stack;\n    };\n    /**\n     * Convert number to actual string value.\n     * @private\n     */\n    PdfNumbersConvertor.appendChar = function (builder, value) {\n        var letter = String.fromCharCode(PdfNumbersConvertor.acsiiStartIndex + value);\n        builder += letter;\n        return builder;\n    };\n    // Fields\n    /**\n     * numbers of letters in english [readonly].\n     * @default = 26.0\n     * @private\n     */\n    PdfNumbersConvertor.letterLimit = 26.0;\n    /**\n     * Resturns `acsii start index` value.\n     * @default 64\n     * @private\n     */\n    PdfNumbersConvertor.acsiiStartIndex = (65 - 1);\n    return PdfNumbersConvertor;\n}());\nexport { PdfNumbersConvertor };\n","/**\n * Represent class to store information about `template and value pairs`.\n * @private\n */\nvar PdfTemplateValuePair = /** @class */ (function () {\n    function PdfTemplateValuePair(template, value) {\n        // Fields\n        /**\n         * Internal variable to store template.\n         * @default null\n         * @private\n         */\n        this.pdfTemplate = null;\n        /**\n         * Intenal variable to store value.\n         * @private\n         */\n        this.content = '';\n        if (typeof template === 'undefined') {\n            //\n        }\n        else {\n            this.template = template;\n            this.value = value;\n        }\n    }\n    Object.defineProperty(PdfTemplateValuePair.prototype, \"template\", {\n        // Properties\n        /**\n         * Gets or sets the template.\n         * @private\n         */\n        get: function () {\n            return this.pdfTemplate;\n        },\n        set: function (value) {\n            this.pdfTemplate = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTemplateValuePair.prototype, \"value\", {\n        /**\n         * Gets or sets the value.\n         * @private\n         */\n        get: function () {\n            return this.content;\n        },\n        set: function (value) {\n            this.content = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfTemplateValuePair;\n}());\nexport { PdfTemplateValuePair };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfAutomaticField.ts class for EJ2-PDF\n */\nimport { PdfAutomaticField } from './automatic-field';\nimport { TemporaryDictionary } from './../../collections/object-object-pair/dictionary';\nimport { PdfTemplateValuePair } from './pdf-template-value-pair';\nimport { SizeF, PointF } from './../../drawing/pdf-drawing';\nimport { PdfTemplate } from './../../graphics/figures/pdf-template';\n/**\n * Represents automatic field which has the same value within the `PdfGraphics`.\n */\nvar PdfMultipleValueField = /** @class */ (function (_super) {\n    __extends(PdfMultipleValueField, _super);\n    function PdfMultipleValueField() {\n        var _this = _super.call(this) || this;\n        //  Fields\n        /**\n         * Stores the instance of dictionary values of `graphics and template value pair`.\n         * @private\n         */\n        _this.list = new TemporaryDictionary();\n        return _this;\n    }\n    // Implementation\n    /* tslint:disable */\n    PdfMultipleValueField.prototype.performDraw = function (graphics, location, scalingX, scalingY) {\n        _super.prototype.performDrawHelper.call(this, graphics, location, scalingX, scalingY);\n        var value = this.getValue(graphics);\n        var template = new PdfTemplate(this.getSize());\n        this.list.setValue(graphics, new PdfTemplateValuePair(template, value));\n        var g = template.graphics;\n        var size = this.getSize();\n        template.graphics.drawString(value, this.getFont(), this.pen, this.getBrush(), 0, 0, size.width, size.height, this.stringFormat);\n        var drawLocation = new PointF(location.x + this.location.x, location.y + this.location.y);\n        graphics.drawPdfTemplate(template, drawLocation, new SizeF(template.width * scalingX, template.height * scalingY));\n    };\n    return PdfMultipleValueField;\n}(PdfAutomaticField));\nexport { PdfMultipleValueField };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfBrush } from './../../graphics/brushes/pdf-brush';\nimport { PdfNumberStyle } from './../../pages/enum';\nimport { PdfNumbersConvertor } from './pdf-numbers-convertor';\nimport { PdfMultipleValueField } from './multiple-value-field';\n/**\n * Represents PDF document `page number field`.\n * @public\n */\nvar PdfPageNumberField = /** @class */ (function (_super) {\n    __extends(PdfPageNumberField, _super);\n    function PdfPageNumberField(font, arg2) {\n        var _this = _super.call(this) || this;\n        // Fields\n        /**\n         * Stores the number style of the page number field.\n         * @private\n         */\n        _this.internalNumberStyle = PdfNumberStyle.Numeric;\n        if (typeof arg2 === 'undefined') {\n            _this.font = font;\n        }\n        else if (arg2 instanceof PdfBrush) {\n            _this.font = font;\n            _this.brush = arg2;\n        }\n        else {\n            _this.font = font;\n            _this.bounds = arg2;\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfPageNumberField.prototype, \"numberStyle\", {\n        // Properties\n        /**\n         * Gets and sets the number style of the page number field.\n         * @private\n         */\n        get: function () {\n            return this.internalNumberStyle;\n        },\n        set: function (value) {\n            this.internalNumberStyle = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Return the `string` value of page number field.\n     * @public\n     */\n    PdfPageNumberField.prototype.getValue = function (graphics) {\n        var result = null;\n        var page = this.getPageFromGraphics(graphics);\n        result = this.internalGetValue(page);\n        return result;\n    };\n    /**\n     * Internal method to `get actual value of page number`.\n     * @private\n     */\n    PdfPageNumberField.prototype.internalGetValue = function (page) {\n        var document = page.document;\n        var pageIndex = document.pages.indexOf(page) + 1;\n        return PdfNumbersConvertor.convert(pageIndex, this.numberStyle);\n    };\n    return PdfPageNumberField;\n}(PdfMultipleValueField));\nexport { PdfPageNumberField };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfCompositeField.ts class for EJ2-PDF\n */\nimport { PdfMultipleValueField } from './multiple-value-field';\n/**\n * Represents class which can concatenate multiple automatic fields into single string.\n */\nvar PdfCompositeField = /** @class */ (function (_super) {\n    __extends(PdfCompositeField, _super);\n    // Constructor\n    /**\n     * Initialize a new instance of `PdfCompositeField` class.\n     * @param font Font of the field.\n     * @param brush Color of the field.\n     * @param text Content of the field.\n     * @param list List of the automatic fields in specific order based on the text content.\n     */\n    function PdfCompositeField(font, brush, text) {\n        var list = [];\n        for (var _i = 3; _i < arguments.length; _i++) {\n            list[_i - 3] = arguments[_i];\n        }\n        var _this = _super.call(this) || this;\n        // Fields\n        /**\n         * Stores the array of automatic fields.\n         * @private\n         */\n        _this.internalAutomaticFields = null;\n        /**\n         * Stores the text value of the field.\n         * @private\n         */\n        _this.internalText = '';\n        _this.font = font;\n        _this.brush = brush;\n        _this.text = text;\n        _this.automaticFields = list;\n        return _this;\n    }\n    Object.defineProperty(PdfCompositeField.prototype, \"text\", {\n        // Properties\n        /**\n         * Gets and sets the content of the field.\n         * @public\n         */\n        get: function () {\n            return this.internalText;\n        },\n        set: function (value) {\n            this.internalText = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCompositeField.prototype, \"automaticFields\", {\n        /**\n         * Gets and sets the list of the field to drawn.\n         * @public\n         */\n        get: function () {\n            return this.internalAutomaticFields;\n        },\n        set: function (value) {\n            this.internalAutomaticFields = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * Return the actual value generated from the list of automatic fields.\n     * @public\n     */\n    PdfCompositeField.prototype.getValue = function (graphics) {\n        var values = [];\n        var text = this.text.toString();\n        if (typeof this.automaticFields !== 'undefined' && this.automaticFields != null && this.automaticFields.length > 0) {\n            for (var i = 0; i < this.automaticFields.length; i++) {\n                var automaticField = this.automaticFields[i];\n                text = text.replace('{' + i + '}', automaticField.getValue(graphics));\n            }\n        }\n        return text;\n    };\n    return PdfCompositeField;\n}(PdfMultipleValueField));\nexport { PdfCompositeField };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfSingleValueField.ts class for EJ2-PDF\n */\nimport { PdfAutomaticField } from './automatic-field';\nimport { TemporaryDictionary } from './../../collections/object-object-pair/dictionary';\nimport { PdfTemplateValuePair } from './pdf-template-value-pair';\nimport { PointF, SizeF } from './../../drawing/pdf-drawing';\nimport { PdfTemplate } from './../../graphics/figures/pdf-template';\n/**\n * Represents automatic field which has the same value in the whole document.\n */\nvar PdfSingleValueField = /** @class */ (function (_super) {\n    __extends(PdfSingleValueField, _super);\n    // Constructors\n    function PdfSingleValueField() {\n        var _this = _super.call(this) || this;\n        // Fields\n        /* tslint:disable */\n        _this.list = new TemporaryDictionary();\n        /* tslint:enable */\n        _this.painterGraphics = [];\n        return _this;\n    }\n    PdfSingleValueField.prototype.performDraw = function (graphics, location, scalingX, scalingY) {\n        _super.prototype.performDrawHelper.call(this, graphics, location, scalingX, scalingY);\n        var page = this.getPageFromGraphics(graphics);\n        var document = page.document;\n        var textValue = this.getValue(graphics);\n        /* tslint:disable */\n        if (this.list.containsKey(document)) {\n            var pair = this.list.getValue(document);\n            var drawLocation = new PointF(location.x + this.location.x, location.y + this.location.y);\n            graphics.drawPdfTemplate(pair.template, drawLocation, new SizeF(pair.template.width * scalingX, pair.template.height * scalingY));\n            this.painterGraphics.push(graphics);\n        }\n        else {\n            var size = this.getSize();\n            var template = new PdfTemplate(size);\n            this.list.setValue(document, new PdfTemplateValuePair(template, textValue));\n            template.graphics.drawString(textValue, this.getFont(), this.pen, this.getBrush(), 0, 0, size.width, size.height, this.stringFormat);\n            var drawLocation = new PointF(location.x + this.location.x, location.y + this.location.y);\n            graphics.drawPdfTemplate(template, drawLocation, new SizeF(template.width * scalingX, template.height * scalingY));\n            this.painterGraphics.push(graphics);\n        }\n        /* tslint:enable */\n    };\n    return PdfSingleValueField;\n}(PdfAutomaticField));\nexport { PdfSingleValueField };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfPageCountField.ts class for EJ2-PDF\n */\nimport { PdfSingleValueField } from './single-value-field';\nimport { PdfNumberStyle } from './../../pages/enum';\nimport { PdfBrush } from './../../graphics/brushes/pdf-brush';\nimport { PdfNumbersConvertor } from './pdf-numbers-convertor';\n/**\n * Represents total PDF document page count automatic field.\n */\nvar PdfPageCountField = /** @class */ (function (_super) {\n    __extends(PdfPageCountField, _super);\n    function PdfPageCountField(font, arg2) {\n        var _this = _super.call(this) || this;\n        // Fields\n        /**\n         * Stores the number style of the field.\n         * @private\n         */\n        _this.internalNumberStyle = PdfNumberStyle.Numeric;\n        if (typeof arg2 === 'undefined') {\n            _this.font = font;\n        }\n        else if (arg2 instanceof PdfBrush) {\n            _this.font = font;\n            _this.brush = arg2;\n        }\n        else {\n            _this.font = font;\n            _this.bounds = arg2;\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfPageCountField.prototype, \"numberStyle\", {\n        // Properties\n        /**\n         * Gets and sets the number style of the field.\n         * @public\n         */\n        get: function () {\n            return this.internalNumberStyle;\n        },\n        set: function (value) {\n            this.internalNumberStyle = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * Return the actual value of the content to drawn.\n     * @public\n     */\n    PdfPageCountField.prototype.getValue = function (graphics) {\n        var result = null;\n        var page = this.getPageFromGraphics(graphics);\n        var document = page.section.parent.document;\n        var count = document.pages.count;\n        result = PdfNumbersConvertor.convert(count, this.numberStyle);\n        return result;\n    };\n    return PdfPageCountField;\n}(PdfSingleValueField));\nexport { PdfPageCountField };\n","/**\n * public Enum for `PdfDestinationMode`.\n * @private\n */\nexport var PdfDestinationMode;\n(function (PdfDestinationMode) {\n    /**\n     * Specifies the type of `Location`.\n     * @private\n     */\n    PdfDestinationMode[PdfDestinationMode[\"Location\"] = 0] = \"Location\";\n    /**\n     * Specifies the type of `FitToPage`.\n     * @private\n     */\n    PdfDestinationMode[PdfDestinationMode[\"FitToPage\"] = 1] = \"FitToPage\";\n    /**\n     * Specifies the type of `FitR`.\n     * @private\n     */\n    PdfDestinationMode[PdfDestinationMode[\"FitR\"] = 2] = \"FitR\";\n})(PdfDestinationMode || (PdfDestinationMode = {}));\n","import { PointF, RectangleF } from './../drawing/pdf-drawing';\nimport { PdfArray } from './../primitives/pdf-array';\nimport { PdfPageRotateAngle } from './../pages/enum';\nimport { PdfDestinationMode } from './../general/enum';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { PdfName } from './../primitives/pdf-name';\nimport { PdfNumber } from './../primitives/pdf-number';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\n/**\n * `PdfDestination` class represents an anchor in the document\n * where bookmarks or annotations can direct when clicked.\n */\nvar PdfDestination = /** @class */ (function () {\n    function PdfDestination(arg1, arg2) {\n        // Fields\n        /**\n         * Internal variable for accessing fields from `DictionryProperties` class.\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        /**\n         * Type of the `destination`.\n         * @private\n         */\n        this.destinationMode = PdfDestinationMode.Location;\n        /**\n         * `Zoom` factor.\n         * @private\n         * @default 0\n         */\n        this.zoomFactor = 0;\n        /**\n         * `Location` of the destination.\n         * @default new PointF() with 0 ,0 as co-ordinates\n         * @private\n         */\n        this.destinationLocation = new PointF(0, 0);\n        /**\n         * `Bounds` of the destination as RectangleF.\n         * @default RectangleF.Empty\n         * @private\n         */\n        this.bounds = new RectangleF();\n        /**\n         * Pdf primitive representing `this` object.\n         * @private\n         */\n        this.array = new PdfArray();\n        if (typeof arg2 === 'undefined') {\n            var angle = PdfPageRotateAngle.RotateAngle0;\n            this.destinationLocation = new PointF(0, this.destinationLocation.y);\n            this.pdfPage = arg1;\n        }\n        else if (arg2 instanceof PointF) {\n            this.constructor(arg1);\n            this.destinationLocation = arg2;\n        }\n        else {\n            this.constructor(arg1);\n            this.bounds = arg2;\n        }\n    }\n    Object.defineProperty(PdfDestination.prototype, \"zoom\", {\n        // Properties\n        /**\n         * Gets and Sets the `zoom` factor.\n         * @private\n         */\n        get: function () {\n            return this.zoomFactor;\n        },\n        set: function (value) {\n            this.zoomFactor = value;\n            this.initializePrimitive();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDestination.prototype, \"page\", {\n        /**\n         * Gets and Sets the `page` object.\n         * @private\n         */\n        get: function () {\n            return this.pdfPage;\n        },\n        set: function (value) {\n            this.pdfPage = value;\n            this.initializePrimitive();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDestination.prototype, \"mode\", {\n        /**\n         * Gets and Sets the destination `mode`.\n         * @private\n         */\n        get: function () {\n            return this.destinationMode;\n        },\n        set: function (value) {\n            this.destinationMode = value;\n            this.initializePrimitive();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDestination.prototype, \"location\", {\n        /**\n         * Gets and Sets the `location`.\n         * @private\n         */\n        get: function () {\n            return this.destinationLocation;\n        },\n        set: function (value) {\n            this.destinationLocation = value;\n            this.initializePrimitive();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Translates` co-ordinates to PDF co-ordinate system (lower/left).\n     * @private\n     */\n    PdfDestination.prototype.pointToNativePdf = function (page, point) {\n        var section = page.section;\n        return section.pointToNativePdf(page, point);\n    };\n    /**\n     * `In fills` array by correct values.\n     * @private\n     */\n    PdfDestination.prototype.initializePrimitive = function () {\n        this.array.clear();\n        this.array.add(new PdfReferenceHolder(this.pdfPage));\n        switch (this.destinationMode) {\n            case PdfDestinationMode.Location:\n                var simplePage = this.pdfPage;\n                var point = new PointF();\n                point = this.pointToNativePdf(simplePage, this.destinationLocation);\n                this.array.add(new PdfName(this.dictionaryProperties.xyz));\n                this.array.add(new PdfNumber(point.x));\n                this.array.add(new PdfNumber(point.y));\n                this.array.add(new PdfNumber(this.zoomFactor));\n                break;\n            case PdfDestinationMode.FitToPage:\n                this.array.add(new PdfName(this.dictionaryProperties.fit));\n                break;\n        }\n    };\n    Object.defineProperty(PdfDestination.prototype, \"element\", {\n        /**\n         * Gets the `element` representing this object.\n         * @private\n         */\n        get: function () {\n            this.initializePrimitive();\n            return this.array;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfDestination;\n}());\nexport { PdfDestination };\n","/**\n * PdfPageTemplateElement.ts class for EJ2-Pdf\n */\nimport { PdfDockStyle, PdfAlignmentStyle, TemplateType } from './enum';\nimport { PointF, SizeF } from './../drawing/pdf-drawing';\nimport { PdfTemplate } from './../graphics/figures/pdf-template';\nimport { PdfPage } from './pdf-page';\nimport { RectangleF } from './../drawing/pdf-drawing';\n/**\n * Describes a `page template` object that can be used as header/footer, watermark or stamp.\n */\nvar PdfPageTemplateElement = /** @class */ (function () {\n    /* tslint:disable */\n    function PdfPageTemplateElement(arg1, arg2, arg3, arg4, arg5) {\n        if (arg1 instanceof RectangleF && typeof arg2 === 'undefined') {\n            this.constructor(arg1.x, arg1.y, arg1.width, arg1.height);\n        }\n        else if (arg1 instanceof RectangleF && arg2 instanceof PdfPage && typeof arg3 === 'undefined') {\n            this.constructor(arg1.x, arg1.y, arg1.width, arg1.height, arg2);\n        }\n        else if (arg1 instanceof PointF && arg2 instanceof SizeF && typeof arg3 === 'undefined') {\n            this.constructor(arg1.x, arg1.y, arg2.width, arg2.height);\n        }\n        else if (arg1 instanceof PointF && arg2 instanceof SizeF && arg3 instanceof PdfPage && typeof arg4 === 'undefined') {\n            this.constructor(arg1.x, arg1.y, arg2.width, arg2.height, arg3);\n        }\n        else if (arg1 instanceof SizeF && typeof arg2 === 'undefined') {\n            this.constructor(arg1.width, arg1.height);\n        }\n        else if (typeof arg1 === 'number' && typeof arg2 === 'number' && typeof arg3 === 'undefined') {\n            this.constructor(0, 0, arg1, arg2);\n        }\n        else if (typeof arg1 === 'number' && typeof arg2 === 'number' && arg3 instanceof PdfPage && typeof arg4 === 'undefined') {\n            this.constructor(0, 0, arg1, arg2, arg3);\n        }\n        else if (typeof arg1 === 'number' && typeof arg2 === 'number' && typeof arg3 === 'number' && typeof arg4 === 'number' && typeof arg5 === 'undefined') {\n            this.x = arg1;\n            this.y = arg2;\n            this.pdfTemplate = new PdfTemplate(arg3, arg4);\n        }\n        else {\n            this.x = arg1;\n            this.y = arg2;\n            this.pdfTemplate = new PdfTemplate(arg3, arg4);\n            // this.graphics.colorSpace = this.page.document.colorSpace;\n        }\n        /* tslint:enable */\n    }\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"dock\", {\n        // Properties\n        /**\n         * Gets or sets the `dock style` of the page template element.\n         * @private\n         */\n        get: function () {\n            return this.dockStyle;\n        },\n        set: function (value) {\n            // if (this.dockStyle !== value && this.Type === TemplateType.None) {\n            this.dockStyle = value;\n            // Reset alignment.\n            this.resetAlignment();\n            // }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"alignment\", {\n        /**\n         * Gets or sets `alignment` of the page template element.\n         * @private\n         */\n        get: function () {\n            return this.alignmentStyle;\n        },\n        set: function (value) {\n            // if (this.alignmentStyle !== value) {\n            this.setAlignment(value);\n            // }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"foreground\", {\n        /**\n         * Indicates whether the page template is located `in front of the page layers or behind of it`.\n         * @private\n         */\n        get: function () {\n            return this.isForeground;\n        },\n        set: function (value) {\n            // if (this.foreground !== value) {\n            this.isForeground = value;\n            // }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"background\", {\n        /**\n         * Indicates whether the page template is located `behind of the page layers or in front of it`.\n         * @private\n         */\n        get: function () {\n            return !this.isForeground;\n        },\n        set: function (value) {\n            this.isForeground = !value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"location\", {\n        /**\n         * Gets or sets `location` of the page template element.\n         * @private\n         */\n        get: function () {\n            return this.currentLocation;\n        },\n        set: function (value) {\n            if (this.type === TemplateType.None) {\n                this.currentLocation = value;\n            }\n            else {\n                //\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"x\", {\n        /**\n         * Gets or sets `X` co-ordinate of the template element on the page.\n         * @private\n         */\n        get: function () {\n            var value = (typeof this.currentLocation !== 'undefined') ? this.currentLocation.x : 0;\n            return value;\n        },\n        set: function (value) {\n            if (this.type === TemplateType.None) {\n                this.currentLocation.x = value;\n            }\n            else {\n                //\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"y\", {\n        /**\n         * Gets or sets `Y` co-ordinate of the template element on the page.\n         * @private\n         */\n        get: function () {\n            var value = (typeof this.currentLocation !== 'undefined') ? this.currentLocation.y : 0;\n            return value;\n        },\n        set: function (value) {\n            if (this.type === TemplateType.None) {\n                this.currentLocation.y = value;\n            }\n            else {\n                //\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"size\", {\n        /**\n         * Gets or sets `size` of the page template element.\n         * @private\n         */\n        get: function () {\n            return this.template.size;\n        },\n        set: function (value) {\n            if (this.type === TemplateType.None) {\n                this.template.reset(value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"width\", {\n        /**\n         * Gets or sets `width` of the page template element.\n         * @private\n         */\n        get: function () {\n            return this.template.width;\n        },\n        set: function (value) {\n            if (this.template.width !== value && this.type === TemplateType.None) {\n                var size = this.template.size;\n                size.width = value;\n                this.template.reset(size);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"height\", {\n        /**\n         * Gets or sets `height` of the page template element.\n         * @private\n         */\n        get: function () {\n            return this.template.height;\n        },\n        set: function (value) {\n            if (this.template.height !== value && this.type === TemplateType.None) {\n                var size = this.template.size;\n                size.height = value;\n                this.template.reset(size);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"graphics\", {\n        /**\n         * Gets `graphics` context of the page template element.\n         * @private\n         */\n        get: function () {\n            return this.template.graphics;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"template\", {\n        /**\n         * Gets Pdf `template` object.\n         * @private\n         */\n        get: function () {\n            // if (typeof this.pdfTemplate === 'undefined' || this.pdfTemplate == null) {\n            //     this.pdfTemplate = new PdfTemplate(this.size);\n            // }\n            return this.pdfTemplate;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"type\", {\n        /**\n         * Gets or sets `type` of the usage of this page template.\n         * @private\n         */\n        get: function () {\n            return this.templateType;\n        },\n        set: function (value) {\n            this.updateDocking(value);\n            this.templateType = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"bounds\", {\n        /**\n         * Gets or sets `bounds` of the page template.\n         * @public\n         */\n        get: function () {\n            return new RectangleF(new PointF(this.x, this.y), this.size);\n        },\n        set: function (value) {\n            if (this.type === TemplateType.None) {\n                this.location = new PointF(value.x, value.y);\n                this.size = new SizeF(value.width, value.height);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Updates Dock` property if template is used as header/footer.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.updateDocking = function (type) {\n        if (type !== TemplateType.None) {\n            switch (type) {\n                case TemplateType.Top:\n                    this.dock = PdfDockStyle.Top;\n                    break;\n                case TemplateType.Bottom:\n                    this.dock = PdfDockStyle.Bottom;\n                    break;\n                case TemplateType.Left:\n                    this.dock = PdfDockStyle.Left;\n                    break;\n                case TemplateType.Right:\n                    this.dock = PdfDockStyle.Right;\n                    break;\n            }\n            this.resetAlignment();\n        }\n    };\n    /**\n     * `Resets alignment` of the template.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.resetAlignment = function () {\n        this.alignment = PdfAlignmentStyle.None;\n    };\n    /**\n     * `Sets alignment` of the template.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.setAlignment = function (alignment) {\n        if (this.dock === PdfDockStyle.None) {\n            this.alignmentStyle = alignment;\n        }\n        else {\n            // Template is docked and alignment has been changed.\n            var canBeSet = false;\n            switch (this.dock) {\n                case PdfDockStyle.Left:\n                    canBeSet = (alignment === PdfAlignmentStyle.TopLeft || alignment === PdfAlignmentStyle.MiddleLeft ||\n                        alignment === PdfAlignmentStyle.BottomLeft || alignment === PdfAlignmentStyle.None);\n                    break;\n                case PdfDockStyle.Top:\n                    canBeSet = (alignment === PdfAlignmentStyle.TopLeft || alignment === PdfAlignmentStyle.TopCenter ||\n                        alignment === PdfAlignmentStyle.TopRight || alignment === PdfAlignmentStyle.None);\n                    break;\n                case PdfDockStyle.Right:\n                    canBeSet = (alignment === PdfAlignmentStyle.TopRight || alignment === PdfAlignmentStyle.MiddleRight ||\n                        alignment === PdfAlignmentStyle.BottomRight || alignment === PdfAlignmentStyle.None);\n                    break;\n                case PdfDockStyle.Bottom:\n                    canBeSet = (alignment === PdfAlignmentStyle.BottomLeft || alignment === PdfAlignmentStyle.BottomCenter\n                        || alignment === PdfAlignmentStyle.BottomRight || alignment === PdfAlignmentStyle.None);\n                    break;\n                case PdfDockStyle.Fill:\n                    canBeSet = (alignment === PdfAlignmentStyle.MiddleCenter || alignment === PdfAlignmentStyle.None);\n                    break;\n            }\n            if (canBeSet) {\n                this.alignmentStyle = alignment;\n            }\n        }\n    };\n    /**\n     * Draws the template.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.draw = function (layer, document) {\n        var page = layer.page;\n        var bounds = this.calculateBounds(page, document);\n        if (bounds.x === -0) {\n            bounds.x = 0;\n        }\n        layer.graphics.drawPdfTemplate(this.template, new PointF(bounds.x, bounds.y), new SizeF(bounds.width, bounds.height));\n    };\n    /**\n     * Calculates bounds of the page template.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.calculateBounds = function (page, document) {\n        var result = this.bounds;\n        if (this.alignmentStyle !== PdfAlignmentStyle.None) {\n            result = this.getAlignmentBounds(page, document);\n        }\n        else if (this.dockStyle !== PdfDockStyle.None) {\n            result = this.getDockBounds(page, document);\n        }\n        return result;\n    };\n    /**\n     * Calculates bounds according to the alignment.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.getAlignmentBounds = function (page, document) {\n        var result = this.bounds;\n        if (this.type === TemplateType.None) {\n            result = this.getSimpleAlignmentBounds(page, document);\n        }\n        else {\n            result = this.getTemplateAlignmentBounds(page, document);\n        }\n        return result;\n    };\n    /**\n     * Calculates bounds according to the alignment.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.getSimpleAlignmentBounds = function (page, document) {\n        var bounds = this.bounds;\n        var pdfSection = page.section;\n        var actualBounds = pdfSection.getActualBounds(document, page, false);\n        var x = this.x;\n        var y = this.y;\n        switch (this.alignmentStyle) {\n            case PdfAlignmentStyle.TopLeft:\n                x = 0;\n                y = 0;\n                break;\n            case PdfAlignmentStyle.TopCenter:\n                x = (actualBounds.width - this.width) / 2;\n                y = 0;\n                break;\n            case PdfAlignmentStyle.TopRight:\n                x = actualBounds.width - this.width;\n                y = 0;\n                break;\n            case PdfAlignmentStyle.MiddleLeft:\n                x = 0;\n                y = (actualBounds.height - this.height) / 2;\n                break;\n            case PdfAlignmentStyle.MiddleCenter:\n                x = (actualBounds.width - this.width) / 2;\n                y = (actualBounds.height - this.height) / 2;\n                break;\n            case PdfAlignmentStyle.MiddleRight:\n                x = actualBounds.width - this.width;\n                y = (actualBounds.height - this.height) / 2;\n                break;\n            case PdfAlignmentStyle.BottomLeft:\n                x = 0;\n                y = actualBounds.height - this.height;\n                break;\n            case PdfAlignmentStyle.BottomCenter:\n                x = (actualBounds.width - this.width) / 2;\n                y = actualBounds.height - this.height;\n                break;\n            case PdfAlignmentStyle.BottomRight:\n                x = actualBounds.width - this.width;\n                y = actualBounds.height - this.height;\n                break;\n        }\n        bounds.x = x;\n        bounds.y = y;\n        return bounds;\n    };\n    /**\n     * Calculates bounds according to the alignment.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.getTemplateAlignmentBounds = function (page, document) {\n        var result = this.bounds;\n        var section = page.section;\n        var actualBounds = section.getActualBounds(document, page, false);\n        var x = this.x;\n        var y = this.y;\n        switch (this.alignmentStyle) {\n            case PdfAlignmentStyle.TopLeft:\n                if (this.type === TemplateType.Left) {\n                    x = -actualBounds.x;\n                    y = 0;\n                }\n                else if (this.type === TemplateType.Top) {\n                    x = -actualBounds.x;\n                    y = -actualBounds.y;\n                }\n                break;\n            case PdfAlignmentStyle.TopCenter:\n                x = (actualBounds.width - this.width) / 2;\n                y = -actualBounds.y;\n                break;\n            case PdfAlignmentStyle.TopRight:\n                if (this.type === TemplateType.Right) {\n                    x = actualBounds.width + section.getRightIndentWidth(document, page, false) - this.width;\n                    y = 0;\n                }\n                else if (this.type === TemplateType.Top) {\n                    x = actualBounds.width + section.getRightIndentWidth(document, page, false) - this.width;\n                    y = -actualBounds.y;\n                }\n                break;\n            case PdfAlignmentStyle.MiddleLeft:\n                x = -actualBounds.x;\n                y = (actualBounds.height - this.height) / 2;\n                break;\n            case PdfAlignmentStyle.MiddleCenter:\n                x = (actualBounds.width - this.width) / 2;\n                y = (actualBounds.height - this.height) / 2;\n                break;\n            case PdfAlignmentStyle.MiddleRight:\n                x = actualBounds.width + section.getRightIndentWidth(document, page, false) - this.width;\n                y = (actualBounds.height - this.height) / 2;\n                break;\n            case PdfAlignmentStyle.BottomLeft:\n                if (this.type === TemplateType.Left) {\n                    x = -actualBounds.x;\n                    y = actualBounds.height - this.height;\n                }\n                else if (this.type === TemplateType.Bottom) {\n                    x = -actualBounds.x;\n                    y = actualBounds.height + section.getBottomIndentHeight(document, page, false) - this.height;\n                }\n                break;\n            case PdfAlignmentStyle.BottomCenter:\n                x = (actualBounds.width - this.width) / 2;\n                y = actualBounds.height + section.getBottomIndentHeight(document, page, false) - this.height;\n                break;\n            case PdfAlignmentStyle.BottomRight:\n                if (this.type === TemplateType.Right) {\n                    x = actualBounds.width + section.getRightIndentWidth(document, page, false) - this.width;\n                    y = actualBounds.height - this.height;\n                }\n                else if (this.type === TemplateType.Bottom) {\n                    x = actualBounds.width + section.getRightIndentWidth(document, page, false) - this.width;\n                    y = actualBounds.height + section.getBottomIndentHeight(document, page, false) - this.height;\n                }\n                break;\n        }\n        result.x = x;\n        result.y = y;\n        return result;\n    };\n    /**\n     * Calculates bounds according to the docking.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.getDockBounds = function (page, document) {\n        var result = this.bounds;\n        if (this.type === TemplateType.None) {\n            result = this.getSimpleDockBounds(page, document);\n        }\n        else {\n            result = this.getTemplateDockBounds(page, document);\n        }\n        return result;\n    };\n    /**\n     * Calculates bounds according to the docking.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.getSimpleDockBounds = function (page, document) {\n        var result = this.bounds;\n        var section = page.section;\n        var actualBounds = section.getActualBounds(document, page, false);\n        var x = this.x;\n        var y = this.y;\n        var width = this.width;\n        var height = this.height;\n        switch (this.dockStyle) {\n            case PdfDockStyle.Left:\n                x = 0;\n                y = 0;\n                width = this.width;\n                height = actualBounds.height;\n                break;\n            case PdfDockStyle.Top:\n                x = 0;\n                y = 0;\n                width = actualBounds.width;\n                height = this.height;\n                break;\n            case PdfDockStyle.Right:\n                x = actualBounds.width - this.width;\n                y = 0;\n                width = this.width;\n                height = actualBounds.height;\n                break;\n            case PdfDockStyle.Bottom:\n                x = 0;\n                y = actualBounds.height - this.height;\n                width = actualBounds.width;\n                height = this.height;\n                break;\n            case PdfDockStyle.Fill:\n                x = 0;\n                x = 0;\n                width = actualBounds.width;\n                height = actualBounds.height;\n                break;\n        }\n        result = new RectangleF(x, y, width, height);\n        return result;\n    };\n    /**\n     * Calculates template bounds basing on docking if template is a page template.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.getTemplateDockBounds = function (page, document) {\n        var result = this.bounds;\n        var section = page.section;\n        var actualBounds = section.getActualBounds(document, page, false);\n        var actualSize = section.pageSettings.getActualSize();\n        var x = this.x;\n        var y = this.y;\n        var width = this.width;\n        var height = this.height;\n        switch (this.dockStyle) {\n            case PdfDockStyle.Left:\n                x = -actualBounds.x;\n                y = 0;\n                width = this.width;\n                height = actualBounds.height;\n                break;\n            case PdfDockStyle.Top:\n                x = -actualBounds.x;\n                y = -actualBounds.y;\n                width = actualSize.width;\n                height = this.height;\n                if (actualBounds.height < 0) {\n                    y = -actualBounds.y + actualSize.height;\n                }\n                break;\n            case PdfDockStyle.Right:\n                x = actualBounds.width + section.getRightIndentWidth(document, page, false) - this.width;\n                y = 0;\n                width = this.width;\n                height = actualBounds.height;\n                break;\n            case PdfDockStyle.Bottom:\n                x = -actualBounds.x;\n                y = actualBounds.height + section.getBottomIndentHeight(document, page, false) - this.height;\n                width = actualSize.width;\n                height = this.height;\n                if (actualBounds.height < 0) {\n                    y -= actualSize.height;\n                }\n                break;\n            case PdfDockStyle.Fill:\n                x = 0;\n                x = 0;\n                width = actualBounds.width;\n                height = actualBounds.height;\n                break;\n        }\n        result = new RectangleF(x, y, width, height);\n        return result;\n    };\n    return PdfPageTemplateElement;\n}());\nexport { PdfPageTemplateElement };\n","/**\n * PdfBorders.ts class for EJ2-PDF\n */\nimport { PdfPen } from './../../../graphics/pdf-pen';\nimport { PdfDashStyle } from './../../../graphics/enum';\nimport { PdfColor } from './../../../graphics/pdf-color';\n/**\n * `PdfBorders` class used represents the cell border of the PDF grid.\n */\nvar PdfBorders = /** @class */ (function () {\n    // Constructor\n    /**\n     * Create a new instance for `PdfBorders` class.\n     * @private\n     */\n    function PdfBorders() {\n        var defaultBorderPenLeft = new PdfPen(new PdfColor(0, 0, 0));\n        defaultBorderPenLeft.dashStyle = PdfDashStyle.Solid;\n        var defaultBorderPenRight = new PdfPen(new PdfColor(0, 0, 0));\n        defaultBorderPenRight.dashStyle = PdfDashStyle.Solid;\n        var defaultBorderPenTop = new PdfPen(new PdfColor(0, 0, 0));\n        defaultBorderPenTop.dashStyle = PdfDashStyle.Solid;\n        var defaultBorderPenBottom = new PdfPen(new PdfColor(0, 0, 0));\n        defaultBorderPenBottom.dashStyle = PdfDashStyle.Solid;\n        this.leftPen = defaultBorderPenLeft;\n        this.rightPen = defaultBorderPenRight;\n        this.topPen = defaultBorderPenTop;\n        this.bottomPen = defaultBorderPenBottom;\n    }\n    Object.defineProperty(PdfBorders.prototype, \"left\", {\n        // Properties\n        /**\n         * Gets or sets the `Left`.\n         * @private\n         */\n        get: function () {\n            return this.leftPen;\n        },\n        set: function (value) {\n            this.leftPen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBorders.prototype, \"right\", {\n        /**\n         * Gets or sets the `Right`.\n         * @private\n         */\n        get: function () {\n            return this.rightPen;\n        },\n        set: function (value) {\n            this.rightPen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBorders.prototype, \"top\", {\n        /**\n         * Gets or sets the `Top`.\n         * @private\n         */\n        get: function () {\n            return this.topPen;\n        },\n        set: function (value) {\n            this.topPen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBorders.prototype, \"bottom\", {\n        /**\n         * Gets or sets the `Bottom`.\n         * @private\n         */\n        get: function () {\n            return this.bottomPen;\n        },\n        set: function (value) {\n            this.bottomPen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBorders.prototype, \"all\", {\n        /**\n         * sets the `All`.\n         * @private\n         */\n        set: function (value) {\n            this.leftPen = this.rightPen = this.topPen = this.bottomPen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBorders.prototype, \"isAll\", {\n        /**\n         * Gets a value indicating whether this instance `is all`.\n         * @private\n         */\n        get: function () {\n            return ((this.leftPen === this.rightPen) && (this.leftPen === this.topPen) && (this.leftPen === this.bottomPen));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBorders, \"default\", {\n        /**\n         * Gets the `default`.\n         * @private\n         */\n        get: function () {\n            return new PdfBorders();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfBorders;\n}());\nexport { PdfBorders };\nvar PdfPaddings = /** @class */ (function () {\n    function PdfPaddings(left, right, top, bottom) {\n        if (typeof left === 'undefined') {\n            //5.76 and 0 are taken from ms-word default table margins.\n            this.leftPad = this.rightPad = 5.76;\n            //0.5 is set for top and bottom by default.\n            this.bottom = this.topPad = 0.5;\n        }\n        else {\n            this.leftPad = left;\n            this.rightPad = right;\n            this.topPad = top;\n            this.bottomPad = bottom;\n        }\n    }\n    Object.defineProperty(PdfPaddings.prototype, \"left\", {\n        // Properties\n        /**\n         * Gets or sets the `left` value of the edge\n         * @private\n         */\n        get: function () {\n            return this.leftPad;\n        },\n        set: function (value) {\n            this.leftPad = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPaddings.prototype, \"right\", {\n        /**\n         * Gets or sets the `right` value of the edge.\n         * @private\n         */\n        get: function () {\n            return this.rightPad;\n        },\n        set: function (value) {\n            this.rightPad = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPaddings.prototype, \"top\", {\n        /**\n         * Gets or sets the `top` value of the edge\n         * @private\n         */\n        get: function () {\n            return this.topPad;\n        },\n        set: function (value) {\n            this.topPad = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPaddings.prototype, \"bottom\", {\n        /**\n         * Gets or sets the `bottom` value of the edge.\n         * @private\n         */\n        get: function () {\n            return this.bottomPad;\n        },\n        set: function (value) {\n            this.bottomPad = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPaddings.prototype, \"all\", {\n        /**\n         * Sets value to all sides `left,right,top and bottom`.s\n         * @private\n         */\n        set: function (value) {\n            this.leftPad = this.rightPad = this.topPad = this.bottomPad = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfPaddings;\n}());\nexport { PdfPaddings };\n","/**\n * public Enum for `PdfBorderOverlapStyle`.\n * @private\n */\nexport var PdfBorderOverlapStyle;\n(function (PdfBorderOverlapStyle) {\n    /**\n     * Specifies the type of `Overlap`.\n     * @private\n     */\n    PdfBorderOverlapStyle[PdfBorderOverlapStyle[\"Overlap\"] = 0] = \"Overlap\";\n    /**\n     * Specifies the type of `Inside`.\n     * @private\n     */\n    PdfBorderOverlapStyle[PdfBorderOverlapStyle[\"Inside\"] = 1] = \"Inside\";\n})(PdfBorderOverlapStyle || (PdfBorderOverlapStyle = {}));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfBorders, PdfPaddings } from './pdf-borders';\nimport { PdfBorderOverlapStyle } from './../../tables/light-tables/enum';\n/**\n * Base class for the `grid style`,\n */\nvar PdfGridStyleBase = /** @class */ (function () {\n    function PdfGridStyleBase() {\n    }\n    Object.defineProperty(PdfGridStyleBase.prototype, \"backgroundBrush\", {\n        // Properties\n        /**\n         * Gets or sets the `background brush`.\n         * @private\n         */\n        get: function () {\n            return this.gridBackgroundBrush;\n        },\n        set: function (value) {\n            this.gridBackgroundBrush = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridStyleBase.prototype, \"textBrush\", {\n        /**\n         * Gets or sets the `text brush`.\n         * @private\n         */\n        get: function () {\n            return this.gridTextBrush;\n        },\n        set: function (value) {\n            this.gridTextBrush = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridStyleBase.prototype, \"textPen\", {\n        /**\n         * Gets or sets the `text pen`.\n         * @private\n         */\n        get: function () {\n            return this.gridTextPen;\n        },\n        set: function (value) {\n            this.gridTextPen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridStyleBase.prototype, \"font\", {\n        /**\n         * Gets or sets the `font`.\n         * @private\n         */\n        get: function () {\n            return this.gridFont;\n        },\n        set: function (value) {\n            this.gridFont = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfGridStyleBase;\n}());\nexport { PdfGridStyleBase };\n/**\n * `PdfGridStyle` class provides customization of the appearance for the 'PdfGrid'.\n */\nvar PdfGridStyle = /** @class */ (function (_super) {\n    __extends(PdfGridStyle, _super);\n    //constructor\n    /**\n     * Initialize a new instance for `PdfGridStyle` class.\n     * @private\n     */\n    function PdfGridStyle() {\n        var _this = _super.call(this) || this;\n        _this.gridBorderOverlapStyle = PdfBorderOverlapStyle.Overlap;\n        _this.bAllowHorizontalOverflow = false;\n        _this.gridHorizontalOverflowType = PdfHorizontalOverflowType.LastPage;\n        return _this;\n    }\n    Object.defineProperty(PdfGridStyle.prototype, \"cellSpacing\", {\n        //Properties\n        /**\n         * Gets or sets the `cell spacing` of the 'PdfGrid'.\n         * @private\n         */\n        get: function () {\n            if (typeof this.gridCellSpacing === 'undefined') {\n                this.gridCellSpacing = 0;\n            }\n            return this.gridCellSpacing;\n        },\n        set: function (value) {\n            this.gridCellSpacing = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridStyle.prototype, \"horizontalOverflowType\", {\n        /**\n         * Gets or sets the type of the `horizontal overflow` of the 'PdfGrid'.\n         * @private\n         */\n        get: function () {\n            return this.gridHorizontalOverflowType;\n        },\n        set: function (value) {\n            this.gridHorizontalOverflowType = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridStyle.prototype, \"allowHorizontalOverflow\", {\n        /**\n         * Gets or sets a value indicating whether to `allow horizontal overflow`.\n         * @private\n         */\n        get: function () {\n            return this.bAllowHorizontalOverflow;\n        },\n        set: function (value) {\n            this.bAllowHorizontalOverflow = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridStyle.prototype, \"cellPadding\", {\n        /**\n         * Gets or sets the `cell padding`.\n         * @private\n         */\n        get: function () {\n            if (typeof this.gridCellPadding === 'undefined') {\n                this.gridCellPadding = new PdfPaddings();\n            }\n            return this.gridCellPadding;\n        },\n        set: function (value) {\n            if (typeof this.gridCellPadding === 'undefined') {\n                this.gridCellPadding = new PdfPaddings();\n                this.gridCellPadding = value;\n            }\n            else {\n                this.gridCellPadding = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridStyle.prototype, \"borderOverlapStyle\", {\n        /**\n         * Gets or sets the `border overlap style` of the 'PdfGrid'.\n         * @private\n         */\n        get: function () {\n            return this.gridBorderOverlapStyle;\n        },\n        set: function (value) {\n            this.gridBorderOverlapStyle = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfGridStyle;\n}(PdfGridStyleBase));\nexport { PdfGridStyle };\n/**\n * `PdfGridCellStyle` class provides customization of the appearance for the 'PdfGridCell'.\n */\nvar PdfGridCellStyle = /** @class */ (function (_super) {\n    __extends(PdfGridCellStyle, _super);\n    /**\n     * Initializes a new instance of the `PdfGridCellStyle` class.\n     * @private\n     */\n    function PdfGridCellStyle() {\n        var _this = _super.call(this) || this;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.gridCellBorders = PdfBorders.default;\n        return _this;\n    }\n    Object.defineProperty(PdfGridCellStyle.prototype, \"stringFormat\", {\n        //Properties\n        /**\n         * Gets the `string format` of the 'PdfGridCell'.\n         * @private\n         */\n        get: function () {\n            return this.format;\n        },\n        set: function (value) {\n            this.format = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCellStyle.prototype, \"borders\", {\n        /**\n         * Gets or sets the `border` of the 'PdfGridCell'.\n         * @private\n         */\n        get: function () {\n            return this.gridCellBorders;\n        },\n        set: function (value) {\n            this.gridCellBorders = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCellStyle.prototype, \"cellPadding\", {\n        /**\n         * Gets or sets the `cell padding`.\n         * @private\n         */\n        get: function () {\n            return this.gridCellPadding;\n        },\n        set: function (value) {\n            if (this.gridCellPadding == null || typeof this.gridCellPadding === 'undefined') {\n                this.gridCellPadding = new PdfPaddings();\n            }\n            this.gridCellPadding = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfGridCellStyle;\n}(PdfGridStyleBase));\nexport { PdfGridCellStyle };\n/**\n * `PdfGridRowStyle` class provides customization of the appearance for the `PdfGridRow`.\n */\nvar PdfGridRowStyle = /** @class */ (function () {\n    // Constructor\n    /**\n     * Initializes a new instance of the `PdfGridRowStyle` class.\n     * @private\n     */\n    function PdfGridRowStyle() {\n        //\n    }\n    Object.defineProperty(PdfGridRowStyle.prototype, \"backgroundBrush\", {\n        /**\n         * Determine the value of the border is changed or not.\n         * @private\n         */\n        // Properties\n        /**\n         * Gets or sets the `background brush`.\n         * @private\n         */\n        get: function () {\n            return this.gridRowBackgroundBrush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfGridRowStyle.prototype.setBackgroundBrush = function (value) {\n        this.gridRowBackgroundBrush = value;\n        if (typeof this.parent !== 'undefined') {\n            for (var i = 0; i < this.parent.cells.count; i++) {\n                this.parent.cells.getCell(i).style.backgroundBrush = value;\n            }\n        }\n    };\n    Object.defineProperty(PdfGridRowStyle.prototype, \"textBrush\", {\n        /**\n         * Gets or sets the `text brush`.\n         * @private\n         */\n        get: function () {\n            return this.gridRowTextBrush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfGridRowStyle.prototype.setTextBrush = function (value) {\n        this.gridRowTextBrush = value;\n        if (typeof this.parent !== 'undefined') {\n            for (var i = 0; i < this.parent.cells.count; i++) {\n                this.parent.cells.getCell(i).style.textBrush = value;\n            }\n        }\n    };\n    Object.defineProperty(PdfGridRowStyle.prototype, \"textPen\", {\n        /**\n         * Gets or sets the `text pen`.\n         * @private\n         */\n        get: function () {\n            return this.gridRowTextPen;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfGridRowStyle.prototype.setTextPen = function (value) {\n        this.gridRowTextPen = value;\n        if (typeof this.parent !== 'undefined') {\n            for (var i = 0; i < this.parent.cells.count; i++) {\n                this.parent.cells.getCell(i).style.textPen = value;\n            }\n        }\n    };\n    Object.defineProperty(PdfGridRowStyle.prototype, \"font\", {\n        /**\n         * Gets or sets the `font`.\n         * @private\n         */\n        get: function () {\n            return this.gridRowFont;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfGridRowStyle.prototype.setFont = function (value) {\n        this.gridRowFont = value;\n        if (typeof this.parent !== 'undefined') {\n            for (var i = 0; i < this.parent.cells.count; i++) {\n                this.parent.cells.getCell(i).style.font = value;\n            }\n        }\n    };\n    Object.defineProperty(PdfGridRowStyle.prototype, \"border\", {\n        /**\n         * Gets or sets the `border` of the current row.\n         * @private\n         */\n        get: function () {\n            if (typeof this.gridRowBorder === 'undefined') {\n                this.setBorder(new PdfBorders());\n            }\n            return this.gridRowBorder;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfGridRowStyle.prototype.setBorder = function (value) {\n        this.gridRowBorder = value;\n        if (typeof this.parent !== 'undefined') {\n            for (var i = 0; i < this.parent.cells.count; i++) {\n                this.parent.cells.getCell(i).style.borders = value;\n            }\n        }\n    };\n    /**\n     * sets the `parent row` of the current object.\n     * @private\n     */\n    PdfGridRowStyle.prototype.setParent = function (parent) {\n        this.parent = parent;\n    };\n    return PdfGridRowStyle;\n}());\nexport { PdfGridRowStyle };\n/**\n * public Enum for `PdfHorizontalOverflowType`.\n * @private\n */\nexport var PdfHorizontalOverflowType;\n(function (PdfHorizontalOverflowType) {\n    /**\n     * Specifies the type of `NextPage`.\n     * @private\n     */\n    PdfHorizontalOverflowType[PdfHorizontalOverflowType[\"NextPage\"] = 0] = \"NextPage\";\n    /**\n     * Specifies the type of `LastPage`.\n     * @private\n     */\n    PdfHorizontalOverflowType[PdfHorizontalOverflowType[\"LastPage\"] = 1] = \"LastPage\";\n})(PdfHorizontalOverflowType || (PdfHorizontalOverflowType = {}));\n","import { PdfGridCellStyle } from './styles/style';\nimport { PdfStringLayouter } from './../../graphics/fonts/string-layouter';\nimport { PdfDocument } from './../../document/pdf-document';\nimport { PdfStringFormat } from './../../graphics/fonts/pdf-string-format';\nimport { RectangleF, PointF, SizeF } from './../../drawing/pdf-drawing';\nimport { PdfDashStyle, PdfLineCap } from './../../graphics/enum';\nimport { PdfBorderOverlapStyle } from './../tables/light-tables/enum';\nimport { PdfSolidBrush } from './../../graphics/brushes/pdf-solid-brush';\nimport { PdfColor } from './../../graphics/pdf-color';\nimport { PdfImage } from './../../graphics/images/pdf-image';\nimport { PdfBitmap } from './../../graphics/images/pdf-bitmap';\nimport { PdfTextWebLink } from './../../annotations/pdf-text-web-link';\n/**\n * `PdfGridCell` class represents the schema of a cell in a 'PdfGrid'.\n */\nvar PdfGridCell = /** @class */ (function () {\n    function PdfGridCell(row) {\n        /**\n         * `Width` of the cell.\n         * @default 0\n         * @private\n         */\n        this.cellWidth = 0;\n        /**\n         * `Height` of the cell.\n         * @default 0\n         * @private\n         */\n        this.cellHeight = 0;\n        /**\n         * Specifies weather the `cell is drawn`.\n         * @default true\n         * @private\n         */\n        this.finsh = true;\n        /**\n         * The `remaining height` of row span.\n         * @default 0\n         * @private\n         */\n        this.rowSpanRemainingHeight = 0;\n        if (typeof row === 'undefined') {\n            this.gridRowSpan = 1;\n            this.colSpan = 1;\n        }\n        else {\n            this.constructor();\n            this.gridRow = row;\n        }\n    }\n    Object.defineProperty(PdfGridCell.prototype, \"isCellMergeContinue\", {\n        //Properties\n        get: function () {\n            return this.internalIsCellMergeContinue;\n        },\n        set: function (value) {\n            this.internalIsCellMergeContinue = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"isRowMergeContinue\", {\n        get: function () {\n            return this.internalIsRowMergeContinue;\n        },\n        set: function (value) {\n            this.internalIsRowMergeContinue = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"isCellMergeStart\", {\n        get: function () {\n            return this.internalIsCellMergeStart;\n        },\n        set: function (value) {\n            this.internalIsCellMergeStart = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"isRowMergeStart\", {\n        get: function () {\n            return this.internalIsRowMergeStart;\n        },\n        set: function (value) {\n            this.internalIsRowMergeStart = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"remainingString\", {\n        /**\n         * Gets or sets the `remaining string` after the row split between pages.\n         * @private\n         */\n        get: function () {\n            return this.remaining;\n        },\n        set: function (value) {\n            this.remaining = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"stringFormat\", {\n        /**\n         * Gets or sets the `string format`.\n         * @private\n         */\n        get: function () {\n            if (this.format == null) {\n                this.format = new PdfStringFormat();\n            }\n            return this.format;\n        },\n        set: function (value) {\n            this.format = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"row\", {\n        /**\n         * Gets or sets the parent `row`.\n         * @private\n         */\n        get: function () {\n            return this.gridRow;\n        },\n        set: function (value) {\n            this.gridRow = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"value\", {\n        /**\n         * Gets or sets the `value` of the cell.\n         * @private\n         */\n        get: function () {\n            return this.objectValue;\n        },\n        set: function (value) {\n            this.objectValue = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"rowSpan\", {\n        /**\n         * Gets or sets a value that indicates the total number of rows that cell `spans` within a PdfGrid.\n         * @private\n         */\n        get: function () {\n            return this.gridRowSpan;\n        },\n        set: function (value) {\n            if (value < 1) {\n                throw new Error('ArgumentException : Invalid span specified, must be greater than or equal to 1');\n            }\n            else {\n                this.gridRowSpan = value;\n                this.row.rowSpanExists = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"style\", {\n        /**\n         * Gets or sets the cell `style`.\n         * @private\n         */\n        get: function () {\n            if (this.cellStyle == null) {\n                this.cellStyle = new PdfGridCellStyle();\n            }\n            return this.cellStyle;\n        },\n        set: function (value) {\n            this.cellStyle = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"height\", {\n        /**\n         * Gets the `height` of the PdfGrid cell.[Read-Only].\n         * @private\n         */\n        get: function () {\n            if (this.cellHeight === 0) {\n                this.cellHeight = this.measureHeight();\n            }\n            return this.cellHeight;\n        },\n        set: function (value) {\n            this.cellHeight = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"columnSpan\", {\n        /**\n         * Gets or sets a value that indicates the total number of columns that cell `spans` within a PdfGrid.\n         * @private\n         */\n        get: function () {\n            return this.colSpan;\n        },\n        set: function (value) {\n            if (value < 1) {\n                throw Error('Invalid span specified, must be greater than or equal to 1');\n            }\n            else {\n                this.colSpan = value;\n                this.row.columnSpanExists = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"width\", {\n        /**\n         * Gets the `width` of the PdfGrid cell.[Read-Only].\n         * @private\n         */\n        get: function () {\n            if (this.cellWidth === 0 || this.row.grid.isComplete) {\n                this.cellWidth = this.measureWidth();\n            }\n            return this.cellWidth;\n        },\n        set: function (value) {\n            this.cellWidth = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Implementation\n    /**\n     * `Calculates the width`.\n     * @private\n     */\n    PdfGridCell.prototype.measureWidth = function () {\n        // .. Calculate the cell text width.\n        // .....Add border widths, cell spacings and paddings to the width.\n        var width = 0;\n        var layouter = new PdfStringLayouter();\n        if (typeof this.objectValue === 'string') {\n            /* tslint:disable */\n            var slr = layouter.layout(this.objectValue, this.getTextFont(), this.stringFormat, new SizeF(0, 0), false, new SizeF(0, 0));\n            width += slr.actualSize.width;\n            width += (this.style.borders.left.width + this.style.borders.right.width) * 2;\n        }\n        else if (this.objectValue instanceof PdfImage || this.objectValue instanceof PdfBitmap) {\n            width += this.objectValue.width;\n        }\n        else if (this.objectValue instanceof PdfTextWebLink) {\n            var webLink = this.objectValue;\n            var result = layouter.layout(webLink.text, webLink.font, webLink.stringFormat, new SizeF(0, 0), false, new SizeF(0, 0));\n            /* tslint:enable */\n            width += result.actualSize.width;\n            width += (this.style.borders.left.width + this.style.borders.right.width) * 2;\n        }\n        width += (this.row.grid.style.cellPadding.left + this.row.grid.style.cellPadding.right);\n        width += this.row.grid.style.cellSpacing;\n        return width;\n    };\n    /**\n     * Draw the `cell background`.\n     * @private\n     */\n    PdfGridCell.prototype.drawCellBackground = function (graphics, bounds) {\n        var backgroundBrush = this.getBackgroundBrush();\n        if (backgroundBrush != null) {\n            graphics.drawRectangle(backgroundBrush, bounds.x, bounds.y, bounds.width, bounds.height);\n        }\n    };\n    /**\n     * `Adjusts the text layout area`.\n     * @private\n     */\n    /* tslint:disable */\n    PdfGridCell.prototype.adjustContentLayoutArea = function (bounds) {\n        //Add Padding value to its Cell Bounds\n        var returnBounds = new RectangleF(bounds.x, bounds.y, bounds.width, bounds.height);\n        if (typeof this.style.cellPadding === 'undefined' || this.style.cellPadding == null) {\n            returnBounds.x += this.gridRow.grid.style.cellPadding.left + this.cellStyle.borders.left.width;\n            returnBounds.y += this.gridRow.grid.style.cellPadding.top + this.cellStyle.borders.top.width;\n            returnBounds.width -= (this.gridRow.grid.style.cellPadding.right + this.gridRow.grid.style.cellPadding.left);\n            returnBounds.width -= (this.cellStyle.borders.left.width + this.cellStyle.borders.right.width);\n            returnBounds.height -= (this.gridRow.grid.style.cellPadding.bottom + this.gridRow.grid.style.cellPadding.top);\n            returnBounds.height -= (this.cellStyle.borders.top.width + this.cellStyle.borders.bottom.width);\n            if (this.rowSpan === 1) {\n                returnBounds.width -= (this.style.borders.left.width);\n            }\n        }\n        else {\n            returnBounds.x += this.style.cellPadding.left + this.cellStyle.borders.left.width;\n            returnBounds.y += this.style.cellPadding.top + this.cellStyle.borders.top.width;\n            returnBounds.width -= (this.style.cellPadding.right + this.style.cellPadding.left);\n            returnBounds.width -= (this.cellStyle.borders.left.width + this.cellStyle.borders.right.width);\n            returnBounds.height -= (this.style.cellPadding.bottom + this.style.cellPadding.top);\n            returnBounds.height -= (this.cellStyle.borders.top.width + this.cellStyle.borders.bottom.width);\n            if (this.rowSpan === 1) {\n                returnBounds.width -= (this.style.borders.left.width);\n            }\n        }\n        return returnBounds;\n    };\n    /**\n     * `Draws` the specified graphics.\n     * @private\n     */\n    PdfGridCell.prototype.draw = function (graphics, bounds, cancelSubsequentSpans) {\n        var isrowbreak = false;\n        var result = null;\n        if (this.internalIsCellMergeContinue || this.internalIsRowMergeContinue) {\n            if (this.internalIsCellMergeContinue && this.row.grid.style.allowHorizontalOverflow) {\n                if ((this.row.rowOverflowIndex > 0 && (this.row.cells.indexOf(this) != this.row.rowOverflowIndex + 1)) || (this.row.rowOverflowIndex == 0 && this.internalIsCellMergeContinue)) {\n                    return result;\n                }\n            }\n            else {\n                return result;\n            }\n        }\n        //Adjust bounds with Row and Column Spacing\n        bounds = this.adjustOuterLayoutArea(bounds, graphics);\n        var textPen = this.getTextPen();\n        var textBrush = this.getTextBrush();\n        if (typeof textPen === 'undefined' && typeof textBrush === 'undefined') {\n            textBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n        }\n        var font = this.getTextFont();\n        var strFormat = this.getStringFormat();\n        var innerLayoutArea = this.adjustContentLayoutArea(bounds);\n        this.drawCellBackground(graphics, bounds);\n        if (typeof this.objectValue === 'string' || typeof this.remaining === 'string') {\n            var temp = void 0;\n            temp = this.remaining === '' ? this.remaining : this.objectValue;\n            graphics.drawString(temp, font, textPen, textBrush, innerLayoutArea.x, innerLayoutArea.y, innerLayoutArea.width, innerLayoutArea.height, strFormat);\n            result = graphics.stringLayoutResult;\n        }\n        else if (this.objectValue instanceof PdfImage || this.objectValue instanceof PdfBitmap) {\n            var imageBounds = void 0;\n            if (this.objectValue.width <= innerLayoutArea.width) {\n                imageBounds = new RectangleF(innerLayoutArea.x, innerLayoutArea.y, this.objectValue.width, innerLayoutArea.height);\n            }\n            else {\n                imageBounds = innerLayoutArea;\n            }\n            graphics.drawImage(this.objectValue, imageBounds.x, imageBounds.y, imageBounds.width, imageBounds.height);\n        }\n        else if (this.objectValue instanceof PdfTextWebLink) {\n            this.objectValue.draw(graphics.currentPage, innerLayoutArea);\n        }\n        if (this.style.borders != null) {\n            this.drawCellBorders(graphics, bounds);\n        }\n        return result;\n    };\n    /* tslint:enable */\n    /**\n     * Draws the `cell border` constructed by drawing lines.\n     * @private\n     */\n    PdfGridCell.prototype.drawCellBorders = function (graphics, bounds) {\n        if (this.row.grid.style.borderOverlapStyle === PdfBorderOverlapStyle.Inside) {\n            bounds.x += this.style.borders.left.width;\n            bounds.y += this.style.borders.top.width;\n            bounds.width -= this.style.borders.right.width;\n            bounds.height -= this.style.borders.bottom.width;\n        }\n        var p1 = new PointF(bounds.x, bounds.y + bounds.height);\n        var p2 = new PointF(bounds.x, bounds.y);\n        var pen = this.cellStyle.borders.left;\n        if (this.cellStyle.borders.left.dashStyle === PdfDashStyle.Solid) {\n            pen.lineCap = PdfLineCap.Square;\n        }\n        // SetTransparency(ref graphics, pen);\n        graphics.drawLine(pen, p1, p2);\n        p1 = new PointF(bounds.x + bounds.width, bounds.y);\n        p2 = new PointF(bounds.x + bounds.width, bounds.y + bounds.height);\n        pen = this.cellStyle.borders.right;\n        if ((bounds.x + bounds.width) > (graphics.clientSize.width - (pen.width / 2))) {\n            p1 = new PointF(graphics.clientSize.width - (pen.width / 2), bounds.y);\n            p2 = new PointF(graphics.clientSize.width - (pen.width / 2), bounds.y + bounds.height);\n        }\n        if (this.cellStyle.borders.right.dashStyle === PdfDashStyle.Solid) {\n            pen.lineCap = PdfLineCap.Square;\n        }\n        graphics.drawLine(pen, p1, p2);\n        p1 = new PointF(bounds.x, bounds.y);\n        p2 = new PointF(bounds.x + bounds.width, bounds.y);\n        pen = this.cellStyle.borders.top;\n        if (this.cellStyle.borders.top.dashStyle === PdfDashStyle.Solid) {\n            pen.lineCap = PdfLineCap.Square;\n        }\n        graphics.drawLine(pen, p1, p2);\n        p1 = new PointF(bounds.x + bounds.width, bounds.y + bounds.height);\n        p2 = new PointF(bounds.x, bounds.y + bounds.height);\n        pen = this.cellStyle.borders.bottom;\n        // if ((bounds.y + bounds.height) > (graphics.clientSize.height - (pen.width / 2))) {\n        //     p1 = new PointF((bounds.x + bounds.width), (graphics.clientSize.height - (pen.width / 2)));\n        //     p2 = new PointF(bounds.x, (graphics.clientSize.height - (pen.width / 2)));\n        // }\n        if (this.cellStyle.borders.bottom.dashStyle === PdfDashStyle.Solid) {\n            pen.lineCap = PdfLineCap.Square;\n        }\n        graphics.drawLine(pen, p1, p2);\n    };\n    /**\n     * `Adjusts the outer layout area`.\n     * @private\n     */\n    /* tslint:disable */\n    PdfGridCell.prototype.adjustOuterLayoutArea = function (bounds, g) {\n        var isHeader = false;\n        var cellSpacing = this.row.grid.style.cellSpacing;\n        if (cellSpacing > 0) {\n            bounds = new RectangleF(bounds.x + cellSpacing, bounds.y + cellSpacing, bounds.width - cellSpacing, bounds.height - cellSpacing);\n        }\n        var currentColIndex = this.row.cells.indexOf(this);\n        if (this.columnSpan > 1) {\n            var span = this.columnSpan;\n            var totalWidth = 0;\n            for (var i = currentColIndex; i < currentColIndex + span; i++) {\n                if (this.row.grid.style.allowHorizontalOverflow) {\n                    var width = void 0;\n                    var compWidth = this.row.grid.size.width < g.clientSize.width ? this.row.grid.size.width : g.clientSize.width;\n                    if (this.row.grid.size.width > g.clientSize.width) {\n                        width = bounds.x + totalWidth + this.row.grid.columns.getColumn(i).width;\n                    }\n                    else {\n                        width = totalWidth + this.row.grid.columns.getColumn(i).width;\n                    }\n                    if (width > compWidth) {\n                        break;\n                    }\n                }\n                totalWidth += this.row.grid.columns.getColumn(i).width;\n            }\n            totalWidth -= this.row.grid.style.cellSpacing;\n            bounds.width = totalWidth;\n        }\n        if (this.rowSpan > 1 || this.row.rowSpanExists) {\n            var span = this.rowSpan;\n            var currentRowIndex = this.row.grid.rows.rowCollection.indexOf(this.row);\n            if (currentRowIndex == -1) {\n                currentRowIndex = this.row.grid.headers.indexOf(this.row);\n                if (currentRowIndex != -1) {\n                    isHeader = true;\n                }\n            }\n            var totalHeight = 0;\n            var max = 0;\n            for (var i = currentRowIndex; i < currentRowIndex + span; i++) {\n                totalHeight += (isHeader ? this.row.grid.headers.getHeader(i).height : this.row.grid.rows.getRow(i).height);\n                var row = this.row.grid.rows.getRow(i);\n                var rowIndex = this.row.grid.rows.rowCollection.indexOf(row);\n            }\n            var cellIndex = this.row.cells.indexOf(this);\n            totalHeight -= this.row.grid.style.cellSpacing;\n            // if (this.row.cells.getCell(cellIndex).height > totalHeight && (!this.row.grid.rows.getRow((currentRowIndex + span) - 1).isRowHeightSet)) {\n            //     this.row.grid.rows.getRow((currentRowIndex + span) - 1).cells.getCell(cellIndex).rowSpanRemainingHeight = this.row.cells.getCell(cellIndex).height - totalHeight;\n            //     totalHeight = this.row.cells.getCell(cellIndex).height;\n            //     bounds.height = totalHeight;\n            // } else {\n            bounds.height = totalHeight;\n            // }\n            if (!this.row.rowMergeComplete) {\n                bounds.height = totalHeight;\n            }\n        }\n        return bounds;\n    };\n    /* tslint:enable */\n    /**\n     * Gets the `text font`.\n     * @private\n     */\n    PdfGridCell.prototype.getTextFont = function () {\n        if (typeof this.style.font !== 'undefined' && this.style.font != null) {\n            return this.style.font;\n        }\n        else if (typeof this.row.style.font !== 'undefined' && this.row.style.font != null) {\n            return this.row.style.font;\n        }\n        else if (typeof this.row.grid.style.font !== 'undefined' && this.row.grid.style.font != null) {\n            return this.row.grid.style.font;\n        }\n        else {\n            return PdfDocument.defaultFont;\n        }\n    };\n    /**\n     * Gets the `text brush`.\n     * @private\n     */\n    PdfGridCell.prototype.getTextBrush = function () {\n        if (typeof this.style.textBrush !== 'undefined' && this.style.textBrush != null) {\n            return this.style.textBrush;\n        }\n        else if (typeof this.row.style.textBrush !== 'undefined' && this.row.style.textBrush != null) {\n            return this.row.style.textBrush;\n        }\n        else {\n            return this.row.grid.style.textBrush;\n        }\n    };\n    /**\n     * Gets the `text pen`.\n     * @private\n     */\n    PdfGridCell.prototype.getTextPen = function () {\n        if (typeof this.style.textPen !== 'undefined' && this.style.textPen != null) {\n            return this.style.textPen;\n        }\n        else if (typeof this.row.style.textPen !== 'undefined' && this.row.style.textPen != null) {\n            return this.row.style.textPen;\n        }\n        else {\n            return this.row.grid.style.textPen;\n        }\n    };\n    /**\n     * Gets the `background brush`.\n     * @private\n     */\n    PdfGridCell.prototype.getBackgroundBrush = function () {\n        if (typeof this.style.backgroundBrush !== 'undefined' && this.style.backgroundBrush != null) {\n            return this.style.backgroundBrush;\n        }\n        else if (typeof this.row.style.backgroundBrush !== 'undefined' && this.row.style.backgroundBrush != null) {\n            return this.row.style.backgroundBrush;\n        }\n        else {\n            return this.row.grid.style.backgroundBrush;\n        }\n    };\n    /**\n     * Gets the current `StringFormat`.\n     * @private\n     */\n    PdfGridCell.prototype.getStringFormat = function () {\n        if (typeof this.style.stringFormat !== 'undefined' && this.style.stringFormat != null) {\n            return this.style.stringFormat;\n        }\n        else {\n            return this.stringFormat;\n        }\n    };\n    /**\n     * Calculates the `height`.\n     * @private\n     */\n    PdfGridCell.prototype.measureHeight = function () {\n        // .. Calculate the cell text height.\n        // .....Add border widths, cell spacings and paddings to the height.\n        var width = this.calculateWidth();\n        // //check whether the Current PdfGridCell has padding\n        if (this.style.cellPadding == null || typeof this.style.cellPadding === 'undefined') {\n            width -= (this.gridRow.grid.style.cellPadding.right + this.gridRow.grid.style.cellPadding.left);\n            width -= (this.style.borders.left.width + this.style.borders.right.width);\n        }\n        else {\n            width -= (this.style.cellPadding.right + this.style.cellPadding.left);\n            width -= (this.style.borders.left.width + this.style.borders.right.width);\n        }\n        var height = 0;\n        var layouter = new PdfStringLayouter();\n        if (typeof this.objectValue === 'string' || typeof this.remainingString === 'string') {\n            var currentValue = this.objectValue;\n            /* tslint:disable */\n            var slr = layouter.layout(currentValue, this.getTextFont(), this.stringFormat, new SizeF(width, 0), false, new SizeF(0, 0));\n            /* tslint:enable */\n            height += slr.actualSize.height;\n        }\n        else if (this.objectValue instanceof PdfImage || this.objectValue instanceof PdfBitmap) {\n            height += this.objectValue.height;\n        }\n        else if (this.objectValue instanceof PdfTextWebLink) {\n            var webLink = this.objectValue;\n            /* tslint:disable */\n            var slr = layouter.layout(webLink.text, webLink.font, webLink.stringFormat, new SizeF(width, 0), false, new SizeF(0, 0));\n            /* tslint:enable */\n            height += slr.actualSize.height;\n        }\n        height += (this.style.borders.top.width + this.style.borders.bottom.width) * 2;\n        //Add padding top and bottom value to height\n        if (this.style.cellPadding == null || typeof this.style.cellPadding === 'undefined') {\n            height += (this.row.grid.style.cellPadding.top + this.row.grid.style.cellPadding.bottom);\n        }\n        else {\n            height += (this.style.cellPadding.top + this.style.cellPadding.bottom);\n        }\n        height += this.row.grid.style.cellSpacing;\n        return height;\n    };\n    /**\n     * return the calculated `width` of the cell.\n     * @private\n     */\n    PdfGridCell.prototype.calculateWidth = function () {\n        var cellIndex = this.row.cells.indexOf(this);\n        var columnSpan = this.columnSpan;\n        var width = 0;\n        for (var i = 0; i < columnSpan; i++) {\n            width += this.row.grid.columns.getColumn(cellIndex + i).width;\n        }\n        return width;\n    };\n    return PdfGridCell;\n}());\nexport { PdfGridCell };\n/**\n * `PdfGridCellCollection` class provides access to an ordered,\n * strongly typed collection of 'PdfGridCell' objects.\n * @private\n */\nvar PdfGridCellCollection = /** @class */ (function () {\n    //Constructor\n    /**\n     * Initializes a new instance of the `PdfGridCellCollection` class with the row.\n     * @private\n     */\n    function PdfGridCellCollection(row) {\n        /**\n         * @hidden\n         * @private\n         */\n        this.cells = [];\n        this.gridRow = row;\n    }\n    //Properties\n    /**\n     * Gets the current `cell`.\n     * @private\n     */\n    PdfGridCellCollection.prototype.getCell = function (index) {\n        if (index < 0 || index >= this.count) {\n            throw new Error('IndexOutOfRangeException');\n        }\n        return this.cells[index];\n    };\n    Object.defineProperty(PdfGridCellCollection.prototype, \"count\", {\n        /**\n         * Gets the cells `count`.[Read-Only].\n         * @private\n         */\n        get: function () {\n            return this.cells.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfGridCellCollection.prototype.add = function (cell) {\n        if (typeof cell === 'undefined') {\n            var tempcell = new PdfGridCell();\n            this.add(tempcell);\n            return cell;\n        }\n        else {\n            cell.row = this.gridRow;\n            this.cells.push(cell);\n        }\n    };\n    /**\n     * Returns the `index of` a particular cell in the collection.\n     * @private\n     */\n    PdfGridCellCollection.prototype.indexOf = function (cell) {\n        return this.cells.indexOf(cell);\n    };\n    return PdfGridCellCollection;\n}());\nexport { PdfGridCellCollection };\n","import { PdfGridCell } from './pdf-grid-cell';\nimport { PdfStringFormat } from './../../graphics/fonts/pdf-string-format';\n/**\n * `PdfGridColumn` class represents the schema of a column in a 'PdfGrid'.\n */\nvar PdfGridColumn = /** @class */ (function () {\n    //Constructors\n    /**\n     * Initializes a new instance of the `PdfGridColumn` class with the parent grid.\n     * @private\n     */\n    function PdfGridColumn(grid) {\n        /**\n         * The `width` of the column.\n         * @default 0\n         * @private\n         */\n        this.columnWidth = 0;\n        this.grid = grid;\n    }\n    Object.defineProperty(PdfGridColumn.prototype, \"width\", {\n        /**\n         * Gets or sets the `width` of the 'PdfGridColumn'.\n         * @private\n         */\n        get: function () {\n            return this.columnWidth;\n        },\n        set: function (value) {\n            this.isCustomWidth = true;\n            this.columnWidth = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridColumn.prototype, \"format\", {\n        /**\n         * Gets or sets the information about the text `formatting`.\n         * @private\n         */\n        get: function () {\n            if (this.stringFormat == null) {\n                this.stringFormat = new PdfStringFormat(); //GetDefaultFormat();\n            }\n            return this.stringFormat;\n        },\n        set: function (value) {\n            this.stringFormat = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfGridColumn;\n}());\nexport { PdfGridColumn };\n/**\n * `PdfGridColumnCollection` class provides access to an ordered,\n * strongly typed collection of 'PdfGridColumn' objects.\n * @private\n */\nvar PdfGridColumnCollection = /** @class */ (function () {\n    //properties\n    //Constructors\n    /**\n     * Initializes a new instance of the `PdfGridColumnCollection` class with the parent grid.\n     * @private\n     */\n    function PdfGridColumnCollection(grid) {\n        /**\n         * @hidden\n         * @private\n         */\n        this.internalColumns = [];\n        /**\n         * @hidden\n         * @private\n         */\n        this.columnWidth = 0;\n        this.grid = grid;\n        this.internalColumns = [];\n    }\n    //Iplementation\n    /**\n     * `Add` a new column to the 'PdfGrid'.\n     * @private\n     */\n    PdfGridColumnCollection.prototype.add = function (count) {\n        // public add(column : PdfGridColumn) : void\n        // public add(arg : number|PdfGridColumn) : void {\n        // if (typeof arg === 'number') {\n        for (var i = 0; i < count; i++) {\n            this.internalColumns.push(new PdfGridColumn(this.grid));\n            for (var index = 0; index < this.grid.rows.count; index++) {\n                var row = this.grid.rows.getRow(index);\n                var cell = new PdfGridCell();\n                cell.value = '';\n                row.cells.add(cell);\n            }\n        }\n        // } else {\n        //     let column : PdfGridColumn = new PdfGridColumn(this.grid);\n        //     this.columns.push(column);\n        //     return column;\n        // }\n    };\n    Object.defineProperty(PdfGridColumnCollection.prototype, \"count\", {\n        /**\n         * Gets the `number of columns` in the 'PdfGrid'.[Read-Only].\n         * @private\n         */\n        get: function () {\n            return this.internalColumns.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridColumnCollection.prototype, \"width\", {\n        /**\n         * Gets the `widths`.\n         * @private\n         */\n        get: function () {\n            if (this.columnWidth === 0) {\n                this.columnWidth = this.measureColumnsWidth();\n            }\n            if (this.grid.initialWidth !== 0 && this.columnWidth !== this.grid.initialWidth && !this.grid.style.allowHorizontalOverflow) {\n                this.columnWidth = this.grid.initialWidth;\n                this.grid.isPageWidth = true;\n            }\n            return this.columnWidth;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridColumnCollection.prototype, \"columns\", {\n        /**\n         * Gets the `array of PdfGridColumn`.[Read-Only]\n         * @private\n         */\n        get: function () {\n            return this.internalColumns;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the `PdfGridColumn` from the specified index.[Read-Only]\n     * @private\n     */\n    PdfGridColumnCollection.prototype.getColumn = function (index) {\n        if (index >= 0 && index <= this.columns.length) {\n            return this.columns[index];\n        }\n        else {\n            throw Error('can not get the column from the index: ' + index);\n        }\n    };\n    //Implementation\n    /**\n     * `Calculates the column widths`.\n     * @private\n     */\n    PdfGridColumnCollection.prototype.measureColumnsWidth = function () {\n        var totalWidth = 0;\n        // this.m_grid.measureColumnsWidth();\n        for (var i = 0, count = this.internalColumns.length; i < count; i++) {\n            totalWidth += this.internalColumns[i].width;\n        }\n        return totalWidth;\n    };\n    /**\n     * Gets the `widths of the columns`.\n     * @private\n     */\n    PdfGridColumnCollection.prototype.getDefaultWidths = function (totalWidth) {\n        var widths = [];\n        var summ = 0.0;\n        var subFactor = this.count;\n        for (var i = 0; i < this.count; i++) {\n            if (this.grid.isPageWidth && totalWidth >= 0 && !this.internalColumns[i].isCustomWidth) {\n                this.internalColumns[i].width = 0;\n            }\n            else {\n                widths[i] = this.internalColumns[i].width;\n                if (this.internalColumns[i].width > 0 && this.internalColumns[i].isCustomWidth) {\n                    totalWidth -= this.internalColumns[i].width;\n                    subFactor--;\n                }\n                else {\n                    widths[i] = 0;\n                }\n            }\n        }\n        for (var i = 0; i < this.count; i++) {\n            var width = totalWidth / subFactor;\n            if (widths[i] <= 0) {\n                widths[i] = width;\n            }\n        }\n        return widths;\n    };\n    return PdfGridColumnCollection;\n}());\nexport { PdfGridColumnCollection };\n","import { PdfGridCell, PdfGridCellCollection } from './pdf-grid-cell';\nimport { PdfGridRowStyle } from './styles/style';\n/**\n * `PdfGridRow` class provides customization of the settings for the particular row.\n */\nvar PdfGridRow = /** @class */ (function () {\n    //Constructor\n    /**\n     * Initializes a new instance of the `PdfGridRow` class with the parent grid.\n     * @private\n     */\n    function PdfGridRow(grid) {\n        /**\n         * Stores the index of the overflowing row.\n         * @private\n         */\n        this.gridRowOverflowIndex = 0;\n        /**\n         * Check whether the row height `is set explicitly`.\n         * @default false\n         * @private\n         */\n        this.isRowHeightSet = false;\n        /**\n         * Check weather the row merge `is completed` or not.\n         * @default true\n         * @private\n         */\n        this.isRowMergeComplete = true;\n        this.pdfGrid = grid;\n    }\n    Object.defineProperty(PdfGridRow.prototype, \"rowSpanExists\", {\n        //Properties\n        /**\n         * Gets or sets a value indicating [`row span exists`].\n         * @private\n         */\n        get: function () {\n            return this.bRowSpanExists;\n        },\n        set: function (value) {\n            this.bRowSpanExists = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"cells\", {\n        /**\n         * Gets the `cells` from the selected row.[Read-Only].\n         * @private\n         */\n        get: function () {\n            if (this.gridCells == null) {\n                this.gridCells = new PdfGridCellCollection(this);\n            }\n            return this.gridCells;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"grid\", {\n        /**\n         * Gets or sets the parent `grid`.\n         * @private\n         */\n        get: function () {\n            return this.pdfGrid;\n        },\n        set: function (value) {\n            this.pdfGrid = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"style\", {\n        /**\n         * Gets or sets the row `style`.\n         * @private\n         */\n        get: function () {\n            if (typeof this.rowStyle === 'undefined') {\n                this.rowStyle = new PdfGridRowStyle();\n                this.rowStyle.setParent(this);\n            }\n            return this.rowStyle;\n        },\n        set: function (value) {\n            this.rowStyle = value;\n            for (var i = 0; i < this.cells.count; i++) {\n                this.cells.getCell(i).style.borders = value.border;\n                if (typeof value.font !== 'undefined') {\n                    this.cells.getCell(i).style.font = value.font;\n                }\n                if (typeof value.backgroundBrush !== 'undefined') {\n                    this.cells.getCell(i).style.backgroundBrush = value.backgroundBrush;\n                }\n                if (typeof value.textBrush !== 'undefined') {\n                    this.cells.getCell(i).style.textBrush = value.textBrush;\n                }\n                if (typeof value.textPen !== 'undefined') {\n                    this.cells.getCell(i).style.textPen = value.textPen;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"rowBreakHeight\", {\n        /**\n         * `Height` of the row yet to be drawn after split.\n         * @private\n         */\n        get: function () {\n            if (typeof this.gridRowBreakHeight === 'undefined') {\n                this.gridRowBreakHeight = 0;\n            }\n            return this.gridRowBreakHeight;\n        },\n        set: function (value) {\n            this.gridRowBreakHeight = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"rowOverflowIndex\", {\n        get: function () {\n            return this.gridRowOverflowIndex;\n        },\n        set: function (value) {\n            this.gridRowOverflowIndex = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"height\", {\n        /**\n         * Gets or sets the `height` of the row.\n         * @private\n         */\n        get: function () {\n            if (!this.isRowHeightSet) {\n                this.rowHeight = this.measureHeight();\n            }\n            return this.rowHeight;\n        },\n        set: function (value) {\n            this.rowHeight = value;\n            this.isRowHeightSet = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"columnSpanExists\", {\n        /**\n         * Gets or sets a value indicating [`column span exists`].\n         * @private\n         */\n        get: function () {\n            return this.bColumnSpanExists;\n        },\n        set: function (value) {\n            this.bColumnSpanExists = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"rowMergeComplete\", {\n        /**\n         * Check whether the Row `has row span or row merge continue`.\n         * @private\n         */\n        get: function () {\n            return this.isRowMergeComplete;\n        },\n        set: function (value) {\n            this.isRowMergeComplete = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"rowIndex\", {\n        /**\n         * Returns `index` of the row.\n         * @private\n         */\n        get: function () {\n            return this.grid.rows.rowCollection.indexOf(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Implementation\n    /**\n     * `Calculates the height`.\n     * @private\n     */\n    PdfGridRow.prototype.measureHeight = function () {\n        var rowSpanRemainingHeight = 0;\n        var rowHeight;\n        var maxHeight = 0;\n        // if(this.cells.getCell(0).RowSpan > 1) {\n        //     rowHeight=0;\n        // } else {\n        rowHeight = this.cells.getCell(0).height;\n        // }\n        for (var i = 0; i < this.cells.count; i++) {\n            var cell = this.cells.getCell(i);\n            //get the maximum rowspan remaining height.\n            if (cell.rowSpanRemainingHeight > rowSpanRemainingHeight) {\n                rowSpanRemainingHeight = cell.rowSpanRemainingHeight;\n            }\n            //skip the cell if row spanned.\n            // if (cell.IsRowMergeContinue)\n            //     continue; \n            // if (!cell.IsRowMergeContinue)\n            this.rowMergeComplete = false;\n            if (cell.rowSpan > 1) {\n                if (maxHeight < cell.height) {\n                    maxHeight = cell.height;\n                }\n                continue;\n            }\n            rowHeight = Math.max(rowHeight, cell.height);\n        }\n        if (rowHeight === 0) {\n            rowHeight = maxHeight;\n        }\n        else if (rowSpanRemainingHeight > 0) {\n            rowHeight += rowSpanRemainingHeight;\n        }\n        return rowHeight;\n    };\n    return PdfGridRow;\n}());\nexport { PdfGridRow };\n/**\n * `PdfGridRowCollection` class provides access to an ordered, strongly typed collection of 'PdfGridRow' objects.\n * @private\n */\nvar PdfGridRowCollection = /** @class */ (function () {\n    // Constructor\n    /**\n     * Initializes a new instance of the `PdfGridRowCollection` class with the parent grid.\n     * @private\n     */\n    function PdfGridRowCollection(grid) {\n        this.rows = [];\n        this.grid = grid;\n    }\n    Object.defineProperty(PdfGridRowCollection.prototype, \"count\", {\n        //Properties\n        /**\n         * Gets the number of header in the `PdfGrid`.[Read-Only].\n         * @private\n         */\n        get: function () {\n            return this.rows.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRowCollection.prototype, \"rowCollection\", {\n        //Implementation\n        /**\n         * Return the row collection of the `grid`.\n         * @private\n         */\n        get: function () {\n            return this.rows;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfGridRowCollection.prototype.addRow = function (arg) {\n        if (typeof arg === 'undefined') {\n            var temprow = new PdfGridRow(this.grid);\n            this.addRow(temprow);\n            return temprow;\n        }\n        else {\n            arg.style.setBackgroundBrush(this.grid.style.backgroundBrush);\n            arg.style.setFont(this.grid.style.font);\n            arg.style.setTextBrush(this.grid.style.textBrush);\n            arg.style.setTextPen(this.grid.style.textPen);\n            if (arg.cells.count === 0) {\n                for (var i = 0; i < this.grid.columns.count; i++) {\n                    arg.cells.add(new PdfGridCell());\n                }\n            }\n            this.rows.push(arg);\n        }\n    };\n    /**\n     * Return the row by index.\n     * @private\n     */\n    PdfGridRowCollection.prototype.getRow = function (index) {\n        return this.rows[index];\n    };\n    return PdfGridRowCollection;\n}());\nexport { PdfGridRowCollection };\n/**\n * `PdfGridHeaderCollection` class provides customization of the settings for the header.\n * @private\n */\nvar PdfGridHeaderCollection = /** @class */ (function () {\n    //constructor\n    /**\n     * Initializes a new instance of the `PdfGridHeaderCollection` class with the parent grid.\n     * @private\n     */\n    function PdfGridHeaderCollection(grid) {\n        /**\n         * The array to store the `rows` of the grid header.\n         * @private\n         */\n        this.rows = [];\n        this.grid = grid;\n        this.rows = [];\n    }\n    //Properties\n    /**\n     * Gets a 'PdfGridRow' object that represents the `header` row in a 'PdfGridHeaderCollection' control.[Read-Only].\n     * @private\n     */\n    PdfGridHeaderCollection.prototype.getHeader = function (index) {\n        // if (index < 0 || index >= Count) {\n        //     throw new IndexOutOfRangeException();\n        // }\n        return (this.rows[index]);\n    };\n    Object.defineProperty(PdfGridHeaderCollection.prototype, \"count\", {\n        /**\n         * Gets the `number of header` in the 'PdfGrid'.[Read-Only]\n         * @private\n         */\n        get: function () {\n            return this.rows.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfGridHeaderCollection.prototype.add = function (arg) {\n        if (typeof arg === 'number') {\n            var row = void 0;\n            for (var i = 0; i < arg; i++) {\n                row = new PdfGridRow(this.grid);\n                for (var j = 0; j < this.grid.columns.count; j++) {\n                    row.cells.add(new PdfGridCell());\n                }\n                this.rows.push(row);\n            }\n            return this.rows;\n        }\n        else {\n            this.rows.push(arg);\n        }\n    };\n    PdfGridHeaderCollection.prototype.indexOf = function (row) {\n        return this.rows.indexOf(row);\n    };\n    return PdfGridHeaderCollection;\n}());\nexport { PdfGridHeaderCollection };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfGrid.ts class for EJ2-PDF\n */\nimport { PdfGridColumnCollection } from './pdf-grid-column';\nimport { PdfGridRowCollection, PdfGridHeaderCollection } from './pdf-grid-row';\nimport { RectangleF, SizeF, PointF } from './../../drawing/pdf-drawing';\nimport { PdfLayoutElement } from './../../graphics/figures/layout-element';\nimport { PdfLayoutResult, PdfLayoutFormat } from './../../graphics/figures/base/element-layouter';\nimport { PdfBorders } from './styles/pdf-borders';\nimport { PdfGridStyle } from './styles/style';\nimport { PdfLayoutType } from './../../graphics/figures/enum';\nimport { PdfHorizontalOverflowType } from './styles/style';\nimport { TemporaryDictionary } from './../../collections/object-object-pair/dictionary';\nimport { PdfStringFormat } from './../../graphics/fonts/pdf-string-format';\n/**\n * `PdfGridLayoutFormat` class represents a flexible grid that consists of columns and rows.\n */\nvar PdfGridLayoutFormat = /** @class */ (function (_super) {\n    __extends(PdfGridLayoutFormat, _super);\n    /**\n     * Initializes a new instance of the `PdfGridLayoutFormat` class.\n     * @private\n     */\n    function PdfGridLayoutFormat(baseFormat) {\n        var _this = this;\n        if (typeof baseFormat === 'undefined') {\n            _this = _super.call(this) || this;\n        }\n        else {\n            _this = _super.call(this, baseFormat) || this;\n        }\n        return _this;\n    }\n    return PdfGridLayoutFormat;\n}(PdfLayoutFormat));\nexport { PdfGridLayoutFormat };\nvar PdfGrid = /** @class */ (function (_super) {\n    __extends(PdfGrid, _super);\n    //constructor\n    /**\n     * Initialize a new instance for `PdfGrid` class.\n     * @private\n     */\n    function PdfGrid() {\n        var _this = _super.call(this) || this;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.gridSize = new SizeF(0, 0);\n        /**\n         * @hidden\n         * @private\n         */\n        _this.isRearranged = false;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.pageBounds = new RectangleF();\n        /**\n         * @hidden\n         * @private\n         */\n        _this.listOfNavigatePages = [];\n        /**\n         * @hidden\n         * @private\n         */\n        _this.flag = true;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.columnRanges = [];\n        /**\n         * @hidden\n         * @private\n         */\n        _this.currentLocation = new PointF(0, 0);\n        /**\n         * @hidden\n         * @private\n         */\n        _this.breakRow = true;\n        return _this;\n    }\n    Object.defineProperty(PdfGrid.prototype, \"raiseBeginCellDraw\", {\n        //Properties\n        /**\n         * Gets a value indicating whether the `start cell layout event` should be raised.\n         * @private\n         */\n        get: function () {\n            return (typeof this.beginCellDraw !== 'undefined' && typeof this.beginCellDraw !== null);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"raiseEndCellDraw\", {\n        /**\n         * Gets a value indicating whether the `end cell layout event` should be raised.\n         * @private\n         */\n        get: function () {\n            return (typeof this.endCellDraw !== 'undefined' && typeof this.endCellDraw !== null);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"raiseBeginPageLayout\", {\n        /**\n         * Gets a value indicating whether the `start page layout event` should be raised.\n         * @private\n         */\n        get: function () {\n            return (typeof this.beginPageLayout !== 'undefined');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"raiseEndPageLayout\", {\n        /**\n         * Gets a value indicating whether the `ending page layout event` should be raised.\n         * @private\n         */\n        get: function () {\n            return (typeof this.endPageLayout !== 'undefined');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"repeatHeader\", {\n        /**\n         * Gets or sets a value indicating whether to `repeat header`.\n         * @private\n         */\n        get: function () {\n            if (this.bRepeatHeader == null || typeof this.bRepeatHeader === 'undefined') {\n                this.bRepeatHeader = false;\n            }\n            return this.bRepeatHeader;\n        },\n        set: function (value) {\n            this.bRepeatHeader = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"allowRowBreakAcrossPages\", {\n        /**\n         * Gets or sets a value indicating whether to split or cut rows that `overflow a page`.\n         * @private\n         */\n        get: function () {\n            return this.breakRow;\n        },\n        set: function (value) {\n            this.breakRow = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"columns\", {\n        /**\n         * Gets the `column` collection of the PdfGrid.[Read-Only]\n         * @private\n         */\n        get: function () {\n            if (this.gridColumns == null || typeof this.gridColumns === 'undefined') {\n                this.gridColumns = new PdfGridColumnCollection(this);\n            }\n            return this.gridColumns;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"rows\", {\n        /**\n         * Gets the `row` collection from the PdfGrid.[Read-Only]\n         * @private\n         */\n        get: function () {\n            if (this.gridRows == null) {\n                this.gridRows = new PdfGridRowCollection(this);\n            }\n            return this.gridRows;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"headers\", {\n        /**\n         * Gets the `headers` collection from the PdfGrid.[Read-Only]\n         * @private\n         */\n        get: function () {\n            if (this.gridHeaders == null || typeof this.gridHeaders === 'undefined') {\n                this.gridHeaders = new PdfGridHeaderCollection(this);\n            }\n            return this.gridHeaders;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"initialWidth\", {\n        /**\n         * Indicating `initial width` of the page.\n         * @private\n         */\n        get: function () {\n            return this.gridInitialWidth;\n        },\n        set: function (value) {\n            this.gridInitialWidth = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"style\", {\n        /**\n         * Gets or sets the `grid style`.\n         * @private\n         */\n        get: function () {\n            if (this.gridStyle == null) {\n                this.gridStyle = new PdfGridStyle();\n            }\n            return this.gridStyle;\n        },\n        set: function (value) {\n            if (this.gridStyle == null) {\n                this.gridStyle = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"isPageWidth\", {\n        /**\n         * Gets a value indicating whether the grid column width is considered to be `page width`.\n         * @private\n         */\n        get: function () {\n            return this.pageWidth;\n        },\n        set: function (value) {\n            this.pageWidth = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"isChildGrid\", {\n        /**\n         * Gets or set if grid `is nested grid`.\n         * @private\n         */\n        get: function () {\n            return this.childGrid;\n        },\n        set: function (value) {\n            this.childGrid = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"size\", {\n        /**\n         * Gets the `size`.\n         * @private\n         */\n        get: function () {\n            if (this.gridSize.width === 0 && this.gridSize.height === 0) {\n                this.gridSize = this.measure();\n                return this.gridSize;\n            }\n            else {\n                return this.gridSize;\n            }\n        },\n        set: function (value) {\n            this.gridSize = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfGrid.prototype.draw = function (arg1, arg2, arg3, arg4) {\n        if (arg2 instanceof PointF && typeof arg2.width === 'undefined' && typeof arg3 === 'undefined') {\n            return this.drawHelper(arg1, arg2.x, arg2.y);\n        }\n        else if (typeof arg2 === 'number' && typeof arg3 === 'number' && typeof arg4 === 'undefined') {\n            return this.drawHelper(arg1, arg2, arg3, null);\n        }\n        else if (arg2 instanceof RectangleF && typeof arg2.width !== 'undefined' && typeof arg3 === 'undefined') {\n            return this.drawHelper(arg1, arg2, null);\n        }\n        else if (arg2 instanceof PointF && typeof arg2.width === 'undefined' && arg3 instanceof PdfLayoutFormat) {\n            return this.drawHelper(arg1, arg2.x, arg2.y, arg3);\n        }\n        else if (typeof arg2 === 'number' && typeof arg3 === 'number' && (arg4 instanceof PdfLayoutFormat || arg4 == null)) {\n            var width = (arg1.graphics.clientSize.width - arg2);\n            var layoutRectangle = new RectangleF(arg2, arg3, width, 0);\n            return this.drawHelper(arg1, layoutRectangle, arg4);\n        }\n        else if (arg2 instanceof RectangleF && typeof arg2.width !== 'undefined' && typeof arg3 === 'boolean') {\n            return this.drawHelper(arg1, arg2, null);\n        }\n        else {\n            return this.drawHelper(arg1, arg2, arg3);\n        }\n    };\n    /**\n     * `measures` this instance.\n     * @private\n     */\n    PdfGrid.prototype.measure = function () {\n        var height = 0;\n        var width = this.columns.width;\n        for (var i = 0; i < this.headers.count; i++) {\n            var row = this.headers.getHeader(i);\n            height += row.height;\n        }\n        for (var i = 0; i < this.rows.count; i++) {\n            var row = this.rows.getRow(i);\n            height += row.height;\n        }\n        return new SizeF(width, height);\n    };\n    PdfGrid.prototype.layout = function (param, isGridLayouter) {\n        if (typeof isGridLayouter === 'undefined') {\n            this.setSpan();\n            this.layoutFormat = param.format;\n            this.gridLocation = param.bounds;\n            var result = this.layout(param, true);\n            return result;\n        }\n        else {\n            return this.layoutInternal(param);\n        }\n    };\n    PdfGrid.prototype.setSpan = function () {\n        var colSpan;\n        var rowSpan = 1;\n        var currentCellIndex;\n        var currentRowIndex = 0;\n        var rowCount = this.headers.count;\n        for (var i = 0; i < rowCount; i++) {\n            var row = this.headers.getHeader(i);\n            var colCount = row.cells.count;\n            for (var j = 0; j < colCount; j++) {\n                var cell = row.cells.getCell(j);\n                //Skip setting span map for already coverted rows/columns.\n                if (!cell.isCellMergeContinue && !cell.isRowMergeContinue && (cell.columnSpan > 1 || cell.rowSpan > 1)) {\n                    if (cell.columnSpan + j > row.cells.count) {\n                        throw new Error('Invalid span specified at row ' + j.toString() + ' column ' + i.toString());\n                    }\n                    if (cell.rowSpan + i > this.headers.count) {\n                        throw new Error('Invalid span specified at Header ' + j.toString() + ' column ' + i.toString());\n                    }\n                    // if (this.rows.count !== 0 && cell.rowSpan + i > this.rows.count) {\n                    //     throw new Error('Invalid span specified at row ' + j.toString() + ' column ' + i.toString());\n                    // }\n                    if (cell.columnSpan > 1 && cell.rowSpan > 1) {\n                        colSpan = cell.columnSpan;\n                        rowSpan = cell.rowSpan;\n                        currentCellIndex = j;\n                        currentRowIndex = i;\n                        cell.isCellMergeStart = true;\n                        cell.isRowMergeStart = true;\n                        //Set Column merges for first row\n                        while (colSpan > 1) {\n                            currentCellIndex++;\n                            row.cells.getCell(currentCellIndex).isCellMergeContinue = true;\n                            row.cells.getCell(currentCellIndex).isRowMergeContinue = true;\n                            row.cells.getCell(currentCellIndex).rowSpan = rowSpan;\n                            colSpan--;\n                        }\n                        currentCellIndex = j;\n                        colSpan = cell.columnSpan;\n                        //Set Row Merges and column merges foreach subsequent rows.\n                        while (rowSpan > 1) {\n                            currentRowIndex++;\n                            this.headers.getHeader(currentRowIndex).cells.getCell(j).isRowMergeContinue = true;\n                            this.headers.getHeader(currentRowIndex).cells.getCell(currentCellIndex).isRowMergeContinue = true;\n                            rowSpan--;\n                            while (colSpan > 1) {\n                                currentCellIndex++;\n                                this.headers.getHeader(currentRowIndex).cells.getCell(currentCellIndex).isCellMergeContinue = true;\n                                this.headers.getHeader(currentRowIndex).cells.getCell(currentCellIndex).isRowMergeContinue = true;\n                                colSpan--;\n                            }\n                            colSpan = cell.columnSpan;\n                            currentCellIndex = j;\n                        }\n                    }\n                    else if (cell.columnSpan > 1 && cell.rowSpan === 1) {\n                        colSpan = cell.columnSpan;\n                        currentCellIndex = j;\n                        cell.isCellMergeStart = true;\n                        //Set Column merges.\n                        while (colSpan > 1) {\n                            currentCellIndex++;\n                            row.cells.getCell(currentCellIndex).isCellMergeContinue = true;\n                            colSpan--;\n                        }\n                    }\n                    else if (cell.columnSpan === 1 && cell.rowSpan > 1) {\n                        rowSpan = cell.rowSpan;\n                        currentRowIndex = i;\n                        //Set row Merges.\n                        while (rowSpan > 1) {\n                            currentRowIndex++;\n                            this.headers.getHeader(currentRowIndex).cells.getCell(j).isRowMergeContinue = true;\n                            rowSpan--;\n                        }\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Gets the `format`.\n     * @private\n     */\n    PdfGrid.prototype.getFormat = function (format) {\n        var f = format;\n        return f;\n    };\n    /**\n     * `Layouts` the element.\n     * @private\n     */\n    PdfGrid.prototype.layoutInternal = function (param) {\n        this.initialWidth = param.bounds.width;\n        var format = this.getFormat(param.format);\n        this.currentPage = param.page;\n        if (this.currentPage !== null) {\n            var pageHeight = this.currentPage.getClientSize().height;\n            var pageWidth = this.currentPage.getClientSize().width;\n            this.currentPageBounds = this.currentPage.getClientSize();\n        }\n        else {\n            throw Error('Can not set page as null');\n        }\n        this.currentGraphics = this.currentPage.graphics;\n        var index = 0;\n        index = this.currentGraphics.page.section.indexOf(this.currentGraphics.page);\n        this.listOfNavigatePages.push(index);\n        this.currentBounds = new RectangleF(new PointF(param.bounds.x, param.bounds.y), this.currentGraphics.clientSize);\n        if (this.rows.count !== 0) {\n            this.currentBounds.width = (param.bounds.width > 0) ? param.bounds.width :\n                (this.currentBounds.width - this.rows.getRow(0).cells.getCell(0).style.borders.left.width / 2);\n        }\n        else if (this.headers.count !== 0) {\n            this.currentBounds.width = param.bounds.width;\n        }\n        else {\n            throw Error('Please add row or header into grid');\n        }\n        this.startLocation = new PointF(param.bounds.x, param.bounds.y);\n        if (param.bounds.height > 0 && !this.isChildGrid) {\n            this.currentBounds.height = param.bounds.height;\n        }\n        this.hType = this.style.horizontalOverflowType;\n        if (!this.style.allowHorizontalOverflow) {\n            this.measureColumnsWidth(this.currentBounds);\n            this.columnRanges.push([0, this.columns.count - 1]);\n        }\n        else {\n            this.measureColumnsWidth();\n            this.determineColumnDrawRanges();\n        }\n        var result = this.layoutOnPage(param);\n        return result;\n    };\n    PdfGrid.prototype.measureColumnsWidth = function (bounds) {\n        if (typeof bounds !== 'undefined') {\n            var widths = this.columns.getDefaultWidths(bounds.width);\n            var tempWidth = this.columns.getColumn(0).width;\n            for (var i = 0, count = this.columns.count; i < count; i++) {\n                this.columns.getColumn(i).width = widths[i];\n            }\n        }\n        else {\n            var widths = [];\n            var cellWidth = 0;\n            var cellWidths = 0;\n            if (this.headers.count > 0) {\n                var colCount = this.headers.getHeader(0).cells.count;\n                var rowCount = this.headers.count;\n                for (var i = 0; i < colCount; i++) {\n                    cellWidth = 0;\n                    for (var j = 0; j < rowCount; j++) {\n                        var rowWidth = Math.min(this.initialWidth, this.headers.getHeader(j).cells.getCell(i).width);\n                        cellWidth = Math.max(cellWidth, rowWidth);\n                    }\n                    widths[i] = cellWidth;\n                }\n            }\n            else {\n                var colCount = this.rows.getRow(0).cells.count;\n                var rowCount = this.rows.count;\n                for (var i = 0; i < colCount; i++) {\n                    cellWidth = 0;\n                    for (var j = 0; j < rowCount; j++) {\n                        var rowWidth = Math.min(this.initialWidth, this.rows.getRow(j).cells.getCell(i).width);\n                        cellWidth = Math.max(cellWidth, rowWidth);\n                    }\n                    widths[i] = cellWidth;\n                }\n            }\n            cellWidth = 0;\n            for (var i = 0, colCount = this.columns.count; i < colCount; i++) {\n                for (var j = 0, rowCount = this.rows.count; j < rowCount; j++) {\n                    if (this.rows.getRow(j).cells.getCell(i).columnSpan == 1 || this.rows.getRow(j).cells.getCell(i).value !== null || this.rows.getRow(j).cells.getCell(i).rowSpan >= 1) {\n                        if (this.rows.getRow(j).cells.getCell(i).value !== null &&\n                            !this.rows.getRow(j).grid.style.allowHorizontalOverflow) {\n                            var value = this.rows.getRow(j).grid.style.cellPadding.right +\n                                this.rows.getRow(j).grid.style.cellPadding.left\n                                + this.rows.getRow(j).cells.getCell(i).style.borders.left.width / 2\n                                + this.gridLocation.x;\n                            this.rows.getRow(j).cells.getCell(i).value.initialWidth = this.initialWidth - value;\n                        }\n                        var rowWidth = 0;\n                        var internalWidth = this.rows.getRow(j).cells.getCell(i).width;\n                        internalWidth += this.rows.getRow(j).cells.getCell(i).style.borders.left.width;\n                        internalWidth += this.rows.getRow(j).cells.getCell(i).style.borders.right.width;\n                        var internalHeight = this.rows.getRow(j).cells.getCell(i).height;\n                        internalHeight += (this.rows.getRow(j).cells.getCell(i).style.borders.top.width);\n                        internalHeight += (this.rows.getRow(j).cells.getCell(i).style.borders.bottom.width);\n                        var isCorrectWidth = (internalWidth + this.gridLocation.x) > this.currentGraphics.clientSize.width;\n                        var isCorrectHeight = (internalHeight + this.gridLocation.y) > this.currentGraphics.clientSize.height;\n                        if (isCorrectWidth || isCorrectHeight) {\n                            throw Error('Image size exceeds client size of the page. Can not insert this image');\n                        }\n                        rowWidth = Math.min(this.initialWidth, this.rows.getRow(j).cells.getCell(i).width);\n                        cellWidth = Math.max(widths[i], Math.max(cellWidth, rowWidth));\n                        cellWidth = Math.max(this.columns.getColumn(i).width, cellWidth);\n                    }\n                }\n                widths[i] = cellWidth;\n                cellWidth = 0;\n            }\n            for (var i = 0, count = this.columns.count; i < count; i++) {\n                this.columns.getColumn(i).width = widths[i];\n            }\n        }\n    };\n    /* tslint:enable */\n    /**\n     * `Determines the column draw ranges`.\n     * @private\n     */\n    PdfGrid.prototype.determineColumnDrawRanges = function () {\n        var startColumn = 0;\n        var endColumn = 0;\n        var cellWidths = 0;\n        var availableWidth = this.currentGraphics.clientSize.width - this.currentBounds.x;\n        for (var i = 0; i < this.columns.count; i++) {\n            cellWidths += this.columns.getColumn(i).width;\n            if (cellWidths >= availableWidth) {\n                var subWidths = 0;\n                for (var j = startColumn; j <= i; j++) {\n                    subWidths += this.columns.getColumn(j).width;\n                    if (subWidths > availableWidth) {\n                        break;\n                    }\n                    endColumn = j;\n                }\n                this.columnRanges.push([startColumn, endColumn]);\n                startColumn = endColumn + 1;\n                endColumn = startColumn;\n                cellWidths = (endColumn <= i) ? this.columns.getColumn(i).width : 0;\n            }\n        }\n        // if (startColumn !== this.columns.Count) {\n        this.columnRanges.push([startColumn, this.columns.count - 1]);\n        // }\n    };\n    /**\n     * `Layouts the on page`.\n     * @private\n     */\n    PdfGrid.prototype.layoutOnPage = function (param) {\n        /* tslint:disable */\n        this.pageBounds.x = param.bounds.x;\n        this.pageBounds.y = param.bounds.y;\n        this.pageBounds.height = param.bounds.height;\n        var format = this.getFormat(param.format);\n        var endArgs = null;\n        var result = null;\n        var layoutedPages = new TemporaryDictionary();\n        var startPage = param.page;\n        var isParentCell = false;\n        var cellBounds = [];\n        for (var index = 0; index < this.columnRanges.length; index++) {\n            var range = this.columnRanges[index];\n            this.cellStartIndex = range[0];\n            this.cellEndIndex = range[1];\n            var returnObject = this.raiseBeforePageLayout(this.currentPage, this.currentBounds, this.currentRowIndex);\n            this.currentBounds = returnObject.currentBounds;\n            this.currentRowIndex = returnObject.currentRowIndex;\n            // if (returnObject.returnValue) {\n            // result = new PdfGridLayoutResult(this.currentPage, this.currentBounds);\n            // break;\n            // }\n            //Draw Headers.\n            var drawHeader = void 0;\n            for (var i_1 = 0; i_1 < this.headers.count; i_1++) {\n                var row = this.headers.getHeader(i_1);\n                var headerHeight = this.currentBounds.y;\n                // RowLayoutResult\n                var headerResult = this.drawRow(row);\n                // if (headerHeight === this.currentBounds.y) {\n                //     drawHeader = true;\n                //     if (PdfGrid.repeatRowIndex === -1) {\n                //         PdfGrid.repeatRowIndex = this.rows.getRow.indexOf(row);\n                //     }\n                // } else {\n                drawHeader = false;\n                // }\n            }\n            var i = 0;\n            var length_1 = this.rows.count;\n            var repeatRow = void 0;\n            var startingHeight = 0;\n            var flag = true;\n            //Here is to draw parent Grid and Cells\n            cellBounds = [];\n            //Draw row by row with the specified cell range.\n            for (var j = 0; j < this.rows.count; j++) {\n                var row = this.rows.getRow(j);\n                i++;\n                this.currentRowIndex = i - 1;\n                var originalHeight = this.currentBounds.y;\n                startPage = this.currentPage;\n                PdfGrid.repeatRowIndex = -1;\n                var rowResult = this.drawRow(row);\n                cellBounds.push(rowResult.bounds.width);\n                //if height remains same, it is understood that row is not drawn in the page\n                if (originalHeight === this.currentBounds.y) {\n                    repeatRow = true;\n                    PdfGrid.repeatRowIndex = this.rows.rowCollection.indexOf(row);\n                }\n                else {\n                    repeatRow = false;\n                    PdfGrid.repeatRowIndex = -1;\n                }\n                if (!rowResult.isFinish && startPage !== null && format.layout !== PdfLayoutType.OnePage && repeatRow) {\n                    // During pagination, cell position is maintained here.\n                    this.startLocation.x = this.currentBounds.x;\n                    var isAddNextPage = false;\n                    this.currentPage = this.getNextPage(format);\n                    if ((param.format !== null) && !param.format.usePaginateBounds && param.bounds !== null &&\n                        param.bounds.height > 0 && !this.isChildGrid) {\n                        this.currentBounds.height = param.bounds.height;\n                    }\n                    if ((param.format !== null) && !param.format.usePaginateBounds && param.bounds !== null &&\n                        param.bounds.y > 0 && !this.isChildGrid) {\n                        this.currentBounds.y = param.bounds.y;\n                    }\n                    this.startLocation.y = this.currentBounds.y;\n                    if ((format.paginateBounds.x === format.paginateBounds.y) &&\n                        (format.paginateBounds.y === format.paginateBounds.height) &&\n                        (format.paginateBounds.height === format.paginateBounds.width) && (format.paginateBounds.width === 0)) {\n                        this.currentBounds.x += this.startLocation.x;\n                    }\n                    if (this.currentBounds.x === PdfBorders.default.left.width / 2) {\n                        this.currentBounds.y += this.startLocation.x;\n                    }\n                    if (this.repeatHeader) {\n                        for (var i_2 = 0; i_2 < this.headers.count; i_2++) {\n                            var header = this.headers.getHeader(i_2);\n                            this.drawRow(header);\n                        }\n                    }\n                    this.drawRow(row);\n                    if (this.currentPage !== null && !layoutedPages.containsKey(this.currentPage)) {\n                        layoutedPages.add(this.currentPage, range);\n                    }\n                }\n            }\n            var isPdfGrid = false;\n            var maximumCellBoundsWidth = 0;\n            if (cellBounds.length > 0) {\n                maximumCellBoundsWidth = cellBounds[0];\n            }\n            var largeNavigatePage = [[0, 0]];\n            if (!isPdfGrid && cellBounds.length > 0) {\n                for (var c = 0; c < i - 1; c++) {\n                    if (maximumCellBoundsWidth < cellBounds[c]) {\n                        maximumCellBoundsWidth = cellBounds[c];\n                    }\n                }\n                this.rowLayoutBoundsWidth = maximumCellBoundsWidth;\n            }\n            else {\n                this.rowLayoutBoundsWidth = largeNavigatePage[0][1];\n            }\n            if (this.columnRanges.length - 1 !== index && this.columnRanges.length > 1 && format.layout !== PdfLayoutType.OnePage) {\n                this.currentPage = this.getNextPage(format);\n                if ((format.paginateBounds.x === format.paginateBounds.y) && (format.paginateBounds.y === format.paginateBounds.height)\n                    && (format.paginateBounds.height === format.paginateBounds.width) && (format.paginateBounds.width === 0)) {\n                    this.currentBounds.x += this.startLocation.x;\n                    this.currentBounds.y += this.startLocation.y;\n                    // this.currentBounds.height = this.pageBounds.height;\n                }\n            }\n        }\n        result = this.getLayoutResult();\n        if (this.style.allowHorizontalOverflow && this.style.horizontalOverflowType == PdfHorizontalOverflowType.NextPage) {\n            this.reArrangePages(layoutedPages);\n        }\n        this.raisePageLayouted(result);\n        return result;\n    }; /* tslint:enable */\n    /**\n     * Gets the `next page`.\n     * @private\n     */\n    PdfGrid.prototype.getNextPage = function (format) {\n        var section = this.currentPage.section;\n        var nextPage = null;\n        var index = section.indexOf(this.currentPage);\n        this.flag = false;\n        if (index === section.count - 1) {\n            nextPage = section.add();\n        }\n        else {\n            nextPage = section.getPages()[index + 1];\n        }\n        this.currentGraphics = nextPage.graphics;\n        var pageindex = this.currentGraphics.page.section.indexOf(this.currentGraphics.page);\n        if (!(this.listOfNavigatePages.indexOf(pageindex) !== -1)) {\n            this.listOfNavigatePages.push(pageindex);\n        }\n        this.currentBounds = new RectangleF(new PointF(0, 0), nextPage.getClientSize());\n        // if ((format.PaginateBounds.x !== format.PaginateBounds.y) && (format.PaginateBounds.y !== format.PaginateBounds.height)\n        //     && (format.PaginateBounds.height !== format.PaginateBounds.width) && (format.PaginateBounds.width !== 0)) {\n        //     this.currentBounds.x = format.PaginateBounds.x;\n        //     this.currentBounds.y = format.PaginateBounds.y;\n        //     this.currentBounds.height = format.PaginateBounds.height;\n        // }\n        return nextPage;\n    };\n    /**\n     * Gets the `layout result`.\n     * @private\n     */\n    PdfGrid.prototype.getLayoutResult = function () {\n        var bounds;\n        /* tslint:disable */\n        bounds = new RectangleF(this.startLocation, new SizeF(this.currentBounds.width, this.currentBounds.y - this.startLocation.y));\n        /* tslint:enable */\n        return new PdfGridLayoutResult(this.currentPage, bounds);\n    };\n    /**\n     * `Recalculate row height` for the split cell to be drawn.\n     * @private\n     */\n    PdfGrid.prototype.ReCalculateHeight = function (row, height) {\n        var newHeight = 0.0;\n        // for (let i : number = this.cellStartIndex; i <= this.cellEndIndex; i++) {\n        //     if (!(row.cells.getCell(i).RemainingString === null || row.cells.getCell(i).RemainingString === '' ||\n        //           typeof row.cells.getCell(i).RemainingString === 'undefined')) {\n        //         newHeight = Math.max(newHeight, row.cells.getCell(i).MeasureHeight());\n        //     }\n        // }\n        return Math.max(height, newHeight);\n    };\n    /**\n     * `Raises BeforePageLayout event`.\n     * @private\n     */\n    PdfGrid.prototype.raiseBeforePageLayout = function (currentPage, currentBounds, currentRow) {\n        var cancel = false;\n        if (this.raiseBeginPageLayout) {\n            var args = new PdfGridBeginPageLayoutEventArgs(currentBounds, currentPage, currentRow);\n            this.beginPageLayout(this, args);\n            // if (currentBounds !== args.Bounds) {\n            //     this.isChanged = true;\n            //     this.currentLocation = new PointF(args.Bounds.x, args.Bounds.y);\n            //     this.measureColumnsWidth(new RectangleF(new PointF(args.Bounds.x, args.Bounds.y) ,\n            //                                                  new SizeF(args.Bounds.width + args.Bounds.x ,\n            //                                                                 args.Bounds.height)));\n            // }\n            cancel = args.cancel;\n            currentBounds = args.bounds;\n            currentRow = args.startRowIndex;\n        }\n        return { returnValue: cancel, currentBounds: currentBounds, currentRowIndex: currentRow };\n    };\n    /**\n     * `Raises PageLayout event` if needed.\n     * @private\n     */\n    PdfGrid.prototype.raisePageLayouted = function (result) {\n        var args = new PdfGridEndPageLayoutEventArgs(result);\n        if (this.raiseEndPageLayout) {\n            this.endPageLayout(this, args);\n        }\n        return args;\n    };\n    PdfGrid.prototype.drawRow = function (row, result, height) {\n        if (typeof result === 'undefined') {\n            //.. Check if required space available.\n            //.....If the row conains spans which  falls through more than one page, then draw the row to next page.\n            var result_1 = new RowLayoutResult();\n            var rowHeightWithSpan = 0;\n            var location_1 = new PointF(0, 0);\n            var size = new SizeF(0, 0);\n            var isHeader = false;\n            if (row.rowSpanExists) {\n                var maxSpan = 0;\n                var currRowIndex = this.rows.rowCollection.indexOf(row);\n                if (currRowIndex === -1) {\n                    currRowIndex = this.headers.indexOf(row);\n                    if (currRowIndex !== -1) {\n                        isHeader = true;\n                    }\n                }\n                for (var i = 0; i < row.cells.count; i++) {\n                    var cell = row.cells.getCell(i);\n                    maxSpan = Math.max(maxSpan, cell.rowSpan);\n                }\n                for (var i = currRowIndex; i < currRowIndex + maxSpan; i++) {\n                    rowHeightWithSpan += (isHeader ? this.headers.getHeader(i).height : this.rows.getRow(i).height);\n                }\n                var rowMaxHeight = rowHeightWithSpan;\n                for (var i = 0; i < row.cells.count; i++) {\n                    rowMaxHeight = rowMaxHeight > row.cells.getCell(i).height ? rowMaxHeight : row.cells.getCell(i).height;\n                }\n                var nextRow = this.headers.getHeader(this.headers.indexOf(row) + 1);\n                var flag = true;\n                for (var i = 0; i < nextRow.cells.count; i++) {\n                    if (nextRow.cells.getCell(i).value !== '' && nextRow.cells.getCell(i).value !== undefined) {\n                        flag = false;\n                        break;\n                    }\n                }\n                if ((rowMaxHeight > rowHeightWithSpan) && flag) {\n                    row.height += (rowMaxHeight - rowHeightWithSpan);\n                }\n            }\n            var calculatedHeight = row.rowBreakHeight > 0.0 ? row.rowBreakHeight : row.height;\n            if (this.currentBounds.y + calculatedHeight > this.currentPageBounds.height ||\n                this.currentBounds.y + calculatedHeight > (this.currentBounds.height + this.startLocation.y) ||\n                this.currentBounds.y + rowHeightWithSpan > this.currentPageBounds.height) {\n                // If a row is repeated and still cannot fit in page, proceed draw.\n                // if (PdfGrid.repeatRowIndex > -1 && PdfGrid.repeatRowIndex === row.RowIndex) {\n                //     if (this.AllowRowBreakAcrossPages) {\n                //         result.IsFinish = true;\n                //         // this.DrawRowWithBreak(ref result, row, height);\n                //     } else {\n                //         result.IsFinish = false;\n                //         this.drawRow(row, result, height);\n                //     }\n                // } else {\n                result_1.isFinish = false;\n                // }\n            }\n            else {\n                result_1.isFinish = true;\n                this.drawRow(row, result_1, calculatedHeight);\n            }\n            return result_1;\n        }\n        else {\n            var skipcell = false;\n            var location_2 = new PointF(this.currentBounds.x, this.currentBounds.y);\n            result.bounds = new RectangleF(location_2, new SizeF(0, 0));\n            height = this.ReCalculateHeight(row, height);\n            for (var i = this.cellStartIndex; i <= this.cellEndIndex; i++) {\n                var cancelSpans = ((i > this.cellEndIndex + 1) && (row.cells.getCell(i).columnSpan > 1));\n                // let cancelSpans : boolean = false;\n                if (!cancelSpans) {\n                    for (var j = 1; j < row.cells.getCell(i).columnSpan; j++) {\n                        row.cells.getCell(i + j).isCellMergeContinue = true;\n                    }\n                }\n                var size = new SizeF(this.columns.getColumn(i).width, height);\n                // if (size.width > this.currentGraphics.ClientSize.width) {\n                //     size.width = this.currentGraphics.ClientSize.width;\n                // }\n                // if (this.IsChildGrid && this.style.AllowHorizontalOverflow) {\n                //     if (size.width >= this.currentGraphics.ClientSize.width) {\n                //         size.width -= 2 * this.currentBounds.x;\n                //     }\n                // }\n                /* tslint:disable */\n                if (!this.CheckIfDefaultFormat(this.columns.getColumn(i).format) &&\n                    this.CheckIfDefaultFormat(row.cells.getCell(i).stringFormat)) {\n                    row.cells.getCell(i).stringFormat = this.columns.getColumn(i).format;\n                }\n                var cellstyle = row.cells.getCell(i).style;\n                var tempValue = ((typeof row.cells.getCell(i).value === 'string' &&\n                    row.cells.getCell(i).value !== null) ? row.cells.getCell(i).value : '');\n                row.cells.getCell(i).style = this.RaiseBeforeCellDraw(this.currentGraphics, this.currentRowIndex, i, new RectangleF(location_2, size), tempValue, cellstyle);\n                // if (!skipcell) {\n                // let stringResult : PdfStringLayoutResult = row.cells.getCell(i).draw(this.currentGraphics, new RectangleF(location, size), cancelSpans);\n                var stringResult = row.cells.getCell(i).draw(this.currentGraphics, new RectangleF(location_2, size), cancelSpans);\n                if (row.grid.style.allowHorizontalOverflow && (row.cells.getCell(i).columnSpan > this.cellEndIndex || i + row.cells.getCell(i).columnSpan > this.cellEndIndex + 1) && this.cellEndIndex < row.cells.count - 1) {\n                    row.rowOverflowIndex = this.cellEndIndex;\n                }\n                if (row.grid.style.allowHorizontalOverflow && (row.rowOverflowIndex > 0 && (row.cells.getCell(i).columnSpan > this.cellEndIndex || i + row.cells.getCell(i).columnSpan > this.cellEndIndex + 1)) && row.cells.getCell(i).columnSpan - this.cellEndIndex + i - 1 > 0) {\n                    row.cells.getCell(row.rowOverflowIndex + 1).value = stringResult !== null ? (stringResult.remainder !== undefined) ? stringResult.remainder : '' : '';\n                    row.cells.getCell(row.rowOverflowIndex + 1).stringFormat = row.cells.getCell(i).stringFormat;\n                    row.cells.getCell(row.rowOverflowIndex + 1).style = row.cells.getCell(i).style;\n                    row.cells.getCell(row.rowOverflowIndex + 1).columnSpan = row.cells.getCell(i).columnSpan - this.cellEndIndex + i - 1;\n                }\n                // }\n                /* tslint:enable */\n                tempValue = ((typeof row.cells.getCell(i).value === 'string' &&\n                    row.cells.getCell(i).value !== null) ? row.cells.getCell(i).value : '');\n                this.RaiseAfterCellDraw(this.currentGraphics, this.currentRowIndex, i, new RectangleF(location_2, size), tempValue, row.cells.getCell(i).style);\n                location_2.x += this.columns.getColumn(i).width;\n            }\n            // if (!row.RowMergeComplete || row.isRowHeightSet) {\n            this.currentBounds.y += height;\n            // }\n            result.bounds = new RectangleF(new PointF(result.bounds.x, result.bounds.y), new SizeF(location_2.x, location_2.y));\n        }\n    };\n    /**\n     * Checks if the given format `is default format` or not.\n     * @private\n     */\n    PdfGrid.prototype.CheckIfDefaultFormat = function (format) {\n        var defaultFormat = new PdfStringFormat();\n        return (format.alignment === defaultFormat.alignment && format.characterSpacing === defaultFormat.characterSpacing &&\n            format.clipPath === defaultFormat.clipPath && format.firstLineIndent === defaultFormat.firstLineIndent &&\n            format.horizontalScalingFactor === defaultFormat.horizontalScalingFactor &&\n            format.lineAlignment === defaultFormat.lineAlignment\n            && format.lineLimit === defaultFormat.lineLimit && format.lineSpacing === defaultFormat.lineSpacing &&\n            format.measureTrailingSpaces === defaultFormat.measureTrailingSpaces && format.noClip === defaultFormat.noClip &&\n            format.paragraphIndent === defaultFormat.paragraphIndent && format.rightToLeft === defaultFormat.rightToLeft &&\n            format.subSuperScript === defaultFormat.subSuperScript && format.wordSpacing === defaultFormat.wordSpacing &&\n            format.wordWrap === defaultFormat.wordWrap);\n    };\n    /**\n     * `Raises BeforeCellDraw event`.\n     * @private\n     */\n    PdfGrid.prototype.RaiseBeforeCellDraw = function (graphics, rowIndex, cellIndex, bounds, value, style) {\n        var args = null;\n        if (this.raiseBeginCellDraw) {\n            args = new PdfGridBeginCellDrawEventArgs(graphics, rowIndex, cellIndex, bounds, value, style);\n            this.beginCellDraw(this, args);\n            style = args.style;\n        }\n        return style;\n    };\n    /**\n     * `Raises AfterCellDraw event`.\n     * @private\n     */\n    PdfGrid.prototype.RaiseAfterCellDraw = function (graphics, rowIndex, cellIndex, bounds, value, cellstyle) {\n        var args = null;\n        if (this.raiseEndCellDraw) {\n            args = new PdfGridEndCellDrawEventArgs(graphics, rowIndex, cellIndex, bounds, value, cellstyle);\n            this.endCellDraw(this, args);\n        }\n    };\n    /**\n     * `Rearranges the pages`.\n     * @private\n     */\n    PdfGrid.prototype.reArrangePages = function (layoutedPages) {\n        var document = this.currentPage.document;\n        var pages = [];\n        var keys = layoutedPages.keys();\n        var values = layoutedPages.values();\n        for (var i = 0; i < keys.length; i++) {\n            var page = keys[i];\n            page.section = null;\n            pages.push(page);\n            document.pages.remove(page);\n        }\n        /* tslint:disable */\n        for (var i = 0; i < layoutedPages.size(); i++) {\n            var count = 0;\n            for (var j = i, count_1 = (layoutedPages.size() / this.columnRanges.length); j < layoutedPages.size(); j += count_1) {\n                var page = pages[j];\n                if (document.pages.indexOf(page) === -1) {\n                    document.pages.add(page);\n                }\n            }\n        }\n        /* tslint:enable */\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    PdfGrid.repeatRowIndex = -1;\n    return PdfGrid;\n}(PdfLayoutElement));\nexport { PdfGrid };\n/**\n * `GridCellEventArgs` class is alternate for grid events.\n */\nvar GridCellEventArgs = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initialize a new instance for `GridCellEventArgs` class.\n     * @private\n     */\n    function GridCellEventArgs(graphics, rowIndex, cellIndex, bounds, value) {\n        this.gridRowIndex = rowIndex;\n        this.gridCellIndex = cellIndex;\n        this.internalValue = value;\n        this.gridBounds = bounds;\n        this.pdfGraphics = graphics;\n    }\n    Object.defineProperty(GridCellEventArgs.prototype, \"rowIndex\", {\n        // Properties\n        /**\n         * Gets the value of current `row index`.\n         * @private\n         */\n        get: function () {\n            return this.gridRowIndex;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridCellEventArgs.prototype, \"cellIndex\", {\n        /**\n         * Gets the value of current `cell index`.\n         * @private\n         */\n        get: function () {\n            return this.gridCellIndex;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridCellEventArgs.prototype, \"value\", {\n        /**\n         * Gets the actual `value` of current cell.\n         * @private\n         */\n        get: function () {\n            return this.internalValue;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridCellEventArgs.prototype, \"bounds\", {\n        /**\n         * Gets the `bounds` of current cell.\n         * @private\n         */\n        get: function () {\n            return this.gridBounds;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridCellEventArgs.prototype, \"graphics\", {\n        /**\n         * Gets the instance of `current graphics`.\n         * @private\n         */\n        get: function () {\n            return this.pdfGraphics;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return GridCellEventArgs;\n}());\nexport { GridCellEventArgs };\n/**\n * `PdfGridBeginCellDrawEventArgs` class is alternate for begin cell draw events.\n */\nvar PdfGridBeginCellDrawEventArgs = /** @class */ (function (_super) {\n    __extends(PdfGridBeginCellDrawEventArgs, _super);\n    // Constructors\n    /**\n     * Initializes a new instance of the `StartCellLayoutEventArgs` class.\n     * @private\n     */\n    function PdfGridBeginCellDrawEventArgs(graphics, rowIndex, cellIndex, bounds, value, style) {\n        var _this = _super.call(this, graphics, rowIndex, cellIndex, bounds, value) || this;\n        _this.style = style;\n        return _this;\n    }\n    Object.defineProperty(PdfGridBeginCellDrawEventArgs.prototype, \"skip\", {\n        // Properties\n        /**\n         * Gets or sets a value indicating whether the value of this cell should be `skipped`.\n         * @private\n         */\n        get: function () {\n            return this.bSkip;\n        },\n        set: function (value) {\n            this.bSkip = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridBeginCellDrawEventArgs.prototype, \"style\", {\n        /**\n         * Gets or sets a `style` value of the cell.\n         * @private\n         */\n        get: function () {\n            return this.cellStyle;\n        },\n        set: function (value) {\n            this.cellStyle = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfGridBeginCellDrawEventArgs;\n}(GridCellEventArgs));\nexport { PdfGridBeginCellDrawEventArgs };\n/**\n * `PdfGridEndCellDrawEventArgs` class is alternate for end cell draw events.\n */\nvar PdfGridEndCellDrawEventArgs = /** @class */ (function (_super) {\n    __extends(PdfGridEndCellDrawEventArgs, _super);\n    // Constructors\n    /**\n     * Initializes a new instance of the `PdfGridEndCellLayoutEventArgs` class.\n     * @private\n     */\n    function PdfGridEndCellDrawEventArgs(graphics, rowIndex, cellIndex, bounds, value, style) {\n        var _this = _super.call(this, graphics, rowIndex, cellIndex, bounds, value) || this;\n        _this.cellStyle = style;\n        return _this;\n    }\n    Object.defineProperty(PdfGridEndCellDrawEventArgs.prototype, \"style\", {\n        // Propertise\n        /**\n         * Get the `PdfGridCellStyle`.\n         * @private\n         */\n        get: function () {\n            return this.cellStyle;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfGridEndCellDrawEventArgs;\n}(GridCellEventArgs));\nexport { PdfGridEndCellDrawEventArgs };\n/**\n * `PdfGridCancelEventArgs` class is alternate for cancel events.\n */\nvar PdfCancelEventArgs = /** @class */ (function () {\n    function PdfCancelEventArgs() {\n    }\n    Object.defineProperty(PdfCancelEventArgs.prototype, \"cancel\", {\n        // Properties\n        /**\n         * Gets and Sets the value of `cancel`.\n         * @private\n         */\n        get: function () {\n            return this.isCancel;\n        },\n        set: function (value) {\n            this.isCancel = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfCancelEventArgs;\n}());\nexport { PdfCancelEventArgs };\n/**\n * `BeginPageLayoutEventArgs` class is alternate for begin page layout events.\n */\nvar BeginPageLayoutEventArgs = /** @class */ (function (_super) {\n    __extends(BeginPageLayoutEventArgs, _super);\n    // Constructors\n    /**\n     * Initializes a new instance of the `BeginPageLayoutEventArgs` class with the specified rectangle and page.\n     * @private\n     */\n    function BeginPageLayoutEventArgs(bounds, page) {\n        var _this = _super.call(this) || this;\n        _this.bounds = bounds;\n        _this.pdfPage = page;\n        return _this;\n    }\n    Object.defineProperty(BeginPageLayoutEventArgs.prototype, \"bounds\", {\n        // Properties\n        /**\n         * Gets or sets value that indicates the lay outing `bounds` on the page.\n         * @private\n         */\n        get: function () {\n            return this.cellBounds;\n        },\n        set: function (value) {\n            this.cellBounds = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BeginPageLayoutEventArgs.prototype, \"page\", {\n        /**\n         * Gets the `page` where the lay outing should start.\n         * @private\n         */\n        get: function () {\n            return this.pdfPage;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return BeginPageLayoutEventArgs;\n}(PdfCancelEventArgs));\nexport { BeginPageLayoutEventArgs };\n/**\n * `EndPageLayoutEventArgs` class is alternate for end page layout events.\n */\nvar EndPageLayoutEventArgs = /** @class */ (function (_super) {\n    __extends(EndPageLayoutEventArgs, _super);\n    // Constructors\n    /**\n     * Initializes a new instance of the `EndPageLayoutEventArgs` class. with the specified 'PdfLayoutResult'.\n     * @private\n     */\n    function EndPageLayoutEventArgs(result) {\n        var _this = _super.call(this) || this;\n        _this.layoutResult = result;\n        return _this;\n    }\n    Object.defineProperty(EndPageLayoutEventArgs.prototype, \"result\", {\n        // Properties\n        /**\n         * Gets the lay outing `result` of the page.\n         * @private\n         */\n        get: function () {\n            return this.layoutResult;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EndPageLayoutEventArgs.prototype, \"nextPage\", {\n        /**\n         * Gets or sets a value indicating the `next page` where the element should be layout.\n         * @private\n         */\n        get: function () {\n            return this.nextPdfPage;\n        },\n        set: function (value) {\n            this.nextPdfPage = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return EndPageLayoutEventArgs;\n}(PdfCancelEventArgs));\nexport { EndPageLayoutEventArgs };\n/**\n * `PdfGridBeginPageLayoutEventArgs` class is alternate for begin page layout events.\n */\nvar PdfGridBeginPageLayoutEventArgs = /** @class */ (function (_super) {\n    __extends(PdfGridBeginPageLayoutEventArgs, _super);\n    // Constructors\n    /**\n     * Initialize a new instance of `PdfGridBeginPageLayoutEventArgs` class.\n     * @private\n     */\n    function PdfGridBeginPageLayoutEventArgs(bounds, page, startRow) {\n        var _this = _super.call(this, bounds, page) || this;\n        _this.startRow = startRow;\n        return _this;\n    }\n    Object.defineProperty(PdfGridBeginPageLayoutEventArgs.prototype, \"startRowIndex\", {\n        // Properties\n        /**\n         * Gets the `start row index`.\n         * @private\n         */\n        get: function () {\n            return this.startRow;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfGridBeginPageLayoutEventArgs;\n}(BeginPageLayoutEventArgs));\nexport { PdfGridBeginPageLayoutEventArgs };\n/**\n * `PdfGridEndPageLayoutEventArgs` class is alternate for begin page layout events.\n */\nvar PdfGridEndPageLayoutEventArgs = /** @class */ (function (_super) {\n    __extends(PdfGridEndPageLayoutEventArgs, _super);\n    // Constructors\n    /**\n     * Initialize a new instance of `PdfGridEndPageLayoutEventArgs` class.\n     * @private\n     */\n    function PdfGridEndPageLayoutEventArgs(result) {\n        return _super.call(this, result) || this;\n    }\n    return PdfGridEndPageLayoutEventArgs;\n}(EndPageLayoutEventArgs));\nexport { PdfGridEndPageLayoutEventArgs };\n/**\n * `RowLayoutResult` class to store layout result of rows.\n */\nvar RowLayoutResult = /** @class */ (function () {\n    //Constructors\n    /**\n     * Initializes a new instance of the `RowLayoutResult` class.\n     * @private\n     */\n    function RowLayoutResult() {\n        this.layoutedBounds = new RectangleF(0, 0, 0, 0);\n    }\n    Object.defineProperty(RowLayoutResult.prototype, \"isFinish\", {\n        /**\n         * Gets or sets a value indicating whether this instance `is finish`.\n         * @private\n         */\n        get: function () {\n            return this.bIsFinished;\n        },\n        set: function (value) {\n            this.bIsFinished = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RowLayoutResult.prototype, \"bounds\", {\n        /**\n         * Gets or sets the `bounds`.\n         * @private\n         */\n        get: function () {\n            return this.layoutedBounds;\n        },\n        set: function (value) {\n            this.layoutedBounds = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return RowLayoutResult;\n}());\nexport { RowLayoutResult };\n/**\n * `PdfGridLayoutResult` class represents the results of the PdfGrid including bounds and resultant page.\n */\nvar PdfGridLayoutResult = /** @class */ (function (_super) {\n    __extends(PdfGridLayoutResult, _super);\n    // Constructor\n    /**\n     * Initializes a new instance of the `PdfGridLayoutResult` class with the current page and bounds.\n     * @private\n     */\n    function PdfGridLayoutResult(page, bounds) {\n        return _super.call(this, page, bounds) || this;\n    }\n    return PdfGridLayoutResult;\n}(PdfLayoutResult));\nexport { PdfGridLayoutResult };\n"],"names":["defaultToString","item","Object","prototype","toString","call","Dictionary","toStringFunction","this","table","nElements","toStr","getValue","key","pair","value","setValue","k","remove","previousElement","keys","keysArray","namesOfKeys","index1","length","pair1","push","values","valuesArray","namesOfValues","index2","pair2","containsKey","clear","size","PdfName","stringStartMark","internalValue","isSaving6","position6","normalizeValue","defineProperty","get","status6","set","enumerable","configurable","index6","val","save","writer","write","escapeString","clone","crossTable","newName","stringValue","result","i","len_1","ch","delimiters","indexOf","c","replacements","Operators","forTest","obj","endObj","r","whiteSpace","slash","newLine","stream","endStream","xref","f","n","trailer","startxref","eof","header","beginText","endText","beginPath","appendLineSegment","stroke","fill","fillEvenOdd","fillStroke","fillStrokeEvenOdd","appendbeziercurve","appendRectangle","saveState","restoreState","paintXObject","modifyCtm","modifyTM","setLineWidth","setLineCapStyle","setLineJoinStyle","setDashPattern","setFlatnessTolerance","closePath","closeStrokePath","closeFillStrokePath","setCharacterSpace","setWordSpace","setHorizontalScaling","setTextLeading","setFont","setRenderingMode","setTextRise","setTextScaling","setCoords","goToNextLine","setText","setTextWithFormatting","setTextOnNewLine","selectcolorspaceforstroking","selectcolorspacefornonstroking","setrbgcolorforstroking","setrbgcolorfornonstroking","setcmykcolorforstroking","setcmykcolorfornonstroking","setgraycolorforstroking","setgraycolorfornonstroking","clipPath","clipPathEvenOdd","endPath","setGraphicsState","comment","evenOdd","setMiterLimit","DictionaryProperties","pages","kids","count","resources","type","mediaBox","parent","root","decodeParms","filter","font","type1","baseFont","encoding","subtype","contents","procset","colorSpace","extGState","pattern","xObject","width","height","bitsPerComponent","image","dctdecode","columns","blackIs1","s","predictor","deviceRgb","next","action","link","a","annot","p","rect","uri","annots","ca","CA","xyz","fit","dest","BM","flatedecode","rotate","bBox","form","PdfDictionary","dictionary","position7","primitiveItems","prefix","suffix","object","archive","encrypt","dictionaryProperties","items","index","status","freezeChanges","status7","isSaving7","index7","getArchive","setArchive","setEncrypt","modify","getEncrypt","freezer","bChanged","onBeginSave","beginSave","sender","onTemplateBeginSave","pageBeginDrawTemplate","pageBeginSave","onBeginAnnotationSave","annotationBeginSave","onSectionBeginSave","saveEvent","sectionBeginSave","state","bRaiseEvent","Count","saveItems","SaveSectionCollectionEventHandler","SaveAnnotationEventHandler","SaveSectionEventHandler","SaveTemplateEventHandler","PdfNumber","position5","integer","status5","isSaving5","index5","intValue","floatToString","number","returnString","toFixed","min","x","y","z","Math","PdfArray","array","startMark","endMark","position9","clonedObject9","internalElements","tempArray","elements","tempNumberArray","pdfNumber","add","status9","isSaving9","index9","pdfCrossTable","element","markedChange","contains","tempElement","inputElement","getItems","len","newArray","fromRectangle","bounds","insert","tempElements","markChanged","removeAt","__extends","extendStatics","setPrototypeOf","__proto__","Array","d","b","hasOwnProperty","__","constructor","create","PdfStream","_super","data","_this","dicPrefix","dicSuffix","clonedObject2","bCompress","isImageStream","dataStream2","bCompress2","clearStream","internalStream","text","Error","compressContent","sw","CompressedStreamWriter","close","getCompressedString","addFilter","filterName","PdfReferenceHolder","name","isImage","bytesToString","byteArray","output","String","fromCharCode","InternalEnum","ForceEncoding","SourceType","PdfString","bHex","position1","clonedObject1","bDecrypted","isParentDecrypted","isPacked","isFormField","isColorSpace","isHexString","charCodeAt","status1","isSaving1","bytesToHex","bytes","stringMark","CrossTable","newString","hexStringMark","hexFormatPattern","PdfReference","objNumber","genNumber","index3","position3","Number","status3","isSaving3","obj1","obj2","index4","position4","objectIndex","primitiveObject","tempObj","status4","isSaving4","pdfReference","position","cTable","document","isSaving","getReference","PdfAction","initialize","pdfDictionary","PdfUriAction","uniformResourceIdentifier","PdfHorizontalAlignment","PdfVerticalAlignment","PdfTextAlignment","TextRenderingMode","PdfLineJoin","PdfLineCap","PdfDashStyle","PdfFillMode","PdfColorSpace","PdfBlendMode","PdfGraphicsUnit","PdfGridImagePosition","PdfColor","color1","color2","color3","color4","redColor","greenColor","g","blueColor","grayColor","gray","alpha","filled","maxColourChannelValue","cyanColor","magentaColor","yellowColor","blackColor","assignCMYK","red","green","blue","black","cyan","magenta","yellow","isEmpty","rgbToString","ifStroking","colour","rgbStrings","toArray","Rgb","grayStringsSroke","grayStringsFill","PointF","SizeF","RectangleF","arg1","arg2","arg3","arg4","pointf","sizef","PdfBrush","PdfSolidBrush","color","pdfColor","monitorChanges","brush","streamWriter","getResources","saveChanges","currentColorSpace","diff","setColorAndSpace","resetChanges","PdfFontStyle","PdfFontFamily","PdfFontType","PdfWordWrapType","PdfSubSuperScript","FontEncoding","PdfStringFormat","scalingFactor","internalLineLimit","wordWrapType","Word","textAlignment","verticalAlignment","Top","isRightToLeft","internalCharacterSpacing","internalWordSpacing","leading","clip","pdfSubSuperScript","None","internalParagraphIndent","firstLineIndent","trailingSpaces","isNoClip","initialLineIndent","StringTokenizer","textValue","currentPosition","getCharsCount","symbols","numSymbols","curIndex","readLine","pos","substring","text2","peekLine","line","readWord","substr","peekWord","word","read","peek","symbol","tab","spaces","whiteSpacePattern","PdfStringLayouter","isOverloadWithPosition","layout","arg5","arg6","arg7","clientSize","doLayout","format","rectSize","pageHeight","rectangle","reader","PdfStringLayoutResult","lineResult","lines","lineIndent","getLineIndent","layoutLine","numSymbolsInserted","returnedValue","copyToResult","success","numInserted","finalizeResult","firstLine","paragraphIndent","getLineHeight","lineSpacing","getLineWidth","layoutLineHeight","maxWidth","lineWidth","lineType","LineType","FirstParagraphLine","round","addToLineResult","NewLineBreak","builder","curLine","curIndent","isSingleWord","curLineWidth","getWrapType","Character","ln","LayoutBreak","LastParagraphLine","layoutLines","breakType","info","LineInfo","actualSize","max","lineLimit","maxHeight","expHeight","lineHeight","trimLine","size_1","rightToLeft","trim","wordWrap","textRemainder","empty","content","PdfFont","style","fontStyle","Regular","fontSize","setStyle","metrics","getHeight","Bold","Italic","Strikeout","Underline","fontMetrics","pdfFontInternals","measureString","temparg2","layoutArea","temparg3","equalsTo","equalsToFont","getInternals","setInternals","internals","applyFormatSettings","realWidth","characterSpacing","wordSpacing","charSizeMultiplier","syncObject","PdfWriter","pdfDocument","buffer","overload","tempOverload","ObjectStatus","PdfMainObjectCollection","objectCollections","mainObjectCollection","primitiveObjectCollection","isNew","objInfo","ObjectInfo","Registered","lookFor","reference","wasNew","trySetReference","found","setReference","destroy","_i","_a","undefined","pdfObject","objectCollectionIndex","PdfDocumentBase","isStreamCopied","PdfDocument","objects","currentSavingObject","pdfCatalog","setMainObjectCollection","setCrossTable","setCatalog","catalog","filename","Encoding","SW","StreamWriter","encoding_1","SW_1","Promise","resolve","reject","blobData","Blob","docSave","ObjectType","PdfCatalog","sections","tempDictionaryProperties","PdfCrossTable","maxGenNumIndex","objectCount","merging","internalTrailer","pdfObjects","saveHead","mappedReferences","markTrailerReferences","saveObjects","saveCount","xrefPos","registerObject","saveSections","saveTrailer","saveTheEndess","objectCollection","prevXRef","objectNum","prepareSubsection","saveSubsection","str","Free","getItem","offset","generation","isFree","addOffsetLength","addGenNumberLength","total","split","version","generateFileVersion","bNew","getSubReference","objnumber","nextObjNumber","tempIndex","tempkey","tempvalue","bForceNew","saveIndirectObject","currentSavingObj","doSaveObject","free","RegisteredObject","dereference","tempOffset","offsetNumber","tempReference","Normal","PdfPageSize","letter","note","legal","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","a10","b0","b1","b2","b3","b4","b5","archE","archD","archC","archB","archA","flsa","halfLetter","letter11x17","ledger","PdfPageOrientation","PdfPageRotateAngle","PdfNumberStyle","PdfDockStyle","PdfAlignmentStyle","TemplateType","PdfMargins","pdfMargin","setMargins","leftMargin","topMargin","rightMargin","bottomMargin","margin1","margin2","margin3","margin4","PdfPageSettings","margins","pageMargins","pageSize","rotateAngle","RotateAngle0","pageOrientation","Portrait","pageOrigin","isRotation","setSize","orientation","updateSize","Landscape","getActualSize","left","right","top","bottom","PdfStreamWriter","dictionaryName","writeOperator","executeObject","useEvenOddRule","fillStrokePath","fillPath","closeFillPath","textScaling","strokePath","restoreGraphicsState","saveGraphicsState","startNextLine","writePoint","setLeading","setTextRenderingMode","renderingMode","setCharacterSpacing","charSpacing","setWordSpacing","showNextLineText","checkTextParam","writeText","setColorSpace","temparg1","op","matrix","opcode","start","end","updateY","arg","string","writeComment","forStroking","setLineDashPattern","patternOffset","setLineDashPatternHelper","tempPattern","miterLimit","setLineCap","lineCapStyle","setLineJoin","lineJoinStyle","returnValue","PdfPen","dashOffsetValue","penDashPattern","pdfDashStyle","Solid","pdfLineCap","pdfLineJoin","penWidth","internalMiterLimit","setBrush","Custom","Dash","Dot","DashDot","DashDotDot","sBrush","pdfBrush","currentPen","dashControl","lineJoin","lineCap","pen","getPattern","dashOffset","dashPattern","PdfTransformationMatrix","radDegFactor","PI","transformationMatrix","Matrix","translate","offsetX","offsetY","scale","scaleX","scaleY","angle","cos","sin","multiply","degreesToRadians","degreesX","degRadFactor","radiansToDegrees","radians","metrixElements","transform","point","x2","y2","tempMatrix","dispose","ProcedureSets","pdf","imageB","imageC","imageI","TemporaryDictionary","mKeys","mValues","ReferenceError","RangeError","splice","PdfTransparency","mode","PdfAutomaticFieldInfoCollection","automaticFieldsInformation","fieldInfo","automaticFields","PdfGraphicsElement","drawHelper","graphics","bNeedSave","gState","translateTransform","drawInternal","restore","PdfAutomaticField","internalBounds","internalTemplateSize","internalFont","internalBrush","internalPen","internalStringFormat","performDrawHelper","location","scalingX","scalingY","getFont","stringFormat","draw","location_1","PdfAutomaticFieldInfo","getSize","getBrush","defaultFont","getPageFromGraphics","page","currentPage","field","pageNumberFieldLocation","pageNumberField","PdfGraphics","previousTextRenderingMode","Fill","previousCharacterSpacing","previousWordSpacing","previousTextScaling","procedureSets","isNormalRender","isUseFontSize","isItalic","isEmfTextScaled","isEmf","isEmfPlus","isBaselineFormat","emfScalingFactor","colorSpaceChanged","isPointOverload","currentColorSpaces","isImageOptimized","graphicsState","istransparencySet","internalAutomaticFields","startCutIndex","pdfStreamWriter","canvasSize","pdfStringLayoutResult","internalMediaBoxUpperRightBound","clipBounds","pageLayer","bStateSaved","currentBrush","currentFont","bCSInitialized","currentStringFormat","requireProcedureSet","drawPdfTemplate","template","bNeedScale","getTranslateTransform","getScaleTransform","name_1","getName","newLocation","drawString","arg8","arg9","temparg4","temparg5","temparg6","temparg7","temparg8","temparg9","checkCorrectLayoutRectangle","drawStringLayoutResult","drawLine","stateControl","drawRectangle","drawPath","Winding","isPen","isBrush","isEvenOdd","Alternate","drawImage","physicalDimension","name_2","setResources","resource","getLineBounds","lineIndex","layoutRectangle","lineCount","getTextVerticalAlignShift","hShift","getHorizontalAlignShift","shouldJustify","textSize","layoutedRectangle","alignment","Center","Right","lineAlignment","Middle","Bottom","setLayer","layer","pageSave","performDraw","applyStringSettings","horizontalScalingFactor","shift","subSuperScript","SubScript","getDescent","getAscent","resultHeight","remainingString","j","drawLayoutResult","underlineStrikeoutText","getNextPage","section","getPages","setClip","tm","getTextRenderingMode","cs","ws","textHeight","boundsHeight","vAlignShift","lineInfo","hAlignShift","drawAsciiLine","justifyLine","boundsWidth","hasWordSpacing","whitespacesCount","wordSpace","reset","initializeCoordinates","justifyStyle","Justify","goodWidth","hasSpaces","goodLineBreakStyle","underline","strikeout","linePen","createUnderlineStikeoutPen","vShift","underlineYOffset","strikeoutYOffset","x1","FillStroke","Stroke","ClipFlag","layoutBounds","firstParagraphLine","Left","lastDocumentCS","lastGraphicsCS","initCurrentColorSpace","penControl","brushControl","fontControl","colorspace","curSubSuper","prevSubSuper","fontName","setTransparency","trasparencies","transp","td","TransparencyData","name_3","clipTranslateMargins","clipArea","input","scaleTransform","rotateTransform","getRotateTransform","mediaBoxUpperRightBound","cropBox","PdfGraphicsState","textRenderingMode","doRestoreState","pop","pathTypesValuesMask","transparencyObject","GetResourceEventHandler","internalTextRenderingMode","internalTextScaling","pdfColorSpace","pdfGraphics","pdfPen","pdfFont","alphaPen","alphaBrush","blendMode","PdfPageLayer","streamClipPageTemplates","isVisible","sublayer","contentLength","pdfPage","clipPageTemplates","layerid","layerName","initializeGraphics","PdfPageLayerCollection","sign","oPage","gr","sc","isSame","origin","clipRect","getActualBounds","pageSettings","PdfCollection","collection","parentLayerCount","optionalContent","PdfPageBase","lPage","parseLayers","list","firstArgument","secondArgument","addLayer","insertLayer","loadedPage","saveStream","restoreStream","saveData","PdfTemplate","writeTransformation","tempSize","templateSize","PdfResources","addType","addSubType","ByteArray","mPosition","Uint8Array","dataView","DataView","readByte","getBuffer","writeFromBase64String","base64","arr","encodedString","chr1","chr2","chr3","enc2","enc3","keyStr","resultIndex","totalLength","replace","charAt","byteLength","PdfBoolean","objectStatus","saving","boolToStr","ImageFormat","ImageDecoder","mFormat","Unknown","mbitsPerComponent","mStream","mHeight","mWidth","mImageData","internalBuffer","checkIfJpeg","Jpeg","parseJpegImage","imgData","length_1","mJpegHeader","getImageDictionary","imageData","imageStream","tempString","decodedString","imageDataAsNumberArray","compress","getColorSpace","getDecodeParams","decodeParams","mPngHeader","GIF_HEADER","BMP_HEADER","PdfUnitConverter","dpi","updateProportionsHelper","convertUnits","from","to","convertFromPixels","convertToPixels","proportions","pixelPerInch","horizontalResolution","verticalResolution","PdfImage","imageWidth","imageHeight","imagePhysicalDimension","getPointSize","dpiX","dpiY","ucX","ucY","ptWidth","Pixel","Point","ptHeight","PdfBitmap","imageStatus","loadImage","initializeAsync","decoder","baseDictionary","properties","getNames","primitive","names","sName","generateName","pdfNames","fonts","procedureSetName","procSets","removeFont","Guid","getNewGuidString","xobjects","savable","transDic","parentXObjects","hasSameImageStream","oldReference","values_1","guid","randomString","randomNumber","defLayerIndex","modified","pageDictionary","pdfSection","layers","defaultLayerIndex","layerCollection","res","PdfAnnotationCollection","alreadyExistsAnnotationError","missingAnnotationException","internalAnnotations","lists","annotation","doAdd","destination","setPage","layoutResult","lastPosition","setColor","colours","PdfPage","annotationCollection","defaultLayer","parentDocument","annotations","setSection","resetProgress","isProgressOn","getClientSize","doc","drawPageTemplates","containsTemplates","backLayer","drawTemplates","frontLayer","PageAddedEventArgs","PdfSectionPageCollection","PdfDocumentTemplate","leftTemplate","checkElement","topTemplate","rightTemplate","bottomTemplate","evenLeft","evenTop","evenRight","evenBottom","oddLeft","oddTop","oddRight","oddBottom","getLeft","isEven","EvenLeft","OddLeft","getTop","EvenTop","OddTop","getRight","EvenRight","OddRight","getBottom","EvenBottom","OddBottom","pageCollectionIndex","templateElement","PdfSectionTemplate","leftValue","topValue","rightValue","bottomValue","stampValue","PdfSection","pageAdded","pdfPages","settings","initialSettings","sectionCollection","pagesReferences","pageTemplate","pagesCollection","pointToNativePdf","setPageSettings","PageSettingsState","pageCount","foreground","documentHeaders","getDocumentTemplates","documentTemplates","headers","templates","applyDocumentTopTemplate","applyDocumentBottomTemplate","applyDocumentLeftTemplate","applyDocumentRightTemplate","page_1","checkPresence","pageAddedMethod","rh","args","onPageAdded","document_1","getLeftIndentWidth","top_1","getTopIndentHeight","getRightIndentWidth","getBottomIndentHeight","includeMargins","templateWidth","docTemplateWidth","templateHeight","docTemplateHeight","temproaryPages","applyPageSettings","container","parentSettings","PdfSectionCollection","rotateFactor","drawTemplatesHelper","pageRotate","sectionCount","pdfSectionCollection","section_1","checkSection","countPages","forEach","PdfDocumentPageCollection","pdfPageCollectionIndex","previousPageOrientation","getLastSection","getPageByIndex","getPage","sectionStartIndex","pageIndex","numPages","PdfCacheCollection","referenceObjects","pdfFontCollection","search","createNewGroup","group","isMerging","defaultMargin","documentPageCollection","cacheCollection","defaultStandardFont","PdfStandardFont","Helvetica","Cmyk","GrayScale","checkPagesPresence","cache","PdfFontMetrics","lineGap","ascent","descent","getLineGap","clearTypeFonts","clearTypeFontCollection","subScriptSizeFactor","SuperScript","superscriptSizeFactor","widthTable","WidthTable","internalWidthTable","StandardWidthTable","widths","PdfStandardFontMetricsFactory","getMetrics","fontFamily","getHelveticaMetrics","Courier","getCourierMetrics","TimesRoman","getTimesMetrics","Symbol","getSymbolMetrics","ZapfDingbats","getZapfDingbatsMetrics","subSuperScriptFactor","helveticaBoldItalicAscent","helveticaBoldItalicDescent","postScriptName","helveticaBoldItalicName","arialBoldWidth","helveticaBoldAscent","helveticaBoldDescent","helveticaBoldName","helveticaItalicAscent","helveticaItalicDescent","helveticaItalicName","arialWidth","helveticaAscent","helveticaDescent","helveticaName","courierBoldItalicAscent","courierBoldItalicDescent","courierBoldItalicName","fixedWidth","courierBoldAscent","courierBoldDescent","courierBoldName","courierItalicAscent","courierItalicDescent","courierItalicName","courierAscent","courierDescent","courierName","timesBoldItalicAscent","timesBoldItalicDescent","timesBoldItalicName","timesRomanBoldItalicWidths","timesBoldAscent","timesBoldDescent","timesBoldName","timesRomanBoldWidth","timesItalicAscent","timesItalicDescent","timesItalicName","timesRomanItalicWidth","timesAscent","timesDescent","timesName","timesRomanWidth","symbolAscent","symbolDescent","symbolName","symbolWidth","zapfDingbatsAscent","zapfDingbatsDescent","zapfDingbatsName","zapfDingbatsWidth","fontFamilyPrototype","encodings","pdfFontFamily","checkStyle","initializeInternals","convert","getCharWidthInternal","equal","stFont","fontFamilyEqual","lineReducer","styleEqual","createInternals","WinAnsiEncoding","charCode","code","charOffset","PdfAnnotation","textBrush","textFont","internalColor","darkness","nativeRectangle","initialHeight","tempLoacation","PdfLinkAnnotation","PdfActionLinkAnnotation","pdfAction","getSetAction","PdfDocumentLinkAnnotation","pdfDestination","PdfLayoutType","PdfLayoutBreakType","ElementLayouter","layoutElement","getElement","param","isBoundsChanged","layoutInternal","PdfLayoutFormat","baseFormat","break","paginateBounds","boundsSet","usePaginateBounds","layoutType","Paginate","FitPage","layoutPaginateBounds","PdfLayoutParams","layoutFormat","PdfLayoutResult","PdfLayoutElement","bEmbedFonts","TextLayouter","currentBounds","pageResult","TextPageLayoutResult","remainder","layoutOnPage","getLayoutResult","PdfTextLayoutResult","lastLineBounds","checkCorrectBounds","stringResult","textFinished","FitElement","PdfTextWebLink","getTextPageBounds","verticalShift","remainderText","lastLineTextBounds","PdfTextElement","elementValue","hasPointOverload","isPdfTextElement","drawText","stringLayoutResult","previousPosition","calculateResultBounds","lineSize","maximumWidth","startPosition","PdfUriAnnotation","pdfUriAction","uriAction","uniformResourceLocator","uriAnnotation","recalculateBounds","defaultBorder","previousFontStyle","calculateBounds","url","drawMultipleLineWithPoint","drawMultipleLineWithBounds","PdfNumbersConvertor","intArabic","numberStyle","Numeric","LowerLatin","arabicToLetter","toLowerCase","LowerRoman","arabicToRoman","UpperLatin","UpperRoman","retval","generateNumber","arabic","stack","convertToLetter","num","appendChar","magnitude","numberstring","letterLimit","acsiiStartIndex","PdfTemplateValuePair","pdfTemplate","PdfMultipleValueField","drawLocation","PdfPageNumberField","internalNumberStyle","internalGetValue","PdfCompositeField","arguments","internalText","automaticField","PdfSingleValueField","painterGraphics","PdfPageCountField","PdfDestinationMode","PdfDestination","destinationMode","Location","zoomFactor","destinationLocation","initializePrimitive","simplePage","FitToPage","PdfPageTemplateElement","dockStyle","resetAlignment","alignmentStyle","setAlignment","isForeground","currentLocation","templateType","updateDocking","dock","canBeSet","TopLeft","MiddleLeft","BottomLeft","TopCenter","TopRight","MiddleRight","BottomRight","BottomCenter","MiddleCenter","getAlignmentBounds","getDockBounds","getSimpleAlignmentBounds","getTemplateAlignmentBounds","actualBounds","getSimpleDockBounds","getTemplateDockBounds","PdfBorders","defaultBorderPenLeft","dashStyle","defaultBorderPenRight","defaultBorderPenTop","defaultBorderPenBottom","leftPen","rightPen","topPen","bottomPen","PdfPaddings","leftPad","rightPad","topPad","bottomPad","PdfBorderOverlapStyle","PdfGridStyleBase","gridBackgroundBrush","gridTextBrush","gridTextPen","gridFont","PdfGridStyle","gridBorderOverlapStyle","Overlap","bAllowHorizontalOverflow","gridHorizontalOverflowType","PdfHorizontalOverflowType","LastPage","gridCellSpacing","gridCellPadding","PdfGridCellStyle","gridCellBorders","default","PdfGridRowStyle","gridRowBackgroundBrush","setBackgroundBrush","cells","getCell","backgroundBrush","gridRowTextBrush","setTextBrush","gridRowTextPen","setTextPen","textPen","gridRowFont","gridRowBorder","setBorder","borders","setParent","PdfGridCell","row","cellWidth","cellHeight","finsh","rowSpanRemainingHeight","gridRowSpan","colSpan","gridRow","internalIsCellMergeContinue","internalIsRowMergeContinue","internalIsCellMergeStart","internalIsRowMergeStart","remaining","objectValue","rowSpanExists","cellStyle","measureHeight","columnSpanExists","grid","isComplete","measureWidth","layouter","getTextFont","webLink","cellPadding","cellSpacing","drawCellBackground","getBackgroundBrush","adjustContentLayoutArea","returnBounds","rowSpan","cancelSubsequentSpans","allowHorizontalOverflow","rowOverflowIndex","adjustOuterLayoutArea","getTextPen","getTextBrush","strFormat","getStringFormat","innerLayoutArea","temp","imageBounds","drawCellBorders","borderOverlapStyle","Inside","p1","p2","Square","isHeader","currentColIndex","columnSpan","span","totalWidth","compWidth","getColumn","currentRowIndex","rows","rowCollection","totalHeight","getHeader","getRow","rowMergeComplete","calculateWidth","currentValue","cellIndex","PdfGridCellCollection","cell","tempcell","PdfGridColumn","columnWidth","isCustomWidth","PdfGridColumnCollection","internalColumns","measureColumnsWidth","initialWidth","isPageWidth","getDefaultWidths","subFactor","PdfGridRow","gridRowOverflowIndex","isRowHeightSet","isRowMergeComplete","pdfGrid","bRowSpanExists","gridCells","rowStyle","border","gridRowBreakHeight","rowHeight","bColumnSpanExists","PdfGridRowCollection","addRow","temprow","PdfGridHeaderCollection","PdfGridLayoutFormat","PdfGrid","gridSize","isRearranged","pageBounds","listOfNavigatePages","flag","columnRanges","breakRow","beginCellDraw","endCellDraw","beginPageLayout","endPageLayout","bRepeatHeader","gridColumns","gridRows","gridHeaders","gridInitialWidth","gridStyle","pageWidth","childGrid","measure","isGridLayouter","setSpan","gridLocation","currentCellIndex","rowCount","colCount","isCellMergeContinue","isRowMergeContinue","isCellMergeStart","isRowMergeStart","getFormat","currentPageBounds","currentGraphics","startLocation","isChildGrid","hType","horizontalOverflowType","determineColumnDrawRanges","rowWidth","internalWidth","internalHeight","isCorrectWidth","isCorrectHeight","startColumn","endColumn","cellWidths","availableWidth","subWidths","layoutedPages","startPage","cellBounds","range","cellStartIndex","cellEndIndex","returnObject","raiseBeforePageLayout","i_1","drawRow","repeatRow","originalHeight","repeatRowIndex","rowResult","isFinish","OnePage","repeatHeader","i_2","maximumCellBoundsWidth","rowLayoutBoundsWidth","NextPage","reArrangePages","raisePageLayouted","nextPage","pageindex","PdfGridLayoutResult","ReCalculateHeight","currentRow","cancel","raiseBeginPageLayout","PdfGridBeginPageLayoutEventArgs","startRowIndex","PdfGridEndPageLayoutEventArgs","raiseEndPageLayout","result_1","RowLayoutResult","rowHeightWithSpan","maxSpan","currRowIndex","rowMaxHeight","nextRow","calculatedHeight","rowBreakHeight","location_2","cancelSpans","CheckIfDefaultFormat","cellstyle","tempValue","RaiseBeforeCellDraw","RaiseAfterCellDraw","defaultFormat","measureTrailingSpaces","noClip","rowIndex","raiseBeginCellDraw","PdfGridBeginCellDrawEventArgs","raiseEndCellDraw","PdfGridEndCellDrawEventArgs","count_1","GridCellEventArgs","gridRowIndex","gridCellIndex","gridBounds","bSkip","PdfCancelEventArgs","isCancel","BeginPageLayoutEventArgs","EndPageLayoutEventArgs","nextPdfPage","startRow","layoutedBounds","bIsFinished"],"mappings":"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AC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,KAMTjB,EAA8B+B,YAC1B,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,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K,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,EAAG,IAAK,EAAG,IAAK,IAAK,IAAK,IAAM,IAAK,IAAK,IAAK,IAAM,IAAK,IAAK,IAAK,EACzE,IAAK,EAAG,EAAG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAM,IAAK,IAAM,IAAK,IAAK,IAAK,EACzE,IAAK,IAAK,EAAG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,EACzE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,KAMT5C,EAA8B4D,aAC1B,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,IAAK,IAAK,IAAK,IAAK,IAClE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAM,IAAK,IAClE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,KAAM,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAClE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,GAMxC5D,EAA8BgE,mBAC1B,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK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"}