{"version":3,"file":"ej2-lists.umd.min.js","sources":["src/es5/common/list-base.js","src/es5/list-view/list-view.js"],"sourcesContent":["import { extend, merge, isNullOrUndefined, getValue } from '@syncfusion/ej2-base';\nimport { createElement, attributes, prepend, isVisible, append, addClass } from '@syncfusion/ej2-base';\nimport { compile } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nexport var cssClass = {\n    li: 'e-list-item',\n    ul: 'e-list-parent e-ul',\n    group: 'e-list-group-item',\n    icon: 'e-list-icon',\n    text: 'e-list-text',\n    check: 'e-list-check',\n    checked: 'e-checked',\n    selected: 'e-selected',\n    expanded: 'e-expanded',\n    textContent: 'e-text-content',\n    hasChild: 'e-has-child',\n    level: 'e-level',\n    url: 'e-list-url',\n    collapsible: 'e-icon-collapsible',\n    disabled: 'e-disabled',\n    image: 'e-list-img',\n    iconWrapper: 'e-icon-wrapper'\n};\n/**\n * Base List Generator\n */\nexport var ListBase;\n(function (ListBase) {\n    /**\n     * Default mapped fields.\n     */\n    ListBase.defaultMappedFields = {\n        id: 'id',\n        text: 'text',\n        url: 'url',\n        value: 'value',\n        isChecked: 'isChecked',\n        enabled: 'enabled',\n        expanded: 'expanded',\n        selected: 'selected',\n        iconCss: 'iconCss',\n        child: 'child',\n        isVisible: 'isVisible',\n        hasChildren: 'hasChildren',\n        tooltip: 'tooltip',\n        htmlAttributes: 'htmlAttributes',\n        urlAttributes: 'urlAttributes',\n        imageAttributes: 'imageAttributes',\n        imageUrl: 'imageUrl',\n        groupBy: null\n    };\n    var defaultAriaAttributes = {\n        level: 1,\n        listRole: 'presentation',\n        itemRole: 'presentation',\n        groupItemRole: 'group',\n        itemText: 'list-item',\n        wrapperRole: 'presentation'\n    };\n    var defaultListBaseOptions = {\n        showCheckBox: false,\n        showIcon: false,\n        expandCollapse: false,\n        fields: ListBase.defaultMappedFields,\n        ariaAttributes: defaultAriaAttributes,\n        listClass: '',\n        itemClass: '',\n        processSubChild: false,\n        sortOrder: 'None',\n        template: null,\n        groupTemplate: null,\n        expandIconClass: 'e-icon-collapsible',\n        moduleName: 'list',\n        expandIconPosition: 'Right'\n    };\n    /**\n     * Function helps to created and return the UL Li element based on your data.\n     * @param  {{[key:string]:Object}[]|string[]} dataSource - Specifies an array of JSON or String data.\n     * @param  {ListBaseOptions} options? - Specifies the list options that need to provide.\n     */\n    function createList(dataSource, options, isSingleLevel) {\n        var curOpt = extend({}, defaultListBaseOptions, options);\n        var ariaAttributes = extend({}, defaultAriaAttributes, curOpt.ariaAttributes);\n        var type = typeofData(dataSource).typeof;\n        if (type === 'string' || type === 'number') {\n            return createListFromArray(dataSource, isSingleLevel, options);\n        }\n        else {\n            return createListFromJson(dataSource, options, ariaAttributes.level, isSingleLevel);\n        }\n    }\n    ListBase.createList = createList;\n    /**\n     * Function helps to created an element list based on string array input .\n     * @param  {string[]} dataSource - Specifies an array of string data\n     */\n    function createListFromArray(dataSource, isSingleLevel, options) {\n        var subChild = createListItemFromArray(dataSource, isSingleLevel, options);\n        return generateUL(subChild, null, options);\n    }\n    ListBase.createListFromArray = createListFromArray;\n    /**\n     * Function helps to created an element list based on string array input .\n     * @param  {string[]} dataSource - Specifies an array of string data\n     */\n    function createListItemFromArray(dataSource, isSingleLevel, options) {\n        var subChild = [];\n        var curOpt = extend({}, defaultListBaseOptions, options);\n        cssClass = getModuleClass(curOpt.moduleName);\n        var id = genUID(); // generate id for drop-down-list option.\n        for (var i = 0; i < dataSource.length; i++) {\n            if (isNullOrUndefined(dataSource[i])) {\n                continue;\n            }\n            var li = void 0;\n            if (curOpt.itemCreating && typeof curOpt.itemCreating === 'function') {\n                var curData = {\n                    dataSource: dataSource,\n                    curData: dataSource[i],\n                    text: dataSource[i],\n                    options: curOpt\n                };\n                curOpt.itemCreating(curData);\n            }\n            if (isSingleLevel) {\n                li = generateSingleLevelLI(dataSource[i], null, null, [], null, id, i, options);\n            }\n            else {\n                li = generateLI(dataSource[i], null, null, options);\n            }\n            if (curOpt.itemCreated && typeof curOpt.itemCreated === 'function') {\n                var curData = {\n                    dataSource: dataSource,\n                    curData: dataSource[i],\n                    text: dataSource[i],\n                    item: li,\n                    options: curOpt\n                };\n                curOpt.itemCreated(curData);\n            }\n            subChild.push(li);\n        }\n        return subChild;\n    }\n    ListBase.createListItemFromArray = createListItemFromArray;\n    /**\n     * Function helps to created an element list based on array of JSON input .\n     * @param  {{[key:string]:Object}[]} dataSource - Specifies an array of JSON data.\n     * @param  {ListBaseOptions} options? - Specifies the list options that need to provide.\n     */\n    // tslint:disable-next-line:max-func-body-length\n    function createListItemFromJson(dataSource, options, level, isSingleLevel) {\n        var curOpt = extend({}, defaultListBaseOptions, options);\n        cssClass = getModuleClass(curOpt.moduleName);\n        var fields = extend({}, ListBase.defaultMappedFields, curOpt.fields);\n        var ariaAttributes = extend({}, defaultAriaAttributes, curOpt.ariaAttributes);\n        var id;\n        if (level) {\n            ariaAttributes.level = level;\n        }\n        var child = [];\n        var li;\n        if (Object.keys(dataSource).length && !typeofData(dataSource).item.hasOwnProperty(fields.id)) {\n            id = genUID(); // generate id for drop-down-list option.\n        }\n        for (var i = 0; i < dataSource.length; i++) {\n            var fieldData = getFieldValues(dataSource[i], fields);\n            if (isNullOrUndefined(dataSource[i])) {\n                continue;\n            }\n            if (curOpt.itemCreating && typeof curOpt.itemCreating === 'function') {\n                var curData = {\n                    dataSource: dataSource,\n                    curData: dataSource[i],\n                    text: fieldData[fields.text],\n                    options: curOpt,\n                    fields: fields\n                };\n                curOpt.itemCreating(curData);\n            }\n            var curItem = dataSource[i];\n            if (curOpt.itemCreating && typeof curOpt.itemCreating === 'function') {\n                fieldData = getFieldValues(dataSource[i], fields);\n            }\n            if (Object.keys(dataSource).length && fieldData.hasOwnProperty(fields.id)\n                && !isNullOrUndefined(fieldData[fields.id])) {\n                id = fieldData.id;\n            }\n            var innerEle = [];\n            if (curOpt.showCheckBox) {\n                innerEle.push(createElement('input', { className: cssClass.check, attrs: { type: 'checkbox' } }));\n            }\n            if (isSingleLevel === true) {\n                if (curOpt.showIcon && fieldData.hasOwnProperty(fields.iconCss)) {\n                    if (!isNullOrUndefined(fieldData[fields.iconCss])) {\n                        innerEle.push(createElement('span', { className: cssClass.icon + ' ' + fieldData[fields.iconCss] }));\n                    }\n                }\n                li = generateSingleLevelLI(curItem, fields, curOpt.itemClass, innerEle, (curItem.hasOwnProperty('isHeader') &&\n                    curItem.isHeader) ? true : false, id, i, options);\n            }\n            else {\n                li = generateLI(curItem, fields, curOpt.itemClass, options);\n                li.classList.add(cssClass.level + '-' + ariaAttributes.level);\n                li.setAttribute('aria-level', ariaAttributes.level.toString());\n                if (fieldData.hasOwnProperty(fields.tooltip)) {\n                    li.setAttribute('title', fieldData[fields.tooltip]);\n                }\n                if (fieldData.hasOwnProperty(fields.htmlAttributes) && fieldData[fields.htmlAttributes]) {\n                    setAttribute(li, fieldData[fields.htmlAttributes]);\n                }\n                if (fieldData.hasOwnProperty(fields.enabled) && fieldData[fields.enabled] === false) {\n                    li.classList.add(cssClass.disabled);\n                }\n                if (fieldData.hasOwnProperty(fields.isVisible) && fieldData[fields.isVisible] === false) {\n                    li.style.display = 'none';\n                }\n                if (fieldData.hasOwnProperty(fields.imageUrl) && !isNullOrUndefined(fieldData[fields.imageUrl])) {\n                    var attr = { src: fieldData[fields.imageUrl] };\n                    if (fieldData.hasOwnProperty(fields.imageUrl)) {\n                        merge(attr, fieldData[fields.imageAttributes]);\n                    }\n                    prepend([createElement('img', { className: cssClass.image, attrs: attr })], li.firstElementChild);\n                }\n                if (curOpt.showIcon && fieldData.hasOwnProperty(fields.iconCss) && !curOpt.template) {\n                    if (!isNullOrUndefined(fieldData[fields.iconCss])) {\n                        prepend([createElement('div', { className: cssClass.icon + ' ' + fieldData[fields.iconCss] })], li.firstElementChild);\n                    }\n                }\n                if (innerEle.length) {\n                    prepend(innerEle, li.firstElementChild);\n                }\n                processSubChild(curItem, fields, dataSource, curOpt, li, ariaAttributes.level);\n            }\n            if (curOpt.itemCreated && typeof curOpt.itemCreated === 'function') {\n                var curData = {\n                    dataSource: dataSource,\n                    curData: dataSource[i],\n                    text: fieldData[fields.text],\n                    item: li,\n                    options: curOpt,\n                    fields: fields\n                };\n                curOpt.itemCreated(curData);\n            }\n            child.push(li);\n        }\n        return child;\n    }\n    ListBase.createListItemFromJson = createListItemFromJson;\n    /**\n     * Function helps to created an element list based on array of JSON input .\n     * @param  {{[key:string]:Object}[]} dataSource - Specifies an array of JSON data.\n     * @param  {ListBaseOptions} options? - Specifies the list options that need to provide.\n     */\n    function createListFromJson(dataSource, options, level, isSingleLevel) {\n        var curOpt = extend({}, defaultListBaseOptions, options);\n        var li = createListItemFromJson(dataSource, options, level, isSingleLevel);\n        return generateUL(li, curOpt.listClass, options);\n    }\n    ListBase.createListFromJson = createListFromJson;\n    /**\n     * Return the next or previous visible element.\n     * @param  {Element[]|NodeList} elementArray - An element array to find next or previous element.\n     * @param  {Element} li - An element to find next or previous after this element.\n     * @param  {boolean} isPrevious? - Specify when the need get previous element from array.\n     */\n    function getSiblingLI(elementArray, element, isPrevious) {\n        cssClass = getModuleClass(defaultListBaseOptions.moduleName);\n        if (!elementArray || !elementArray.length) {\n            return void 0;\n        }\n        var siblingLI;\n        var liIndex;\n        var liCollections = Array.prototype.slice.call(elementArray);\n        if (element) {\n            liIndex = indexOf(element, liCollections);\n        }\n        else {\n            liIndex = (isPrevious === true ? liCollections.length : -1);\n        }\n        siblingLI = liCollections[liIndex + (isPrevious === true ? -1 : 1)];\n        while (siblingLI && (!isVisible(siblingLI) || siblingLI.classList.contains(cssClass.disabled))) {\n            liIndex = liIndex + (isPrevious === true ? -1 : 1);\n            siblingLI = liCollections[liIndex];\n        }\n        return siblingLI;\n    }\n    ListBase.getSiblingLI = getSiblingLI;\n    /**\n     * Return the index of the li element\n     * @param  {Element} item - An element to find next or previous after this element.\n     * @param  {Element[]|NodeList} elementArray - An element array to find index of given li.\n     */\n    function indexOf(item, elementArray) {\n        if (!elementArray || !item) {\n            return void 0;\n        }\n        else {\n            var liCollections = elementArray;\n            liCollections = Array.prototype.slice.call(elementArray);\n            return liCollections.indexOf(item);\n        }\n    }\n    ListBase.indexOf = indexOf;\n    /**\n     * Returns the grouped data from given dataSource.\n     * @param  {{[key:string]:Object}[]} dataSource - The JSON data which is necessary to process.\n     * @param  {FieldsMapping} fields - Fields that are mapped from the data source.\n     * @param  {SortOrder='None'} sortOrder- Specifies final result sort order.\n     */\n    function groupDataSource(dataSource, fields, sortOrder) {\n        if (sortOrder === void 0) { sortOrder = 'None'; }\n        var cusQuery = new Query().group(fields.groupBy);\n        // need to remove once sorting issues fixed in DataManager\n        cusQuery = addSorting(sortOrder, 'key', cusQuery);\n        var ds = getDataSource(dataSource, cusQuery);\n        dataSource = [];\n        for (var j = 0; j < ds.length; j++) {\n            var itemObj = ds[j].items;\n            var grpItem = {};\n            var hdr = 'isHeader';\n            grpItem[fields.text] = ds[j].key;\n            grpItem[hdr] = true;\n            grpItem.items = itemObj;\n            dataSource.push(grpItem);\n            for (var k = 0; k < itemObj.length; k++) {\n                dataSource.push(itemObj[k]);\n            }\n        }\n        return dataSource;\n    }\n    ListBase.groupDataSource = groupDataSource;\n    /**\n     * Returns a sorted query object.\n     * @param  {SortOrder} sortOrder - Specifies that sort order.\n     * @param  {string} sortBy - Specifies sortBy fields.\n     * @param  {Query=new Query()} query - Pass if any existing query.\n     */\n    function addSorting(sortOrder, sortBy, query) {\n        if (query === void 0) { query = new Query(); }\n        if (sortOrder === 'Ascending') {\n            query.sortBy(sortBy, 'ascending', true);\n        }\n        else if (sortOrder === 'Descending') {\n            query.sortBy(sortBy, 'descending', true);\n        }\n        else {\n            for (var i = 0; i < query.queries.length; i++) {\n                if (query.queries[i].fn === 'onSortBy') {\n                    query.queries.splice(i, 1);\n                }\n            }\n        }\n        return query;\n    }\n    ListBase.addSorting = addSorting;\n    /**\n     * Return an array of JSON Data that processed based on queries.\n     * @param  {{[key:string]:Object}[]} dataSource - Specifies local JSON data source.\n     * @param  {Query} query - Specifies query that need to process.\n     */\n    function getDataSource(dataSource, query) {\n        // tslint:disable-next-line\n        return new DataManager(dataSource)\n            .executeLocal(query);\n    }\n    ListBase.getDataSource = getDataSource;\n    /**\n     * Created JSON data based the UL and LI element\n     * @param  {HTMLElement|Element} element - UL element that need to convert as a JSON\n     * @param  {ListBaseOptions} options? - Specifies listbase option for fields.\n     */\n    function createJsonFromElement(element, options) {\n        var curOpt = extend({}, defaultListBaseOptions, options);\n        var fields = extend({}, ListBase.defaultMappedFields, curOpt.fields);\n        var curEle = element.cloneNode(true);\n        var jsonAr = [];\n        curEle.classList.add('json-parent');\n        var childs = curEle.querySelectorAll('.json-parent>li');\n        curEle.classList.remove('json-parent');\n        for (var i = 0; i < childs.length; i++) {\n            var li = childs[i];\n            var anchor = li.querySelector('a');\n            var ul = li.querySelector('ul');\n            var json = {};\n            var childNodes = anchor ? anchor.childNodes : li.childNodes;\n            var keys = Object.keys(childNodes);\n            for (var i_1 = 0; i_1 < childNodes.length; i_1++) {\n                if (!(childNodes[Number(keys[i_1])]).hasChildNodes()) {\n                    json[fields.text] = childNodes[Number(keys[i_1])].textContent;\n                }\n            }\n            json[fields.id] = genUID();\n            var attributes_1 = getAllAttributes(li);\n            if (Object.keys(attributes_1).length) {\n                json[fields.htmlAttributes] = attributes_1;\n            }\n            if (anchor) {\n                attributes_1 = getAllAttributes(anchor);\n                if (Object.keys(attributes_1).length) {\n                    json[fields.urlAttributes] = attributes_1;\n                }\n            }\n            if (ul) {\n                json[fields.child] = createJsonFromElement(ul, options);\n            }\n            jsonAr.push(json);\n        }\n        return jsonAr;\n    }\n    ListBase.createJsonFromElement = createJsonFromElement;\n    function typeofData(data) {\n        var match = { typeof: null, item: null };\n        for (var i = 0; i < data.length; i++) {\n            if (!isNullOrUndefined(data[i])) {\n                return match = { typeof: typeof data[i], item: data[i] };\n            }\n        }\n        return match;\n    }\n    function setAttribute(element, elementAttributes) {\n        var attr = {};\n        merge(attr, elementAttributes);\n        if (attr.class) {\n            addClass([element], attr.class.split(' '));\n            delete attr.class;\n        }\n        attributes(element, attr);\n    }\n    function getAllAttributes(element) {\n        var attributes = {};\n        var attr = element.attributes;\n        for (var index = 0; index < attr.length; index++) {\n            attributes[attr[index].nodeName] = attr[index].nodeValue;\n        }\n        return attributes;\n    }\n    /**\n     * Created UL element from content template.\n     * @param  {string} template - that need to convert and generate li element.\n     * @param  {{[key:string]:Object}[]} dataSource - Specifies local JSON data source.\n     * @param  {ListBaseOptions} options? - Specifies listbase option for fields.\n     */\n    function renderContentTemplate(template, dataSource, fields, options) {\n        cssClass = getModuleClass(defaultListBaseOptions.moduleName);\n        var ulElement = createElement('ul', { className: cssClass.ul, attrs: { role: 'presentation' } });\n        var curOpt = extend({}, defaultListBaseOptions, options);\n        var compiledString = compile(template);\n        var liCollection = [];\n        var id = genUID(); // generate id for drop-down-list option.\n        for (var i = 0; i < dataSource.length; i++) {\n            var fieldData = getFieldValues(dataSource[i], fields);\n            var curItem = dataSource[i];\n            var isHeader = curItem.isHeader;\n            var value = (typeof curItem === 'string' || typeof curItem === 'number') ? curItem : fieldData[fields.value];\n            if (curOpt.itemCreating && typeof curOpt.itemCreating === 'function') {\n                var curData = {\n                    dataSource: dataSource,\n                    curData: curItem,\n                    text: value,\n                    options: curOpt,\n                    fields: fields\n                };\n                curOpt.itemCreating(curData);\n            }\n            if (curOpt.itemCreating && typeof curOpt.itemCreating === 'function') {\n                fieldData = getFieldValues(dataSource[i], fields);\n                value = fieldData[fields.value];\n            }\n            var li = createElement('li', {\n                id: id + '-' + i,\n                className: isHeader ? cssClass.group : cssClass.li, attrs: { role: 'presentation' }\n            });\n            if (isHeader) {\n                li.innerText = fieldData[fields.text];\n            }\n            else {\n                append(compiledString(curItem), li);\n                li.setAttribute('data-value', value);\n                li.setAttribute('role', 'option');\n            }\n            if (curOpt.itemCreated && typeof curOpt.itemCreated === 'function') {\n                var curData = {\n                    dataSource: dataSource,\n                    curData: curItem,\n                    text: value,\n                    item: li,\n                    options: curOpt,\n                    fields: fields\n                };\n                curOpt.itemCreated(curData);\n            }\n            liCollection.push(li);\n        }\n        append(liCollection, ulElement);\n        return ulElement;\n    }\n    ListBase.renderContentTemplate = renderContentTemplate;\n    /**\n     * Created header items from group template.\n     * @param  {string} template - that need to convert and generate li element.\n     * @param  {{[key:string]:Object}[]} dataSource - Specifies local JSON data source.\n     * @param  {FieldsMapping} fields - Specifies fields for mapping the dataSource.\n     * @param  {Element[]} headerItems? - Specifies listbase header items.\n     */\n    function renderGroupTemplate(groupTemplate, groupDataSource, fields, headerItems) {\n        var compiledString = compile(groupTemplate);\n        var category = fields.groupBy;\n        var headerData = {};\n        for (var _i = 0, headerItems_1 = headerItems; _i < headerItems_1.length; _i++) {\n            var header = headerItems_1[_i];\n            headerData[category] = header.textContent;\n            header.innerHTML = '';\n            append(compiledString(headerData), header);\n        }\n        return headerItems;\n    }\n    ListBase.renderGroupTemplate = renderGroupTemplate;\n    function genUID() {\n        return Math.floor((1 + Math.random()) * 0x10000)\n            .toString(16)\n            .substring(1);\n    }\n    function processSubChild(curItem, fields, ds, options, element, level) {\n        var fieldData = getFieldValues(curItem, fields);\n        // Get SubList   \n        var subDS = fieldData[fields.child] || [];\n        var hasChildren = fieldData[fields.hasChildren];\n        //Create Sub child\n        if (subDS.length) {\n            hasChildren = true;\n            element.classList.add(cssClass.hasChild);\n            if (options.processSubChild) {\n                var subLi = createListFromJson(subDS, options, ++level);\n                element.appendChild(subLi);\n            }\n        }\n        // Create expand and collapse node\n        if (!!options.expandCollapse && hasChildren && !options.template) {\n            if (element.firstElementChild.classList.contains(cssClass.textContent)) {\n                element.firstElementChild.classList.add(cssClass.iconWrapper);\n            }\n            var expandElement = options.expandIconPosition === 'Left' ? prepend : append;\n            expandElement([createElement('div', { className: 'e-icons ' + options.expandIconClass })], element.querySelector('.' + cssClass.textContent));\n        }\n    }\n    function generateSingleLevelLI(item, fields, className, innerElements, grpLI, id, index, options) {\n        var curOpt = extend({}, defaultListBaseOptions, options);\n        var ariaAttributes = extend({}, defaultAriaAttributes, curOpt.ariaAttributes);\n        var text = item;\n        var value = item;\n        var dataSource;\n        var fieldData = getFieldValues(item, fields);\n        if (typeof item !== 'string' && typeof item !== 'number') {\n            dataSource = item;\n            text = (typeof fieldData[fields.text] === 'boolean' || typeof fieldData[fields.text] === 'number') ?\n                fieldData[fields.text] : (fieldData[fields.text] || '');\n            value = fieldData[fields.value];\n        }\n        var elementID;\n        if (!isNullOrUndefined(dataSource) && !isNullOrUndefined(fieldData[fields.id])\n            && fieldData[fields.id] !== '') {\n            elementID = id;\n        }\n        else {\n            elementID = id + '-' + index;\n        }\n        var li = createElement('li', {\n            className: (grpLI === true ? cssClass.group : cssClass.li) + ' ' + (isNullOrUndefined(className) ? '' : className),\n            id: elementID, attrs: (ariaAttributes.groupItemRole !== '' && ariaAttributes.itemRole !== '' ?\n                { role: (grpLI === true ? ariaAttributes.groupItemRole : ariaAttributes.itemRole) } : {})\n        });\n        if (dataSource && fieldData.hasOwnProperty(fields.enabled) && fieldData[fields.enabled].toString() === 'false') {\n            li.classList.add(cssClass.disabled);\n        }\n        if (grpLI) {\n            li.innerText = text;\n        }\n        else {\n            if (!isNullOrUndefined(value)) {\n                li.setAttribute('data-value', value);\n            }\n            li.setAttribute('role', 'option');\n            if (dataSource && fieldData.hasOwnProperty(fields.htmlAttributes) && fieldData[fields.htmlAttributes]) {\n                setAttribute(li, fieldData[fields.htmlAttributes]);\n            }\n            if (innerElements.length) {\n                append(innerElements, li);\n            }\n            if (dataSource && fieldData.hasOwnProperty(fields.url) && fieldData[fields.url]) {\n                li.appendChild(anchorTag(dataSource, fields, text));\n            }\n            else {\n                li.appendChild(document.createTextNode(text));\n            }\n        }\n        return li;\n    }\n    function getModuleClass(moduleName) {\n        var moduleClass;\n        return moduleClass = {\n            li: \"e-\" + moduleName + \"-item\",\n            ul: \"e-\" + moduleName + \"-parent e-ul\",\n            group: \"e-\" + moduleName + \"-group-item\",\n            icon: \"e-\" + moduleName + \"-icon\",\n            text: \"e-\" + moduleName + \"-text\",\n            check: \"e-\" + moduleName + \"-check\",\n            checked: 'e-checked',\n            selected: 'e-selected',\n            expanded: 'e-expanded',\n            textContent: 'e-text-content',\n            hasChild: 'e-has-child',\n            level: 'e-level',\n            url: \"e-\" + moduleName + \"-url\",\n            collapsible: 'e-icon-collapsible',\n            disabled: 'e-disabled',\n            image: \"e-\" + moduleName + \"-img\",\n            iconWrapper: 'e-icon-wrapper'\n        };\n    }\n    function anchorTag(dataSource, fields, text) {\n        var fieldData = getFieldValues(dataSource, fields);\n        var attr = { href: fieldData[fields.url] };\n        if (fieldData.hasOwnProperty(fields.urlAttributes) && fieldData[fields.urlAttributes]) {\n            merge(attr, fieldData[fields.urlAttributes]);\n        }\n        var anchorTag = createElement('a', { className: cssClass.text + ' ' + cssClass.url, innerHTML: text });\n        setAttribute(anchorTag, attr);\n        return anchorTag;\n    }\n    /* tslint:disable:align */\n    function generateLI(item, fields, className, options) {\n        var curOpt = extend({}, defaultListBaseOptions, options);\n        var ariaAttributes = extend({}, defaultAriaAttributes, curOpt.ariaAttributes);\n        var text = item;\n        var uID;\n        var grpLI;\n        var dataSource;\n        var fieldData;\n        if (typeof item !== 'string') {\n            fieldData = getFieldValues(item, fields);\n            dataSource = item;\n            text = fieldData[fields.text] || '';\n            uID = fieldData[fields.id];\n            grpLI = (item.hasOwnProperty('isHeader') && item.isHeader)\n                ? true : false;\n        }\n        var li = createElement('li', {\n            className: (grpLI === true ? cssClass.group : cssClass.li) + ' ' + (isNullOrUndefined(className) ? '' : className),\n            attrs: (ariaAttributes.groupItemRole !== '' && ariaAttributes.itemRole !== '' ?\n                { role: (grpLI === true ? ariaAttributes.groupItemRole : ariaAttributes.itemRole) } : {})\n        });\n        !isNullOrUndefined(uID) ? li.setAttribute('data-uid', uID) : li.setAttribute('data-uid', genUID());\n        if (grpLI && options && options.groupTemplate) {\n            var compiledString = compile(options.groupTemplate);\n            append(compiledString(item), li);\n        }\n        else if (!grpLI && options && options.template) {\n            var compiledString = compile(options.template);\n            append(compiledString(item), li);\n        }\n        else {\n            var innerDiv = createElement('div', { className: cssClass.textContent,\n                attrs: (ariaAttributes.wrapperRole !== '' ? { role: ariaAttributes.wrapperRole } : {}) });\n            if (dataSource && fieldData.hasOwnProperty(fields.url) && fieldData[fields.url]) {\n                innerDiv.appendChild(anchorTag(dataSource, fields, text));\n            }\n            else {\n                innerDiv.appendChild(createElement('span', { className: cssClass.text, innerHTML: text,\n                    attrs: (ariaAttributes.itemText !== '' ? { role: ariaAttributes.itemText } : {}) }));\n            }\n            li.appendChild(innerDiv);\n        }\n        return li;\n    }\n    /**\n     * Returns UL element based on the given LI element.\n     * @param  {HTMLElement[]} liElement - Specifies array of LI element.\n     * @param  {string} className? - Specifies class name that need to be added in UL element.\n     * @param  {ListBaseOptions} options? - Specifies ListBase options.\n     */\n    function generateUL(liElement, className, options) {\n        var curOpt = extend({}, defaultListBaseOptions, options);\n        var ariaAttributes = extend({}, defaultAriaAttributes, curOpt.ariaAttributes);\n        cssClass = getModuleClass(curOpt.moduleName);\n        var ulElement = createElement('ul', {\n            className: cssClass.ul + ' ' + (isNullOrUndefined(className) ? '' : className),\n            attrs: (ariaAttributes.listRole !== '' ? { role: ariaAttributes.listRole } : {})\n        });\n        append(liElement, ulElement);\n        return ulElement;\n    }\n    ListBase.generateUL = generateUL;\n    /**\n     * Returns LI element with additional DIV tag based on the given LI element.\n     * @param  {liElement} liElement - Specifies LI element.\n     * @param  {string} className? - Specifies class name that need to be added in created DIV element.\n     * @param  {ListBaseOptions} options? - Specifies ListBase options.\n     */\n    function generateIcon(liElement, className, options) {\n        var curOpt = extend({}, defaultListBaseOptions, options);\n        var ariaAttributes = extend({}, defaultAriaAttributes, curOpt.ariaAttributes);\n        cssClass = getModuleClass(curOpt.moduleName);\n        var expandElement = curOpt.expandIconPosition === 'Left' ? prepend : append;\n        expandElement([createElement('div', { className: 'e-icons ' + curOpt.expandIconClass + ' ' +\n                    (isNullOrUndefined(className) ? '' : className) })], liElement.querySelector('.' + cssClass.textContent));\n        return liElement;\n    }\n    ListBase.generateIcon = generateIcon;\n})(ListBase || (ListBase = {}));\n/**\n * Used to get dataSource item from complex data using fields.\n * @param {{[key:string]:Object}|string[]|string} dataSource - Specifies an  JSON or String data.\n * @param {FieldsMapping} fields - Fields that are mapped from the dataSource.\n */\nexport function getFieldValues(dataItem, fields) {\n    var fieldData = {};\n    var value;\n    if (isNullOrUndefined(dataItem)) {\n        return dataItem;\n    }\n    else if (typeof (dataItem) === 'string' || typeof (dataItem) === 'number') {\n        return dataItem;\n    }\n    else if (isNullOrUndefined(dataItem.isHeader)) {\n        for (var _i = 0, _a = Object.keys(fields); _i < _a.length; _i++) {\n            var field = _a[_i];\n            if (!isNullOrUndefined(fields[field]) &&\n                typeof (fields[field]) === 'string') {\n                var property = fields[field].split('.');\n                var dataField = property.length > 1 ? property[0] : fields[field];\n                if (!isNullOrUndefined(dataItem[dataField])) {\n                    value = getValue(fields[field], dataItem);\n                    if (!isNullOrUndefined(value)) {\n                        fieldData[fields[field]] = value;\n                    }\n                }\n            }\n        }\n    }\n    else if (!isNullOrUndefined(dataItem.isHeader) && dataItem.isHeader) {\n        fieldData = dataItem;\n    }\n    return fieldData;\n}\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { merge, formatUnit, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { attributes, addClass, removeClass, createElement, prepend, closest, remove } from '@syncfusion/ej2-base';\nimport { Component, EventHandler, Property, Complex, Event } from '@syncfusion/ej2-base';\nimport { NotifyPropertyChanges, ChildProperty, KeyboardEvents } from '@syncfusion/ej2-base';\nimport { Animation, rippleEffect, Touch } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport { createCheckBox } from '@syncfusion/ej2-buttons';\nimport { ListBase, getFieldValues } from '../common/list-base';\n// Effect Configuration Effect[] =  [fromViewBackward,fromViewForward,toViewBackward,toviewForward];\nvar effectsConfig = {\n    'None': [],\n    'SlideLeft': ['SlideRightOut', 'SlideLeftOut', 'SlideLeftIn', 'SlideRightIn'],\n    'SlideDown': ['SlideTopOut', 'SlideBottomOut', 'SlideBottomIn', 'SlideTopIn'],\n    'Zoom': ['FadeOut', 'FadeZoomOut', 'FadeZoomIn', 'FadeIn'],\n    'Fade': ['FadeOut', 'FadeOut', 'FadeIn', 'FadeIn']\n};\nvar effectsRTLConfig = {\n    'None': [],\n    'SlideLeft': ['SlideLeftOut', 'SlideRightOut', 'SlideRightIn', 'SlideLeftIn'],\n    'SlideDown': ['SlideBottomOut', 'SlideTopOut', 'SlideTopIn', 'SlideBottomIn'],\n    'Zoom': ['FadeZoomOut', 'FadeOut', 'FadeIn', 'FadeZoomIn'],\n    'Fade': ['FadeOut', 'FadeOut', 'FadeIn', 'FadeIn']\n};\n// don't use space in classnames.\nvar classNames = {\n    root: 'e-listview',\n    hover: 'e-hover',\n    selected: 'e-active',\n    focused: 'e-focused',\n    parentItem: 'e-list-parent',\n    listItem: 'e-list-item',\n    listItemText: 'e-list-text',\n    grpListItem: 'e-list-group-item',\n    hasChild: 'e-has-child',\n    view: 'e-view',\n    header: 'e-list-header',\n    headerText: 'e-headertext',\n    text: 'e-text',\n    disable: 'e-disabled',\n    content: 'e-content',\n    icon: 'e-icons',\n    backIcon: 'e-icon-back',\n    checkboxWrapper: 'e-checkbox-wrapper',\n    checkbox: 'e-checkbox',\n    checked: 'e-check',\n    checkboxIcon: 'e-frame',\n    checkboxRight: 'e-checkbox-right',\n    checkboxLeft: 'e-checkbox-left',\n    listviewCheckbox: 'e-listview-checkbox',\n    itemCheckList: 'e-checklist'\n};\nvar FieldSettings = /** @class */ (function (_super) {\n    __extends(FieldSettings, _super);\n    function FieldSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('id')\n    ], FieldSettings.prototype, \"id\", void 0);\n    __decorate([\n        Property('text')\n    ], FieldSettings.prototype, \"text\", void 0);\n    __decorate([\n        Property('isChecked')\n    ], FieldSettings.prototype, \"isChecked\", void 0);\n    __decorate([\n        Property('isVisible')\n    ], FieldSettings.prototype, \"isVisible\", void 0);\n    __decorate([\n        Property('enabled')\n    ], FieldSettings.prototype, \"enabled\", void 0);\n    __decorate([\n        Property('iconCss')\n    ], FieldSettings.prototype, \"iconCss\", void 0);\n    __decorate([\n        Property('child')\n    ], FieldSettings.prototype, \"child\", void 0);\n    __decorate([\n        Property('tooltip')\n    ], FieldSettings.prototype, \"tooltip\", void 0);\n    __decorate([\n        Property('groupBy')\n    ], FieldSettings.prototype, \"groupBy\", void 0);\n    __decorate([\n        Property('text')\n    ], FieldSettings.prototype, \"sortBy\", void 0);\n    __decorate([\n        Property('htmlAttributes')\n    ], FieldSettings.prototype, \"htmlAttributes\", void 0);\n    __decorate([\n        Property('tableName')\n    ], FieldSettings.prototype, \"tableName\", void 0);\n    return FieldSettings;\n}(ChildProperty));\nexport { FieldSettings };\n/**\n * Represents the EJ2 ListView control.\n * ```html\n * <div id=\"listview\">\n * <ul>\n * <li>Favourite</li>\n * <li>Documents</li>\n * <li>Downloads</li>\n * </ul>\n * </div>\n * ```\n * ```typescript\n *   var lvObj = new ListView({});\n *   lvObj.appendTo(\"#listview\");\n * ```\n */\nvar ListView = /** @class */ (function (_super) {\n    __extends(ListView, _super);\n    /**\n     * Constructor for creating the widget\n     */\n    function ListView(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.curDSLevel = [];\n        _this.curViewDS = [];\n        _this.keyConfigs = {\n            moveDown: 'downarrow',\n            moveUp: 'uparrow',\n            back: 'backspace',\n            home: 'home',\n            select: 'enter',\n            end: 'end',\n            tab: 'tab',\n            space: 'space'\n        };\n        _this.animateOptions = {};\n        _this.isNestedList = false;\n        _this.currentLiElements = [];\n        _this.resetList = false;\n        _this.selectedData = [];\n        _this.selectedId = [];\n        _this.aniObj = new Animation(_this.animateOptions);\n        return _this;\n    }\n    ListView.prototype.onPropertyChanged = function (newProp, oldProp) {\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'htmlAttributes':\n                    this.setHTMLAttribute();\n                    break;\n                case 'cssClass':\n                    this.setCSSClass(oldProp.cssClass);\n                    break;\n                case 'enable':\n                    this.setEnable();\n                    break;\n                case 'width':\n                case 'height':\n                    this.setSize();\n                    break;\n                case 'enableRtl':\n                    this.setEnableRTL();\n                    break;\n                case 'fields':\n                    this.listBaseOption.fields = this.fields.properties;\n                    this.reRender();\n                    break;\n                case 'headerTitle':\n                    if (!this.curDSLevel.length) {\n                        this.header(this.headerTitle, false);\n                    }\n                    break;\n                case 'showHeader':\n                    {\n                        this.header(this.headerTitle, false);\n                    }\n                    break;\n                case 'showCheckBox':\n                case 'checkBoxPosition':\n                    this.setCheckbox();\n                    break;\n                case 'dataSource':\n                    this.reRender();\n                    break;\n                case 'sortOrder':\n                case 'showIcon':\n                    this.listBaseOption.showIcon = this.showIcon;\n                    this.curViewDS = this.getSubDS();\n                    this.resetCurrentList();\n                    break;\n                default:\n                    break;\n            }\n        }\n    };\n    // Model Changes\n    ListView.prototype.setHTMLAttribute = function () {\n        if (Object.keys(this.htmlAttributes).length) {\n            attributes(this.element, this.htmlAttributes);\n        }\n    };\n    ListView.prototype.setCSSClass = function (oldCSSClass) {\n        if (this.cssClass) {\n            addClass([this.element], this.cssClass.split(' '));\n        }\n        if (oldCSSClass) {\n            removeClass([this.element], oldCSSClass.split(' '));\n        }\n    };\n    ListView.prototype.setSize = function () {\n        this.element.style.height = formatUnit(this.height);\n        this.element.style.width = formatUnit(this.width);\n    };\n    ListView.prototype.setEnable = function () {\n        this.enableElement(this.element, this.enable);\n    };\n    ListView.prototype.setEnableRTL = function () {\n        if (this.enableRtl) {\n            this.element.classList.add('e-rtl');\n        }\n        else {\n            this.element.classList.remove('e-rtl');\n        }\n    };\n    ListView.prototype.enableElement = function (element, isEnabled) {\n        if (isEnabled) {\n            element.classList.remove(classNames.disable);\n        }\n        else {\n            element.classList.add(classNames.disable);\n        }\n    };\n    //Suport Component Functions\n    ListView.prototype.header = function (text, showBack) {\n        if (this.headerEle === undefined && this.showHeader) {\n            this.headerEle = createElement('div', { className: classNames.header });\n            var innerHeaderEle = createElement('span', { className: classNames.headerText, innerHTML: this.headerTitle });\n            var textEle = createElement('div', { className: classNames.text, innerHTML: innerHeaderEle.outerHTML });\n            var hedBackButton = createElement('div', {\n                className: classNames.icon + ' ' + classNames.backIcon + ' e-but-back',\n                attrs: { style: 'display:none;' }\n            });\n            this.headerEle.appendChild(hedBackButton);\n            this.headerEle.appendChild(textEle);\n            this.element.classList.add('e-has-header');\n            prepend([this.headerEle], this.element);\n        }\n        else if (this.headerEle) {\n            if (this.showHeader) {\n                this.headerEle.style.display = '';\n                var textEle = this.headerEle.querySelector('.' + classNames.headerText);\n                var hedBackButton = this.headerEle.querySelector('.' + classNames.backIcon);\n                textEle.innerHTML = text;\n                if (showBack === true) {\n                    hedBackButton.style.display = '';\n                }\n                else {\n                    hedBackButton.style.display = 'none';\n                }\n            }\n            else {\n                this.headerEle.style.display = 'none';\n            }\n        }\n    };\n    // Animation Related Functions\n    ListView.prototype.switchView = function (fromView, toView, reverse) {\n        var _this = this;\n        if (fromView && toView) {\n            var fPos_1 = fromView.style.position;\n            var overflow_1 = (this.element.style.overflow !== 'hidden') ? this.element.style.overflow : '';\n            fromView.style.position = 'absolute';\n            fromView.classList.add('e-view');\n            var anim = void 0;\n            var duration = this.animation.duration;\n            if (this.animation.effect) {\n                anim = (this.enableRtl ? effectsRTLConfig[this.animation.effect] : effectsConfig[this.animation.effect]);\n            }\n            else {\n                var slideLeft = 'SlideLeft';\n                anim = effectsConfig[slideLeft];\n                reverse = this.enableRtl;\n                duration = 0;\n            }\n            this.element.style.overflow = 'hidden';\n            this.aniObj.animate(fromView, {\n                name: (reverse === true ? anim[0] : anim[1]),\n                duration: duration,\n                timingFunction: this.animation.easing,\n                end: function (model) {\n                    fromView.style.display = 'none';\n                    _this.element.style.overflow = overflow_1;\n                    fromView.style.position = fPos_1;\n                    fromView.classList.remove('e-view');\n                }\n            });\n            toView.style.display = '';\n            this.aniObj.animate(toView, {\n                name: (reverse === true ? anim[2] : anim[3]),\n                duration: duration,\n                timingFunction: this.animation.easing,\n                end: function () {\n                    _this.trigger('actionComplete');\n                }\n            });\n            this.curUL = toView;\n        }\n    };\n    ListView.prototype.preRender = function () {\n        this.listBaseOption = {\n            template: this.template,\n            groupTemplate: this.groupTemplate, expandCollapse: true, listClass: '',\n            ariaAttributes: {\n                itemRole: 'listitem', listRole: 'list', itemText: '',\n                groupItemRole: 'group', wrapperRole: 'presentation'\n            },\n            fields: this.fields.properties, sortOrder: this.sortOrder, showIcon: this.showIcon,\n            itemCreated: this.renderCheckbox.bind(this)\n        };\n    };\n    ListView.prototype.renderCheckbox = function (args) {\n        if (args.item.classList.contains(classNames.hasChild)) {\n            this.isNestedList = true;\n        }\n        if (this.showCheckBox && this.isValidLI(args.item)) {\n            var checkboxElement = void 0;\n            var fieldData = void 0;\n            checkboxElement = createCheckBox(false, { checked: false, enableRtl: this.enableRtl,\n                cssClass: classNames.listviewCheckbox });\n            checkboxElement.setAttribute('role', 'checkbox');\n            var frameElement_1 = checkboxElement.querySelector('.' + classNames.checkboxIcon);\n            args.item.classList.add(classNames.itemCheckList);\n            args.item.firstElementChild.classList.add(classNames.checkbox);\n            if (typeof this.dataSource[0] !== 'string') {\n                fieldData = getFieldValues(args.curData, this.listBaseOption.fields);\n                if (!this.resetList && fieldData[this.listBaseOption.fields.isChecked]) {\n                    this.checkInternally(args, checkboxElement);\n                }\n                else if (this.selectedData.indexOf(fieldData[this.listBaseOption.fields.text]) !== -1 &&\n                    this.selectedId.indexOf(fieldData[this.listBaseOption.fields.id]) !== -1) {\n                    this.checkInternally(args, checkboxElement);\n                }\n            }\n            else if ((typeof this.dataSource[0] === 'string' && this.selectedData.indexOf(args.text) !== -1)) {\n                this.checkInternally(args, checkboxElement);\n            }\n            checkboxElement.setAttribute('aria-checked', frameElement_1.classList.contains(classNames.checked) ? 'true' : 'false');\n            if (this.checkBoxPosition === 'Left') {\n                checkboxElement.classList.add(classNames.checkboxLeft);\n                args.item.firstElementChild.classList.add(classNames.checkboxLeft);\n                args.item.firstElementChild.insertBefore(checkboxElement, args.item.firstElementChild.childNodes[0]);\n            }\n            else {\n                checkboxElement.classList.add(classNames.checkboxRight);\n                args.item.firstElementChild.classList.add(classNames.checkboxRight);\n                args.item.firstElementChild.appendChild(checkboxElement);\n            }\n            this.currentLiElements.push(args.item);\n        }\n    };\n    ListView.prototype.checkInternally = function (args, checkboxElement) {\n        args.item.classList.add(classNames.selected);\n        args.item.setAttribute('aria-selected', 'true');\n        checkboxElement.querySelector('.' + classNames.checkboxIcon).classList.add(classNames.checked);\n        checkboxElement.setAttribute('aria-checked', 'true');\n    };\n    /**\n     * It is used to check the checkbox of an item.\n     * @param  {Fields | HTMLElement} item - It accepts Fields or HTML list element as an argument.\n     */\n    ListView.prototype.checkItem = function (item) {\n        this.toggleCheckBase(item, true);\n    };\n    ListView.prototype.toggleCheckBase = function (item, checked) {\n        if (this.showCheckBox) {\n            var liElement = item;\n            if (item instanceof Object && item.constructor !== HTMLLIElement) {\n                liElement = this.getLiFromObjOrElement(item);\n            }\n            if (!isNullOrUndefined(liElement)) {\n                var checkboxIcon = liElement.querySelector('.' + classNames.checkboxIcon);\n                checked ? liElement.classList.add(classNames.selected) : liElement.classList.remove(classNames.selected);\n                liElement.setAttribute('aria-selected', checked ? 'true' : 'false');\n                checked ? checkboxIcon.classList.add(classNames.checked) : checkboxIcon.classList.remove(classNames.checked);\n                checkboxIcon.parentElement.setAttribute('aria-checked', checked ? 'true' : 'false');\n            }\n            this.setSelectedItemData(liElement);\n        }\n    };\n    /**\n     * It is used to uncheck the checkbox of an item.\n     * @param  {Fields | HTMLElement} item - It accepts Fields or HTML list element as an argument.\n     */\n    ListView.prototype.unCheckItem = function (item) {\n        this.toggleCheckBase(item, false);\n    };\n    /**\n     * It is used to check all the items in ListView.\n     */\n    ListView.prototype.checkAllItem = function () {\n        this.toggleAllCheckBase(true);\n    };\n    /**\n     * It is used to un-check all the items in ListView.\n     */\n    ListView.prototype.unCheckAllItem = function () {\n        this.toggleAllCheckBase(false);\n    };\n    ListView.prototype.toggleAllCheckBase = function (checked) {\n        if (this.showCheckBox) {\n            for (var i = 0; i < this.liCollection.length; i++) {\n                var checkIcon = this.liCollection[i].querySelector('.' + classNames.checkboxIcon);\n                if (checked) {\n                    if (!checkIcon.classList.contains(classNames.checked)) {\n                        this.checkItem(this.liCollection[i]);\n                    }\n                }\n                else {\n                    if (checkIcon.classList.contains(classNames.checked)) {\n                        this.unCheckItem(this.liCollection[i]);\n                    }\n                }\n            }\n        }\n    };\n    ListView.prototype.setCheckbox = function () {\n        var _this = this;\n        if (this.showCheckBox) {\n            var liCollection = Array.prototype.slice.call(this.element.querySelectorAll('.' + classNames.listItem));\n            var args_1 = {\n                item: undefined, curData: undefined, dataSource: undefined, fields: undefined,\n                options: undefined, text: ''\n            };\n            liCollection.forEach(function (element) {\n                args_1.item = element;\n                args_1.curData = _this.getItemData(element);\n                if (element.querySelector('.' + classNames.checkboxWrapper)) {\n                    _this.removeElement(element.querySelector('.' + classNames.checkboxWrapper));\n                }\n                _this.renderCheckbox(args_1);\n                if (args_1.item.classList.contains(classNames.selected)) {\n                    _this.checkInternally(args_1, args_1.item.querySelector('.' + classNames.checkboxWrapper));\n                }\n            });\n        }\n        else {\n            var liCollection = Array.prototype.slice.call(this.element.querySelectorAll('.' + classNames.itemCheckList));\n            liCollection.forEach(function (element) {\n                element.classList.remove(classNames.selected);\n                element.firstElementChild.classList.remove(classNames.checkbox);\n                _this.removeElement(element.querySelector('.' + classNames.checkboxWrapper));\n            });\n            if (this.selectedItems) {\n                this.selectedItems.item.classList.add(classNames.selected);\n            }\n        }\n    };\n    ListView.prototype.clickHandler = function (e) {\n        var target = e.target;\n        var classList = target.classList;\n        if (classList.contains(classNames.backIcon) || classList.contains(classNames.headerText)) {\n            if (this.showCheckBox && this.curDSLevel[this.curDSLevel.length - 1]) {\n                this.unCheckAllItem();\n            }\n            this.back();\n        }\n        else {\n            var li = closest(target.parentNode, '.' + classNames.listItem);\n            if (li === null) {\n                li = target;\n            }\n            this.removeFocus();\n            if (this.enable && this.showCheckBox && this.isValidLI(li)) {\n                if (e.target.classList.contains(classNames.checkboxIcon)) {\n                    li.classList.add(classNames.focused);\n                    if (isNullOrUndefined(li.querySelector('.' + classNames.checked))) {\n                        var args = { curData: undefined, dataSource: undefined, fields: undefined, options: undefined,\n                            text: undefined, item: li };\n                        this.checkInternally(args, args.item.querySelector('.' + classNames.checkboxWrapper));\n                    }\n                    else {\n                        this.unCheckItem(li);\n                        li.classList.add(classNames.focused);\n                    }\n                    if (e) {\n                        var eventArgs = this.selectEventData(li, e);\n                        var checkIcon = li.querySelector('.' + classNames.checkboxIcon);\n                        merge(eventArgs, { isChecked: checkIcon.classList.contains(classNames.checked) });\n                        this.trigger('select', eventArgs);\n                    }\n                }\n                else if (li.classList.contains(classNames.hasChild)) {\n                    this.removeHover();\n                    this.removeSelect();\n                    this.removeSelect(li);\n                    this.setSelectLI(li, e);\n                    li.classList.remove(classNames.selected);\n                }\n                else {\n                    this.setCheckboxLI(li, e);\n                }\n            }\n            else {\n                this.setSelectLI(li, e);\n            }\n        }\n    };\n    ListView.prototype.removeElement = function (element) {\n        return element && element.parentNode && element.parentNode.removeChild(element);\n    };\n    ListView.prototype.hoverHandler = function (e) {\n        var curLi = closest(e.target.parentNode, '.' + classNames.listItem);\n        this.setHoverLI(curLi);\n    };\n    ListView.prototype.leaveHandler = function (e) {\n        this.removeHover();\n    };\n    ;\n    ListView.prototype.homeKeyHandler = function (e, end) {\n        var li = this.curUL.querySelectorAll('.' + classNames.listItem);\n        var focusedElement = this.curUL.querySelector('.' + classNames.focused) ||\n            this.curUL.querySelector('.' + classNames.selected);\n        if (focusedElement) {\n            focusedElement.classList.remove(classNames.focused);\n            if (!this.showCheckBox) {\n                focusedElement.classList.remove(classNames.selected);\n            }\n        }\n        var index = !end ? 0 : li.length - 1;\n        if (li[index].classList.contains(classNames.hasChild) || this.showCheckBox) {\n            li[index].classList.add(classNames.focused);\n        }\n        else {\n            this.setSelectLI(li[index], e);\n        }\n    };\n    ListView.prototype.arrowKeyHandler = function (e, prev) {\n        var siblingLI;\n        var li;\n        var hasChild = !isNullOrUndefined(this.curUL.querySelector('.' + classNames.hasChild)) ? true : false;\n        if (hasChild || this.showCheckBox) {\n            li = this.curUL.querySelector('.' + classNames.focused) || this.curUL.querySelector('.' + classNames.selected);\n            siblingLI = ListBase.getSiblingLI(this.curUL.querySelectorAll('.' + classNames.listItem), li, prev);\n            if (!isNullOrUndefined(siblingLI)) {\n                if (li) {\n                    li.classList.remove(classNames.focused);\n                    if (!this.showCheckBox) {\n                        li.classList.remove(classNames.selected);\n                    }\n                }\n                if (siblingLI.classList.contains(classNames.hasChild) || this.showCheckBox) {\n                    siblingLI.classList.add(classNames.focused);\n                }\n                else {\n                    this.setSelectLI(siblingLI, e);\n                }\n            }\n        }\n        else {\n            li = this.curUL.querySelector('.' + classNames.selected);\n            siblingLI = ListBase.getSiblingLI(this.curUL.querySelectorAll('.' + classNames.listItem), li, prev);\n            this.setSelectLI(siblingLI, e);\n        }\n    };\n    ListView.prototype.enterKeyHandler = function (e) {\n        var hasChild = !isNullOrUndefined(this.curUL.querySelector('.' + classNames.hasChild)) ? true : false;\n        var li = this.curUL.querySelector('.' + classNames.focused);\n        if (hasChild && li) {\n            li.classList.remove(classNames.focused);\n            if (this.showCheckBox) {\n                this.removeSelect();\n                this.removeSelect(li);\n                this.removeHover();\n            }\n            this.setSelectLI(li, e);\n        }\n    };\n    ListView.prototype.spaceKeyHandler = function (e) {\n        if (this.enable && this.showCheckBox) {\n            var li = this.curUL.querySelector('.' + classNames.focused);\n            if (!isNullOrUndefined(li) && isNullOrUndefined(li.querySelector('.' + classNames.checked))) {\n                var args = { curData: undefined, dataSource: undefined, fields: undefined, options: undefined,\n                    text: undefined, item: li };\n                this.checkInternally(args, args.item.querySelector('.' + classNames.checkboxWrapper));\n            }\n            else {\n                this.unCheckItem(li);\n            }\n        }\n    };\n    ListView.prototype.keyActionHandler = function (e) {\n        e.preventDefault();\n        switch (e.action) {\n            case 'home':\n                this.homeKeyHandler(e);\n                break;\n            case 'end':\n                this.homeKeyHandler(e, true);\n                break;\n            case 'moveDown':\n                this.arrowKeyHandler(e);\n                break;\n            case 'moveUp':\n                this.arrowKeyHandler(e, true);\n                break;\n            case 'select':\n                this.enterKeyHandler(e);\n                break;\n            case 'back':\n                if (this.showCheckBox && this.curDSLevel[this.curDSLevel.length - 1]) {\n                    this.unCheckAllItem();\n                }\n                this.back();\n                break;\n            case 'tab':\n                this.tabFocus(e);\n                break;\n            case 'space':\n                this.spaceKeyHandler(e);\n                break;\n        }\n    };\n    ListView.prototype.swipeActionHandler = function (e) {\n        if (e.swipeDirection === 'Right') {\n            if (this.showCheckBox && this.curDSLevel[this.curDSLevel.length - 1]) {\n                this.unCheckAllItem();\n            }\n            this.back();\n        }\n    };\n    ListView.prototype.focusout = function () {\n        var focusedElement = this.curUL.querySelector('.' + classNames.focused);\n        var activeElement = this.curUL.querySelector('[aria-selected = true]');\n        if (focusedElement && !this.showCheckBox) {\n            focusedElement.classList.remove(classNames.focused);\n            if (activeElement) {\n                activeElement.classList.add(classNames.selected);\n            }\n        }\n    };\n    ListView.prototype.wireEvents = function () {\n        EventHandler.add(this.element, 'click', this.clickHandler, this);\n        EventHandler.add(this.element, 'mouseover', this.hoverHandler, this);\n        EventHandler.add(this.element, 'mouseout', this.leaveHandler, this);\n        EventHandler.add(this.element, 'focusout', this.focusout, this);\n        this.keyboardModule = new KeyboardEvents(this.element, {\n            keyAction: this.keyActionHandler.bind(this),\n            keyConfigs: this.keyConfigs\n        });\n        this.touchModule = new Touch(this.element, { swipe: this.swipeActionHandler.bind(this) });\n    };\n    ListView.prototype.unWireEvents = function () {\n        EventHandler.remove(this.element, 'click', this.clickHandler);\n        EventHandler.remove(this.element, 'mouseover', this.hoverHandler);\n        EventHandler.remove(this.element, 'mouseout', this.leaveHandler);\n        this.keyboardModule.destroy();\n        this.touchModule.destroy();\n    };\n    ListView.prototype.tabFocus = function (e) {\n        var selectedList = this.curUL.querySelector('.' + classNames.selected);\n        if ((!selectedList && this.curUL) || this.showCheckBox) {\n            var li = this.curUL.querySelector('.' + classNames.listItem);\n            if (li.classList.contains(classNames.hasChild) || this.showCheckBox) {\n                var focusedElement = this.curUL.querySelector('.' + classNames.focused);\n                if (isNullOrUndefined(focusedElement)) {\n                    li.classList.add(classNames.focused);\n                }\n            }\n            else {\n                this.setSelectLI(li, e);\n            }\n        }\n    };\n    ListView.prototype.removeFocus = function () {\n        var focusedLI = this.element.querySelectorAll('.' + classNames.focused);\n        for (var _i = 0, focusedLI_1 = focusedLI; _i < focusedLI_1.length; _i++) {\n            var ele = focusedLI_1[_i];\n            ele.classList.remove(classNames.focused);\n        }\n    };\n    ListView.prototype.removeHover = function () {\n        var hoverLI = this.element.querySelector('.' + classNames.hover);\n        if (hoverLI) {\n            hoverLI.classList.remove(classNames.hover);\n        }\n    };\n    ListView.prototype.removeSelect = function (li) {\n        if (isNullOrUndefined(li)) {\n            var selectedLI = this.element.querySelectorAll('.' + classNames.selected);\n            for (var _i = 0, selectedLI_1 = selectedLI; _i < selectedLI_1.length; _i++) {\n                var ele = selectedLI_1[_i];\n                if (this.showCheckBox && ele.querySelector('.' + classNames.checked)) {\n                    continue;\n                }\n                else {\n                    ele.setAttribute('aria-selected', 'false');\n                    ele.classList.remove(classNames.selected);\n                }\n            }\n        }\n        else {\n            li.classList.remove(classNames.selected);\n            li.setAttribute('aria-selected', 'false');\n        }\n    };\n    ListView.prototype.isValidLI = function (li) {\n        return (li && li.classList.contains(classNames.listItem)\n            && !li.classList.contains(classNames.grpListItem)\n            && !li.classList.contains(classNames.disable));\n    };\n    ListView.prototype.setCheckboxLI = function (li, e) {\n        if (this.isValidLI(li) && this.enable && this.showCheckBox) {\n            if (this.curUL.querySelector('.' + classNames.focused)) {\n                this.curUL.querySelector('.' + classNames.focused).classList.remove(classNames.focused);\n            }\n            li.classList.add(classNames.focused);\n            var checkboxElement = li.querySelector('.' + classNames.checkboxWrapper);\n            var checkIcon = checkboxElement.querySelector('.' + classNames.checkboxIcon + '.' + classNames.icon);\n            this.removeHover();\n            if (!checkIcon.classList.contains(classNames.checked)) {\n                checkIcon.classList.add(classNames.checked);\n                li.classList.add(classNames.selected);\n                li.setAttribute('aria-selected', 'true');\n            }\n            else {\n                checkIcon.classList.remove(classNames.checked);\n                li.classList.remove(classNames.selected);\n                li.setAttribute('aria-selected', 'false');\n            }\n            checkboxElement.setAttribute('aria-checked', checkIcon.classList.contains(classNames.checked) ?\n                'true' : 'false');\n            if (e) {\n                var eventArgs = this.selectEventData(li, e);\n                merge(eventArgs, { isChecked: checkIcon.classList.contains(classNames.checked) });\n                this.trigger('select', eventArgs);\n            }\n            this.setSelectedItemData(li);\n            this.renderSubList(li);\n        }\n    };\n    ListView.prototype.selectEventData = function (li, e) {\n        var data = this.getItemData(li);\n        var fieldData = getFieldValues(data, this.listBaseOption.fields);\n        var selectedItem;\n        if (isNullOrUndefined(data) && typeof this.dataSource[0] === 'string') {\n            selectedItem = { item: li, text: li.innerText.trim(), data: this.dataSource };\n        }\n        else {\n            selectedItem = { item: li, text: fieldData[this.listBaseOption.fields.text], data: data };\n        }\n        var eventArgs = {};\n        merge(eventArgs, selectedItem);\n        if (e) {\n            merge(eventArgs, { isInteracted: true, event: e, index: Array.prototype.indexOf.call(this.curUL.children, li) });\n        }\n        return eventArgs;\n    };\n    ListView.prototype.setSelectedItemData = function (li) {\n        var data = this.getItemData(li);\n        var fieldData = getFieldValues(data, this.listBaseOption.fields);\n        if (isNullOrUndefined(data) && (typeof this.dataSource[0] === 'string')) {\n            this.selectedItems = {\n                item: li,\n                text: li.innerText.trim(),\n                data: this.dataSource\n            };\n        }\n        else {\n            this.selectedItems = {\n                item: li,\n                text: fieldData[this.listBaseOption.fields.text],\n                data: data\n            };\n        }\n    };\n    ListView.prototype.setSelectLI = function (li, e) {\n        if (this.isValidLI(li) && !li.classList.contains(classNames.selected) && this.enable) {\n            if (!this.showCheckBox) {\n                this.removeSelect();\n            }\n            li.classList.add(classNames.selected);\n            li.classList.add(classNames.focused);\n            li.setAttribute('aria-selected', 'true');\n            this.removeHover();\n            this.setSelectedItemData(li);\n            var eventArgs = this.selectEventData(li, e);\n            this.trigger('select', eventArgs);\n            this.selectedLI = li;\n            this.renderSubList(li);\n        }\n    };\n    ListView.prototype.setHoverLI = function (li) {\n        if (this.isValidLI(li) && !li.classList.contains(classNames.hover) && this.enable) {\n            var lastLi = this.element.querySelectorAll('.' + classNames.hover);\n            if (lastLi && lastLi.length) {\n                removeClass(lastLi, classNames.hover);\n            }\n            if (!li.classList.contains(classNames.selected) || this.showCheckBox) {\n                li.classList.add(classNames.hover);\n            }\n        }\n    };\n    ListView.prototype.hoverSiblingLI = function (prev) {\n        var lastLi = this.curUL.querySelector('.' + classNames.hover);\n        var siblingLI;\n        if (!lastLi) {\n            lastLi = this.curUL.querySelector('.' + classNames.selected);\n        }\n        if (lastLi) {\n            siblingLI = ListBase.getSiblingLI(this.curUL.querySelectorAll('.' + classNames.listItem), lastLi, prev);\n        }\n        else {\n            if (prev) {\n                var curLIs = this.curUL.querySelectorAll('.' + classNames.listItem);\n                siblingLI = curLIs[curLIs.length - 1];\n            }\n            else {\n                siblingLI = this.curUL.querySelector('.' + classNames.listItem);\n            }\n        }\n        this.setHoverLI(siblingLI);\n    };\n    //Data Source Related Functions\n    ListView.prototype.getSubDS = function () {\n        var levelKeys = this.curDSLevel;\n        if (levelKeys.length) {\n            var ds = this.localData;\n            for (var _i = 0, levelKeys_1 = levelKeys; _i < levelKeys_1.length; _i++) {\n                var key = levelKeys_1[_i];\n                this.curDSJSON = this.findItemFromDS(ds, { id: key });\n                var fieldData = getFieldValues(this.curDSJSON, this.listBaseOption.fields);\n                ds = this.curDSJSON ? fieldData[this.fields.child] : ds;\n            }\n            return ds;\n        }\n        return this.localData;\n    };\n    ListView.prototype.getItemData = function (li) {\n        var fields = this.getElementUID(li);\n        var curDS = this.dataSource;\n        return this.findItemFromDS(curDS, fields);\n    };\n    ListView.prototype.findItemFromDS = function (dataSource, fields, parent) {\n        var _this = this;\n        var resultJSON;\n        if (dataSource && dataSource.length && fields) {\n            dataSource.some(function (data) {\n                var fieldData = getFieldValues(data, _this.listBaseOption.fields);\n                //(!(fid) || id === fid) && (!(ftext) || text === ftext) && (!!fid || !!ftext)\n                if ((fields.id || fields.text) &&\n                    (!fields.id || fieldData[_this.fields.id] === fields.id) &&\n                    (!fields.text || fieldData[_this.fields.text] === fields.text)) {\n                    resultJSON = (parent ? dataSource : data);\n                }\n                else if (!isNullOrUndefined(fields.id) && isNullOrUndefined(fieldData[_this.fields.id])) {\n                    var li = _this.element.querySelector('[data-uid=\"'\n                        + fields.id + '\"]');\n                    if (li.innerText.trim() === fieldData[_this.fields.text]) {\n                        resultJSON = data;\n                    }\n                }\n                else if (fieldData.hasOwnProperty(_this.fields.child) && fieldData[_this.fields.child].length) {\n                    resultJSON = _this.findItemFromDS(fieldData[_this.fields.child], fields, parent);\n                }\n                return !!resultJSON;\n            });\n        }\n        else {\n            resultJSON = dataSource;\n        }\n        return resultJSON;\n    };\n    ListView.prototype.getQuery = function () {\n        var columns = [];\n        var query = (this.query ? this.query : new Query());\n        if (!this.query) {\n            for (var _i = 0, _a = Object.keys(this.fields.properties); _i < _a.length; _i++) {\n                var column = _a[_i];\n                if (column !== 'tableName' && !!(this.fields[column]) &&\n                    this.fields[column] !==\n                        ListBase.defaultMappedFields[column]\n                    && columns.indexOf(this.fields[column]) === -1) {\n                    columns.push(this.fields[column]);\n                }\n            }\n            query.select(columns);\n            if (this.fields.properties.hasOwnProperty('tableName')) {\n                query.from(this.fields.tableName);\n            }\n        }\n        return query;\n    };\n    ListView.prototype.setViewDataSource = function (dataSource) {\n        if (dataSource === void 0) { dataSource = this.localData; }\n        if (dataSource && this.fields.groupBy) {\n            this.curViewDS = ListBase.groupDataSource(dataSource, this.fields, this.sortOrder);\n        }\n        else if (dataSource && this.sortOrder !== 'None') {\n            this.curViewDS = ListBase.getDataSource(dataSource, ListBase.addSorting(this.sortOrder, this.fields.sortBy));\n        }\n        else {\n            this.curViewDS = dataSource;\n        }\n    };\n    ListView.prototype.isInAnimation = function () {\n        return this.curUL.classList.contains('.e-animate');\n    };\n    ListView.prototype.setLocalData = function () {\n        var _this = this;\n        this.trigger('actionBegin');\n        if (this.dataSource instanceof DataManager) {\n            this.dataSource.executeQuery(this.getQuery()).then(function (e) {\n                if (_this.isDestroyed) {\n                    return;\n                }\n                _this.localData = e.result;\n                _this.renderList();\n                _this.trigger('actionComplete', e);\n            }).catch(function (e) {\n                if (_this.isDestroyed) {\n                    return;\n                }\n                _this.trigger('actionFailure', e);\n            });\n        }\n        else if (!this.dataSource || !this.dataSource.length) {\n            var ul = this.element.querySelector('ul');\n            if (ul) {\n                remove(ul);\n                this.setProperties({ dataSource: ListBase.createJsonFromElement(ul) }, true);\n                this.localData = this.dataSource;\n                this.renderList();\n                this.trigger('actionComplete', { data: this.localData });\n            }\n        }\n        else {\n            this.localData = this.dataSource;\n            this.renderList();\n            this.trigger('actionComplete', { data: this.localData });\n        }\n    };\n    ListView.prototype.reRender = function () {\n        this.element.innerHTML = '';\n        this.curUL = this.headerEle = undefined;\n        this.setLocalData();\n        this.header();\n    };\n    ListView.prototype.resetCurrentList = function () {\n        this.setViewDataSource(this.curViewDS);\n        this.contentContainer.innerHTML = '';\n        this.createList();\n        this.renderIntoDom(this.curUL);\n    };\n    ListView.prototype.createList = function () {\n        this.currentLiElements = [];\n        this.isNestedList = false;\n        this.ulElement = this.curUL = ListBase.createList(this.curViewDS, this.listBaseOption);\n        this.liCollection = this.curUL.querySelectorAll('.' + classNames.listItem);\n    };\n    ListView.prototype.renderSubList = function (li) {\n        var uID = li.getAttribute('data-uid');\n        if (li.classList.contains(classNames.hasChild) && uID) {\n            var ul = closest(li.parentNode, '.' + classNames.parentItem);\n            var ele = this.element.querySelector('[pid=\\'' + uID + '\\']');\n            this.curDSLevel.push(uID);\n            this.setViewDataSource(this.getSubDS());\n            if (!ele) {\n                ele = ListBase.createListFromJson(this.curViewDS, this.listBaseOption, this.curDSLevel.length);\n                ele.setAttribute('pID', uID);\n                ele.style.display = 'none';\n                this.renderIntoDom(ele);\n            }\n            this.switchView(ul, ele);\n            this.liCollection = this.curUL.querySelectorAll('.' + classNames.listItem);\n            var fieldData = getFieldValues(this.selectedItems.data, this.listBaseOption.fields);\n            this.header((fieldData[this.listBaseOption.fields.text]), true);\n            this.selectedLI = undefined;\n        }\n    };\n    ListView.prototype.renderIntoDom = function (ele) {\n        this.contentContainer.appendChild(ele);\n    };\n    ListView.prototype.renderList = function () {\n        this.setViewDataSource();\n        this.createList();\n        this.contentContainer = createElement('div', { className: classNames.content });\n        this.element.appendChild(this.contentContainer);\n        this.renderIntoDom(this.ulElement);\n    };\n    ListView.prototype.getElementUID = function (obj) {\n        var fields = {};\n        if (obj instanceof Element) {\n            fields.id = obj.getAttribute('data-uid');\n        }\n        else {\n            fields = obj;\n        }\n        return fields;\n    };\n    /**\n     * It is used to Initialize the control rendering.\n     */\n    ListView.prototype.render = function () {\n        this.element.classList.add(classNames.root);\n        attributes(this.element, { role: 'list', tabindex: '0' });\n        this.setCSSClass();\n        this.setEnableRTL();\n        this.setEnable();\n        this.setSize();\n        this.wireEvents();\n        this.header();\n        this.setLocalData();\n        this.setHTMLAttribute();\n        this.rippleFn = rippleEffect(this.element, {\n            selector: '.' + classNames.listItem\n        });\n    };\n    /**\n     * It is used to destroy the ListView component.\n     */\n    ListView.prototype.destroy = function () {\n        this.unWireEvents();\n        var classAr = [classNames.root, this.cssClass, classNames.disable, 'e-rtl',\n            'e-has-header'];\n        removeClass([this.element], classAr);\n        this.rippleFn();\n        _super.prototype.destroy.call(this);\n    };\n    /**\n     * It helps to switch back from navigated sub list.\n     */\n    ListView.prototype.back = function () {\n        var pID = this.curDSLevel[this.curDSLevel.length - 1];\n        if (pID === undefined || this.isInAnimation()) {\n            return;\n        }\n        this.curDSLevel.pop();\n        this.setViewDataSource(this.getSubDS());\n        var toUL = this.element.querySelector('[data-uid=\\'' + pID + '\\']');\n        var fromUL = this.curUL;\n        if (!toUL) {\n            this.createList();\n            this.renderIntoDom(this.ulElement);\n            toUL = this.curUL;\n        }\n        else {\n            toUL = toUL.parentElement;\n        }\n        var fieldData = getFieldValues(this.curDSJSON, this.listBaseOption.fields);\n        var text = fieldData[this.fields.text];\n        this.switchView(fromUL, toUL, true);\n        this.removeFocus();\n        var li = this.element.querySelector('[data-uid=\\'' + pID + '\\']');\n        li.classList.add(classNames.focused);\n        if (this.showCheckBox && li.querySelector('.' + classNames.checkboxIcon).classList.contains(classNames.checked)) {\n            li.setAttribute('aria-selected', 'true');\n        }\n        else {\n            li.classList.remove(classNames.selected);\n            li.setAttribute('aria-selected', 'false');\n        }\n        this.liCollection = this.curUL.querySelectorAll('.' + classNames.listItem);\n        this.header((this.curDSLevel.length ? text : this.headerTitle), (this.curDSLevel.length ? true : false));\n    };\n    /**\n     * It is used to select the list item from the ListView.\n     * @param  {Fields|HTMLElement} obj - We can pass element Object or Fields as Object with ID and Text fields.\n     */\n    ListView.prototype.selectItem = function (obj) {\n        if (!isNullOrUndefined(obj)) {\n            if (this.showCheckBox) {\n                this.setCheckboxLI(this.getLiFromObjOrElement(obj));\n            }\n            else {\n                this.setSelectLI(this.getLiFromObjOrElement(obj));\n            }\n        }\n    };\n    ListView.prototype.getLiFromObjOrElement = function (obj) {\n        var li;\n        if (!isNullOrUndefined(obj)) {\n            if (typeof this.dataSource[0] === 'string') {\n                if (obj instanceof Object && obj.constructor === HTMLLIElement) {\n                    var uid = obj.getAttribute('data-uid').toString();\n                    for (var i = 0; i < this.liCollection.length; i++) {\n                        if (this.liCollection[i].getAttribute('data-uid').toString() === uid) {\n                            li = this.liCollection[i];\n                            break;\n                        }\n                    }\n                }\n            }\n            else {\n                var resultJSON = this.getItemData(obj);\n                var fieldData = getFieldValues(resultJSON, this.listBaseOption.fields);\n                if (resultJSON) {\n                    li = this.element.querySelector('[data-uid=\"'\n                        + fieldData[this.fields.id] + '\"]');\n                    if (isNullOrUndefined(li)) {\n                        var curLi = this.element.querySelectorAll('.' + classNames.listItem);\n                        for (var i = 0; i < curLi.length; i++) {\n                            if (curLi[i].innerText.trim() === resultJSON.text) {\n                                li = curLi[i];\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return li;\n    };\n    ListView.prototype.selectMultipleItems = function (obj) {\n        if (!isNullOrUndefined(obj)) {\n            for (var i = 0; i < obj.length; i++) {\n                if (!isNullOrUndefined(obj[i])) {\n                    this.selectItem(obj[i]);\n                }\n            }\n        }\n    };\n    ListView.prototype.getParentId = function () {\n        var parentId = [];\n        if (this.isNestedList) {\n            for (var i = this.curDSLevel.length - 1; i >= 0; i--) {\n                parentId.push(this.curDSLevel[i]);\n            }\n        }\n        return parentId;\n    };\n    /**\n     * It is used to get the currently\n     *  {@link http://ej2.syncfusion.com/documentation/list-view/api-selectedItem.html?lang=typescript selected}\n     *  item details from the list items.\n     */\n    ListView.prototype.getSelectedItems = function () {\n        this.selectedId = [];\n        if (this.showCheckBox) {\n            var liCollection = this.curUL.getElementsByClassName(classNames.selected);\n            var liTextCollection = [];\n            var liDataCollection = [];\n            this.selectedId = [];\n            var dataParent = [];\n            for (var i = 0; i < liCollection.length; i++) {\n                if (typeof this.dataSource[0] === 'string') {\n                    liTextCollection.push(liCollection[i].innerText.trim());\n                }\n                else {\n                    var tempData = this.getItemData(liCollection[i]);\n                    var fieldData = getFieldValues(tempData, this.listBaseOption.fields);\n                    if (this.isNestedList) {\n                        dataParent.push({ data: tempData, parentId: this.getParentId() });\n                    }\n                    else {\n                        liDataCollection.push(tempData);\n                    }\n                    liTextCollection.push(fieldData[this.listBaseOption.fields.text]);\n                    this.selectedId.push(fieldData[this.listBaseOption.fields.id]);\n                }\n            }\n            if (typeof this.dataSource[0] === 'string') {\n                return { item: liCollection, data: this.dataSource, text: liTextCollection };\n            }\n            if (this.isNestedList) {\n                return { item: liCollection, data: dataParent, text: liTextCollection };\n            }\n            else {\n                return { item: liCollection, data: liDataCollection, text: liTextCollection };\n            }\n        }\n        else {\n            var liElement = this.element.getElementsByClassName(classNames.selected)[0];\n            var fieldData = getFieldValues(this.getItemData(liElement), this.listBaseOption.fields);\n            if (typeof this.dataSource[0] === 'string') {\n                return (!isNullOrUndefined(liElement)) ? {\n                    item: liElement, data: this.dataSource,\n                    text: liElement.innerText.trim()\n                } : undefined;\n            }\n            else {\n                if (isNullOrUndefined(fieldData) || isNullOrUndefined(liElement)) {\n                    return undefined;\n                }\n                else {\n                    this.selectedId.push(fieldData[this.listBaseOption.fields.id]);\n                    return {\n                        text: fieldData[this.listBaseOption.fields.text], item: liElement,\n                        data: this.getItemData(liElement)\n                    };\n                }\n            }\n        }\n    };\n    /**\n     * It is used to find out an item details from the current list.\n     * @param  {Fields|HTMLElement} obj - We can pass element Object or Fields as Object with ID and Text fields.\n     */\n    ListView.prototype.findItem = function (obj) {\n        return this.getItemData(obj);\n    };\n    /**\n     * A function that used to enable the disabled list items based on passed element.\n     * @param  {Fields|HTMLElement} obj - We can pass element Object or Fields as Object with ID and Text fields.\n     */\n    ListView.prototype.enableItem = function (obj) {\n        this.setItemState(obj, true);\n    };\n    /**\n     * It is used to disable the list items based on passed element.\n     * @param  {Fields|HTMLElement} obj - We can pass element Object or Fields as Object with ID and Text fields.\n     */\n    ListView.prototype.disableItem = function (obj) {\n        this.setItemState(obj, false);\n    };\n    //A function that used to set state of the list item like enable, disable.\n    ListView.prototype.setItemState = function (obj, isEnable) {\n        var resultJSON = this.getItemData(obj);\n        var fieldData = getFieldValues(resultJSON, this.listBaseOption.fields);\n        if (resultJSON) {\n            var li = this.element.querySelector('[data-uid=\"' + fieldData[this.fields.id] + '\"]');\n            if (isEnable) {\n                if (li) {\n                    li.classList.remove(classNames.disable);\n                }\n                delete resultJSON[this.fields.enabled];\n            }\n            else if (!isEnable) {\n                if (li) {\n                    li.classList.add(classNames.disable);\n                }\n                resultJSON[this.fields.enabled] = false;\n            }\n        }\n    };\n    /**\n     * It is used to show an list item from the ListView.\n     * @param  {Fields|HTMLElement} obj - We can pass element Object or Fields as Object with ID and Text fields.\n     */\n    ListView.prototype.showItem = function (obj) {\n        this.showHideItem(obj, false, '');\n    };\n    /**\n     * It is used to hide an item from the ListView.\n     * @param  {Fields|HTMLElement} obj - We can pass element Object or Fields as Object with ID and Text fields.\n     */\n    ListView.prototype.hideItem = function (obj) {\n        this.showHideItem(obj, true, 'none');\n    };\n    ListView.prototype.showHideItem = function (obj, isHide, display) {\n        var resultJSON = this.getItemData(obj);\n        var fieldData = getFieldValues(resultJSON, this.listBaseOption.fields);\n        if (resultJSON) {\n            var li = this.element.querySelector('[data-uid=\"' + fieldData[this.fields.id] + '\"]');\n            if (li) {\n                li.style.display = display;\n            }\n            if (isHide) {\n                resultJSON[this.fields.isVisible] = false;\n            }\n            else {\n                delete resultJSON[this.fields.isVisible];\n            }\n        }\n    };\n    /**\n     * It adds new item to current ListView.\n     * To add a new item in the list view, we need to pass ‘data’ as array or object and ‘fields’ as object.\n     * For example fields: { text: 'Name', tooltip: 'Name', id:'id'}\n     * @param  {{[key:string]:Object}[]} data - Array JSON Data that need to add.\n     * @param  {Fields} fields - Fields as an Object with ID and Text fields.\n     */\n    ListView.prototype.addItem = function (data, fields) {\n        var ds = this.findItemFromDS(this.dataSource, fields);\n        var fieldData = getFieldValues(ds, this.listBaseOption.fields);\n        var child = fieldData[this.fields.child];\n        if (!child) {\n            child = [];\n        }\n        child = child.concat(data);\n        if (ds instanceof Array) {\n            this.dataSource = this.localData = ds.concat(data);\n            this.setViewDataSource();\n        }\n        else {\n            ds[this.fields.child] = child;\n        }\n        this.resetCurrentList();\n    };\n    /**\n     * A function that removes the item from data source based on passed element like fields: { text: 'Name', tooltip: 'Name', id:'id'}\n     * @param  {Fields|HTMLElement} obj - We can pass element Object or Fields as Object with ID and Text fields.\n     */\n    ListView.prototype.removeItem = function (obj) {\n        this.removeItemFromList(obj, true);\n    };\n    ListView.prototype.removeItemFromList = function (obj, resetList) {\n        var _this = this;\n        var currentlySelectedItems = [];\n        var selectedElements = [];\n        var valid = false;\n        if (typeof this.dataSource[0] === 'string') {\n            if (typeof obj === 'object') {\n                var liCollection_1 = [];\n                var idx_1 = 0;\n                this.liCollection.forEach(function (element) {\n                    if (element === obj) {\n                        valid = true;\n                        _this.removeElement(element);\n                        _this.dataSource.splice(idx_1, 1);\n                        _this.localData = _this.dataSource;\n                    }\n                    else {\n                        liCollection_1.push(element);\n                    }\n                    idx_1++;\n                });\n                this.liCollection = liCollection_1;\n            }\n            else if (typeof obj === 'string') {\n                var liCollection_2 = [];\n                var idx_2 = 0;\n                var ds_1 = [];\n                this.liCollection.forEach(function (element) {\n                    if (element.innerText.trim() === obj) {\n                        valid = true;\n                        _this.removeElement(element);\n                    }\n                    else {\n                        liCollection_2.push(element);\n                        ds_1.push(_this.dataSource[idx_2]);\n                    }\n                    idx_2++;\n                });\n                this.localData = this.curViewDS = this.dataSource = ds_1;\n                this.liCollection = liCollection_2;\n            }\n            var values = this.getSelectedItems();\n            this.selectedData = (!isNullOrUndefined(values)) ? values.text : undefined;\n            selectedElements = undefined;\n            if (resetList && valid) {\n                this.resetList = true;\n                this.resetCurrentList();\n                if (!this.showCheckBox && this.selectedData && this.selectedData.length) {\n                    this.removeSelect();\n                    var index = this.dataSource.lastIndexOf(this.selectedData);\n                    this.liCollection[index].classList.add(classNames.selected);\n                    this.liCollection[index].setAttribute('aria-selected', 'true');\n                }\n                this.resetList = false;\n            }\n        }\n        else {\n            selectedElements = (!isNullOrUndefined(this.getSelectedItems())) ?\n                this.getSelectedItems().data : undefined;\n            var fields_1 = this.getElementUID(obj);\n            var curAr_1;\n            var curDS = this.findItemFromDS(this.dataSource, fields_1, true);\n            if (curDS && obj) {\n                var idx_3;\n                curDS.some(function (data, index, arr) {\n                    var fieldData = getFieldValues(data, _this.listBaseOption.fields);\n                    if ((fields_1.id || fields_1.text) &&\n                        (!fields_1.id || fieldData[_this.fields.id] === fields_1.id) &&\n                        (!fields_1.text || fieldData[_this.fields.text] === fields_1.text)) {\n                        curAr_1 = arr;\n                        idx_3 = index;\n                        return true;\n                    }\n                    return false;\n                });\n                this.removeElement(this.getLiFromObjOrElement(curAr_1[idx_3]));\n                curAr_1.splice(idx_3, 1);\n                this.curViewDS = curAr_1;\n            }\n            var values = this.getSelectedItems();\n            this.selectedData = (!isNullOrUndefined(values)) ? values.text : undefined;\n            if (resetList && curAr_1) {\n                this.resetList = true;\n                this.resetCurrentList();\n                if (!this.showCheckBox && !isNullOrUndefined(values)) {\n                    this.selectItem(values.item);\n                }\n                this.resetList = false;\n            }\n        }\n    };\n    /**\n     * A function that removes multiple item from list view based on given input.\n     * @param  {Fields[] | HTMLElement[]} obj - We can pass array of elements or array of field Object with ID and Text fields.\n     */\n    ListView.prototype.removeMultipleItems = function (obj) {\n        if (obj.length) {\n            for (var i = 0; i < obj.length; i++) {\n                (i === obj.length - 1) ? this.removeItemFromList(obj[i], true) : this.removeItemFromList(obj[i], false);\n            }\n        }\n    };\n    // Module Required function\n    ListView.prototype.getModuleName = function () {\n        return 'listview';\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     */\n    ListView.prototype.getPersistData = function () {\n        return this.addOnPersist(['cssClass', 'enableRtl', 'htmlAttributes',\n            'enable', 'fields', 'animation', 'headerTitle',\n            'sortOrder', 'showIcon', 'height', 'width', 'showCheckBox', 'checkBoxPosition']);\n    };\n    __decorate([\n        Property()\n    ], ListView.prototype, \"cssClass\", void 0);\n    __decorate([\n        Property({})\n    ], ListView.prototype, \"htmlAttributes\", void 0);\n    __decorate([\n        Property(true)\n    ], ListView.prototype, \"enable\", void 0);\n    __decorate([\n        Property([])\n    ], ListView.prototype, \"dataSource\", void 0);\n    __decorate([\n        Property()\n    ], ListView.prototype, \"query\", void 0);\n    __decorate([\n        Complex(ListBase.defaultMappedFields, FieldSettings)\n    ], ListView.prototype, \"fields\", void 0);\n    __decorate([\n        Property({ effect: 'SlideLeft', duration: 400, easing: 'ease' })\n    ], ListView.prototype, \"animation\", void 0);\n    __decorate([\n        Property('None')\n    ], ListView.prototype, \"sortOrder\", void 0);\n    __decorate([\n        Property(false)\n    ], ListView.prototype, \"showIcon\", void 0);\n    __decorate([\n        Property(false)\n    ], ListView.prototype, \"showCheckBox\", void 0);\n    __decorate([\n        Property('Left')\n    ], ListView.prototype, \"checkBoxPosition\", void 0);\n    __decorate([\n        Property('')\n    ], ListView.prototype, \"headerTitle\", void 0);\n    __decorate([\n        Property(false)\n    ], ListView.prototype, \"showHeader\", void 0);\n    __decorate([\n        Property('')\n    ], ListView.prototype, \"height\", void 0);\n    __decorate([\n        Property('')\n    ], ListView.prototype, \"width\", void 0);\n    __decorate([\n        Property(null)\n    ], ListView.prototype, \"template\", void 0);\n    __decorate([\n        Property(null)\n    ], ListView.prototype, \"groupTemplate\", void 0);\n    __decorate([\n        Event()\n    ], ListView.prototype, \"select\", void 0);\n    __decorate([\n        Event()\n    ], ListView.prototype, \"actionBegin\", void 0);\n    __decorate([\n        Event()\n    ], ListView.prototype, \"actionComplete\", void 0);\n    __decorate([\n        Event()\n    ], ListView.prototype, \"actionFailure\", void 0);\n    ListView = __decorate([\n        NotifyPropertyChanges\n    ], ListView);\n    return ListView;\n}(Component));\nexport { ListView };\n"],"names":["getFieldValues","dataItem","fields","value","fieldData","isNullOrUndefined","isHeader","_i","_a","Object","keys","length","field","property","split","dataField","getValue","cssClass","li","ul","group","icon","text","check","checked","selected","expanded","textContent","hasChild","level","url","collapsible","disabled","image","iconWrapper","ListBase","createListFromArray","dataSource","isSingleLevel","options","generateUL","createListItemFromArray","subChild","curOpt","extend","defaultListBaseOptions","getModuleClass","moduleName","id","genUID","i","itemCreating","curData","generateSingleLevelLI","generateLI","itemCreated","item","push","createListItemFromJson","defaultMappedFields","ariaAttributes","defaultAriaAttributes","child","typeofData","hasOwnProperty","curItem","innerEle","showCheckBox","createElement","className","attrs","type","showIcon","iconCss","itemClass","classList","add","setAttribute","toString","tooltip","htmlAttributes","enabled","isVisible","style","display","imageUrl","attr","src","merge","imageAttributes","prepend","firstElementChild","template","ds","element","subDS","hasChildren","processSubChild","subLi","createListFromJson","appendChild","expandCollapse","contains","expandElement","expandIconPosition","append","expandIconClass","querySelector","listClass","indexOf","elementArray","Array","prototype","slice","call","addSorting","sortOrder","sortBy","query","Query","queries","fn","splice","getDataSource","DataManager","executeLocal","createJsonFromElement","curEle","cloneNode","jsonAr","childs","querySelectorAll","remove","anchor","json","childNodes","i_1","Number","hasChildNodes","attributes_1","getAllAttributes","urlAttributes","data","match","typeof","elementAttributes","class","addClass","attributes","index","nodeName","nodeValue","Math","floor","random","substring","innerElements","grpLI","elementID","groupItemRole","itemRole","role","innerText","anchorTag","document","createTextNode","href","innerHTML","uID","groupTemplate","compiledString","compile","innerDiv","wrapperRole","itemText","liElement","ulElement","listRole","isChecked","groupBy","createList","getSiblingLI","isPrevious","siblingLI","liIndex","liCollections","groupDataSource","cusQuery","j","itemObj","items","grpItem","key","k","renderContentTemplate","liCollection","renderGroupTemplate","headerItems","category","headerData","headerItems_1","header","generateIcon","__extends","extendStatics","setPrototypeOf","__proto__","d","b","p","__","this","constructor","create","__decorate","decorators","target","desc","c","arguments","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","effectsConfig","None","SlideLeft","SlideDown","Zoom","Fade","effectsRTLConfig","classNames","FieldSettings","_super","apply","Property","ChildProperty","ListView","_this","curDSLevel","curViewDS","keyConfigs","moveDown","moveUp","back","home","select","end","tab","space","animateOptions","isNestedList","currentLiElements","resetList","selectedData","selectedId","aniObj","Animation","onPropertyChanged","newProp","oldProp","setHTMLAttribute","setCSSClass","setEnable","setSize","setEnableRTL","listBaseOption","properties","reRender","headerTitle","setCheckbox","getSubDS","resetCurrentList","oldCSSClass","removeClass","height","formatUnit","width","enableElement","enable","enableRtl","isEnabled","showBack","undefined","headerEle","showHeader","innerHeaderEle","textEle","outerHTML","hedBackButton","switchView","fromView","toView","reverse","fPos_1","position","overflow_1","overflow","anim","duration","animation","effect","animate","name","timingFunction","easing","model","trigger","curUL","preRender","renderCheckbox","bind","args","isValidLI","checkboxElement","createCheckBox","frameElement_1","checkInternally","checkBoxPosition","insertBefore","checkItem","toggleCheckBase","HTMLLIElement","getLiFromObjOrElement","checkboxIcon","parentElement","setSelectedItemData","unCheckItem","checkAllItem","toggleAllCheckBase","unCheckAllItem","checkIcon","args_1","forEach","getItemData","removeElement","selectedItems","clickHandler","e","closest","parentNode","removeFocus","eventArgs","selectEventData","removeHover","removeSelect","setSelectLI","setCheckboxLI","removeChild","hoverHandler","curLi","setHoverLI","leaveHandler","homeKeyHandler","focusedElement","arrowKeyHandler","prev","enterKeyHandler","spaceKeyHandler","keyActionHandler","preventDefault","action","tabFocus","swipeActionHandler","swipeDirection","focusout","activeElement","wireEvents","EventHandler","keyboardModule","KeyboardEvents","keyAction","touchModule","Touch","swipe","unWireEvents","destroy","focusedLI_1","hoverLI","selectedLI_1","ele","renderSubList","selectedItem","trim","isInteracted","event","children","selectedLI","lastLi","hoverSiblingLI","curLIs","levelKeys","localData","levelKeys_1","curDSJSON","findItemFromDS","getElementUID","curDS","parent","resultJSON","some","getQuery","columns","column","from","tableName","setViewDataSource","isInAnimation","setLocalData","executeQuery","then","isDestroyed","result","renderList","catch","setProperties","contentContainer","renderIntoDom","getAttribute","obj","Element","render","tabindex","rippleFn","rippleEffect","selector","classAr","pID","pop","toUL","fromUL","selectItem","uid","selectMultipleItems","getParentId","parentId","getSelectedItems","getElementsByClassName","liTextCollection","liDataCollection","dataParent","tempData","findItem","enableItem","setItemState","disableItem","isEnable","showItem","showHideItem","hideItem","isHide","addItem","concat","removeItem","removeItemFromList","valid","liCollection_1","idx_1","liCollection_2","idx_2","ds_1","values","lastIndexOf","curAr_1","fields_1","idx_3","arr","removeMultipleItems","getModuleName","getPersistData","addOnPersist","Complex","Event","NotifyPropertyChanges","Component"],"mappings":"uYA4sBA,SAAgBA,EAAeC,EAAUC,GACrC,IACIC,EADAC,KAEJ,GAAIC,oBAAkBJ,GAClB,OAAOA,EAEN,GAA0B,oBAAkC,mBAC7D,OAAOA,EAEN,GAAII,oBAAkBJ,EAASK,UAChC,IAAK,IAAIC,EAAK,EAAGC,EAAKC,OAAOC,KAAKR,GAASK,EAAKC,EAAGG,OAAQJ,IAAM,CAC7D,IAAIK,EAAQJ,EAAGD,GACf,IAAKF,oBAAkBH,EAAOU,KACC,iBAAnBV,EAAOU,GAAsB,CACrC,IAAIC,EAAWX,EAAOU,GAAOE,MAAM,KAC/BC,EAAYF,EAASF,OAAS,EAAIE,EAAS,GAAKX,EAAOU,GACtDP,oBAAkBJ,EAASc,MAC5BZ,EAAQa,WAASd,EAAOU,GAAQX,GAC3BI,oBAAkBF,KACnBC,EAAUF,EAAOU,IAAUT,UAMrCE,oBAAkBJ,EAASK,WAAaL,EAASK,WACvDF,EAAYH,GAEhB,OAAOG,EApuBAa,YACPC,GAAI,cACJC,GAAI,qBACJC,MAAO,oBACPC,KAAM,cACNC,KAAM,cACNC,MAAO,eACPC,QAAS,YACTC,SAAU,aACVC,SAAU,aACVC,YAAa,iBACbC,SAAU,cACVC,MAAO,UACPC,IAAK,aACLC,YAAa,qBACbC,SAAU,aACVC,MAAO,aACPC,YAAa,kBAMjB,SAAWC,GAqEP,SAASC,EAAoBC,EAAYC,EAAeC,GAEpD,OAAOC,EADQC,EAAwBJ,EAAYC,EAAeC,GACtC,KAAMA,GAOtC,SAASE,EAAwBJ,EAAYC,EAAeC,GACxD,IAAIG,KACAC,EAASC,YAAWC,EAAwBN,GAChDtB,WAAW6B,EAAeH,EAAOI,YAEjC,IAAK,IADDC,EAAKC,IACAC,EAAI,EAAGA,EAAIb,EAAW1B,OAAQuC,IACnC,IAAI7C,oBAAkBgC,EAAWa,IAAjC,CAGA,IAAIhC,OAAK,EACT,GAAIyB,EAAOQ,cAA+C,mBAAxBR,EAAOQ,aAA6B,CAClE,IAAIC,GACAf,WAAYA,EACZe,QAASf,EAAWa,GACpB5B,KAAMe,EAAWa,GACjBX,QAASI,GAEbA,EAAOQ,aAAaC,GAQxB,GALIlC,EADAoB,EACKe,EAAsBhB,EAAWa,GAAI,KAAM,QAAU,KAAMF,EAAIE,EAAGX,GAGlEe,EAAWjB,EAAWa,GAAI,KAAM,KAAMX,GAE3CI,EAAOY,aAA6C,mBAAvBZ,EAAOY,YAA4B,CAC5DH,GACAf,WAAYA,EACZe,QAASf,EAAWa,GACpB5B,KAAMe,EAAWa,GACjBM,KAAMtC,EACNqB,QAASI,GAEbA,EAAOY,YAAYH,GAEvBV,EAASe,KAAKvC,GAElB,OAAOwB,EASX,SAASgB,EAAuBrB,EAAYE,EAASV,EAAOS,GACxD,IAAIK,EAASC,YAAWC,EAAwBN,GAChDtB,WAAW6B,EAAeH,EAAOI,YACjC,IAEIC,EAFA9C,EAAS0C,YAAWT,EAASwB,oBAAqBhB,EAAOzC,QACzD0D,EAAiBhB,YAAWiB,EAAuBlB,EAAOiB,gBAE1D/B,IACA+B,EAAe/B,MAAQA,GAE3B,IACIX,EADA4C,KAEArD,OAAOC,KAAK2B,GAAY1B,SAAWoD,EAAW1B,GAAYmB,KAAKQ,eAAe9D,EAAO8C,MACrFA,EAAKC,KAET,IAAK,IAAIC,EAAI,EAAGA,EAAIb,EAAW1B,OAAQuC,IAAK,CACxC,IAAI9C,EAAYJ,EAAeqC,EAAWa,GAAIhD,GAC9C,IAAIG,oBAAkBgC,EAAWa,IAAjC,CAGA,GAAIP,EAAOQ,cAA+C,mBAAxBR,EAAOQ,aAA6B,CAClE,IAAIC,GACAf,WAAYA,EACZe,QAASf,EAAWa,GACpB5B,KAAMlB,EAAUF,EAAOoB,MACvBiB,QAASI,EACTzC,OAAQA,GAEZyC,EAAOQ,aAAaC,GAExB,IAAIa,EAAU5B,EAAWa,GACrBP,EAAOQ,cAA+C,mBAAxBR,EAAOQ,eACrC/C,EAAYJ,EAAeqC,EAAWa,GAAIhD,IAE1CO,OAAOC,KAAK2B,GAAY1B,QAAUP,EAAU4D,eAAe9D,EAAO8C,MAC9D3C,oBAAkBD,EAAUF,EAAO8C,OACvCA,EAAK5C,EAAU4C,IAEnB,IAAIkB,KAIJ,GAHIvB,EAAOwB,cACPD,EAAST,KAAKW,gBAAc,SAAWC,UAAWpD,WAASM,MAAO+C,OAASC,KAAM,gBAE/D,IAAlBjC,EACIK,EAAO6B,UAAYpE,EAAU4D,eAAe9D,EAAOuE,WAC9CpE,oBAAkBD,EAAUF,EAAOuE,WACpCP,EAAST,KAAKW,gBAAc,QAAUC,UAAWpD,WAASI,KAAO,IAAMjB,EAAUF,EAAOuE,aAGhGvD,EAAKmC,EAAsBY,EAAS/D,EAAQyC,EAAO+B,UAAWR,KAAWD,EAAQD,eAAe,cAC5FC,EAAQ3D,UAA0B0C,EAAIE,EAAGX,OAE5C,CAgBD,IAfArB,EAAKoC,EAAWW,EAAS/D,EAAQyC,EAAO+B,UAAWnC,IAChDoC,UAAUC,IAAI3D,WAASY,MAAQ,IAAM+B,EAAe/B,OACvDX,EAAG2D,aAAa,aAAcjB,EAAe/B,MAAMiD,YAC/C1E,EAAU4D,eAAe9D,EAAO6E,UAChC7D,EAAG2D,aAAa,QAASzE,EAAUF,EAAO6E,UAE1C3E,EAAU4D,eAAe9D,EAAO8E,iBAAmB5E,EAAUF,EAAO8E,iBACpEH,EAAa3D,EAAId,EAAUF,EAAO8E,iBAElC5E,EAAU4D,eAAe9D,EAAO+E,WAA0C,IAA9B7E,EAAUF,EAAO+E,UAC7D/D,EAAGyD,UAAUC,IAAI3D,WAASe,UAE1B5B,EAAU4D,eAAe9D,EAAOgF,aAA8C,IAAhC9E,EAAUF,EAAOgF,aAC/DhE,EAAGiE,MAAMC,QAAU,QAEnBhF,EAAU4D,eAAe9D,EAAOmF,YAAchF,oBAAkBD,EAAUF,EAAOmF,WAAY,CAC7F,IAAIC,GAASC,IAAKnF,EAAUF,EAAOmF,WAC/BjF,EAAU4D,eAAe9D,EAAOmF,WAChCG,QAAMF,EAAMlF,EAAUF,EAAOuF,kBAEjCC,WAAStB,gBAAc,OAASC,UAAWpD,WAASgB,MAAOqC,MAAOgB,KAAUpE,EAAGyE,mBAE/EhD,EAAO6B,UAAYpE,EAAU4D,eAAe9D,EAAOuE,WAAa9B,EAAOiD,WAClEvF,oBAAkBD,EAAUF,EAAOuE,WACpCiB,WAAStB,gBAAc,OAASC,UAAWpD,WAASI,KAAO,IAAMjB,EAAUF,EAAOuE,YAAcvD,EAAGyE,oBAGvGzB,EAASvD,QACT+E,UAAQxB,EAAUhD,EAAGyE,mBAsSrC,SAAyB1B,EAAS/D,EAAQ2F,EAAItD,EAASuD,EAASjE,GAC5D,IAAIzB,EAAYJ,EAAeiE,EAAS/D,GAEpC6F,EAAQ3F,EAAUF,EAAO4D,WACzBkC,EAAc5F,EAAUF,EAAO8F,aAEnC,GAAID,EAAMpF,SACNqF,GAAc,EACdF,EAAQnB,UAAUC,IAAI3D,WAASW,UAC3BW,EAAQ0D,iBAAiB,CACzB,IAAIC,EAAQC,EAAmBJ,EAAOxD,IAAWV,GACjDiE,EAAQM,YAAYF,GAI5B,GAAM3D,EAAQ8D,gBAAkBL,IAAgBzD,EAAQqD,SAAU,CAC1DE,EAAQH,kBAAkBhB,UAAU2B,SAASrF,WAASU,cACtDmE,EAAQH,kBAAkBhB,UAAUC,IAAI3D,WAASiB,aAErD,IAAIqE,EAA+C,SAA/BhE,EAAQiE,mBAAgCd,UAAUe,SACtEF,GAAenC,gBAAc,OAASC,UAAW,WAAa9B,EAAQmE,mBAAqBZ,EAAQa,cAAc,IAAM1F,WAASU,eAxT5HsE,CAAgBhC,EAAS/D,EAAQmC,EAAYM,EAAQzB,EAAI0C,EAAe/B,OAE5E,GAAIc,EAAOY,aAA6C,mBAAvBZ,EAAOY,YAA4B,CAC5DH,GACAf,WAAYA,EACZe,QAASf,EAAWa,GACpB5B,KAAMlB,EAAUF,EAAOoB,MACvBkC,KAAMtC,EACNqB,QAASI,EACTzC,OAAQA,GAEZyC,EAAOY,YAAYH,GAEvBU,EAAML,KAAKvC,IAEf,OAAO4C,EAQX,SAASqC,EAAmB9D,EAAYE,EAASV,EAAOS,GACpD,IAAIK,EAASC,YAAWC,EAAwBN,GAEhD,OAAOC,EADEkB,EAAuBrB,EAAYE,EAASV,EAAOS,GACtCK,EAAOiE,UAAWrE,GAoC5C,SAASsE,EAAQrD,EAAMsD,GACnB,GAAKA,GAAiBtD,EAGjB,CAGD,OADgBuD,MAAMC,UAAUC,MAAMC,KAAKJ,GACtBD,QAAQrD,IAsCrC,SAAS2D,EAAWC,EAAWC,EAAQC,GAEnC,QADc,IAAVA,IAAoBA,EAAQ,IAAIC,SAClB,cAAdH,EACAE,EAAMD,OAAOA,EAAQ,aAAa,QAEjC,GAAkB,eAAdD,EACLE,EAAMD,OAAOA,EAAQ,cAAc,QAGnC,IAAK,IAAInE,EAAI,EAAGA,EAAIoE,EAAME,QAAQ7G,OAAQuC,IACV,aAAxBoE,EAAME,QAAQtE,GAAGuE,IACjBH,EAAME,QAAQE,OAAOxE,EAAG,GAIpC,OAAOoE,EAQX,SAASK,EAActF,EAAYiF,GAE/B,OAAO,IAAIM,cAAYvF,GAClBwF,aAAaP,GAQtB,SAASQ,EAAsBhC,EAASvD,GACpC,IAAII,EAASC,YAAWC,EAAwBN,GAC5CrC,EAAS0C,YAAWT,EAASwB,oBAAqBhB,EAAOzC,QACzD6H,EAASjC,EAAQkC,WAAU,GAC3BC,KACJF,EAAOpD,UAAUC,IAAI,eACrB,IAAIsD,EAASH,EAAOI,iBAAiB,mBACrCJ,EAAOpD,UAAUyD,OAAO,eACxB,IAAK,IAAIlF,EAAI,EAAGA,EAAIgF,EAAOvH,OAAQuC,IAAK,CAOpC,IAAK,IANDhC,EAAKgH,EAAOhF,GACZmF,EAASnH,EAAGyF,cAAc,KAC1BxF,EAAKD,EAAGyF,cAAc,MACtB2B,KACAC,EAAaF,EAASA,EAAOE,WAAarH,EAAGqH,WAC7C7H,EAAOD,OAAOC,KAAK6H,GACdC,EAAM,EAAGA,EAAMD,EAAW5H,OAAQ6H,IACjCD,EAAWE,OAAO/H,EAAK8H,KAAQE,kBACjCJ,EAAKpI,EAAOoB,MAAQiH,EAAWE,OAAO/H,EAAK8H,KAAO7G,aAG1D2G,EAAKpI,EAAO8C,IAAMC,IAClB,IAAI0F,EAAeC,EAAiB1H,GAChCT,OAAOC,KAAKiI,GAAchI,SAC1B2H,EAAKpI,EAAO8E,gBAAkB2D,GAE9BN,IACAM,EAAeC,EAAiBP,GAC5B5H,OAAOC,KAAKiI,GAAchI,SAC1B2H,EAAKpI,EAAO2I,eAAiBF,IAGjCxH,IACAmH,EAAKpI,EAAO4D,OAASgE,EAAsB3G,EAAIoB,IAEnD0F,EAAOxE,KAAK6E,GAEhB,OAAOL,EAGX,SAASlE,EAAW+E,GAEhB,IAAK,IADDC,GAAUC,OAAQ,KAAMxF,KAAM,MACzBN,EAAI,EAAGA,EAAI4F,EAAKnI,OAAQuC,IAC7B,IAAK7C,oBAAkByI,EAAK5F,IACxB,OAAO6F,GAAUC,cAAeF,EAAK5F,GAAIM,KAAMsF,EAAK5F,IAG5D,OAAO6F,EAEX,SAASlE,EAAaiB,EAASmD,GAC3B,IAAI3D,KACJE,QAAMF,EAAM2D,GACR3D,EAAK4D,QACLC,YAAUrD,GAAUR,EAAK4D,MAAMpI,MAAM,aAC9BwE,EAAK4D,OAEhBE,aAAWtD,EAASR,GAExB,SAASsD,EAAiB9C,GAGtB,IAAK,IAFDsD,KACA9D,EAAOQ,EAAQsD,WACVC,EAAQ,EAAGA,EAAQ/D,EAAK3E,OAAQ0I,IACrCD,EAAW9D,EAAK+D,GAAOC,UAAYhE,EAAK+D,GAAOE,UAEnD,OAAOH,EAmFX,SAASnG,IACL,OAAOuG,KAAKC,MAA4B,OAArB,EAAID,KAAKE,WACvB5E,SAAS,IACT6E,UAAU,GAyBnB,SAAStG,EAAsBG,EAAMtD,EAAQmE,EAAWuF,EAAeC,EAAO7G,EAAIqG,EAAO9G,GACrF,IAIIF,EAJAM,EAASC,YAAWC,EAAwBN,GAC5CqB,EAAiBhB,YAAWiB,EAAuBlB,EAAOiB,gBAC1DtC,EAAOkC,EACPrD,EAAQqD,EAERpD,EAAYJ,EAAewD,EAAMtD,GACjB,iBAATsD,GAAqC,iBAATA,IACnCnB,EAAamB,EACblC,EAA0C,kBAA3BlB,EAAUF,EAAOoB,OAAyD,iBAA3BlB,EAAUF,EAAOoB,MAC3ElB,EAAUF,EAAOoB,MAASlB,EAAUF,EAAOoB,OAAS,GACxDnB,EAAQC,EAAUF,EAAOC,QAE7B,IAAI2J,EAMAA,EALCzJ,oBAAkBgC,IAAgBhC,oBAAkBD,EAAUF,EAAO8C,MAC1C,KAAzB5C,EAAUF,EAAO8C,IAIRA,EAAK,IAAMqG,EAHXrG,EAKhB,IAAI9B,EAAKkD,gBAAc,MACnBC,YAAsB,IAAVwF,EAAiB5I,WAASG,MAAQH,WAASC,IAAM,KAAOb,oBAAkBgE,GAAa,GAAKA,GACxGrB,GAAI8G,EAAWxF,MAAyC,KAAjCV,EAAemG,eAAoD,KAA5BnG,EAAeoG,UACvEC,MAAiB,IAAVJ,EAAiBjG,EAAemG,cAAgBnG,EAAeoG,eA0BhF,OAxBI3H,GAAcjC,EAAU4D,eAAe9D,EAAO+E,UAAqD,UAAzC7E,EAAUF,EAAO+E,SAASH,YACpF5D,EAAGyD,UAAUC,IAAI3D,WAASe,UAE1B6H,EACA3I,EAAGgJ,UAAY5I,GAGVjB,oBAAkBF,IACnBe,EAAG2D,aAAa,aAAc1E,GAElCe,EAAG2D,aAAa,OAAQ,UACpBxC,GAAcjC,EAAU4D,eAAe9D,EAAO8E,iBAAmB5E,EAAUF,EAAO8E,iBAClFH,EAAa3D,EAAId,EAAUF,EAAO8E,iBAElC4E,EAAcjJ,QACd8F,SAAOmD,EAAe1I,GAEtBmB,GAAcjC,EAAU4D,eAAe9D,EAAO4B,MAAQ1B,EAAUF,EAAO4B,KACvEZ,EAAGkF,YAAY+D,EAAU9H,EAAYnC,EAAQoB,IAG7CJ,EAAGkF,YAAYgE,SAASC,eAAe/I,KAGxCJ,EAEX,SAAS4B,EAAeC,GAEpB,OACI7B,GAAI,KAAO6B,EAAa,QACxB5B,GAAI,KAAO4B,EAAa,eACxB3B,MAAO,KAAO2B,EAAa,cAC3B1B,KAAM,KAAO0B,EAAa,QAC1BzB,KAAM,KAAOyB,EAAa,QAC1BxB,MAAO,KAAOwB,EAAa,SAC3BvB,QAAS,YACTC,SAAU,aACVC,SAAU,aACVC,YAAa,iBACbC,SAAU,cACVC,MAAO,UACPC,IAAK,KAAOiB,EAAa,OACzBhB,YAAa,qBACbC,SAAU,aACVC,MAAO,KAAOc,EAAa,OAC3Bb,YAAa,kBAGrB,SAASiI,EAAU9H,EAAYnC,EAAQoB,GACnC,IAAIlB,EAAYJ,EAAeqC,EAAYnC,GACvCoF,GAASgF,KAAMlK,EAAUF,EAAO4B,MAChC1B,EAAU4D,eAAe9D,EAAO2I,gBAAkBzI,EAAUF,EAAO2I,gBACnErD,QAAMF,EAAMlF,EAAUF,EAAO2I,gBAEjC,IAAIsB,EAAY/F,gBAAc,KAAOC,UAAWpD,WAASK,KAAO,IAAML,WAASa,IAAKyI,UAAWjJ,IAE/F,OADAuD,EAAasF,EAAW7E,GACjB6E,EAGX,SAAS7G,EAAWE,EAAMtD,EAAQmE,EAAW9B,GACzC,IAGIiI,EACAX,EACAxH,EACAjC,EANAuC,EAASC,YAAWC,EAAwBN,GAC5CqB,EAAiBhB,YAAWiB,EAAuBlB,EAAOiB,gBAC1DtC,EAAOkC,EAKS,iBAATA,IAEPnB,EAAamB,EACblC,GAFAlB,EAAYJ,EAAewD,EAAMtD,IAEhBA,EAAOoB,OAAS,GACjCkJ,EAAMpK,EAAUF,EAAO8C,IACvB6G,KAASrG,EAAKQ,eAAe,cAAeR,EAAKlD,WAGrD,IAAIY,EAAKkD,gBAAc,MACnBC,YAAsB,IAAVwF,EAAiB5I,WAASG,MAAQH,WAASC,IAAM,KAAOb,oBAAkBgE,GAAa,GAAKA,GACxGC,MAAyC,KAAjCV,EAAemG,eAAoD,KAA5BnG,EAAeoG,UACxDC,MAAiB,IAAVJ,EAAiBjG,EAAemG,cAAgBnG,EAAeoG,eAGhF,GADC3J,oBAAkBmK,GAA0CtJ,EAAG2D,aAAa,WAAY5B,KAA/D/B,EAAG2D,aAAa,WAAY2F,GAClDX,GAAStH,GAAWA,EAAQkI,cAAe,CAC3C,IAAIC,EAAiBC,UAAQpI,EAAQkI,eACrChE,SAAOiE,EAAelH,GAAOtC,QAE5B,IAAK2I,GAAStH,GAAWA,EAAQqD,SAAU,CACxC8E,EAAiBC,UAAQpI,EAAQqD,UACrCa,SAAOiE,EAAelH,GAAOtC,OAE5B,CACD,IAAI0J,EAAWxG,gBAAc,OAASC,UAAWpD,WAASU,YACtD2C,MAAuC,KAA/BV,EAAeiH,aAAuBZ,KAAMrG,EAAeiH,kBACnExI,GAAcjC,EAAU4D,eAAe9D,EAAO4B,MAAQ1B,EAAUF,EAAO4B,KACvE8I,EAASxE,YAAY+D,EAAU9H,EAAYnC,EAAQoB,IAGnDsJ,EAASxE,YAAYhC,gBAAc,QAAUC,UAAWpD,WAASK,KAAMiJ,UAAWjJ,EAC9EgD,MAAoC,KAA5BV,EAAekH,UAAoBb,KAAMrG,EAAekH,gBAExE5J,EAAGkF,YAAYwE,GAEnB,OAAO1J,EAQX,SAASsB,EAAWuI,EAAW1G,EAAW9B,GACtC,IAAII,EAASC,YAAWC,EAAwBN,GAC5CqB,EAAiBhB,YAAWiB,EAAuBlB,EAAOiB,gBAC9D3C,WAAW6B,EAAeH,EAAOI,YACjC,IAAIiI,EAAY5G,gBAAc,MAC1BC,UAAWpD,WAASE,GAAK,KAAOd,oBAAkBgE,GAAa,GAAKA,GACpEC,MAAoC,KAA5BV,EAAeqH,UAAoBhB,KAAMrG,EAAeqH,eAGpE,OADAxE,SAAOsE,EAAWC,GACXA,EAppBX7I,EAASwB,qBACLX,GAAI,KACJ1B,KAAM,OACNQ,IAAK,MACL3B,MAAO,QACP+K,UAAW,YACXjG,QAAS,UACTvD,SAAU,WACVD,SAAU,WACVgD,QAAS,UACTX,MAAO,QACPoB,UAAW,YACXc,YAAa,cACbjB,QAAS,UACTC,eAAgB,iBAChB6D,cAAe,gBACfpD,gBAAiB,kBACjBJ,SAAU,WACV8F,QAAS,MAEb,IAAItH,GACAhC,MAAO,EACPoJ,SAAU,eACVjB,SAAU,eACVD,cAAe,QACfe,SAAU,YACVD,YAAa,gBAEbhI,GACAsB,cAAc,EACdK,UAAU,EACV6B,gBAAgB,EAChBnG,OAAQiC,EAASwB,oBACjBC,eAAgBC,EAChB+C,UAAW,GACXlC,UAAW,GACXuB,iBAAiB,EACjBmB,UAAW,OACXxB,SAAU,KACV6E,cAAe,KACf/D,gBAAiB,qBACjB3D,WAAY,OACZyD,mBAAoB,SAkBxBrE,EAASiJ,WAXT,SAAoB/I,EAAYE,EAASD,GACrC,IAAIK,EAASC,YAAWC,EAAwBN,GAC5CqB,EAAiBhB,YAAWiB,EAAuBlB,EAAOiB,gBAC1DW,EAAOR,EAAW1B,GAAY2G,OAClC,MAAa,WAATzE,GAA8B,WAATA,EACdnC,EAAoBC,EAAYC,EAAeC,GAG/C4D,EAAmB9D,EAAYE,EAASqB,EAAe/B,MAAOS,IAY7EH,EAASC,oBAAsBA,EA4C/BD,EAASM,wBAA0BA,EAyGnCN,EAASuB,uBAAyBA,EAWlCvB,EAASgE,mBAAqBA,EA4B9BhE,EAASkJ,aArBT,SAAsBvE,EAAchB,EAASwF,GAEzC,GADArK,WAAW6B,EAAeD,EAAuBE,YAC5C+D,GAAiBA,EAAanG,OAAnC,CAGA,IAAI4K,EACAC,EACAC,EAAgB1E,MAAMC,UAAUC,MAAMC,KAAKJ,GAQ/C,IADAyE,EAAYE,GALRD,EADA1F,EACUe,EAAQf,EAAS2F,IAGD,IAAfH,EAAsBG,EAAc9K,QAAU,KAET,IAAf2K,GAAuB,EAAI,IACzDC,KAAerG,YAAUqG,IAAcA,EAAU5G,UAAU2B,SAASrF,WAASe,YAEhFuJ,EAAYE,EADZD,IAAoC,IAAfF,GAAuB,EAAI,GAGpD,OAAOC,IAkBXpJ,EAAS0E,QAAUA,EA4BnB1E,EAASuJ,gBArBT,SAAyBrJ,EAAYnC,EAAQkH,QACvB,IAAdA,IAAwBA,EAAY,QACxC,IAAIuE,GAAW,IAAIpE,SAAQnG,MAAMlB,EAAOiL,SAGpCtF,EAAK8B,EAActF,EADvBsJ,EAAWxE,EAAWC,EAAW,MAAOuE,IAExCtJ,KACA,IAAK,IAAIuJ,EAAI,EAAGA,EAAI/F,EAAGlF,OAAQiL,IAAK,CAChC,IAAIC,EAAUhG,EAAG+F,GAAGE,MAChBC,KAEJA,EAAQ7L,EAAOoB,MAAQuE,EAAG+F,GAAGI,IAC7BD,EAAW,UAAI,EACfA,EAAQD,MAAQD,EAChBxJ,EAAWoB,KAAKsI,GAChB,IAAK,IAAIE,EAAI,EAAGA,EAAIJ,EAAQlL,OAAQsL,IAChC5J,EAAWoB,KAAKoI,EAAQI,IAGhC,OAAO5J,GA0BXF,EAASgF,WAAaA,EAWtBhF,EAASwF,cAAgBA,EA4CzBxF,EAAS2F,sBAAwBA,EAuFjC3F,EAAS+J,sBAtDT,SAA+BtG,EAAUvD,EAAYnC,EAAQqC,GACzDtB,WAAW6B,EAAeD,EAAuBE,YAMjD,IAAK,IALDiI,EAAY5G,gBAAc,MAAQC,UAAWpD,WAASE,GAAImD,OAAS2F,KAAM,kBACzEtH,EAASC,YAAWC,EAAwBN,GAC5CmI,EAAiBC,UAAQ/E,GACzBuG,KACAnJ,EAAKC,IACAC,EAAI,EAAGA,EAAIb,EAAW1B,OAAQuC,IAAK,CACxC,IAAI9C,EAAYJ,EAAeqC,EAAWa,GAAIhD,GAC1C+D,EAAU5B,EAAWa,GACrB5C,EAAW2D,EAAQ3D,SACnBH,EAA4B,iBAAZ8D,GAA2C,iBAAZA,EAAwBA,EAAU7D,EAAUF,EAAOC,OACtG,GAAIwC,EAAOQ,cAA+C,mBAAxBR,EAAOQ,aAA6B,CAClE,IAAIC,GACAf,WAAYA,EACZe,QAASa,EACT3C,KAAMnB,EACNoC,QAASI,EACTzC,OAAQA,GAEZyC,EAAOQ,aAAaC,GAEpBT,EAAOQ,cAA+C,mBAAxBR,EAAOQ,eAErChD,GADAC,EAAYJ,EAAeqC,EAAWa,GAAIhD,IACxBA,EAAOC,QAE7B,IAAIe,EAAKkD,gBAAc,MACnBpB,GAAIA,EAAK,IAAME,EACfmB,UAAW/D,EAAWW,WAASG,MAAQH,WAASC,GAAIoD,OAAS2F,KAAM,kBAEnE3J,EACAY,EAAGgJ,UAAY9J,EAAUF,EAAOoB,OAGhCmF,SAAOiE,EAAezG,GAAU/C,GAChCA,EAAG2D,aAAa,aAAc1E,GAC9Be,EAAG2D,aAAa,OAAQ,WAExBlC,EAAOY,aAA6C,mBAAvBZ,EAAOY,cAChCH,GACAf,WAAYA,EACZe,QAASa,EACT3C,KAAMnB,EACNqD,KAAMtC,EACNqB,QAASI,EACTzC,OAAQA,GAEZyC,EAAOY,YAAYH,IAEvB+I,EAAa1I,KAAKvC,GAGtB,OADAuF,SAAO0F,EAAcnB,GACdA,GAsBX7I,EAASiK,oBAZT,SAA6B3B,EAAeiB,EAAiBxL,EAAQmM,GAIjE,IAAK,IAHD3B,EAAiBC,UAAQF,GACzB6B,EAAWpM,EAAOiL,QAClBoB,KACKhM,EAAK,EAAGiM,EAAgBH,EAAa9L,EAAKiM,EAAc7L,OAAQJ,IAAM,CAC3E,IAAIkM,EAASD,EAAcjM,GAC3BgM,EAAWD,GAAYG,EAAO9K,YAC9B8K,EAAOlC,UAAY,GACnB9D,SAAOiE,EAAe6B,GAAaE,GAEvC,OAAOJ,GAiLXlK,EAASK,WAAaA,EAgBtBL,EAASuK,aATT,SAAsB3B,EAAW1G,EAAW9B,GACxC,IAAII,EAASC,YAAWC,EAAwBN,GAMhD,OALqBK,YAAWiB,EAAuBlB,EAAOiB,gBAC9D3C,WAAW6B,EAAeH,EAAOI,aACiB,SAA9BJ,EAAO6D,mBAAgCd,UAAUe,WACtDrC,gBAAc,OAASC,UAAW,WAAa1B,EAAO+D,gBAAkB,KAC1ErG,oBAAkBgE,GAAa,GAAKA,MAAgB0G,EAAUpE,cAAc,IAAM1F,WAASU,cACjGoJ,GAxqBf,CA2qBG5I,aAAaA,gBCtsBhB,IAAIwK,EAAwC,WACxC,IAAIC,EAAgBnM,OAAOoM,iBACpBC,wBAA2B/F,OAAS,SAAUgG,EAAGC,GAAKD,EAAED,UAAYE,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAIC,KAAKD,EAAOA,EAAEhJ,eAAeiJ,KAAIF,EAAEE,GAAKD,EAAEC,KACzE,OAAO,SAAUF,EAAGC,GAEhB,SAASE,IAAOC,KAAKC,YAAcL,EADnCH,EAAcG,EAAGC,GAEjBD,EAAE/F,UAAkB,OAANgG,EAAavM,OAAO4M,OAAOL,IAAME,EAAGlG,UAAYgG,EAAEhG,UAAW,IAAIkG,IAP3C,GAUxCI,EAA0C,SAAUC,EAAYC,EAAQxB,EAAKyB,GAC7E,IAA2HV,EAAvHW,EAAIC,UAAUhN,OAAQiN,EAAIF,EAAI,EAAIF,EAAkB,OAATC,EAAgBA,EAAOhN,OAAOoN,yBAAyBL,EAAQxB,GAAOyB,EACrH,GAAuB,iBAAZK,SAAoD,mBAArBA,QAAQC,SAAyBH,EAAIE,QAAQC,SAASR,EAAYC,EAAQxB,EAAKyB,QACpH,IAAK,IAAIvK,EAAIqK,EAAW5M,OAAS,EAAGuC,GAAK,EAAGA,KAAS6J,EAAIQ,EAAWrK,MAAI0K,GAAKF,EAAI,EAAIX,EAAEa,GAAKF,EAAI,EAAIX,EAAES,EAAQxB,EAAK4B,GAAKb,EAAES,EAAQxB,KAAS4B,GAChJ,OAAOF,EAAI,GAAKE,GAAKnN,OAAOuN,eAAeR,EAAQxB,EAAK4B,GAAIA,GAW5DK,GACAC,QACAC,WAAc,gBAAiB,eAAgB,cAAe,gBAC9DC,WAAc,cAAe,iBAAkB,gBAAiB,cAChEC,MAAS,UAAW,cAAe,aAAc,UACjDC,MAAS,UAAW,UAAW,SAAU,WAEzCC,GACAL,QACAC,WAAc,eAAgB,gBAAiB,eAAgB,eAC/DC,WAAc,iBAAkB,cAAe,aAAc,iBAC7DC,MAAS,cAAe,UAAW,SAAU,cAC7CC,MAAS,UAAW,UAAW,SAAU,WAGzCE,EACM,aADNA,EAEO,UAFPA,EAGU,WAHVA,EAIS,YAJTA,EAKY,gBALZA,EAMU,cANVA,EAQa,oBARbA,EASU,cATVA,EAWQ,gBAXRA,EAYY,eAZZA,EAaM,SAbNA,EAcS,aAdTA,EAeS,YAfTA,EAgBM,UAhBNA,EAiBU,cAjBVA,EAkBiB,qBAlBjBA,EAmBU,aAnBVA,EAoBS,UApBTA,EAqBc,UArBdA,EAsBe,mBAtBfA,EAuBc,kBAvBdA,EAwBkB,sBAxBlBA,EAyBe,cAEfC,EAA+B,SAAUC,GAEzC,SAASD,IACL,OAAkB,OAAXC,GAAmBA,EAAOC,MAAMxB,KAAMQ,YAAcR,KAsC/D,OAxCAR,EAAU8B,EAAeC,GAIzBpB,GACIsB,WAAS,OACVH,EAAczH,UAAW,UAAM,GAClCsG,GACIsB,WAAS,SACVH,EAAczH,UAAW,YAAQ,GACpCsG,GACIsB,WAAS,cACVH,EAAczH,UAAW,iBAAa,GACzCsG,GACIsB,WAAS,cACVH,EAAczH,UAAW,iBAAa,GACzCsG,GACIsB,WAAS,YACVH,EAAczH,UAAW,eAAW,GACvCsG,GACIsB,WAAS,YACVH,EAAczH,UAAW,eAAW,GACvCsG,GACIsB,WAAS,UACVH,EAAczH,UAAW,aAAS,GACrCsG,GACIsB,WAAS,YACVH,EAAczH,UAAW,eAAW,GACvCsG,GACIsB,WAAS,YACVH,EAAczH,UAAW,eAAW,GACvCsG,GACIsB,WAAS,SACVH,EAAczH,UAAW,cAAU,GACtCsG,GACIsB,WAAS,mBACVH,EAAczH,UAAW,sBAAkB,GAC9CsG,GACIsB,WAAS,cACVH,EAAczH,UAAW,iBAAa,GAClCyH,GACTI,iBAkBEC,EAA0B,SAAUJ,GAKpC,SAASI,EAASvM,EAASuD,GACvB,IAAIiJ,EAAQL,EAAOxH,KAAKiG,KAAM5K,EAASuD,IAAYqH,KAoBnD,OAnBA4B,EAAMC,cACND,EAAME,aACNF,EAAMG,YACFC,SAAU,YACVC,OAAQ,UACRC,KAAM,YACNC,KAAM,OACNC,OAAQ,QACRC,IAAK,MACLC,IAAK,MACLC,MAAO,SAEXX,EAAMY,kBACNZ,EAAMa,cAAe,EACrBb,EAAMc,qBACNd,EAAMe,WAAY,EAClBf,EAAMgB,gBACNhB,EAAMiB,cACNjB,EAAMkB,OAAS,IAAIC,YAAUnB,EAAMY,gBAC5BZ,EAqzCX,OA90CApC,EAAUmC,EAAUJ,GA2BpBI,EAAS9H,UAAUmJ,kBAAoB,SAAUC,EAASC,GACtD,IAAK,IAAI9P,EAAK,EAAGC,EAAKC,OAAOC,KAAK0P,GAAU7P,EAAKC,EAAGG,OAAQJ,IAAM,CAE9D,OADWC,EAAGD,IAEV,IAAK,iBACD4M,KAAKmD,mBACL,MACJ,IAAK,WACDnD,KAAKoD,YAAYF,EAAQpP,UACzB,MACJ,IAAK,SACDkM,KAAKqD,YACL,MACJ,IAAK,QACL,IAAK,SACDrD,KAAKsD,UACL,MACJ,IAAK,YACDtD,KAAKuD,eACL,MACJ,IAAK,SACDvD,KAAKwD,eAAezQ,OAASiN,KAAKjN,OAAO0Q,WACzCzD,KAAK0D,WACL,MACJ,IAAK,cACI1D,KAAK6B,WAAWrO,QACjBwM,KAAKV,OAAOU,KAAK2D,aAAa,GAElC,MACJ,IAAK,aAEG3D,KAAKV,OAAOU,KAAK2D,aAAa,GAElC,MACJ,IAAK,eACL,IAAK,mBACD3D,KAAK4D,cACL,MACJ,IAAK,aACD5D,KAAK0D,WACL,MACJ,IAAK,YACL,IAAK,WACD1D,KAAKwD,eAAenM,SAAW2I,KAAK3I,SACpC2I,KAAK8B,UAAY9B,KAAK6D,WACtB7D,KAAK8D,sBAQrBnC,EAAS9H,UAAUsJ,iBAAmB,WAC9B7P,OAAOC,KAAKyM,KAAKnI,gBAAgBrE,QACjCyI,aAAW+D,KAAKrH,QAASqH,KAAKnI,iBAGtC8J,EAAS9H,UAAUuJ,YAAc,SAAUW,GACnC/D,KAAKlM,UACLkI,YAAUgE,KAAKrH,SAAUqH,KAAKlM,SAASH,MAAM,MAE7CoQ,GACAC,eAAahE,KAAKrH,SAAUoL,EAAYpQ,MAAM,OAGtDgO,EAAS9H,UAAUyJ,QAAU,WACzBtD,KAAKrH,QAAQX,MAAMiM,OAASC,aAAWlE,KAAKiE,QAC5CjE,KAAKrH,QAAQX,MAAMmM,MAAQD,aAAWlE,KAAKmE,QAE/CxC,EAAS9H,UAAUwJ,UAAY,WAC3BrD,KAAKoE,cAAcpE,KAAKrH,QAASqH,KAAKqE,SAE1C1C,EAAS9H,UAAU0J,aAAe,WAC1BvD,KAAKsE,UACLtE,KAAKrH,QAAQnB,UAAUC,IAAI,SAG3BuI,KAAKrH,QAAQnB,UAAUyD,OAAO,UAGtC0G,EAAS9H,UAAUuK,cAAgB,SAAUzL,EAAS4L,GAC9CA,EACA5L,EAAQnB,UAAUyD,OAAOoG,GAGzB1I,EAAQnB,UAAUC,IAAI4J,IAI9BM,EAAS9H,UAAUyF,OAAS,SAAUnL,EAAMqQ,GACxC,QAAuBC,IAAnBzE,KAAK0E,WAA2B1E,KAAK2E,WAAY,CACjD3E,KAAK0E,UAAYzN,gBAAc,OAASC,UAAWmK,IACnD,IAAIuD,EAAiB3N,gBAAc,QAAUC,UAAWmK,EAAuBjE,UAAW4C,KAAK2D,cAC3FkB,EAAU5N,gBAAc,OAASC,UAAWmK,EAAiBjE,UAAWwH,EAAeE,YACvFC,EAAgB9N,gBAAc,OAC9BC,UAAWmK,EAAkB,IAAMA,EAAsB,cACzDlK,OAASa,MAAO,mBAEpBgI,KAAK0E,UAAUzL,YAAY8L,GAC3B/E,KAAK0E,UAAUzL,YAAY4L,GAC3B7E,KAAKrH,QAAQnB,UAAUC,IAAI,gBAC3Bc,WAASyH,KAAK0E,WAAY1E,KAAKrH,cAE9B,GAAIqH,KAAK0E,UACV,GAAI1E,KAAK2E,WAAY,CACjB3E,KAAK0E,UAAU1M,MAAMC,QAAU,GAC3B4M,EAAU7E,KAAK0E,UAAUlL,cAAc,IAAM6H,GAC7C0D,EAAgB/E,KAAK0E,UAAUlL,cAAc,IAAM6H,GACvDwD,EAAQzH,UAAYjJ,EAEhB4Q,EAAc/M,MAAMC,SADP,IAAbuM,EAC8B,GAGA,YAIlCxE,KAAK0E,UAAU1M,MAAMC,QAAU,QAK3C0J,EAAS9H,UAAUmL,WAAa,SAAUC,EAAUC,EAAQC,GACxD,IAAIvD,EAAQ5B,KACZ,GAAIiF,GAAYC,EAAQ,CACpB,IAAIE,EAASH,EAASjN,MAAMqN,SACxBC,EAA8C,WAAhCtF,KAAKrH,QAAQX,MAAMuN,SAAyBvF,KAAKrH,QAAQX,MAAMuN,SAAW,GAC5FN,EAASjN,MAAMqN,SAAW,WAC1BJ,EAASzN,UAAUC,IAAI,UACvB,IAAI+N,OAAO,EACPC,EAAWzF,KAAK0F,UAAUD,SAC9B,GAAIzF,KAAK0F,UAAUC,OACfH,EAAQxF,KAAKsE,UAAYlD,EAAiBpB,KAAK0F,UAAUC,QAAU7E,EAAcd,KAAK0F,UAAUC,YAE/F,CAEDH,EAAO1E,EAAuB,UAC9BqE,EAAUnF,KAAKsE,UACfmB,EAAW,EAEfzF,KAAKrH,QAAQX,MAAMuN,SAAW,SAC9BvF,KAAK8C,OAAO8C,QAAQX,GAChBY,MAAmB,IAAZV,EAAmBK,EAAK,GAAKA,EAAK,GACzCC,SAAUA,EACVK,eAAgB9F,KAAK0F,UAAUK,OAC/B1D,IAAK,SAAU2D,GACXf,EAASjN,MAAMC,QAAU,OACzB2J,EAAMjJ,QAAQX,MAAMuN,SAAWD,EAC/BL,EAASjN,MAAMqN,SAAWD,EAC1BH,EAASzN,UAAUyD,OAAO,aAGlCiK,EAAOlN,MAAMC,QAAU,GACvB+H,KAAK8C,OAAO8C,QAAQV,GAChBW,MAAmB,IAAZV,EAAmBK,EAAK,GAAKA,EAAK,GACzCC,SAAUA,EACVK,eAAgB9F,KAAK0F,UAAUK,OAC/B1D,IAAK,WACDT,EAAMqE,QAAQ,qBAGtBjG,KAAKkG,MAAQhB,IAGrBvD,EAAS9H,UAAUsM,UAAY,WAC3BnG,KAAKwD,gBACD/K,SAAUuH,KAAKvH,SACf6E,cAAe0C,KAAK1C,cAAepE,gBAAgB,EAAMO,UAAW,GACpEhD,gBACIoG,SAAU,WAAYiB,SAAU,OAAQH,SAAU,GAClDf,cAAe,QAASc,YAAa,gBAEzC3K,OAAQiN,KAAKjN,OAAO0Q,WAAYxJ,UAAW+F,KAAK/F,UAAW5C,SAAU2I,KAAK3I,SAC1EjB,YAAa4J,KAAKoG,eAAeC,KAAKrG,QAG9C2B,EAAS9H,UAAUuM,eAAiB,SAAUE,GAI1C,GAHIA,EAAKjQ,KAAKmB,UAAU2B,SAASkI,KAC7BrB,KAAKyC,cAAe,GAEpBzC,KAAKhJ,cAAgBgJ,KAAKuG,UAAUD,EAAKjQ,MAAO,CAChD,IAAImQ,OAAkB,EAClBvT,OAAY,GAChBuT,EAAkBC,kBAAe,GAASpS,SAAS,EAAOiQ,UAAWtE,KAAKsE,UACtExQ,SAAUuN,KACE3J,aAAa,OAAQ,YACrC,IAAIgP,EAAiBF,EAAgBhN,cAAc,IAAM6H,GACzDiF,EAAKjQ,KAAKmB,UAAUC,IAAI4J,GACxBiF,EAAKjQ,KAAKmC,kBAAkBhB,UAAUC,IAAI4J,GACR,iBAAvBrB,KAAK9K,WAAW,IACvBjC,EAAYJ,EAAeyT,EAAKrQ,QAAS+J,KAAKwD,eAAezQ,SACxDiN,KAAK2C,WAAa1P,EAAU+M,KAAKwD,eAAezQ,OAAOgL,WACxDiC,KAAK2G,gBAAgBL,EAAME,IAEqD,IAA3ExG,KAAK4C,aAAalJ,QAAQzG,EAAU+M,KAAKwD,eAAezQ,OAAOoB,SACG,IAAvE6L,KAAK6C,WAAWnJ,QAAQzG,EAAU+M,KAAKwD,eAAezQ,OAAO8C,MAC7DmK,KAAK2G,gBAAgBL,EAAME,IAGK,iBAAvBxG,KAAK9K,WAAW,KAA6D,IAA1C8K,KAAK4C,aAAalJ,QAAQ4M,EAAKnS,OAC/E6L,KAAK2G,gBAAgBL,EAAME,GAE/BA,EAAgB9O,aAAa,eAAgBgP,EAAelP,UAAU2B,SAASkI,GAAsB,OAAS,SAChF,SAA1BrB,KAAK4G,kBACLJ,EAAgBhP,UAAUC,IAAI4J,GAC9BiF,EAAKjQ,KAAKmC,kBAAkBhB,UAAUC,IAAI4J,GAC1CiF,EAAKjQ,KAAKmC,kBAAkBqO,aAAaL,EAAiBF,EAAKjQ,KAAKmC,kBAAkB4C,WAAW,MAGjGoL,EAAgBhP,UAAUC,IAAI4J,GAC9BiF,EAAKjQ,KAAKmC,kBAAkBhB,UAAUC,IAAI4J,GAC1CiF,EAAKjQ,KAAKmC,kBAAkBS,YAAYuN,IAE5CxG,KAAK0C,kBAAkBpM,KAAKgQ,EAAKjQ,QAGzCsL,EAAS9H,UAAU8M,gBAAkB,SAAUL,EAAME,GACjDF,EAAKjQ,KAAKmB,UAAUC,IAAI4J,GACxBiF,EAAKjQ,KAAKqB,aAAa,gBAAiB,QACxC8O,EAAgBhN,cAAc,IAAM6H,GAAyB7J,UAAUC,IAAI4J,GAC3EmF,EAAgB9O,aAAa,eAAgB,SAMjDiK,EAAS9H,UAAUiN,UAAY,SAAUzQ,GACrC2J,KAAK+G,gBAAgB1Q,GAAM,IAE/BsL,EAAS9H,UAAUkN,gBAAkB,SAAU1Q,EAAMhC,GACjD,GAAI2L,KAAKhJ,aAAc,CACnB,IAAI4G,EAAYvH,EAIhB,GAHIA,aAAgB/C,QAAU+C,EAAK4J,cAAgB+G,gBAC/CpJ,EAAYoC,KAAKiH,sBAAsB5Q,KAEtCnD,oBAAkB0K,GAAY,CAC/B,IAAIsJ,EAAetJ,EAAUpE,cAAc,IAAM6H,GACjDhN,EAAUuJ,EAAUpG,UAAUC,IAAI4J,GAAuBzD,EAAUpG,UAAUyD,OAAOoG,GACpFzD,EAAUlG,aAAa,gBAAiBrD,EAAU,OAAS,SAC3DA,EAAU6S,EAAa1P,UAAUC,IAAI4J,GAAsB6F,EAAa1P,UAAUyD,OAAOoG,GACzF6F,EAAaC,cAAczP,aAAa,eAAgBrD,EAAU,OAAS,SAE/E2L,KAAKoH,oBAAoBxJ,KAOjC+D,EAAS9H,UAAUwN,YAAc,SAAUhR,GACvC2J,KAAK+G,gBAAgB1Q,GAAM,IAK/BsL,EAAS9H,UAAUyN,aAAe,WAC9BtH,KAAKuH,oBAAmB,IAK5B5F,EAAS9H,UAAU2N,eAAiB,WAChCxH,KAAKuH,oBAAmB,IAE5B5F,EAAS9H,UAAU0N,mBAAqB,SAAUlT,GAC9C,GAAI2L,KAAKhJ,aACL,IAAK,IAAIjB,EAAI,EAAGA,EAAIiK,KAAKhB,aAAaxL,OAAQuC,IAAK,CAC/C,IAAI0R,EAAYzH,KAAKhB,aAAajJ,GAAGyD,cAAc,IAAM6H,GACrDhN,EACKoT,EAAUjQ,UAAU2B,SAASkI,IAC9BrB,KAAK8G,UAAU9G,KAAKhB,aAAajJ,IAIjC0R,EAAUjQ,UAAU2B,SAASkI,IAC7BrB,KAAKqH,YAAYrH,KAAKhB,aAAajJ,MAMvD4L,EAAS9H,UAAU+J,YAAc,WAC7B,IAAIhC,EAAQ5B,KACZ,GAAIA,KAAKhJ,aAAc,CACnB,IACI0Q,GACArR,UAAMoO,EAAWxO,aAASwO,EAAWvP,gBAAYuP,EAAW1R,YAAQ0R,EACpErP,aAASqP,EAAWtQ,KAAM,IAHXyF,MAAMC,UAAUC,MAAMC,KAAKiG,KAAKrH,QAAQqC,iBAAiB,IAAMqG,IAKrEsG,QAAQ,SAAUhP,GAC3B+O,EAAOrR,KAAOsC,EACd+O,EAAOzR,QAAU2L,EAAMgG,YAAYjP,GAC/BA,EAAQa,cAAc,IAAM6H,IAC5BO,EAAMiG,cAAclP,EAAQa,cAAc,IAAM6H,IAEpDO,EAAMwE,eAAesB,GACjBA,EAAOrR,KAAKmB,UAAU2B,SAASkI,IAC/BO,EAAM+E,gBAAgBe,EAAQA,EAAOrR,KAAKmD,cAAc,IAAM6H,UAIrE,CACkBzH,MAAMC,UAAUC,MAAMC,KAAKiG,KAAKrH,QAAQqC,iBAAiB,IAAMqG,IACrEsG,QAAQ,SAAUhP,GAC3BA,EAAQnB,UAAUyD,OAAOoG,GACzB1I,EAAQH,kBAAkBhB,UAAUyD,OAAOoG,GAC3CO,EAAMiG,cAAclP,EAAQa,cAAc,IAAM6H,MAEhDrB,KAAK8H,eACL9H,KAAK8H,cAAczR,KAAKmB,UAAUC,IAAI4J,KAIlDM,EAAS9H,UAAUkO,aAAe,SAAUC,GACxC,IAAI3H,EAAS2H,EAAE3H,OACX7I,EAAY6I,EAAO7I,UACvB,GAAIA,EAAU2B,SAASkI,IAAwB7J,EAAU2B,SAASkI,GAC1DrB,KAAKhJ,cAAgBgJ,KAAK6B,WAAW7B,KAAK6B,WAAWrO,OAAS,IAC9DwM,KAAKwH,iBAETxH,KAAKkC,WAEJ,CACD,IAAInO,EAAKkU,UAAQ5H,EAAO6H,WAAY,IAAM7G,GAK1C,GAJW,OAAPtN,IACAA,EAAKsM,GAETL,KAAKmI,cACDnI,KAAKqE,QAAUrE,KAAKhJ,cAAgBgJ,KAAKuG,UAAUxS,GACnD,GAAIiU,EAAE3H,OAAO7I,UAAU2B,SAASkI,GAA0B,CAEtD,GADAtN,EAAGyD,UAAUC,IAAI4J,GACbnO,oBAAkBa,EAAGyF,cAAc,IAAM6H,IAAsB,CAC/D,IAAIiF,GAASrQ,aAASwO,EAAWvP,gBAAYuP,EAAW1R,YAAQ0R,EAAWrP,aAASqP,EAChFtQ,UAAMsQ,EAAWpO,KAAMtC,GAC3BiM,KAAK2G,gBAAgBL,EAAMA,EAAKjQ,KAAKmD,cAAc,IAAM6H,SAGzDrB,KAAKqH,YAAYtT,GACjBA,EAAGyD,UAAUC,IAAI4J,GAErB,GAAI2G,EAAG,CACH,IAAII,EAAYpI,KAAKqI,gBAAgBtU,EAAIiU,GACrCP,EAAY1T,EAAGyF,cAAc,IAAM6H,GACvChJ,QAAM+P,GAAarK,UAAW0J,EAAUjQ,UAAU2B,SAASkI,KAC3DrB,KAAKiG,QAAQ,SAAUmC,SAGtBrU,EAAGyD,UAAU2B,SAASkI,IAC3BrB,KAAKsI,cACLtI,KAAKuI,eACLvI,KAAKuI,aAAaxU,GAClBiM,KAAKwI,YAAYzU,EAAIiU,GACrBjU,EAAGyD,UAAUyD,OAAOoG,IAGpBrB,KAAKyI,cAAc1U,EAAIiU,QAI3BhI,KAAKwI,YAAYzU,EAAIiU,KAIjCrG,EAAS9H,UAAUgO,cAAgB,SAAUlP,GACzC,OAAOA,GAAWA,EAAQuP,YAAcvP,EAAQuP,WAAWQ,YAAY/P,IAE3EgJ,EAAS9H,UAAU8O,aAAe,SAAUX,GACxC,IAAIY,EAAQX,UAAQD,EAAE3H,OAAO6H,WAAY,IAAM7G,GAC/CrB,KAAK6I,WAAWD,IAEpBjH,EAAS9H,UAAUiP,aAAe,SAAUd,GACxChI,KAAKsI,eAGT3G,EAAS9H,UAAUkP,eAAiB,SAAUf,EAAG3F,GAC7C,IAAItO,EAAKiM,KAAKkG,MAAMlL,iBAAiB,IAAMqG,GACvC2H,EAAiBhJ,KAAKkG,MAAM1M,cAAc,IAAM6H,IAChDrB,KAAKkG,MAAM1M,cAAc,IAAM6H,GAC/B2H,IACAA,EAAexR,UAAUyD,OAAOoG,GAC3BrB,KAAKhJ,cACNgS,EAAexR,UAAUyD,OAAOoG,IAGxC,IAAInF,EAASmG,EAAUtO,EAAGP,OAAS,EAAhB,EACfO,EAAGmI,GAAO1E,UAAU2B,SAASkI,IAAwBrB,KAAKhJ,aAC1DjD,EAAGmI,GAAO1E,UAAUC,IAAI4J,GAGxBrB,KAAKwI,YAAYzU,EAAGmI,GAAQ8L,IAGpCrG,EAAS9H,UAAUoP,gBAAkB,SAAUjB,EAAGkB,GAC9C,IAAI9K,EACArK,GACYb,oBAAkB8M,KAAKkG,MAAM1M,cAAc,IAAM6H,KACjDrB,KAAKhJ,cACjBjD,EAAKiM,KAAKkG,MAAM1M,cAAc,IAAM6H,IAAuBrB,KAAKkG,MAAM1M,cAAc,IAAM6H,GAC1FjD,EAAYpJ,WAASkJ,aAAa8B,KAAKkG,MAAMlL,iBAAiB,IAAMqG,GAAsBtN,EAAImV,GACzFhW,oBAAkBkL,KACfrK,IACAA,EAAGyD,UAAUyD,OAAOoG,GACfrB,KAAKhJ,cACNjD,EAAGyD,UAAUyD,OAAOoG,IAGxBjD,EAAU5G,UAAU2B,SAASkI,IAAwBrB,KAAKhJ,aAC1DoH,EAAU5G,UAAUC,IAAI4J,GAGxBrB,KAAKwI,YAAYpK,EAAW4J,MAKpCjU,EAAKiM,KAAKkG,MAAM1M,cAAc,IAAM6H,GACpCjD,EAAYpJ,WAASkJ,aAAa8B,KAAKkG,MAAMlL,iBAAiB,IAAMqG,GAAsBtN,EAAImV,GAC9FlJ,KAAKwI,YAAYpK,EAAW4J,KAGpCrG,EAAS9H,UAAUsP,gBAAkB,SAAUnB,GAC3C,IAAIvT,GAAYvB,oBAAkB8M,KAAKkG,MAAM1M,cAAc,IAAM6H,IAC7DtN,EAAKiM,KAAKkG,MAAM1M,cAAc,IAAM6H,GACpC5M,GAAYV,IACZA,EAAGyD,UAAUyD,OAAOoG,GAChBrB,KAAKhJ,eACLgJ,KAAKuI,eACLvI,KAAKuI,aAAaxU,GAClBiM,KAAKsI,eAETtI,KAAKwI,YAAYzU,EAAIiU,KAG7BrG,EAAS9H,UAAUuP,gBAAkB,SAAUpB,GAC3C,GAAIhI,KAAKqE,QAAUrE,KAAKhJ,aAAc,CAClC,IAAIjD,EAAKiM,KAAKkG,MAAM1M,cAAc,IAAM6H,GACxC,IAAKnO,oBAAkBa,IAAOb,oBAAkBa,EAAGyF,cAAc,IAAM6H,IAAsB,CACzF,IAAIiF,GAASrQ,aAASwO,EAAWvP,gBAAYuP,EAAW1R,YAAQ0R,EAAWrP,aAASqP,EAChFtQ,UAAMsQ,EAAWpO,KAAMtC,GAC3BiM,KAAK2G,gBAAgBL,EAAMA,EAAKjQ,KAAKmD,cAAc,IAAM6H,SAGzDrB,KAAKqH,YAAYtT,KAI7B4N,EAAS9H,UAAUwP,iBAAmB,SAAUrB,GAE5C,OADAA,EAAEsB,iBACMtB,EAAEuB,QACN,IAAK,OACDvJ,KAAK+I,eAAef,GACpB,MACJ,IAAK,MACDhI,KAAK+I,eAAef,GAAG,GACvB,MACJ,IAAK,WACDhI,KAAKiJ,gBAAgBjB,GACrB,MACJ,IAAK,SACDhI,KAAKiJ,gBAAgBjB,GAAG,GACxB,MACJ,IAAK,SACDhI,KAAKmJ,gBAAgBnB,GACrB,MACJ,IAAK,OACGhI,KAAKhJ,cAAgBgJ,KAAK6B,WAAW7B,KAAK6B,WAAWrO,OAAS,IAC9DwM,KAAKwH,iBAETxH,KAAKkC,OACL,MACJ,IAAK,MACDlC,KAAKwJ,SAASxB,GACd,MACJ,IAAK,QACDhI,KAAKoJ,gBAAgBpB,KAIjCrG,EAAS9H,UAAU4P,mBAAqB,SAAUzB,GACrB,UAArBA,EAAE0B,iBACE1J,KAAKhJ,cAAgBgJ,KAAK6B,WAAW7B,KAAK6B,WAAWrO,OAAS,IAC9DwM,KAAKwH,iBAETxH,KAAKkC,SAGbP,EAAS9H,UAAU8P,SAAW,WAC1B,IAAIX,EAAiBhJ,KAAKkG,MAAM1M,cAAc,IAAM6H,GAChDuI,EAAgB5J,KAAKkG,MAAM1M,cAAc,0BACzCwP,IAAmBhJ,KAAKhJ,eACxBgS,EAAexR,UAAUyD,OAAOoG,GAC5BuI,GACAA,EAAcpS,UAAUC,IAAI4J,KAIxCM,EAAS9H,UAAUgQ,WAAa,WAC5BC,eAAarS,IAAIuI,KAAKrH,QAAS,QAASqH,KAAK+H,aAAc/H,MAC3D8J,eAAarS,IAAIuI,KAAKrH,QAAS,YAAaqH,KAAK2I,aAAc3I,MAC/D8J,eAAarS,IAAIuI,KAAKrH,QAAS,WAAYqH,KAAK8I,aAAc9I,MAC9D8J,eAAarS,IAAIuI,KAAKrH,QAAS,WAAYqH,KAAK2J,SAAU3J,MAC1DA,KAAK+J,eAAiB,IAAIC,iBAAehK,KAAKrH,SAC1CsR,UAAWjK,KAAKqJ,iBAAiBhD,KAAKrG,MACtC+B,WAAY/B,KAAK+B,aAErB/B,KAAKkK,YAAc,IAAIC,QAAMnK,KAAKrH,SAAWyR,MAAOpK,KAAKyJ,mBAAmBpD,KAAKrG,SAErF2B,EAAS9H,UAAUwQ,aAAe,WAC9BP,eAAa7O,OAAO+E,KAAKrH,QAAS,QAASqH,KAAK+H,cAChD+B,eAAa7O,OAAO+E,KAAKrH,QAAS,YAAaqH,KAAK2I,cACpDmB,eAAa7O,OAAO+E,KAAKrH,QAAS,WAAYqH,KAAK8I,cACnD9I,KAAK+J,eAAeO,UACpBtK,KAAKkK,YAAYI,WAErB3I,EAAS9H,UAAU2P,SAAW,SAAUxB,GAEpC,IADmBhI,KAAKkG,MAAM1M,cAAc,IAAM6H,IAC5BrB,KAAKkG,OAAUlG,KAAKhJ,aAAc,CACpD,IAAIjD,EAAKiM,KAAKkG,MAAM1M,cAAc,IAAM6H,GACxC,GAAItN,EAAGyD,UAAU2B,SAASkI,IAAwBrB,KAAKhJ,aAAc,CACjE,IAAIgS,EAAiBhJ,KAAKkG,MAAM1M,cAAc,IAAM6H,GAChDnO,oBAAkB8V,IAClBjV,EAAGyD,UAAUC,IAAI4J,QAIrBrB,KAAKwI,YAAYzU,EAAIiU,KAIjCrG,EAAS9H,UAAUsO,YAAc,WAE7B,IAAK,IAAI/U,EAAK,EAAGmX,EADDvK,KAAKrH,QAAQqC,iBAAiB,IAAMqG,GACVjO,EAAKmX,EAAY/W,OAAQJ,IAAM,CAC3DmX,EAAYnX,GAClBoE,UAAUyD,OAAOoG,KAG7BM,EAAS9H,UAAUyO,YAAc,WAC7B,IAAIkC,EAAUxK,KAAKrH,QAAQa,cAAc,IAAM6H,GAC3CmJ,GACAA,EAAQhT,UAAUyD,OAAOoG,IAGjCM,EAAS9H,UAAU0O,aAAe,SAAUxU,GACxC,GAAIb,oBAAkBa,GAElB,IAAK,IAAIX,EAAK,EAAGqX,EADAzK,KAAKrH,QAAQqC,iBAAiB,IAAMqG,GACTjO,EAAKqX,EAAajX,OAAQJ,IAAM,CACxE,IAAIsX,EAAMD,EAAarX,GACnB4M,KAAKhJ,cAAgB0T,EAAIlR,cAAc,IAAM6H,KAI7CqJ,EAAIhT,aAAa,gBAAiB,SAClCgT,EAAIlT,UAAUyD,OAAOoG,SAK7BtN,EAAGyD,UAAUyD,OAAOoG,GACpBtN,EAAG2D,aAAa,gBAAiB,UAGzCiK,EAAS9H,UAAU0M,UAAY,SAAUxS,GACrC,OAAQA,GAAMA,EAAGyD,UAAU2B,SAASkI,KAC5BtN,EAAGyD,UAAU2B,SAASkI,KACtBtN,EAAGyD,UAAU2B,SAASkI,IAElCM,EAAS9H,UAAU4O,cAAgB,SAAU1U,EAAIiU,GAC7C,GAAIhI,KAAKuG,UAAUxS,IAAOiM,KAAKqE,QAAUrE,KAAKhJ,aAAc,CACpDgJ,KAAKkG,MAAM1M,cAAc,IAAM6H,IAC/BrB,KAAKkG,MAAM1M,cAAc,IAAM6H,GAAoB7J,UAAUyD,OAAOoG,GAExEtN,EAAGyD,UAAUC,IAAI4J,GACjB,IAAImF,EAAkBzS,EAAGyF,cAAc,IAAM6H,GACzCoG,EAAYjB,EAAgBhN,cAAc,IAAM6H,EAA0B,IAAMA,GAcpF,GAbArB,KAAKsI,cACAb,EAAUjQ,UAAU2B,SAASkI,IAM9BoG,EAAUjQ,UAAUyD,OAAOoG,GAC3BtN,EAAGyD,UAAUyD,OAAOoG,GACpBtN,EAAG2D,aAAa,gBAAiB,WAPjC+P,EAAUjQ,UAAUC,IAAI4J,GACxBtN,EAAGyD,UAAUC,IAAI4J,GACjBtN,EAAG2D,aAAa,gBAAiB,SAOrC8O,EAAgB9O,aAAa,eAAgB+P,EAAUjQ,UAAU2B,SAASkI,GACtE,OAAS,SACT2G,EAAG,CACH,IAAII,EAAYpI,KAAKqI,gBAAgBtU,EAAIiU,GACzC3P,QAAM+P,GAAarK,UAAW0J,EAAUjQ,UAAU2B,SAASkI,KAC3DrB,KAAKiG,QAAQ,SAAUmC,GAE3BpI,KAAKoH,oBAAoBrT,GACzBiM,KAAK2K,cAAc5W,KAG3B4N,EAAS9H,UAAUwO,gBAAkB,SAAUtU,EAAIiU,GAC/C,IAEI4C,EAFAjP,EAAOqE,KAAK4H,YAAY7T,GACxBd,EAAYJ,EAAe8I,EAAMqE,KAAKwD,eAAezQ,QAGrD6X,EADA1X,oBAAkByI,IAAuC,iBAAvBqE,KAAK9K,WAAW,IACjCmB,KAAMtC,EAAII,KAAMJ,EAAGgJ,UAAU8N,OAAQlP,KAAMqE,KAAK9K,aAGhDmB,KAAMtC,EAAII,KAAMlB,EAAU+M,KAAKwD,eAAezQ,OAAOoB,MAAOwH,KAAMA,GAEvF,IAAIyM,KAKJ,OAJA/P,QAAM+P,EAAWwC,GACb5C,GACA3P,QAAM+P,GAAa0C,cAAc,EAAMC,MAAO/C,EAAG9L,MAAOtC,MAAMC,UAAUH,QAAQK,KAAKiG,KAAKkG,MAAM8E,SAAUjX,KAEvGqU,GAEXzG,EAAS9H,UAAUuN,oBAAsB,SAAUrT,GAC/C,IAAI4H,EAAOqE,KAAK4H,YAAY7T,GACxBd,EAAYJ,EAAe8I,EAAMqE,KAAKwD,eAAezQ,QACrDG,oBAAkByI,IAAwC,iBAAvBqE,KAAK9K,WAAW,GACnD8K,KAAK8H,eACDzR,KAAMtC,EACNI,KAAMJ,EAAGgJ,UAAU8N,OACnBlP,KAAMqE,KAAK9K,YAIf8K,KAAK8H,eACDzR,KAAMtC,EACNI,KAAMlB,EAAU+M,KAAKwD,eAAezQ,OAAOoB,MAC3CwH,KAAMA,IAIlBgG,EAAS9H,UAAU2O,YAAc,SAAUzU,EAAIiU,GAC3C,GAAIhI,KAAKuG,UAAUxS,KAAQA,EAAGyD,UAAU2B,SAASkI,IAAwBrB,KAAKqE,OAAQ,CAC7ErE,KAAKhJ,cACNgJ,KAAKuI,eAETxU,EAAGyD,UAAUC,IAAI4J,GACjBtN,EAAGyD,UAAUC,IAAI4J,GACjBtN,EAAG2D,aAAa,gBAAiB,QACjCsI,KAAKsI,cACLtI,KAAKoH,oBAAoBrT,GACzB,IAAIqU,EAAYpI,KAAKqI,gBAAgBtU,EAAIiU,GACzChI,KAAKiG,QAAQ,SAAUmC,GACvBpI,KAAKiL,WAAalX,EAClBiM,KAAK2K,cAAc5W,KAG3B4N,EAAS9H,UAAUgP,WAAa,SAAU9U,GACtC,GAAIiM,KAAKuG,UAAUxS,KAAQA,EAAGyD,UAAU2B,SAASkI,IAAqBrB,KAAKqE,OAAQ,CAC/E,IAAI6G,EAASlL,KAAKrH,QAAQqC,iBAAiB,IAAMqG,GAC7C6J,GAAUA,EAAO1X,QACjBwQ,cAAYkH,EAAQ7J,GAEnBtN,EAAGyD,UAAU2B,SAASkI,KAAwBrB,KAAKhJ,cACpDjD,EAAGyD,UAAUC,IAAI4J,KAI7BM,EAAS9H,UAAUsR,eAAiB,SAAUjC,GAC1C,IACI9K,EADA8M,EAASlL,KAAKkG,MAAM1M,cAAc,IAAM6H,GAK5C,GAHK6J,IACDA,EAASlL,KAAKkG,MAAM1M,cAAc,IAAM6H,IAExC6J,EACA9M,EAAYpJ,WAASkJ,aAAa8B,KAAKkG,MAAMlL,iBAAiB,IAAMqG,GAAsB6J,EAAQhC,QAGlG,GAAIA,EAAM,CACN,IAAIkC,EAASpL,KAAKkG,MAAMlL,iBAAiB,IAAMqG,GAC/CjD,EAAYgN,EAAOA,EAAO5X,OAAS,QAGnC4K,EAAY4B,KAAKkG,MAAM1M,cAAc,IAAM6H,GAGnDrB,KAAK6I,WAAWzK,IAGpBuD,EAAS9H,UAAUgK,SAAW,WAC1B,IAAIwH,EAAYrL,KAAK6B,WACrB,GAAIwJ,EAAU7X,OAAQ,CAElB,IAAK,IADDkF,EAAKsH,KAAKsL,UACLlY,EAAK,EAAGmY,EAAcF,EAAWjY,EAAKmY,EAAY/X,OAAQJ,IAAM,CACrE,IAAIyL,EAAM0M,EAAYnY,GACtB4M,KAAKwL,UAAYxL,KAAKyL,eAAe/S,GAAM7C,GAAIgJ,IAC/C,IAAI5L,EAAYJ,EAAemN,KAAKwL,UAAWxL,KAAKwD,eAAezQ,QACnE2F,EAAKsH,KAAKwL,UAAYvY,EAAU+M,KAAKjN,OAAO4D,OAAS+B,EAEzD,OAAOA,EAEX,OAAOsH,KAAKsL,WAEhB3J,EAAS9H,UAAU+N,YAAc,SAAU7T,GACvC,IAAIhB,EAASiN,KAAK0L,cAAc3X,GAC5B4X,EAAQ3L,KAAK9K,WACjB,OAAO8K,KAAKyL,eAAeE,EAAO5Y,IAEtC4O,EAAS9H,UAAU4R,eAAiB,SAAUvW,EAAYnC,EAAQ6Y,GAC9D,IACIC,EADAjK,EAAQ5B,KA2BZ,OAzBI9K,GAAcA,EAAW1B,QAAUT,EACnCmC,EAAW4W,KAAK,SAAUnQ,GACtB,IAAI1I,EAAYJ,EAAe8I,EAAMiG,EAAM4B,eAAezQ,QAE1D,IAAKA,EAAO8C,KAAM9C,EAAOoB,MACnBpB,EAAO8C,IAAM5C,EAAU2O,EAAM7O,OAAO8C,MAAQ9C,EAAO8C,IACnD9C,EAAOoB,MAAQlB,EAAU2O,EAAM7O,OAAOoB,QAAUpB,EAAOoB,KAGxD,IAAKjB,oBAAkBH,EAAO8C,KAAO3C,oBAAkBD,EAAU2O,EAAM7O,OAAO8C,KAAM,CAC5E+L,EAAMjJ,QAAQa,cAAc,cAC/BzG,EAAO8C,GAAK,MACXkH,UAAU8N,SAAW5X,EAAU2O,EAAM7O,OAAOoB,QAC/C0X,EAAalQ,QAGZ1I,EAAU4D,eAAe+K,EAAM7O,OAAO4D,QAAU1D,EAAU2O,EAAM7O,OAAO4D,OAAOnD,SACnFqY,EAAajK,EAAM6J,eAAexY,EAAU2O,EAAM7O,OAAO4D,OAAQ5D,EAAQ6Y,SAVzEC,EAAcD,EAAS1W,EAAayG,EAYxC,QAASkQ,IAIbA,EAAa3W,EAEV2W,GAEXlK,EAAS9H,UAAUkS,SAAW,WAC1B,IAAIC,KACA7R,EAAS6F,KAAK7F,MAAQ6F,KAAK7F,MAAQ,IAAIC,QAC3C,IAAK4F,KAAK7F,MAAO,CACb,IAAK,IAAI/G,EAAK,EAAGC,EAAKC,OAAOC,KAAKyM,KAAKjN,OAAO0Q,YAAarQ,EAAKC,EAAGG,OAAQJ,IAAM,CAC7E,IAAI6Y,EAAS5Y,EAAGD,GACD,cAAX6Y,GAA6BjM,KAAKjN,OAAOkZ,IACzCjM,KAAKjN,OAAOkZ,KACRjX,WAASwB,oBAAoByV,KACY,IAA1CD,EAAQtS,QAAQsG,KAAKjN,OAAOkZ,KAC/BD,EAAQ1V,KAAK0J,KAAKjN,OAAOkZ,IAGjC9R,EAAMiI,OAAO4J,GACThM,KAAKjN,OAAO0Q,WAAW5M,eAAe,cACtCsD,EAAM+R,KAAKlM,KAAKjN,OAAOoZ,WAG/B,OAAOhS,GAEXwH,EAAS9H,UAAUuS,kBAAoB,SAAUlX,QAC1B,IAAfA,IAAyBA,EAAa8K,KAAKsL,WAC3CpW,GAAc8K,KAAKjN,OAAOiL,QAC1BgC,KAAK8B,UAAY9M,WAASuJ,gBAAgBrJ,EAAY8K,KAAKjN,OAAQiN,KAAK/F,WAEnE/E,GAAiC,SAAnB8K,KAAK/F,UACxB+F,KAAK8B,UAAY9M,WAASwF,cAActF,EAAYF,WAASgF,WAAWgG,KAAK/F,UAAW+F,KAAKjN,OAAOmH,SAGpG8F,KAAK8B,UAAY5M,GAGzByM,EAAS9H,UAAUwS,cAAgB,WAC/B,OAAOrM,KAAKkG,MAAM1O,UAAU2B,SAAS,eAEzCwI,EAAS9H,UAAUyS,aAAe,WAC9B,IAAI1K,EAAQ5B,KAEZ,GADAA,KAAKiG,QAAQ,eACTjG,KAAK9K,sBAAsBuF,cAC3BuF,KAAK9K,WAAWqX,aAAavM,KAAK+L,YAAYS,KAAK,SAAUxE,GACrDpG,EAAM6K,cAGV7K,EAAM0J,UAAYtD,EAAE0E,OACpB9K,EAAM+K,aACN/K,EAAMqE,QAAQ,iBAAkB+B,MACjC4E,MAAM,SAAU5E,GACXpG,EAAM6K,aAGV7K,EAAMqE,QAAQ,gBAAiB+B,UAGlC,GAAKhI,KAAK9K,YAAe8K,KAAK9K,WAAW1B,OAW1CwM,KAAKsL,UAAYtL,KAAK9K,WACtB8K,KAAK2M,aACL3M,KAAKiG,QAAQ,kBAAoBtK,KAAMqE,KAAKsL,gBAbM,CAClD,IAAItX,EAAKgM,KAAKrH,QAAQa,cAAc,MAChCxF,IACAiH,SAAOjH,GACPgM,KAAK6M,eAAgB3X,WAAYF,WAAS2F,sBAAsB3G,KAAO,GACvEgM,KAAKsL,UAAYtL,KAAK9K,WACtB8K,KAAK2M,aACL3M,KAAKiG,QAAQ,kBAAoBtK,KAAMqE,KAAKsL,eASxD3J,EAAS9H,UAAU6J,SAAW,WAC1B1D,KAAKrH,QAAQyE,UAAY,GACzB4C,KAAKkG,MAAQlG,KAAK0E,eAAYD,EAC9BzE,KAAKsM,eACLtM,KAAKV,UAETqC,EAAS9H,UAAUiK,iBAAmB,WAClC9D,KAAKoM,kBAAkBpM,KAAK8B,WAC5B9B,KAAK8M,iBAAiB1P,UAAY,GAClC4C,KAAK/B,aACL+B,KAAK+M,cAAc/M,KAAKkG,QAE5BvE,EAAS9H,UAAUoE,WAAa,WAC5B+B,KAAK0C,qBACL1C,KAAKyC,cAAe,EACpBzC,KAAKnC,UAAYmC,KAAKkG,MAAQlR,WAASiJ,WAAW+B,KAAK8B,UAAW9B,KAAKwD,gBACvExD,KAAKhB,aAAegB,KAAKkG,MAAMlL,iBAAiB,IAAMqG,IAE1DM,EAAS9H,UAAU8Q,cAAgB,SAAU5W,GACzC,IAAIsJ,EAAMtJ,EAAGiZ,aAAa,YAC1B,GAAIjZ,EAAGyD,UAAU2B,SAASkI,IAAwBhE,EAAK,CACnD,IAAIrJ,EAAKiU,UAAQlU,EAAGmU,WAAY,IAAM7G,GAClCqJ,EAAM1K,KAAKrH,QAAQa,cAAc,SAAY6D,EAAM,MACvD2C,KAAK6B,WAAWvL,KAAK+G,GACrB2C,KAAKoM,kBAAkBpM,KAAK6D,YACvB6G,KACDA,EAAM1V,WAASgE,mBAAmBgH,KAAK8B,UAAW9B,KAAKwD,eAAgBxD,KAAK6B,WAAWrO,SACnFkE,aAAa,MAAO2F,GACxBqN,EAAI1S,MAAMC,QAAU,OACpB+H,KAAK+M,cAAcrC,IAEvB1K,KAAKgF,WAAWhR,EAAI0W,GACpB1K,KAAKhB,aAAegB,KAAKkG,MAAMlL,iBAAiB,IAAMqG,GACtD,IAAIpO,EAAYJ,EAAemN,KAAK8H,cAAcnM,KAAMqE,KAAKwD,eAAezQ,QAC5EiN,KAAKV,OAAQrM,EAAU+M,KAAKwD,eAAezQ,OAAOoB,OAAQ,GAC1D6L,KAAKiL,gBAAaxG,IAG1B9C,EAAS9H,UAAUkT,cAAgB,SAAUrC,GACzC1K,KAAK8M,iBAAiB7T,YAAYyR,IAEtC/I,EAAS9H,UAAU8S,WAAa,WAC5B3M,KAAKoM,oBACLpM,KAAK/B,aACL+B,KAAK8M,iBAAmB7V,gBAAc,OAASC,UAAWmK,IAC1DrB,KAAKrH,QAAQM,YAAY+G,KAAK8M,kBAC9B9M,KAAK+M,cAAc/M,KAAKnC,YAE5B8D,EAAS9H,UAAU6R,cAAgB,SAAUuB,GACzC,IAAIla,KAOJ,OANIka,aAAeC,QACfna,EAAO8C,GAAKoX,EAAID,aAAa,YAG7Bja,EAASka,EAENla,GAKX4O,EAAS9H,UAAUsT,OAAS,WACxBnN,KAAKrH,QAAQnB,UAAUC,IAAI4J,GAC3BpF,aAAW+D,KAAKrH,SAAWmE,KAAM,OAAQsQ,SAAU,MACnDpN,KAAKoD,cACLpD,KAAKuD,eACLvD,KAAKqD,YACLrD,KAAKsD,UACLtD,KAAK6J,aACL7J,KAAKV,SACLU,KAAKsM,eACLtM,KAAKmD,mBACLnD,KAAKqN,SAAWC,eAAatN,KAAKrH,SAC9B4U,SAAU,IAAMlM,KAMxBM,EAAS9H,UAAUyQ,QAAU,WACzBtK,KAAKqK,eACL,IAAImD,GAAWnM,EAAiBrB,KAAKlM,SAAUuN,EAAoB,QAC/D,gBACJ2C,eAAahE,KAAKrH,SAAU6U,GAC5BxN,KAAKqN,WACL9L,EAAO1H,UAAUyQ,QAAQvQ,KAAKiG,OAKlC2B,EAAS9H,UAAUqI,KAAO,WACtB,IAAIuL,EAAMzN,KAAK6B,WAAW7B,KAAK6B,WAAWrO,OAAS,GACnD,QAAYiR,IAARgJ,IAAqBzN,KAAKqM,gBAA9B,CAGArM,KAAK6B,WAAW6L,MAChB1N,KAAKoM,kBAAkBpM,KAAK6D,YAC5B,IAAI8J,EAAO3N,KAAKrH,QAAQa,cAAc,cAAiBiU,EAAM,MACzDG,EAAS5N,KAAKkG,MACbyH,EAMDA,EAAOA,EAAKxG,eALZnH,KAAK/B,aACL+B,KAAK+M,cAAc/M,KAAKnC,WACxB8P,EAAO3N,KAAKkG,OAKhB,IACI/R,EADYtB,EAAemN,KAAKwL,UAAWxL,KAAKwD,eAAezQ,QAC9CiN,KAAKjN,OAAOoB,MACjC6L,KAAKgF,WAAW4I,EAAQD,GAAM,GAC9B3N,KAAKmI,cACL,IAAIpU,EAAKiM,KAAKrH,QAAQa,cAAc,cAAiBiU,EAAM,MAC3D1Z,EAAGyD,UAAUC,IAAI4J,GACbrB,KAAKhJ,cAAgBjD,EAAGyF,cAAc,IAAM6H,GAAyB7J,UAAU2B,SAASkI,GACxFtN,EAAG2D,aAAa,gBAAiB,SAGjC3D,EAAGyD,UAAUyD,OAAOoG,GACpBtN,EAAG2D,aAAa,gBAAiB,UAErCsI,KAAKhB,aAAegB,KAAKkG,MAAMlL,iBAAiB,IAAMqG,GACtDrB,KAAKV,OAAQU,KAAK6B,WAAWrO,OAASW,EAAO6L,KAAK2D,cAAe3D,KAAK6B,WAAWrO,UAMrFmO,EAAS9H,UAAUgU,WAAa,SAAUZ,GACjC/Z,oBAAkB+Z,KACfjN,KAAKhJ,aACLgJ,KAAKyI,cAAczI,KAAKiH,sBAAsBgG,IAG9CjN,KAAKwI,YAAYxI,KAAKiH,sBAAsBgG,MAIxDtL,EAAS9H,UAAUoN,sBAAwB,SAAUgG,GACjD,IAAIlZ,EACJ,IAAKb,oBAAkB+Z,GACnB,GAAkC,iBAAvBjN,KAAK9K,WAAW,IACvB,GAAI+X,aAAe3Z,QAAU2Z,EAAIhN,cAAgB+G,cAE7C,IAAK,IADD8G,EAAMb,EAAID,aAAa,YAAYrV,WAC9B5B,EAAI,EAAGA,EAAIiK,KAAKhB,aAAaxL,OAAQuC,IAC1C,GAAIiK,KAAKhB,aAAajJ,GAAGiX,aAAa,YAAYrV,aAAemW,EAAK,CAClE/Z,EAAKiM,KAAKhB,aAAajJ,GACvB,WAKX,CACD,IAAI8V,EAAa7L,KAAK4H,YAAYqF,GAC9Bha,EAAYJ,EAAegZ,EAAY7L,KAAKwD,eAAezQ,QAC/D,GAAI8Y,IACA9X,EAAKiM,KAAKrH,QAAQa,cAAc,cAC1BvG,EAAU+M,KAAKjN,OAAO8C,IAAM,MAC9B3C,oBAAkBa,IAEb,CAAA,IADD6U,EAAQ5I,KAAKrH,QAAQqC,iBAAiB,IAAMqG,GAChD,IAAStL,EAAI,EAAGA,EAAI6S,EAAMpV,OAAQuC,IAC1B6S,EAAM7S,GAAGgH,UAAU8N,SAAWgB,EAAW1X,OACzCJ,EAAK6U,EAAM7S,KAOnC,OAAOhC,GAEX4N,EAAS9H,UAAUkU,oBAAsB,SAAUd,GAC/C,IAAK/Z,oBAAkB+Z,GACnB,IAAK,IAAIlX,EAAI,EAAGA,EAAIkX,EAAIzZ,OAAQuC,IACvB7C,oBAAkB+Z,EAAIlX,KACvBiK,KAAK6N,WAAWZ,EAAIlX,KAKpC4L,EAAS9H,UAAUmU,YAAc,WAC7B,IAAIC,KACJ,GAAIjO,KAAKyC,aACL,IAAK,IAAI1M,EAAIiK,KAAK6B,WAAWrO,OAAS,EAAGuC,GAAK,EAAGA,IAC7CkY,EAAS3X,KAAK0J,KAAK6B,WAAW9L,IAGtC,OAAOkY,GAOXtM,EAAS9H,UAAUqU,iBAAmB,WAElC,GADAlO,KAAK6C,cACD7C,KAAKhJ,aAAc,CACnB,IAAIgI,EAAegB,KAAKkG,MAAMiI,uBAAuB9M,GACjD+M,KACAC,KACJrO,KAAK6C,cAEL,IAAK,IADDyL,KACKvY,EAAI,EAAGA,EAAIiJ,EAAaxL,OAAQuC,IACrC,GAAkC,iBAAvBiK,KAAK9K,WAAW,GACvBkZ,EAAiB9X,KAAK0I,EAAajJ,GAAGgH,UAAU8N,YAE/C,CACD,IAAI0D,EAAWvO,KAAK4H,YAAY5I,EAAajJ,IACzC9C,EAAYJ,EAAe0b,EAAUvO,KAAKwD,eAAezQ,QACzDiN,KAAKyC,aACL6L,EAAWhY,MAAOqF,KAAM4S,EAAUN,SAAUjO,KAAKgO,gBAGjDK,EAAiB/X,KAAKiY,GAE1BH,EAAiB9X,KAAKrD,EAAU+M,KAAKwD,eAAezQ,OAAOoB,OAC3D6L,KAAK6C,WAAWvM,KAAKrD,EAAU+M,KAAKwD,eAAezQ,OAAO8C,KAGlE,MAAkC,iBAAvBmK,KAAK9K,WAAW,IACdmB,KAAM2I,EAAcrD,KAAMqE,KAAK9K,WAAYf,KAAMia,GAE1DpO,KAAKyC,cACIpM,KAAM2I,EAAcrD,KAAM2S,EAAYna,KAAMia,IAG5C/X,KAAM2I,EAAcrD,KAAM0S,EAAkBla,KAAMia,GAI/D,IAAIxQ,EAAYoC,KAAKrH,QAAQwV,uBAAuB9M,GAAqB,GACrEpO,EAAYJ,EAAemN,KAAK4H,YAAYhK,GAAYoC,KAAKwD,eAAezQ,QAChF,MAAkC,iBAAvBiN,KAAK9K,WAAW,GACdhC,oBAAkB0K,QAGvB6G,GAFApO,KAAMuH,EAAWjC,KAAMqE,KAAK9K,WAC5Bf,KAAMyJ,EAAUb,UAAU8N,QAI1B3X,oBAAkBD,IAAcC,oBAAkB0K,QAClD,GAGAoC,KAAK6C,WAAWvM,KAAKrD,EAAU+M,KAAKwD,eAAezQ,OAAO8C,MAEtD1B,KAAMlB,EAAU+M,KAAKwD,eAAezQ,OAAOoB,MAAOkC,KAAMuH,EACxDjC,KAAMqE,KAAK4H,YAAYhK,MAU3C+D,EAAS9H,UAAU2U,SAAW,SAAUvB,GACpC,OAAOjN,KAAK4H,YAAYqF,IAM5BtL,EAAS9H,UAAU4U,WAAa,SAAUxB,GACtCjN,KAAK0O,aAAazB,GAAK,IAM3BtL,EAAS9H,UAAU8U,YAAc,SAAU1B,GACvCjN,KAAK0O,aAAazB,GAAK,IAG3BtL,EAAS9H,UAAU6U,aAAe,SAAUzB,EAAK2B,GAC7C,IAAI/C,EAAa7L,KAAK4H,YAAYqF,GAC9Bha,EAAYJ,EAAegZ,EAAY7L,KAAKwD,eAAezQ,QAC/D,GAAI8Y,EAAY,CACZ,IAAI9X,EAAKiM,KAAKrH,QAAQa,cAAc,cAAgBvG,EAAU+M,KAAKjN,OAAO8C,IAAM,MAC5E+Y,GACI7a,GACAA,EAAGyD,UAAUyD,OAAOoG,UAEjBwK,EAAW7L,KAAKjN,OAAO+E,UAExB8W,IACF7a,GACAA,EAAGyD,UAAUC,IAAI4J,GAErBwK,EAAW7L,KAAKjN,OAAO+E,UAAW,KAQ9C6J,EAAS9H,UAAUgV,SAAW,SAAU5B,GACpCjN,KAAK8O,aAAa7B,GAAK,EAAO,KAMlCtL,EAAS9H,UAAUkV,SAAW,SAAU9B,GACpCjN,KAAK8O,aAAa7B,GAAK,EAAM,SAEjCtL,EAAS9H,UAAUiV,aAAe,SAAU7B,EAAK+B,EAAQ/W,GACrD,IAAI4T,EAAa7L,KAAK4H,YAAYqF,GAC9Bha,EAAYJ,EAAegZ,EAAY7L,KAAKwD,eAAezQ,QAC/D,GAAI8Y,EAAY,CACZ,IAAI9X,EAAKiM,KAAKrH,QAAQa,cAAc,cAAgBvG,EAAU+M,KAAKjN,OAAO8C,IAAM,MAC5E9B,IACAA,EAAGiE,MAAMC,QAAUA,GAEnB+W,EACAnD,EAAW7L,KAAKjN,OAAOgF,YAAa,SAG7B8T,EAAW7L,KAAKjN,OAAOgF,aAW1C4J,EAAS9H,UAAUoV,QAAU,SAAUtT,EAAM5I,GACzC,IAAI2F,EAAKsH,KAAKyL,eAAezL,KAAK9K,WAAYnC,GAE1C4D,EADY9D,EAAe6F,EAAIsH,KAAKwD,eAAezQ,QACjCiN,KAAKjN,OAAO4D,OAC7BA,IACDA,MAEJA,EAAQA,EAAMuY,OAAOvT,GACjBjD,aAAckB,OACdoG,KAAK9K,WAAa8K,KAAKsL,UAAY5S,EAAGwW,OAAOvT,GAC7CqE,KAAKoM,qBAGL1T,EAAGsH,KAAKjN,OAAO4D,OAASA,EAE5BqJ,KAAK8D,oBAMTnC,EAAS9H,UAAUsV,WAAa,SAAUlC,GACtCjN,KAAKoP,mBAAmBnC,GAAK,IAEjCtL,EAAS9H,UAAUuV,mBAAqB,SAAUnC,EAAKtK,GACnD,IAAIf,EAAQ5B,KAGRqP,GAAQ,EACZ,GAAkC,iBAAvBrP,KAAK9K,WAAW,GAAiB,CACxC,GAAmB,iBAAR+X,EAAkB,CACzB,IAAIqC,KACAC,EAAQ,EACZvP,KAAKhB,aAAa2I,QAAQ,SAAUhP,GAC5BA,IAAYsU,GACZoC,GAAQ,EACRzN,EAAMiG,cAAclP,GACpBiJ,EAAM1M,WAAWqF,OAAOgV,EAAO,GAC/B3N,EAAM0J,UAAY1J,EAAM1M,YAGxBoa,EAAehZ,KAAKqC,GAExB4W,MAEJvP,KAAKhB,aAAesQ,OAEnB,GAAmB,iBAARrC,EAAkB,CAC9B,IAAIuC,KACAC,EAAQ,EACRC,KACJ1P,KAAKhB,aAAa2I,QAAQ,SAAUhP,GAC5BA,EAAQoE,UAAU8N,SAAWoC,GAC7BoC,GAAQ,EACRzN,EAAMiG,cAAclP,KAGpB6W,EAAelZ,KAAKqC,GACpB+W,EAAKpZ,KAAKsL,EAAM1M,WAAWua,KAE/BA,MAEJzP,KAAKsL,UAAYtL,KAAK8B,UAAY9B,KAAK9K,WAAawa,EACpD1P,KAAKhB,aAAewQ,EAExB,IAAIG,EAAS3P,KAAKkO,mBAGlB,GAFAlO,KAAK4C,aAAiB1P,oBAAkByc,QAAyBlL,EAAdkL,EAAOxb,UACvCsQ,EACf9B,GAAa0M,EAAO,CAGpB,GAFArP,KAAK2C,WAAY,EACjB3C,KAAK8D,oBACA9D,KAAKhJ,cAAgBgJ,KAAK4C,cAAgB5C,KAAK4C,aAAapP,OAAQ,CACrEwM,KAAKuI,eACL,IAAIrM,EAAQ8D,KAAK9K,WAAW0a,YAAY5P,KAAK4C,cAC7C5C,KAAKhB,aAAa9C,GAAO1E,UAAUC,IAAI4J,GACvCrB,KAAKhB,aAAa9C,GAAOxE,aAAa,gBAAiB,QAE3DsI,KAAK2C,WAAY,OAGpB,CACoBzP,oBAAkB8M,KAAKkO,yBACTzJ,EAA/BzE,KAAKkO,mBAAmBvS,KAC5B,IACIkU,EADAC,EAAW9P,KAAK0L,cAAcuB,GAE9BtB,EAAQ3L,KAAKyL,eAAezL,KAAK9K,WAAY4a,GAAU,GAC3D,GAAInE,GAASsB,EAAK,CACd,IAAI8C,EACJpE,EAAMG,KAAK,SAAUnQ,EAAMO,EAAO8T,GAC9B,IAAI/c,EAAYJ,EAAe8I,EAAMiG,EAAM4B,eAAezQ,QAC1D,SAAK+c,EAASja,KAAMia,EAAS3b,MACvB2b,EAASja,IAAM5C,EAAU2O,EAAM7O,OAAO8C,MAAQia,EAASja,IACvDia,EAAS3b,MAAQlB,EAAU2O,EAAM7O,OAAOoB,QAAU2b,EAAS3b,QAC7D0b,EAAUG,EACVD,EAAQ7T,GACD,KAIf8D,KAAK6H,cAAc7H,KAAKiH,sBAAsB4I,EAAQE,KACtDF,EAAQtV,OAAOwV,EAAO,GACtB/P,KAAK8B,UAAY+N,EAEjBF,EAAS3P,KAAKkO,mBAClBlO,KAAK4C,aAAiB1P,oBAAkByc,QAAyBlL,EAAdkL,EAAOxb,KACtDwO,GAAakN,IACb7P,KAAK2C,WAAY,EACjB3C,KAAK8D,mBACA9D,KAAKhJ,cAAiB9D,oBAAkByc,IACzC3P,KAAK6N,WAAW8B,EAAOtZ,MAE3B2J,KAAK2C,WAAY,KAQ7BhB,EAAS9H,UAAUoW,oBAAsB,SAAUhD,GAC/C,GAAIA,EAAIzZ,OACJ,IAAK,IAAIuC,EAAI,EAAGA,EAAIkX,EAAIzZ,OAAQuC,IAC3BA,IAAMkX,EAAIzZ,OAAS,EAAKwM,KAAKoP,mBAAmBnC,EAAIlX,IAAI,GAAQiK,KAAKoP,mBAAmBnC,EAAIlX,IAAI,IAK7G4L,EAAS9H,UAAUqW,cAAgB,WAC/B,MAAO,YAKXvO,EAAS9H,UAAUsW,eAAiB,WAChC,OAAOnQ,KAAKoQ,cAAc,WAAY,YAAa,iBAC/C,SAAU,SAAU,YAAa,cACjC,YAAa,WAAY,SAAU,QAAS,eAAgB,sBAEpEjQ,GACIsB,cACDE,EAAS9H,UAAW,gBAAY,GACnCsG,GACIsB,gBACDE,EAAS9H,UAAW,sBAAkB,GACzCsG,GACIsB,YAAS,IACVE,EAAS9H,UAAW,cAAU,GACjCsG,GACIsB,gBACDE,EAAS9H,UAAW,kBAAc,GACrCsG,GACIsB,cACDE,EAAS9H,UAAW,aAAS,GAChCsG,GACIkQ,UAAQrb,WAASwB,oBAAqB8K,IACvCK,EAAS9H,UAAW,cAAU,GACjCsG,GACIsB,YAAWkE,OAAQ,YAAaF,SAAU,IAAKM,OAAQ,UACxDpE,EAAS9H,UAAW,iBAAa,GACpCsG,GACIsB,WAAS,SACVE,EAAS9H,UAAW,iBAAa,GACpCsG,GACIsB,YAAS,IACVE,EAAS9H,UAAW,gBAAY,GACnCsG,GACIsB,YAAS,IACVE,EAAS9H,UAAW,oBAAgB,GACvCsG,GACIsB,WAAS,SACVE,EAAS9H,UAAW,wBAAoB,GAC3CsG,GACIsB,WAAS,KACVE,EAAS9H,UAAW,mBAAe,GACtCsG,GACIsB,YAAS,IACVE,EAAS9H,UAAW,kBAAc,GACrCsG,GACIsB,WAAS,KACVE,EAAS9H,UAAW,cAAU,GACjCsG,GACIsB,WAAS,KACVE,EAAS9H,UAAW,aAAS,GAChCsG,GACIsB,WAAS,OACVE,EAAS9H,UAAW,gBAAY,GACnCsG,GACIsB,WAAS,OACVE,EAAS9H,UAAW,qBAAiB,GACxCsG,GACImQ,WACD3O,EAAS9H,UAAW,cAAU,GACjCsG,GACImQ,WACD3O,EAAS9H,UAAW,mBAAe,GACtCsG,GACImQ,WACD3O,EAAS9H,UAAW,sBAAkB,GACzCsG,GACImQ,WACD3O,EAAS9H,UAAW,qBAAiB,GACxC8H,EAAWxB,GACPoQ,yBACD5O,IAEL6O"}