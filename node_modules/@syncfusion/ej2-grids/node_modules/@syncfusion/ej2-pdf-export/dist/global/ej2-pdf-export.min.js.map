{"version":3,"file":"ej2-pdf-export.min.js","sources":["../src/es5/implementation/collections/utils.js","../../node_modules/@syncfusion/ej2-file-utils/dist/src/es5/encoding.js","../src/es5/implementation/collections/dictionary.js","../src/es5/implementation/primitives/pdf-name.js","../src/es5/implementation/input-output/pdf-operators.js","../src/es5/implementation/input-output/pdf-dictionary-properties.js","../src/es5/implementation/primitives/pdf-dictionary.js","../src/es5/implementation/primitives/pdf-number.js","../src/es5/implementation/primitives/pdf-array.js","../../node_modules/@syncfusion/ej2-file-utils/dist/src/es5/save.js","../../node_modules/@syncfusion/ej2-file-utils/dist/src/es5/stream-writer.js","../../node_modules/@syncfusion/ej2-compression/dist/src/es5/compression-writer.js","../../node_modules/@syncfusion/ej2-compression/dist/src/es5/zip-archive.js","../src/es5/implementation/primitives/pdf-string.js","../src/es5/implementation/primitives/pdf-stream.js","../src/es5/implementation/graphics/enum.js","../src/es5/implementation/primitives/pdf-reference.js","../src/es5/implementation/actions/action.js","../src/es5/implementation/actions/uri-action.js","../src/es5/implementation/graphics/pdf-color.js","../src/es5/implementation/graphics/fonts/enum.js","../src/es5/implementation/drawing/pdf-drawing.js","../src/es5/implementation/graphics/brushes/pdf-brush.js","../src/es5/implementation/graphics/brushes/pdf-solid-brush.js","../src/es5/implementation/graphics/fonts/pdf-string-format.js","../src/es5/implementation/graphics/fonts/string-layouter.js","../src/es5/implementation/graphics/fonts/string-tokenizer.js","../src/es5/implementation/graphics/fonts/pdf-font.js","../src/es5/implementation/input-output/enum.js","../src/es5/implementation/input-output/pdf-writer.js","../src/es5/implementation/input-output/pdf-main-object-collection.js","../src/es5/implementation/input-output/cross-table.js","../src/es5/implementation/document/pdf-document-base.js","../src/es5/implementation/document/pdf-catalog.js","../src/es5/implementation/pages/enum.js","../src/es5/implementation/input-output/pdf-cross-table.js","../src/es5/implementation/pages/pdf-page-size.js","../src/es5/implementation/graphics/pdf-margins.js","../src/es5/implementation/graphics/images/image-decoder.js","../src/es5/implementation/pages/pdf-page-settings.js","../src/es5/implementation/input-output/pdf-stream-writer.js","../src/es5/implementation/graphics/pdf-pen.js","../src/es5/implementation/graphics/pdf-transformation-matrix.js","../src/es5/implementation/graphics/constants.js","../src/es5/implementation/collections/object-object-pair/dictionary.js","../src/es5/implementation/graphics/pdf-transparency.js","../src/es5/implementation/document/automatic-fields/automatic-field-info-collection.js","../src/es5/implementation/graphics/figures/base/graphics-element.js","../src/es5/implementation/document/automatic-fields/automatic-field.js","../src/es5/implementation/document/automatic-fields/automatic-field-info.js","../src/es5/implementation/graphics/pdf-graphics.js","../src/es5/implementation/pages/pdf-page-layer.js","../src/es5/implementation/general/pdf-collection.js","../src/es5/implementation/pages/pdf-page-layer-collection.js","../src/es5/implementation/graphics/figures/pdf-template.js","../src/es5/implementation/graphics/images/byte-array.js","../src/es5/implementation/primitives/pdf-boolean.js","../src/es5/implementation/graphics/figures/enum.js","../src/es5/implementation/graphics/unit-convertor.js","../src/es5/implementation/graphics/images/pdf-image.js","../src/es5/implementation/graphics/images/pdf-bitmap.js","../src/es5/implementation/graphics/pdf-resources.js","../src/es5/implementation/pages/pdf-page-base.js","../src/es5/implementation/annotations/annotation-collection.js","../src/es5/implementation/pages/pdf-page.js","../src/es5/implementation/pages/page-added-event-arguments.js","../src/es5/implementation/pages/pdf-section-page-collection.js","../src/es5/implementation/document/pdf-document-template.js","../src/es5/implementation/pages/pdf-section-templates.js","../src/es5/implementation/pages/pdf-section.js","../src/es5/implementation/pages/pdf-section-collection.js","../src/es5/implementation/pages/pdf-document-page-collection.js","../src/es5/implementation/general/pdf-cache-collection.js","../src/es5/implementation/document/pdf-document.js","../src/es5/implementation/graphics/fonts/pdf-font-metrics.js","../src/es5/implementation/graphics/fonts/pdf-standard-font-metrics-factory.js","../src/es5/implementation/graphics/fonts/pdf-standard-font.js","../src/es5/implementation/annotations/annotation.js","../src/es5/implementation/annotations/link-annotation.js","../src/es5/implementation/annotations/action-link-annotation.js","../src/es5/implementation/annotations/document-link-annotation.js","../src/es5/implementation/graphics/figures/base/element-layouter.js","../src/es5/implementation/general/enum.js","../src/es5/implementation/graphics/figures/layout-element.js","../src/es5/implementation/graphics/figures/base/text-layouter.js","../src/es5/implementation/graphics/figures/text-element.js","../src/es5/implementation/annotations/uri-annotation.js","../src/es5/implementation/annotations/pdf-text-web-link.js","../src/es5/implementation/document/automatic-fields/pdf-numbers-convertor.js","../src/es5/implementation/document/automatic-fields/pdf-template-value-pair.js","../src/es5/implementation/document/automatic-fields/multiple-value-field.js","../src/es5/implementation/document/automatic-fields/pdf-page-number-field.js","../src/es5/implementation/document/automatic-fields/composite-field.js","../src/es5/implementation/document/automatic-fields/single-value-field.js","../src/es5/implementation/document/automatic-fields/page-count-field.js","../src/es5/implementation/general/pdf-destination.js","../src/es5/implementation/structured-elements/tables/light-tables/enum.js","../src/es5/implementation/pages/pdf-page-template-element.js","../src/es5/implementation/structured-elements/grid/styles/pdf-borders.js","../src/es5/implementation/structured-elements/grid/styles/style.js","../src/es5/implementation/structured-elements/grid/pdf-grid-cell.js","../src/es5/implementation/structured-elements/grid/pdf-grid-column.js","../src/es5/implementation/structured-elements/grid/pdf-grid-row.js","../src/es5/implementation/structured-elements/grid/pdf-grid.js"],"sourcesContent":["/**\n * @private\n * @hidden\n */\nexport function defaultToString(item) {\n    // if (item === null) {\n    //     return 'COLLECTION_NULL';\n    // } else if (typeof item === 'undefined') {\n    //     return 'COLLECTION_UNDEFINED';\n    // } else if (Object.prototype.toString.call(item) === '[object String]') {\n    if (Object.prototype.toString.call(item) === '[object String]') {\n        return '$s' + item;\n    }\n    else {\n        return '$o' + item.toString();\n    }\n}\n","/**\n * Encoding class: Contains the details about encoding type, whether to write a Unicode byte order mark (BOM).\n * ```typescript\n * let encoding : Encoding = new Encoding();\n * encoding.type = 'Utf8';\n * encoding.getBytes('Encoding', 0, 5);\n * ```\n */\nvar Encoding = /** @class */ (function () {\n    /**\n     * Initializes a new instance of the Encoding class. A parameter specifies whether to write a Unicode byte order mark\n     * @param  {boolean} includeBom?-true to specify that a Unicode byte order mark is written; otherwise, false.\n     */\n    function Encoding(includeBom) {\n        this.emitBOM = true;\n        this.encodingType = 'Ansi';\n        this.initBOM(includeBom);\n    }\n    Object.defineProperty(Encoding.prototype, \"includeBom\", {\n        /**\n         * Gets a value indicating whether to write a Unicode byte order mark\n         * @returns boolean- true to specify that a Unicode byte order mark is written; otherwise, false\n         */\n        get: function () {\n            return this.emitBOM;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Encoding.prototype, \"type\", {\n        /**\n         * Gets the encoding type.\n         * @returns EncodingType\n         */\n        get: function () {\n            return this.encodingType;\n        },\n        /**\n         * Sets the encoding type.\n         * @param  {EncodingType} value\n         */\n        set: function (value) {\n            this.encodingType = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Initialize the includeBom to emit BOM or Not\n     * @param  {boolean} includeBom\n     */\n    Encoding.prototype.initBOM = function (includeBom) {\n        if (includeBom === undefined || includeBom === null) {\n            this.emitBOM = true;\n        }\n        else {\n            this.emitBOM = includeBom;\n        }\n    };\n    /**\n     * Calculates the number of bytes produced by encoding the characters in the specified string\n     * @param  {string} chars - The string containing the set of characters to encode\n     * @returns {number} - The number of bytes produced by encoding the specified characters\n     */\n    Encoding.prototype.getByteCount = function (chars) {\n        var byteCount = 0;\n        validateNullOrUndefined(chars, 'string');\n        if (chars === '') {\n            var byte = this.utf8Len(chars.charCodeAt(0));\n            return byte;\n        }\n        if (this.type === null || this.type === undefined) {\n            this.type = 'Ansi';\n        }\n        return this.getByteCountInternal(chars, 0, chars.length);\n    };\n    /**\n     * Return the Byte of character\n     * @param  {number} codePoint\n     * @returns {number}\n     */\n    Encoding.prototype.utf8Len = function (codePoint) {\n        var bytes = codePoint <= 0x7F ? 1 :\n            codePoint <= 0x7FF ? 2 :\n                codePoint <= 0xFFFF ? 3 :\n                    codePoint <= 0x1FFFFF ? 4 : 0;\n        return bytes;\n    };\n    /**\n     * for 4 byte character return surrogate pair true, otherwise false\n     * @param  {number} codeUnit\n     * @returns {boolean}\n     */\n    Encoding.prototype.isHighSurrogate = function (codeUnit) {\n        return codeUnit >= 0xD800 && codeUnit <= 0xDBFF;\n    };\n    /**\n     * for 4byte character generate the surrogate pair\n     * @param  {number} highCodeUnit\n     * @param  {number} lowCodeUnit\n     */\n    Encoding.prototype.toCodepoint = function (highCodeUnit, lowCodeUnit) {\n        highCodeUnit = (0x3FF & highCodeUnit) << 10;\n        var u = highCodeUnit | (0x3FF & lowCodeUnit);\n        return u + 0x10000;\n    };\n    /**\n     * private method to get the byte count for specific charindex and count\n     * @param  {string} chars\n     * @param  {number} charIndex\n     * @param  {number} charCount\n     */\n    Encoding.prototype.getByteCountInternal = function (chars, charIndex, charCount) {\n        var byteCount = 0;\n        if (this.encodingType === 'Utf8' || this.encodingType === 'Unicode') {\n            var isUtf8 = this.encodingType === 'Utf8';\n            for (var i = 0; i < charCount; i++) {\n                var charCode = chars.charCodeAt(isUtf8 ? charIndex : charIndex++);\n                if (this.isHighSurrogate(charCode)) {\n                    if (isUtf8) {\n                        var high = charCode;\n                        var low = chars.charCodeAt(++charIndex);\n                        byteCount += this.utf8Len(this.toCodepoint(high, low));\n                    }\n                    else {\n                        byteCount += 4;\n                        ++i;\n                    }\n                }\n                else {\n                    if (isUtf8) {\n                        byteCount += this.utf8Len(charCode);\n                    }\n                    else {\n                        byteCount += 2;\n                    }\n                }\n                if (isUtf8) {\n                    charIndex++;\n                }\n            }\n            return byteCount;\n        }\n        else {\n            byteCount = charCount;\n            return byteCount;\n        }\n    };\n    /**\n     * Encodes a set of characters from the specified string into the ArrayBuffer.\n     * @param  {string} s- The string containing the set of characters to encode\n     * @param  {number} charIndex-The index of the first character to encode.\n     * @param  {number} charCount- The number of characters to encode.\n     * @returns {ArrayBuffer} - The ArrayBuffer that contains the resulting sequence of bytes.\n     */\n    Encoding.prototype.getBytes = function (s, charIndex, charCount) {\n        validateNullOrUndefined(s, 'string');\n        validateNullOrUndefined(charIndex, 'charIndex');\n        validateNullOrUndefined(charCount, 'charCount');\n        if (charIndex < 0 || charCount < 0) {\n            throw new RangeError('Argument Out Of Range Exception: charIndex or charCount is less than zero');\n        }\n        if (s.length - charIndex < charCount) {\n            throw new RangeError('Argument Out Of Range Exception: charIndex and charCount do not denote a valid range in string');\n        }\n        var bytes;\n        if (s === '') {\n            bytes = new ArrayBuffer(0);\n            return bytes;\n        }\n        if (this.type === null || this.type === undefined) {\n            this.type = 'Ansi';\n        }\n        var byteCount = this.getByteCountInternal(s, charIndex, charCount);\n        switch (this.type) {\n            case 'Utf8':\n                bytes = this.getBytesOfUtf8Encoding(byteCount, s, charIndex, charCount);\n                return bytes;\n            case 'Unicode':\n                bytes = this.getBytesOfUnicodeEncoding(byteCount, s, charIndex, charCount);\n                return bytes;\n            default:\n                bytes = this.getBytesOfAnsiEncoding(byteCount, s, charIndex, charCount);\n                return bytes;\n        }\n    };\n    /**\n     * Decodes a sequence of bytes from the specified ArrayBuffer into the string.\n     * @param  {ArrayBuffer} bytes- The ArrayBuffer containing the sequence of bytes to decode.\n     * @param  {number} index- The index of the first byte to decode.\n     * @param  {number} count- The number of bytes to decode.\n     * @returns {string} - The string that contains the resulting set of characters.\n     */\n    Encoding.prototype.getString = function (bytes, index, count) {\n        validateNullOrUndefined(bytes, 'bytes');\n        validateNullOrUndefined(index, 'index');\n        validateNullOrUndefined(count, 'count');\n        if (index < 0 || count < 0) {\n            throw new RangeError('Argument Out Of Range Exception: index or count is less than zero');\n        }\n        if (bytes.byteLength - index < count) {\n            throw new RangeError('Argument Out Of Range Exception: index and count do not denote a valid range in bytes');\n        }\n        if (bytes.byteLength === 0 || count === 0) {\n            return '';\n        }\n        if (this.type === null || this.type === undefined) {\n            this.type = 'Ansi';\n        }\n        var out = '';\n        var byteCal = new Uint8Array(bytes);\n        switch (this.type) {\n            case 'Utf8':\n                var s = this.getStringOfUtf8Encoding(byteCal, index, count);\n                return s;\n            case 'Unicode':\n                var byteUnicode = new Uint16Array(bytes);\n                out = this.getStringofUnicodeEncoding(byteUnicode, index, count);\n                return out;\n            default:\n                var j = index;\n                for (var i = 0; i < count; i++) {\n                    var c = byteCal[j];\n                    out += String.fromCharCode(c); // 1 byte(ASCII) character                  \n                    j++;\n                }\n                return out;\n        }\n    };\n    Encoding.prototype.getBytesOfAnsiEncoding = function (byteCount, s, charIndex, charCount) {\n        var bytes = new ArrayBuffer(byteCount);\n        var bufview = new Uint8Array(bytes);\n        var k = 0;\n        for (var i = 0; i < charCount; i++) {\n            var charcode = s.charCodeAt(charIndex++);\n            if (charcode < 0x800) {\n                bufview[k] = charcode;\n            }\n            else {\n                bufview[k] = 63; //replacement character '?'\n            }\n            k++;\n        }\n        return bytes;\n    };\n    Encoding.prototype.getBytesOfUtf8Encoding = function (byteCount, s, charIndex, charCount) {\n        var bytes = new ArrayBuffer(byteCount);\n        var uint = new Uint8Array(bytes);\n        var index = charIndex;\n        var j = 0;\n        for (var i = 0; i < charCount; i++) {\n            var charcode = s.charCodeAt(index);\n            if (charcode <= 0x7F) {\n                uint[j] = charcode;\n            }\n            else if (charcode < 0x800) {\n                uint[j] = 0xc0 | (charcode >> 6);\n                uint[++j] = 0x80 | (charcode & 0x3f);\n            }\n            else if ((charcode < 0xd800 || charcode >= 0xe000)) {\n                uint[j] = 0xe0 | (charcode >> 12);\n                uint[++j] = 0x80 | ((charcode >> 6) & 0x3f);\n                uint[++j] = 0x80 | (charcode & 0x3f);\n            }\n            else {\n                uint[j] = 0xef;\n                uint[++j] = 0xbf;\n                uint[++j] = 0xbd; // U+FFFE \"replacement character\"\n            }\n            ++j;\n            ++index;\n        }\n        return bytes;\n    };\n    Encoding.prototype.getBytesOfUnicodeEncoding = function (byteCount, s, charIndex, charCount) {\n        var bytes = new ArrayBuffer(byteCount);\n        var uint16 = new Uint16Array(bytes);\n        for (var i = 0; i < charCount; i++) {\n            var charcode = s.charCodeAt(i);\n            uint16[i] = charcode;\n        }\n        return bytes;\n    };\n    Encoding.prototype.getStringOfUtf8Encoding = function (byteCal, index, count) {\n        var j = 0;\n        var i = index;\n        var s = '';\n        for (j; j < count; j++) {\n            var c = byteCal[i++];\n            while (i > byteCal.length) {\n                return s;\n            }\n            if (c > 127) {\n                if (c > 191 && c < 224 && i < count) {\n                    c = (c & 31) << 6 | byteCal[i] & 63;\n                }\n                else if (c > 223 && c < 240 && i < byteCal.byteLength) {\n                    c = (c & 15) << 12 | (byteCal[i] & 63) << 6 | byteCal[++i] & 63;\n                }\n                else if (c > 239 && c < 248 && i < byteCal.byteLength) {\n                    c = (c & 7) << 18 | (byteCal[i] & 63) << 12 | (byteCal[++i] & 63) << 6 | byteCal[++i] & 63;\n                }\n                ++i;\n            }\n            s += String.fromCharCode(c); // 1 byte(ASCII) character                          \n        }\n        return s;\n    };\n    Encoding.prototype.getStringofUnicodeEncoding = function (byteUni, index, count) {\n        if (count > byteUni.length) {\n            throw new RangeError('ArgumentOutOfRange_Count');\n        }\n        var byte16 = new Uint16Array(count);\n        var out = '';\n        for (var i = 0; i < count && i < byteUni.length; i++) {\n            byte16[i] = byteUni[index++];\n        }\n        out = String.fromCharCode.apply(null, byte16);\n        return out;\n    };\n    /**\n     * To clear the encoding instance\n     * @return {void}\n     */\n    Encoding.prototype.destroy = function () {\n        this.emitBOM = undefined;\n        this.encodingType = undefined;\n    };\n    return Encoding;\n}());\nexport { Encoding };\n/**\n * To check the object is null or undefined and throw error if it is null or undefined\n * @param {Object} value - object to check is null or undefined\n * @return {boolean}\n * @throws {ArgumentException} - if the value is null or undefined\n * @private\n */\nexport function validateNullOrUndefined(value, message) {\n    if (value === null || value === undefined) {\n        throw new Error('ArgumentException: ' + message + ' cannot be null or undefined');\n    }\n}\n","/**\n * Dictionary.ts class for EJ2-PDF\n * @private\n * @hidden\n */\nimport { defaultToString } from './utils';\n/**\n * @private\n * @hidden\n */\nvar Dictionary = /** @class */ (function () {\n    /**\n     * @private\n     * @hidden\n     */\n    function Dictionary(toStringFunction) {\n        this.table = {};\n        this.nElements = 0;\n        this.toStr = toStringFunction || defaultToString;\n    }\n    /**\n     * @private\n     * @hidden\n     */\n    Dictionary.prototype.getValue = function (key) {\n        var pair = this.table['$' + this.toStr(key)];\n        if (typeof pair === 'undefined') {\n            return undefined;\n        }\n        return pair.value;\n    };\n    /**\n     * @private\n     * @hidden\n     */\n    Dictionary.prototype.setValue = function (key, value) {\n        // if (typeof key === 'undefined' || typeof value === 'undefined') {\n        //     return undefined;\n        // }\n        var ret;\n        var k = '$' + this.toStr(key);\n        var previousElement = this.table[k];\n        // if (typeof previousElement === 'undefined') {\n        this.nElements++;\n        ret = undefined;\n        // }\n        this.table[k] = {\n            key: key,\n            value: value\n        };\n        return ret;\n    };\n    /**\n     * @private\n     * @hidden\n     */\n    Dictionary.prototype.remove = function (key) {\n        var k = '$' + this.toStr(key);\n        var previousElement = this.table[k];\n        // if (typeof previousElement !== 'undefined') {\n        delete this.table[k];\n        this.nElements--;\n        return previousElement.value;\n        // }\n        // return undefined;\n    };\n    /**\n     * @private\n     * @hidden\n     */\n    Dictionary.prototype.keys = function () {\n        var keysArray = [];\n        var namesOfKeys = Object.keys(this.table);\n        for (var index1 = 0; index1 < namesOfKeys.length; index1++) {\n            // if (Object.prototype.hasOwnProperty.call(this.table, namesOfKeys[index1])) {\n            var pair1 = this.table[namesOfKeys[index1]];\n            keysArray.push(pair1.key);\n            // }\n        }\n        return keysArray;\n    };\n    /**\n     * @private\n     * @hidden\n     */\n    Dictionary.prototype.values = function () {\n        var valuesArray = [];\n        var namesOfValues = Object.keys(this.table);\n        for (var index2 = 0; index2 < namesOfValues.length; index2++) {\n            // if (Object.prototype.hasOwnProperty.call(this.table, namesOfValues[index2])) {\n            var pair2 = this.table[namesOfValues[index2]];\n            valuesArray.push(pair2.value);\n            // }\n        }\n        return valuesArray;\n    };\n    /**\n     * @private\n     * @hidden\n     */\n    Dictionary.prototype.containsKey = function (key) {\n        var retutnValue = true;\n        if (typeof this.getValue(key) === 'undefined') {\n            retutnValue = true;\n        }\n        else {\n            retutnValue = false;\n        }\n        return !retutnValue;\n    };\n    /**\n     * @private\n     * @hidden\n     */\n    Dictionary.prototype.clear = function () {\n        this.table = {};\n        this.nElements = 0;\n    };\n    /**\n     * @private\n     * @hidden\n     */\n    Dictionary.prototype.size = function () {\n        return this.nElements;\n    };\n    return Dictionary;\n}()); // End of dictionary\nexport { Dictionary };\n","/**\n * `PdfName` class is used to perform name (element names) related primitive operations.\n * @private\n */\nvar PdfName = /** @class */ (function () {\n    function PdfName(value) {\n        /**\n         * `Start symbol` of the name object.\n         * @default /\n         * @private\n         */\n        this.stringStartMark = '/';\n        /**\n         * `Value` of the element.\n         * @private\n         */\n        this.internalValue = '';\n        /**\n         * Indicates if the object is currently in `saving state or not`.\n         * @default false\n         * @private\n         */\n        this.isSaving6 = false;\n        /**\n         * Internal variable to store the `position`.\n         * @default -1\n         * @private\n         */\n        this.position6 = -1;\n        this.internalValue = this.normalizeValue(value);\n    }\n    Object.defineProperty(PdfName.prototype, \"status\", {\n        //property\n        /**\n         * Gets or sets the `Status` of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.status6;\n        },\n        set: function (value) {\n            this.status6 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfName.prototype, \"isSaving\", {\n        /**\n         * Gets or sets a value indicating whether this document `is saving` or not.\n         * @private\n         */\n        get: function () {\n            return this.isSaving6;\n        },\n        set: function (value) {\n            this.isSaving6 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfName.prototype, \"objectCollectionIndex\", {\n        /**\n         * Gets or sets the `index` value of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.index6;\n        },\n        set: function (value) {\n            this.index6 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfName.prototype, \"position\", {\n        /**\n         * Gets or sets the `position` of the object.\n         * @private\n         */\n        get: function () {\n            return this.position6;\n        },\n        set: function (value) {\n            this.position6 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfName.prototype, \"clonedObject\", {\n        /**\n         * Returns `cloned object`.\n         * @private\n         */\n        get: function () {\n            return null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfName.prototype, \"value\", {\n        /**\n         * Gets or sets the `value` of the object.\n         * @private\n         */\n        get: function () {\n            return this.internalValue;\n        },\n        set: function (value) {\n            // if (value !== this.value) {\n            var val = value;\n            if (value !== null && value.length > 0) {\n                // val = (value.substring(0, 1) === this.stringStartMark) ? value.substring(1) : value;\n                val = value;\n                this.internalValue = this.normalizeValue(val);\n            }\n            else {\n                this.internalValue = val;\n            }\n            // }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //public methods\n    /**\n     * `Saves` the name using the specified writer.\n     * @private\n     */\n    PdfName.prototype.save = function (writer) {\n        // if (writer === null) {\n        //     throw new Error('ArgumentNullException : writer');\n        // }\n        writer.write(this.toString());\n    };\n    /**\n     * Gets `string` representation of the primitive.\n     * @private\n     */\n    PdfName.prototype.toString = function () {\n        return (this.stringStartMark + this.escapeString(this.value));\n    };\n    /**\n     * Creates a `copy of PdfName`.\n     * @private\n     */\n    PdfName.prototype.clone = function (crossTable) {\n        var newName = new PdfName();\n        newName.value = this.internalValue;\n        return newName;\n    };\n    /**\n     * Replace some characters with its `escape sequences`.\n     * @private\n     */\n    PdfName.prototype.escapeString = function (stringValue) {\n        // if (str === null) {\n        //     throw new Error('ArgumentNullException : str');\n        // }\n        // if (str === '') {\n        //     return str;\n        // }\n        var result = '';\n        var len = 0;\n        for (var i = 0, len_1 = stringValue.length; i < len_1; i++) {\n            var ch = stringValue[i];\n            var index = PdfName.delimiters.indexOf(ch);\n            // switch (ch) {\n            //     case '\\r' :\n            //         result = result + '\\\\r';\n            //         break;\n            //     case '\\n' :\n            //         result = result + '\\n';\n            //         break;\n            //     case '(' :\n            //     case ')' :\n            //     case '\\\\' :\n            //         //result.Append( '\\\\' ).Append( ch );\n            //         result = result + ch;\n            //         break;\n            //     default :\n            //         result = result + ch;\n            //         break;\n            // }\n            result = result + ch;\n        }\n        return result;\n    };\n    //methiods\n    /**\n     * Replace a symbol with its code with the precedence of the `sharp sign`.\n     * @private\n     */\n    PdfName.prototype.normalizeValue = function (value, c) {\n        // if (typeof c === undefined) {\n        //     let str : string = value;\n        //     for (let i : number = 0; i < PdfName.replacements.length; i++) {\n        //         str = this.normalizeValue(str, c);\n        //     }\n        //     return str;\n        // } else {\n        var strFormat = '#{0:X}';\n        //return value.replace(c.toString(),String.format(strFormat,c));\n        return value;\n        // }\n    };\n    /**\n     * PDF `special characters`.\n     * @private\n     */\n    PdfName.delimiters = '()<>[]{}/%}';\n    /**\n     * The symbols that are not allowed in PDF names and `should be replaced`.\n     * @private\n     */\n    PdfName.replacements = [' ', '\\t', '\\n', '\\r'];\n    return PdfName;\n}());\nexport { PdfName };\n","/**\n * PdfOperators.ts class for EJ2-PDF\n * Class of string PDF common operators.\n * @private\n */\nvar Operators = /** @class */ (function () {\n    /**\n     * Create an instance of `PdfOperator` class.\n     * @private\n     */\n    function Operators() {\n        /**\n         * Specifies the value of `test`.\n         * @private\n         */\n        this.forTest = 'test';\n        this.forTest = Operators.obj;\n    }\n    /**\n     * Specifies the value of `obj`.\n     * @private\n     */\n    Operators.obj = 'obj';\n    /**\n     * Specifies the value of `endObj`.\n     * @private\n     */\n    Operators.endObj = 'endobj';\n    /**\n     * Specifies the value of `R`.\n     * @private\n     */\n    Operators.r = 'R';\n    /**\n     * Specifies the value of ` `.\n     * @private\n     */\n    Operators.whiteSpace = ' ';\n    /**\n     * Specifies the value of `/`.\n     * @private\n     */\n    Operators.slash = '/';\n    /**\n     * Specifies the value of `\\r\\n`.\n     * @private\n     */\n    Operators.newLine = '\\r\\n';\n    /**\n     * Specifies the value of `stream`.\n     * @private\n     */\n    Operators.stream = 'stream';\n    /**\n     * Specifies the value of `endStream`.\n     * @private\n     */\n    Operators.endStream = 'endstream';\n    /**\n     * Specifies the value of `xref`.\n     * @private\n     */\n    Operators.xref = 'xref';\n    /**\n     * Specifies the value of `f`.\n     * @private\n     */\n    Operators.f = 'f';\n    /**\n     * Specifies the value of `n`.\n     * @private\n     */\n    Operators.n = 'n';\n    /**\n     * Specifies the value of `trailer`.\n     * @private\n     */\n    Operators.trailer = 'trailer';\n    /**\n     * Specifies the value of `startxref`.\n     * @private\n     */\n    Operators.startxref = 'startxref';\n    /**\n     * Specifies the value of `eof`.\n     * @private\n     */\n    Operators.eof = '%%EOF';\n    /**\n     * Specifies the value of `header`.\n     * @private\n     */\n    Operators.header = '%PDF-1.5';\n    /**\n     * Specifies the value of `beginText`.\n     * @private\n     */\n    Operators.beginText = 'BT';\n    /**\n     * Specifies the value of `endText`.\n     * @private\n     */\n    Operators.endText = 'ET';\n    /**\n     * Specifies the value of `m`.\n     * @private\n     */\n    Operators.beginPath = 'm';\n    /**\n     * Specifies the value of `l`.\n     * @private\n     */\n    Operators.appendLineSegment = 'l';\n    /**\n     * Specifies the value of `S`.\n     * @private\n     */\n    Operators.stroke = 'S';\n    /**\n     * Specifies the value of `f`.\n     * @private\n     */\n    Operators.fill = 'f';\n    /**\n     * Specifies the value of `f*`.\n     * @private\n     */\n    Operators.fillEvenOdd = 'f*';\n    /**\n     * Specifies the value of `B`.\n     * @private\n     */\n    Operators.fillStroke = 'B';\n    /**\n     * Specifies the value of `B*`.\n     * @private\n     */\n    Operators.fillStrokeEvenOdd = 'B*';\n    /**\n     * Specifies the value of `c`.\n     * @private\n     */\n    Operators.appendbeziercurve = 'c';\n    /**\n     * Specifies the value of `re`.\n     * @private\n     */\n    Operators.appendRectangle = 're';\n    /**\n     * Specifies the value of `q`.\n     * @private\n     */\n    Operators.saveState = 'q';\n    /**\n     * Specifies the value of `Q`.\n     * @private\n     */\n    Operators.restoreState = 'Q';\n    /**\n     * Specifies the value of `Do`.\n     * @private\n     */\n    Operators.paintXObject = 'Do';\n    /**\n     * Specifies the value of `cm`.\n     * @private\n     */\n    Operators.modifyCtm = 'cm';\n    /**\n     * Specifies the value of `Tm`.\n     * @private\n     */\n    Operators.modifyTM = 'Tm';\n    /**\n     * Specifies the value of `w`.\n     * @private\n     */\n    Operators.setLineWidth = 'w';\n    /**\n     * Specifies the value of `J`.\n     * @private\n     */\n    Operators.setLineCapStyle = 'J';\n    /**\n     * Specifies the value of `j`.\n     * @private\n     */\n    Operators.setLineJoinStyle = 'j';\n    /**\n     * Specifies the value of `d`.\n     * @private\n     */\n    Operators.setDashPattern = 'd';\n    /**\n     * Specifies the value of `i`.\n     * @private\n     */\n    Operators.setFlatnessTolerance = 'i';\n    /**\n     * Specifies the value of `h`.\n     * @private\n     */\n    Operators.closePath = 'h';\n    /**\n     * Specifies the value of `s`.\n     * @private\n     */\n    Operators.closeStrokePath = 's';\n    /**\n     * Specifies the value of `b`.\n     * @private\n     */\n    Operators.closeFillStrokePath = 'b';\n    /**\n     * Specifies the value of `setCharacterSpace`.\n     * @private\n     */\n    Operators.setCharacterSpace = 'Tc';\n    /**\n     * Specifies the value of `setWordSpace`.\n     * @private\n     */\n    Operators.setWordSpace = 'Tw';\n    /**\n     * Specifies the value of `setHorizontalScaling`.\n     * @private\n     */\n    Operators.setHorizontalScaling = 'Tz';\n    /**\n     * Specifies the value of `setTextLeading`.\n     * @private\n     */\n    Operators.setTextLeading = 'TL';\n    /**\n     * Specifies the value of `setFont`.\n     * @private\n     */\n    Operators.setFont = 'Tf';\n    /**\n     * Specifies the value of `setRenderingMode`.\n     * @private\n     */\n    Operators.setRenderingMode = 'Tr';\n    /**\n     * Specifies the value of `setTextRise`.\n     * @private\n     */\n    Operators.setTextRise = 'Ts';\n    /**\n     * Specifies the value of `setTextScaling`.\n     * @private\n     */\n    Operators.setTextScaling = 'Tz';\n    /**\n     * Specifies the value of `setCoords`.\n     * @private\n     */\n    Operators.setCoords = 'Td';\n    /**\n     * Specifies the value of `goToNextLine`.\n     * @private\n     */\n    Operators.goToNextLine = 'T*';\n    /**\n     * Specifies the value of `setText`.\n     * @private\n     */\n    Operators.setText = 'Tj';\n    /**\n     * Specifies the value of `setTextWithFormatting`.\n     * @private\n     */\n    Operators.setTextWithFormatting = 'TJ';\n    /**\n     * Specifies the value of `setTextOnNewLine`.\n     * @private\n     */\n    Operators.setTextOnNewLine = '\\'';\n    /**\n     * Specifies the value of `selectcolorspaceforstroking`.\n     * @private\n     */\n    Operators.selectcolorspaceforstroking = 'CS';\n    /**\n     * Specifies the value of `selectcolorspacefornonstroking`.\n     * @private\n     */\n    Operators.selectcolorspacefornonstroking = 'cs';\n    /**\n     * Specifies the value of `setrbgcolorforstroking`.\n     * @private\n     */\n    Operators.setrbgcolorforstroking = 'RG';\n    /**\n     * Specifies the value of `setrbgcolorfornonstroking`.\n     * @private\n     */\n    Operators.setrbgcolorfornonstroking = 'rg';\n    /**\n     * Specifies the value of `K`.\n     * @private\n     */\n    Operators.setcmykcolorforstroking = 'K';\n    /**\n     * Specifies the value of `k`.\n     * @private\n     */\n    Operators.setcmykcolorfornonstroking = 'k';\n    /**\n     * Specifies the value of `G`.\n     * @private\n     */\n    Operators.setgraycolorforstroking = 'G';\n    /**\n     * Specifies the value of `g`.\n     * @private\n     */\n    Operators.setgraycolorfornonstroking = 'g';\n    /**\n     * Specifies the value of `W`.\n     * @private\n     */\n    Operators.clipPath = 'W';\n    /**\n     * Specifies the value of `clipPathEvenOdd`.\n     * @private\n     */\n    Operators.clipPathEvenOdd = 'W*';\n    /**\n     * Specifies the value of `n`.\n     * @private\n     */\n    Operators.endPath = 'n';\n    /**\n     * Specifies the value of `setGraphicsState`.\n     * @private\n     */\n    Operators.setGraphicsState = 'gs';\n    /**\n     * Specifies the value of `%`.\n     * @private\n     */\n    Operators.comment = '%';\n    /**\n     * Specifies the value of `*`.\n     * @private\n     */\n    Operators.evenOdd = '*';\n    /**\n     * Specifies the value of `M`.\n     * @private\n     */\n    Operators.setMiterLimit = 'M';\n    return Operators;\n}());\nexport { Operators };\n","/**\n * dictionaryProperties.ts class for EJ2-PDF\n * PDF dictionary properties.\n * @private\n */\nvar DictionaryProperties = /** @class */ (function () {\n    /**\n     * Initialize an instance for `PdfDictionaryProperties` class.\n     * @private\n     */\n    function DictionaryProperties() {\n        /**\n         * Specifies the value of `Pages`.\n         * @private\n         */\n        this.pages = 'Pages';\n        /**\n         * Specifies the value of `Kids`.\n         * @private\n         */\n        this.kids = 'Kids';\n        /**\n         * Specifies the value of `Count`.\n         * @private\n         */\n        this.count = 'Count';\n        /**\n         * Specifies the value of `Resources`.\n         * @private\n         */\n        this.resources = 'Resources';\n        /**\n         * Specifies the value of `Type`.\n         * @private\n         */\n        this.type = 'Type';\n        /**\n         * Specifies the value of `Size`.\n         * @private\n         */\n        this.size = 'Size';\n        /**\n         * Specifies the value of `MediaBox`.\n         * @private\n         */\n        this.mediaBox = 'MediaBox';\n        /**\n         * Specifies the value of `Parent`.\n         * @private\n         */\n        this.parent = 'Parent';\n        /**\n         * Specifies the value of `Root`.\n         * @private\n         */\n        this.root = 'Root';\n        /**\n         * Specifies the value of `DecodeParms`.\n         * @private\n         */\n        this.decodeParms = 'DecodeParms';\n        /**\n         * Specifies the value of `Filter`.\n         * @private\n         */\n        this.filter = 'Filter';\n        /**\n         * Specifies the value of `Font`.\n         * @private\n         */\n        this.font = 'Font';\n        /**\n         * Specifies the value of `Type1`.\n         * @private\n         */\n        this.type1 = 'Type1';\n        /**\n         * Specifies the value of `BaseFont`.\n         * @private\n         */\n        this.baseFont = 'BaseFont';\n        /**\n         * Specifies the value of `Encoding`.\n         * @private\n         */\n        this.encoding = 'Encoding';\n        /**\n         * Specifies the value of `Subtype`.\n         * @private\n         */\n        this.subtype = 'Subtype';\n        /**\n         * Specifies the value of `Contents`.\n         * @private\n         */\n        this.contents = 'Contents';\n        /**\n         * Specifies the value of `ProcSet`.\n         * @private\n         */\n        this.procset = 'ProcSet';\n        /**\n         * Specifies the value of `ColorSpace`.\n         * @private\n         */\n        this.colorSpace = 'ColorSpace';\n        /**\n         * Specifies the value of `ExtGState`.\n         * @private\n         */\n        this.extGState = 'ExtGState';\n        /**\n         * Specifies the value of `Pattern`.\n         * @private\n         */\n        this.pattern = 'Pattern';\n        /**\n         * Specifies the value of `XObject`.\n         * @private\n         */\n        this.xObject = 'XObject';\n        /**\n         * Specifies the value of `Length`.\n         * @private\n         */\n        this.length = 'Length';\n        /**\n         * Specifies the value of `Width`.\n         * @private\n         */\n        this.width = 'Width';\n        /**\n         * Specifies the value of `Height`.\n         * @private\n         */\n        this.height = 'Height';\n        /**\n         * Specifies the value of `BitsPerComponent`.\n         * @private\n         */\n        this.bitsPerComponent = 'BitsPerComponent';\n        /**\n         * Specifies the value of `Image`.\n         * @private\n         */\n        this.image = 'Image';\n        /**\n         * Specifies the value of `dctdecode`.\n         * @private\n         */\n        this.dctdecode = 'DCTDecode';\n        /**\n         * Specifies the value of `Columns`.\n         * @private\n         */\n        this.columns = 'Columns';\n        /**\n         * Specifies the value of `BlackIs1`.\n         * @private\n         */\n        this.blackIs1 = 'BlackIs1';\n        /**\n         * Specifies the value of `K`.\n         * @private\n         */\n        this.k = 'K';\n        /**\n         * Specifies the value of `S`.\n         * @private\n         */\n        this.s = 'S';\n        /**\n         * Specifies the value of `Predictor`.\n         * @private\n         */\n        this.predictor = 'Predictor';\n        /**\n         * Specifies the value of `DeviceRGB`.\n         * @private\n         */\n        this.deviceRgb = 'DeviceRGB';\n        /**\n         * Specifies the value of `Next`.\n         * @private\n         */\n        this.next = 'Next';\n        /**\n         * Specifies the value of `Action`.\n         * @private\n         */\n        this.action = 'Action';\n        /**\n         * Specifies the value of `Link`.\n         * @private\n         */\n        this.link = 'Link';\n        /**\n         *\n         * Specifies the value of `A`.\n         * @private\n         */\n        this.a = 'A';\n        /**\n         * Specifies the value of `Annot`.\n         * @private\n         */\n        this.annot = 'Annot';\n        /**\n         * Specifies the value of `P`.\n         * @private\n         */\n        this.p = 'P';\n        /**\n         * Specifies the value of `C`.\n         * @private\n         */\n        this.c = 'C';\n        /**\n         * Specifies the value of `Rect`.\n         * @private\n         */\n        this.rect = 'Rect';\n        /**\n         * Specifies the value of `URI`.\n         * @private\n         */\n        this.uri = 'URI';\n        /**\n         * Specifies the value of `Annots`.\n         * @private\n         */\n        this.annots = 'Annots';\n        /**\n         * Specifies the value of `ca`.\n         * @private\n         */\n        this.ca = 'ca';\n        /**\n         * Specifies the value of `CA`.\n         * @private\n         */\n        this.CA = 'CA';\n        /**\n         * Specifies the value of `XYZ`.\n         * @private\n         */\n        this.xyz = 'XYZ';\n        /**\n         * Specifies the value of `Fit`.\n         * @private\n         */\n        this.fit = 'Fit';\n        /**\n         * Specifies the value of `Dest`.\n         * @private\n         */\n        this.dest = 'Dest';\n        /**\n         * Specifies the value of `BM`.\n         * @private\n         */\n        this.BM = 'BM';\n        /**\n         * Specifies the value of `flatedecode`.\n         * @private\n         */\n        this.flatedecode = 'FlateDecode';\n        /**\n         * Specifies the value of `Rotate`.\n         * @private\n         */\n        this.rotate = 'Rotate';\n        /**\n         * Specifies the value of 'bBox'.\n         * @private\n         */\n        this.bBox = 'BBox';\n        /**\n         * Specifies the value of 'form'.\n         * @private\n         */\n        this.form = 'Form';\n        //\n    }\n    return DictionaryProperties;\n}());\nexport { DictionaryProperties };\n","import { Dictionary } from './../collections/dictionary';\nimport { PdfName } from './pdf-name';\nimport { Operators } from './../input-output/pdf-operators';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\n/**\n * `PdfDictionary` class is used to perform primitive operations.\n * @private\n */\nvar PdfDictionary = /** @class */ (function () {\n    function PdfDictionary(dictionary) {\n        /**\n         * Internal variable to store the `position`.\n         * @default -1\n         * @private\n         */\n        this.position7 = -1;\n        /**\n         * The `IPdfSavable` with the specified key.\n         * @private\n         */\n        this.primitiveItems = new Dictionary();\n        /**\n         * `Start marker` for dictionary.\n         * @private\n         */\n        this.prefix = '<<';\n        /**\n         * `End marker` for dictionary.\n         * @private\n         */\n        this.suffix = '>>';\n        /**\n         * @hidden\n         * @private\n         */\n        this.resources = [];\n        /**\n         * Internal variable to hold `cloned object`.\n         * @default null\n         * @private\n         */\n        this.object = null;\n        /**\n         * Flag for PDF file formar 1.5 is dictionary `archiving` needed.\n         * @default true\n         * @private\n         */\n        this.archive = true;\n        if (typeof dictionary === 'undefined') {\n            this.primitiveItems = new Dictionary();\n            this.encrypt = true;\n            this.dictionaryProperties = new DictionaryProperties();\n        }\n        else {\n            this.primitiveItems = new Dictionary();\n            var keys = dictionary.items.keys();\n            var values = dictionary.items.values();\n            for (var index = 0; index < dictionary.items.size(); index++) {\n                this.primitiveItems.setValue(keys[index], values[index]);\n            }\n            this.status = dictionary.status;\n            this.freezeChanges(this);\n            this.encrypt = true;\n            this.dictionaryProperties = new DictionaryProperties();\n        }\n    }\n    Object.defineProperty(PdfDictionary.prototype, \"items\", {\n        //Properties\n        /**\n         * Gets or sets the `IPdfSavable` with the specified key.\n         * @private\n         */\n        get: function () {\n            return this.primitiveItems;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDictionary.prototype, \"status\", {\n        /**\n         * Gets or sets the `Status` of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.status7;\n        },\n        set: function (value) {\n            this.status7 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDictionary.prototype, \"isSaving\", {\n        /**\n         * Gets or sets a value indicating whether this document `is saving` or not.\n         * @private\n         */\n        get: function () {\n            return this.isSaving7;\n        },\n        set: function (value) {\n            this.isSaving7 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDictionary.prototype, \"objectCollectionIndex\", {\n        /**\n         * Gets or sets the `index` value of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.index7;\n        },\n        set: function (value) {\n            this.index7 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDictionary.prototype, \"clonedObject\", {\n        /**\n         * Returns `cloned object`.\n         * @private\n         */\n        get: function () {\n            return this.object;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDictionary.prototype, \"position\", {\n        /**\n         * Gets or sets the `position` of the object.\n         * @private\n         */\n        get: function () {\n            return this.position7;\n        },\n        set: function (value) {\n            this.position7 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDictionary.prototype, \"Count\", {\n        /**\n         * Gets the `count`.\n         * @private\n         */\n        get: function () {\n            return this.primitiveItems.size();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDictionary.prototype, \"Dictionary\", {\n        /**\n         * Collection of `items` in the object.\n         * @private\n         */\n        get: function () {\n            return this;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Get flag if need to `archive` dictionary.\n     * @private\n     */\n    PdfDictionary.prototype.getArchive = function () {\n        return this.archive;\n    };\n    /**\n     * Set flag if need to `archive` dictionary.\n     * @private\n     */\n    PdfDictionary.prototype.setArchive = function (value) {\n        this.archive = value;\n    };\n    /**\n     * Sets flag if `encryption` is needed.\n     * @private\n     */\n    PdfDictionary.prototype.setEncrypt = function (value) {\n        this.encrypt = value;\n        this.modify();\n    };\n    /**\n     * Gets flag if `encryption` is needed.\n     * @private\n     */\n    PdfDictionary.prototype.getEncrypt = function () {\n        return this.encrypt;\n    };\n    /**\n     * `Freezes` the changes.\n     * @private\n     */\n    PdfDictionary.prototype.freezeChanges = function (freezer) {\n        this.bChanged = false;\n    };\n    /**\n     * Creates a `copy of PdfDictionary`.\n     * @private\n     */\n    PdfDictionary.prototype.clone = function (crossTable) {\n        //Need to add more codings\n        var newDict = new PdfDictionary();\n        return newDict;\n    };\n    /**\n     * `Mark` this instance modified.\n     * @private\n     */\n    PdfDictionary.prototype.modify = function () {\n        this.bChanged = true;\n    };\n    /**\n     * `Removes` the specified key.\n     * @private\n     */\n    PdfDictionary.prototype.remove = function (key) {\n        if (typeof key !== 'string') {\n            this.primitiveItems.remove(key.value);\n            this.modify();\n        }\n        else {\n            this.remove(new PdfName(key));\n        }\n    };\n    /**\n     * `Determines` whether the dictionary contains the key.\n     * @private\n     */\n    PdfDictionary.prototype.containsKey = function (key) {\n        var returnValue = false;\n        returnValue = this.primitiveItems.containsKey(key.toString());\n        return returnValue;\n    };\n    /**\n     * Raises event `BeginSave`.\n     * @private\n     */\n    PdfDictionary.prototype.onBeginSave = function () {\n        this.beginSave.sender.beginSave();\n    };\n    /**\n     * Raises event 'BeginSave'.\n     * @private\n     */\n    PdfDictionary.prototype.onTemplateBeginSave = function () {\n        this.pageBeginDrawTemplate.sender.pageBeginSave();\n    };\n    /**\n     * Raises event `BeginSave`.\n     * @private\n     */\n    PdfDictionary.prototype.onBeginAnnotationSave = function () {\n        this.annotationBeginSave.sender.beginSave();\n    };\n    /**\n     * Raises event `BeginSave`.\n     * @private\n     */\n    PdfDictionary.prototype.onSectionBeginSave = function (writer) {\n        var saveEvent = this.sectionBeginSave;\n        saveEvent.sender.beginSave(saveEvent.state, writer);\n    };\n    PdfDictionary.prototype.save = function (writer, bRaiseEvent) {\n        if (typeof bRaiseEvent === 'undefined') {\n            this.save(writer, true);\n        }\n        else {\n            writer.write(this.prefix);\n            if (typeof this.beginSave !== 'undefined') {\n                this.onBeginSave();\n            }\n            if (typeof this.annotationBeginSave !== 'undefined') {\n                this.onBeginAnnotationSave();\n            }\n            if (typeof this.sectionBeginSave !== 'undefined') {\n                this.onSectionBeginSave(writer);\n            }\n            if (typeof this.pageBeginDrawTemplate !== 'undefined') {\n                this.onTemplateBeginSave();\n            }\n            // }\n            if (this.Count > 0) {\n                this.saveItems(writer);\n            }\n            writer.write(this.suffix);\n            writer.write(Operators.newLine);\n        }\n    };\n    /**\n     * `Save dictionary items`.\n     * @private\n     */\n    PdfDictionary.prototype.saveItems = function (writer) {\n        writer.write(Operators.newLine);\n        var keys = this.primitiveItems.keys();\n        var values = this.primitiveItems.values();\n        for (var index = 0; index < keys.length; index++) {\n            var key = keys[index];\n            var name_1 = new PdfName(key);\n            name_1.save(writer);\n            writer.write(Operators.whiteSpace);\n            var resources = values[index];\n            resources.save(writer);\n            writer.write(Operators.newLine);\n        }\n    };\n    return PdfDictionary;\n}());\nexport { PdfDictionary };\nvar SaveSectionCollectionEventHandler = /** @class */ (function () {\n    /**\n     * New instance for `save section collection event handler` class.\n     * @private\n     */\n    function SaveSectionCollectionEventHandler(sender) {\n        this.sender = sender;\n    }\n    return SaveSectionCollectionEventHandler;\n}());\nexport { SaveSectionCollectionEventHandler };\nvar SaveAnnotationEventHandler = /** @class */ (function () {\n    /**\n     * New instance for `save annotation event handler` class.\n     * @private\n     */\n    function SaveAnnotationEventHandler(sender) {\n        this.sender = sender;\n    }\n    return SaveAnnotationEventHandler;\n}());\nexport { SaveAnnotationEventHandler };\nvar SaveSectionEventHandler = /** @class */ (function () {\n    // constructors\n    /**\n     * New instance for `save section event handler` class.\n     * @private\n     */\n    function SaveSectionEventHandler(sender, state) {\n        this.sender = sender;\n        this.state = state;\n    }\n    return SaveSectionEventHandler;\n}());\nexport { SaveSectionEventHandler };\n/**\n * SaveTemplateEventHandler class used to store information about template elements.\n * @private\n * @hidden\n */\nvar SaveTemplateEventHandler = /** @class */ (function () {\n    /**\n     * New instance for save section collection event handler class.\n     * @public\n     */\n    function SaveTemplateEventHandler(sender) {\n        this.sender = sender;\n    }\n    return SaveTemplateEventHandler;\n}());\nexport { SaveTemplateEventHandler };\n","/**\n * `PdfNumber` class is used to perform number related primitive operations.\n * @private\n */\nvar PdfNumber = /** @class */ (function () {\n    /**\n     * Initializes a new instance of the `PdfNumber` class.\n     * @private\n     */\n    function PdfNumber(value) {\n        /**\n         * Sotres the `position`.\n         * @default -1\n         * @private\n         */\n        this.position5 = -1;\n        this.value = value;\n    }\n    Object.defineProperty(PdfNumber.prototype, \"intValue\", {\n        /**\n         * Gets or sets the `integer` value.\n         * @private\n         */\n        get: function () {\n            return this.value;\n        },\n        set: function (value) {\n            this.value = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfNumber.prototype, \"isInteger\", {\n        /**\n         * Gets or sets a value indicating whether this instance `is integer`.\n         * @private\n         */\n        get: function () {\n            return this.integer;\n        },\n        set: function (value) {\n            this.integer = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfNumber.prototype, \"status\", {\n        /**\n         * Gets or sets the `Status` of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.status5;\n        },\n        set: function (value) {\n            this.status5 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfNumber.prototype, \"isSaving\", {\n        /**\n         * Gets or sets a value indicating whether this document `is saving` or not.\n         * @private\n         */\n        get: function () {\n            return this.isSaving5;\n        },\n        set: function (value) {\n            this.isSaving5 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfNumber.prototype, \"objectCollectionIndex\", {\n        /**\n         * Gets or sets the `index` value of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.index5;\n        },\n        set: function (value) {\n            this.index5 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfNumber.prototype, \"position\", {\n        /**\n         * Gets or sets the `position` of the object.\n         * @private\n         */\n        get: function () {\n            return this.position5;\n        },\n        set: function (value) {\n            this.position5 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfNumber.prototype, \"clonedObject\", {\n        /**\n         * Returns `cloned object`.\n         * @private\n         */\n        get: function () {\n            var rValue = null;\n            return rValue;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Saves the object`.\n     * @private\n     */\n    PdfNumber.prototype.save = function (writer) {\n        writer.write(this.intValue.toString()); //tostring(CultureInfo.InletiantCulture)\n    };\n    /**\n     * Creates a `copy of PdfNumber`.\n     * @private\n     */\n    PdfNumber.prototype.clone = function (crossTable) {\n        var newNumber = new PdfNumber(this.value);\n        return newNumber;\n    };\n    /**\n     * Converts a `float value to a string` using Adobe PDF rules.\n     * @private\n     */\n    PdfNumber.floatToString = function (number) {\n        // let tempString1 : string = number.toString();\n        // let tempString2 : string = tempString1.indexOf('.') != -1 ? tempString1.substring(0, tempString1.indexOf('.')) : tempString1;\n        var returnString = number.toFixed(2);\n        if (returnString === '0.00') {\n            returnString = '.00';\n        }\n        // let prefixLength : number = (22 - tempString2.length) >= 0 ? (22 - tempString2.length) : 0;\n        // for (let index : number = 0; index < prefixLength; index++) {\n        //     returnString += '0';\n        // }\n        // returnString += tempString2 + '.00';\n        // returnString += (tempString3.length > 6) ? tempString3.substring(0,6) : tempString3;\n        // let suffixLength : number = (6 - tempString3.length) >= 0 ? (6 - tempString3.length) : 0;\n        // for (let index : number = 0; index < suffixLength; index++) {\n        //     returnString += '0';\n        // }\n        return returnString;\n    };\n    /**\n     * Determines the `minimum of the three values`.\n     * @private\n     */\n    PdfNumber.min = function (x, y, z) {\n        var r = Math.min(x, y);\n        return Math.min(z, r);\n    };\n    return PdfNumber;\n}());\nexport { PdfNumber };\n","import { PdfNumber } from './pdf-number';\nimport { Operators } from './../input-output/pdf-operators';\n/**\n * `PdfArray` class is used to perform array related primitive operations.\n * @private\n */\nvar PdfArray = /** @class */ (function () {\n    function PdfArray(array) {\n        //Fields\n        /**\n         * `startMark` - '['\n         * @private\n         */\n        this.startMark = '[';\n        /**\n         * `endMark` - ']'.\n         * @private\n         */\n        this.endMark = ']';\n        /**\n         * Internal variable to store the `position`.\n         * @default -1\n         * @private\n         */\n        this.position9 = -1;\n        /**\n         * Internal variable to hold `cloned object`.\n         * @default null\n         * @private\n         */\n        this.clonedObject9 = null;\n        if (typeof array === 'undefined') {\n            this.internalElements = [];\n        }\n        else {\n            if (typeof array !== 'undefined' && !(array instanceof PdfArray)) {\n                var tempNumberArray = array;\n                for (var index = 0; index < tempNumberArray.length; index++) {\n                    var pdfNumber = new PdfNumber(tempNumberArray[index]);\n                    this.add(pdfNumber);\n                }\n                // } else if (typeof array !== 'undefined' && (array instanceof PdfArray)) {\n            }\n            else {\n                var tempArray = array;\n                // if (tempArray.Elements.length > 0) {\n                this.internalElements = [];\n                for (var index = 0; index < tempArray.elements.length; index++) {\n                    this.internalElements.push(tempArray.elements[index]);\n                }\n                // }\n            }\n        }\n    }\n    //property\n    /**\n     * Gets the `IPdfSavable` at the specified index.\n     * @private\n     */\n    PdfArray.prototype.items = function (index) {\n        // if (index < 0 || index >= this.Count) {\n        //     throw new Error('ArgumentOutOfRangeException : index, The index can\"t be less then zero or greater then Count.');\n        // }\n        return this.internalElements[index];\n    };\n    Object.defineProperty(PdfArray.prototype, \"count\", {\n        /**\n         * Gets the `count`.\n         * @private\n         */\n        get: function () {\n            return this.internalElements.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfArray.prototype, \"status\", {\n        /**\n         * Gets or sets the `Status` of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.status9;\n        },\n        set: function (value) {\n            this.status9 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfArray.prototype, \"isSaving\", {\n        /**\n         * Gets or sets a value indicating whether this document `is saving` or not.\n         * @private\n         */\n        get: function () {\n            return this.isSaving9;\n        },\n        set: function (value) {\n            this.isSaving9 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfArray.prototype, \"clonedObject\", {\n        /**\n         * Returns `cloned object`.\n         * @private\n         */\n        get: function () {\n            return this.clonedObject9;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfArray.prototype, \"position\", {\n        /**\n         * Gets or sets the `position` of the object.\n         * @private\n         */\n        get: function () {\n            return this.position9;\n        },\n        set: function (value) {\n            this.position9 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfArray.prototype, \"objectCollectionIndex\", {\n        /**\n         * Gets or sets the `index` value of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.index9;\n        },\n        set: function (value) {\n            this.index9 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfArray.prototype, \"CrossTable\", {\n        /**\n         * Returns `PdfCrossTable` associated with the object.\n         * @private\n         */\n        get: function () {\n            return this.pdfCrossTable;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfArray.prototype, \"elements\", {\n        /**\n         * Gets the `elements` of the Pdf Array.\n         * @private\n         */\n        get: function () {\n            return this.internalElements;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Adds` the specified element to the PDF array.\n     * @private\n     */\n    PdfArray.prototype.add = function (element) {\n        // if (element === null) {\n        //     throw new Error('ArgumentNullException : obj');\n        // }\n        if (typeof this.internalElements === 'undefined') {\n            this.internalElements = [];\n        }\n        this.internalElements.push(element);\n        this.markedChange();\n    };\n    /**\n     * `Marks` the object changed.\n     * @private\n     */\n    PdfArray.prototype.markedChange = function () {\n        this.bChanged = true;\n    };\n    /**\n     * `Determines` whether the specified element is within the array.\n     * @private\n     */\n    PdfArray.prototype.contains = function (element) {\n        var returnValue = false;\n        for (var index = 0; index < this.internalElements.length; index++) {\n            var tempElement = this.internalElements[index];\n            var inputElement = element;\n            if (tempElement != null && typeof tempElement !== 'undefined' && inputElement != null && typeof inputElement !== 'undefined') {\n                if (tempElement.value === inputElement.value) {\n                    return true;\n                }\n            }\n            // if (this.internalElements[index] === element) {\n            //     returnValue = true;\n            // }\n        }\n        return returnValue;\n    };\n    /**\n     * Returns the `primitive object` of input index.\n     * @private\n     */\n    PdfArray.prototype.getItems = function (index) {\n        // if (index < 0 || index >= this.Count) {\n        //     throw new Error('ArgumentOutOfRangeException : index , The index can\"t be less then zero or greater then Count.');\n        // }\n        return this.internalElements[index];\n    };\n    /**\n     * `Saves` the object using the specified writer.\n     * @private\n     */\n    PdfArray.prototype.save = function (writer) {\n        // if (writer === null) {\n        //     throw new Error('ArgumentNullException : writer');\n        // }\n        writer.write(this.startMark);\n        for (var i = 0, len = this.count; i < len; i++) {\n            this.getItems(i).save(writer);\n            if (i + 1 !== len) {\n                writer.write(Operators.whiteSpace);\n            }\n        }\n        writer.write(this.endMark);\n    };\n    /**\n     * Creates a `copy of PdfArray`.\n     * @private\n     */\n    PdfArray.prototype.clone = function (crossTable) {\n        // if (this.clonedObject9 !== null && this.clonedObject9.CrossTable === crossTable) {\n        //     return this.clonedObject9;\n        // } else {\n        this.clonedObject9 = null;\n        // Else clone the object.\n        var newArray = new PdfArray();\n        for (var index = 0; index < this.internalElements.length; index++) {\n            var obj = this.internalElements[index];\n            newArray.add(obj.clone(crossTable));\n        }\n        newArray.pdfCrossTable = crossTable;\n        this.clonedObject9 = newArray;\n        return newArray;\n    };\n    /**\n     * Creates filled PDF array `from the rectangle`.\n     * @private\n     */\n    PdfArray.fromRectangle = function (bounds) {\n        var values = [bounds.x, bounds.y, bounds.width, bounds.height];\n        var array = new PdfArray(values);\n        return array;\n    };\n    // /**\n    //  * Creates the rectangle from filled PDF array.\n    //  * @private\n    //  */\n    // public ToRectangle() : RectangleF {\n    //     if (this.Count < 4) {\n    //         throw Error('InvalidOperationException-Can not convert to rectangle.');\n    //     }\n    //     let x1 : number;\n    //     let x2 : number;\n    //     let y1 : number;\n    //     let y2 : number;\n    //     let num : PdfNumber = this.getItems(0) as PdfNumber;\n    //     x1 = num.IntValue;\n    //     num = this.getItems(1) as PdfNumber;\n    //     y1 = num.IntValue;\n    //     num = this.getItems(2) as PdfNumber;\n    //     x2 = num.IntValue;\n    //     num = this.getItems(3) as PdfNumber;\n    //     y2 = num.IntValue;\n    //     let x : number = Math.min(x1, x2);\n    //     let y : number = Math.min(y1, y2);\n    //     let width : number = Math.abs(x1 - x2);\n    //     let height : number = Math.abs(y1 - y2);\n    //     let rect : RectangleF = new RectangleF(new PointF(x, y), new SizeF(width, height));\n    //     return rect;\n    // }\n    /**\n     * `Inserts` the element into the array.\n     * @private\n     */\n    PdfArray.prototype.insert = function (index, element) {\n        if (index < this.internalElements.length && index > 0) {\n            var tempElements = [];\n            for (var i = 0; i < index; i++) {\n                tempElements.push(this.internalElements[i]);\n            }\n            tempElements.push(element);\n            for (var i = index; i < this.internalElements.length; i++) {\n                tempElements.push(this.internalElements[i]);\n            }\n            this.internalElements = tempElements;\n        }\n        else {\n            this.internalElements.push(element);\n        }\n        this.markChanged();\n    };\n    /**\n     * `Checks whether array contains the element`.\n     * @private\n     */\n    PdfArray.prototype.indexOf = function (element) {\n        return this.internalElements.indexOf(element);\n    };\n    /**\n     * `Removes` element from the array.\n     * @private\n     */\n    PdfArray.prototype.remove = function (element) {\n        // if (element === null) {\n        //     throw new Error('ArgumentNullException : element');\n        // }\n        var index = this.internalElements.indexOf(element);\n        // if (index >= 0 && index < this.internalElements.length) {\n        this.internalElements[index] = null;\n        // }\n        this.markChanged();\n    };\n    /**\n     * `Remove` the element from the array by its index.\n     * @private\n     */\n    PdfArray.prototype.removeAt = function (index) {\n        // this.internalElements.RemoveAt(index);\n        if (this.internalElements.length > index) {\n            var tempArray = [];\n            for (var i = 0; i < index; i++) {\n                tempArray.push(this.internalElements[i]);\n            }\n            for (var i = index + 1; i < this.internalElements.length; i++) {\n                tempArray.push(this.internalElements[i]);\n            }\n            this.internalElements = tempArray;\n        }\n        this.markChanged();\n    };\n    /**\n     * `Clear` the array.\n     * @private\n     */\n    PdfArray.prototype.clear = function () {\n        this.internalElements = [];\n        this.markChanged();\n    };\n    /**\n     * `Marks` the object changed.\n     * @private\n     */\n    PdfArray.prototype.markChanged = function () {\n        this.bChanged = true;\n    };\n    return PdfArray;\n}());\nexport { PdfArray };\n","/**\n * Save class provide method to save file\n * ```typescript\n * let blob : Blob = new Blob([''], { type: 'text/plain' });\n * Save.save('fileName.txt',blob);\n */\nvar Save = /** @class */ (function () {\n    /**\n     * Initialize new instance of {save}\n     */\n    function Save() {\n        // tslint:disable\n    }\n    /**\n     * Saves the file with specified name and sends the file to client browser\n     * @param  {string} fileName- file name to save.\n     * @param  {Blob} buffer- the content to write in file\n     * @param  {boolean} isMicrosoftBrowser- specify whether microsoft browser or not\n     * @returns {void}\n     */\n    Save.save = function (fileName, buffer) {\n        if (fileName === null || fileName === undefined || fileName === '') {\n            throw new Error('ArgumentException: fileName cannot be undefined, null or empty');\n        }\n        var extension = fileName.substring(fileName.lastIndexOf('.') + 1, fileName.length);\n        var mimeType = this.getMimeType(extension);\n        if (mimeType !== '') {\n            buffer = new Blob([buffer], { type: mimeType });\n        }\n        if (this.isMicrosoftBrowser) {\n            navigator.msSaveBlob(buffer, fileName);\n        }\n        else {\n            var downloadLink = document.createElementNS('http://www.w3.org/1999/xhtml', 'a');\n            this.saveInternal(fileName, extension, buffer, downloadLink, 'download' in downloadLink);\n        }\n    };\n    Save.saveInternal = function (fileName, extension, buffer, downloadLink, hasDownloadAttribute) {\n        if (hasDownloadAttribute) {\n            downloadLink.download = fileName;\n            var dataUrl_1 = window.URL.createObjectURL(buffer);\n            downloadLink.href = dataUrl_1;\n            var event_1 = document.createEvent('MouseEvent');\n            event_1.initEvent('click', true, true);\n            downloadLink.dispatchEvent(event_1);\n            setTimeout(function () {\n                window.URL.revokeObjectURL(dataUrl_1);\n                dataUrl_1 = undefined;\n            });\n        }\n        else {\n            if (extension !== 'docx' && extension !== 'xlsx') {\n                var url = window.URL.createObjectURL(buffer);\n                var isPopupBlocked = window.open(url, '_blank');\n                if (!isPopupBlocked) {\n                    window.location.href = url;\n                }\n            }\n            else {\n                var reader_1 = new FileReader();\n                reader_1.onloadend = function () {\n                    var isPopupBlocked = window.open(reader_1.result, '_blank');\n                    if (!isPopupBlocked) {\n                        window.location.href = reader_1.result;\n                    }\n                };\n                reader_1.readAsDataURL(buffer);\n            }\n        }\n    };\n    /**\n     *\n     * @param {string} extension - get mime type of the specified extension\n     * @private\n     */\n    Save.getMimeType = function (extension) {\n        var mimeType = '';\n        switch (extension) {\n            case 'html':\n                mimeType = 'text/html';\n                break;\n            case 'pdf':\n                mimeType = 'application/pdf';\n                break;\n            case 'docx':\n                mimeType = 'application/vnd.openxmlformats-officedocument.wordprocessingml.document';\n                break;\n            case 'xlsx':\n                mimeType = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet';\n                break;\n            case 'txt':\n                mimeType = 'text/plain';\n                break;\n        }\n        return mimeType;\n    };\n    return Save;\n}());\nexport { Save };\n","import { Encoding, validateNullOrUndefined } from './encoding';\nimport { Save } from './save';\n/**\n * StreamWriter class contains the implementation for writing characters to a file in a particular encoding\n * ```typescript\n * let writer = new StreamWriter();\n * writer.write('Hello World');\n * writer.save('Sample.txt');\n * writer.dispose();\n * ```\n */\nvar StreamWriter = /** @class */ (function () {\n    /**\n     * Initializes a new instance of the StreamWriter class by using the specified encoding.\n     * @param  {Encoding} encoding?- The character encoding to use.\n     */\n    function StreamWriter(encoding) {\n        this.bufferBlob = new Blob(['']);\n        this.bufferText = '';\n        this.init(encoding);\n        Save.isMicrosoftBrowser = !(!navigator.msSaveBlob);\n    }\n    Object.defineProperty(StreamWriter.prototype, \"buffer\", {\n        /**\n         * Gets the content written to the StreamWriter as Blob.\n         * @returns Blob\n         */\n        get: function () {\n            this.flush();\n            return this.bufferBlob;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(StreamWriter.prototype, \"encoding\", {\n        /**\n         * Gets the encoding.\n         * @returns Encoding\n         */\n        get: function () {\n            return this.enc;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    StreamWriter.prototype.init = function (encoding) {\n        if (encoding === null || encoding === undefined) {\n            this.enc = new Encoding(false);\n            this.enc.type = 'Utf8';\n        }\n        else {\n            this.enc = encoding;\n            this.setBomByte();\n        }\n    };\n    /**\n     * Private method to set Byte Order Mark(BOM) value based on EncodingType\n     */\n    StreamWriter.prototype.setBomByte = function () {\n        if (this.encoding.includeBom) {\n            switch (this.encoding.type) {\n                case 'Unicode':\n                    var arrayUnicode = new ArrayBuffer(2);\n                    var uint8 = new Uint8Array(arrayUnicode);\n                    uint8[0] = 255;\n                    uint8[1] = 254;\n                    this.bufferBlob = new Blob([arrayUnicode]);\n                    break;\n                case 'Utf8':\n                    var arrayUtf8 = new ArrayBuffer(3);\n                    var utf8 = new Uint8Array(arrayUtf8);\n                    utf8[0] = 239;\n                    utf8[1] = 187;\n                    utf8[2] = 191;\n                    this.bufferBlob = new Blob([arrayUtf8]);\n                    break;\n                default:\n                    this.bufferBlob = new Blob(['']);\n                    break;\n            }\n        }\n    };\n    /**\n     * Saves the file with specified name and sends the file to client browser\n     * @param  {string} fileName - The file name to save\n     * @returns {void}\n     */\n    StreamWriter.prototype.save = function (fileName) {\n        if (this.bufferText !== '') {\n            this.flush();\n        }\n        Save.save(fileName, this.buffer);\n    };\n    /**\n     * Writes the specified string.\n     * @param  {string} value - The string to write. If value is null or undefined, nothing is written.\n     * @returns {void}\n     */\n    StreamWriter.prototype.write = function (value) {\n        if (this.encoding === undefined) {\n            throw new Error('Object Disposed Exception: current writer is disposed');\n        }\n        validateNullOrUndefined(value, 'string');\n        this.bufferText += value;\n        if (this.bufferText.length >= 10240) {\n            this.flush();\n        }\n    };\n    StreamWriter.prototype.flush = function () {\n        if (this.bufferText === undefined || this.bufferText === null || this.bufferText.length === 0) {\n            return;\n        }\n        var bufferArray = this.encoding.getBytes(this.bufferText, 0, this.bufferText.length);\n        this.bufferText = '';\n        this.bufferBlob = new Blob([this.bufferBlob, bufferArray]);\n    };\n    /**\n     * Writes the specified string followed by a line terminator\n     * @param  {string} value - The string to write. If value is null or undefined, nothing is written\n     * @returns {void}\n     */\n    StreamWriter.prototype.writeLine = function (value) {\n        if (this.encoding === undefined) {\n            throw new Error('Object Disposed Exception: current writer is disposed');\n        }\n        validateNullOrUndefined(value, 'string');\n        this.bufferText = this.bufferText + value + '\\r\\n';\n        if (this.bufferText.length >= 10240) {\n            this.flush();\n        }\n    };\n    /**\n     * Releases the resources used by the StreamWriter\n     * @returns {void}\n     */\n    StreamWriter.prototype.destroy = function () {\n        this.bufferBlob = undefined;\n        this.bufferText = undefined;\n        if (this.enc instanceof Encoding) {\n            this.enc.destroy();\n        }\n        this.enc = undefined;\n    };\n    return StreamWriter;\n}());\nexport { StreamWriter };\n","import { Encoding } from '@syncfusion/ej2-file-utils';\n/**\n * array literal codes\n */\nvar arrLiteralCodes = new Int16Array(286);\nvar arrLiteralLengths = new Uint8Array(286);\nvar arrDistanceCodes = new Int16Array(30);\nvar arrDistanceLengths = new Uint8Array(30);\n/**\n * represent compression stream writer\n * ```typescript\n * let compressedWriter = new CompressedStreamWriter();\n * let text: string = 'Hello world!!!';\n * compressedWriter.write(text, 0, text.length);\n * compressedWriter.close();\n * ```\n */\nvar CompressedStreamWriter = /** @class */ (function () {\n    /**\n     * Initializes compressor and writes ZLib header if needed.\n     * @param {boolean} noWrap - optional if true, ZLib header and checksum will not be written.\n     */\n    function CompressedStreamWriter(noWrap) {\n        this.pendingBuffer = new Uint8Array(1 << 16);\n        this.pendingBufLength = 0;\n        this.pendingBufCache = 0;\n        this.pendingBufBitsInCache = 0;\n        this.bufferPosition = 0;\n        this.extraBits = 0;\n        this.currentHash = 0;\n        this.matchStart = 0;\n        this.matchLength = 0;\n        this.matchPrevAvail = false;\n        this.blockStart = 0;\n        this.stringStart = 0;\n        this.lookAhead = 0;\n        this.totalBytesIn = 0;\n        this.inputOffset = 0;\n        this.inputEnd = 0;\n        this.windowSize = 1 << 15;\n        this.windowMask = this.windowSize - 1;\n        this.hashSize = 1 << 15;\n        this.hashMask = this.hashSize - 1;\n        this.hashShift = Math.floor((15 + 3 - 1) / 3);\n        this.maxDist = this.windowSize - 262;\n        this.checkSum = 1;\n        this.noWrap = false;\n        this.treeLiteral = new CompressorHuffmanTree(this, 286, 257, 15);\n        this.treeDistances = new CompressorHuffmanTree(this, 30, 1, 15);\n        this.treeCodeLengths = new CompressorHuffmanTree(this, 19, 4, 7);\n        this.arrDistances = new Uint16Array((1 << 14));\n        this.arrLiterals = new Uint8Array((1 << 14));\n        this.stream = [];\n        this.dataWindow = new Uint8Array(2 * this.windowSize);\n        this.hashHead = new Int16Array(this.hashSize);\n        this.hashPrevious = new Int16Array(this.windowSize);\n        this.blockStart = this.stringStart = 1;\n        this.noWrap = noWrap;\n        if (!noWrap) {\n            this.writeZLibHeader();\n        }\n    }\n    Object.defineProperty(CompressedStreamWriter.prototype, \"compressedData\", {\n        /**\n         * get compressed data\n         */\n        get: function () {\n            return this.stream;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CompressedStreamWriter.prototype, \"getCompressedString\", {\n        get: function () {\n            var compressedString = '';\n            if (this.stream !== undefined) {\n                for (var i = 0; i < this.stream.length; i++) {\n                    compressedString += String.fromCharCode.apply(null, this.stream[i]);\n                }\n            }\n            return compressedString;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Compresses data and writes it to the stream.\n     * @param {Uint8Array} data - data to compress\n     * @param {number} offset - offset in data\n     * @param {number} length - length of the data\n     * @returns {void}\n     */\n    CompressedStreamWriter.prototype.write = function (data, offset, length) {\n        if (data === undefined || data === null) {\n            throw new Error('ArgumentException: data cannot null or undefined');\n        }\n        var end = offset + length;\n        if (0 > offset || offset > end || end > data.length) {\n            throw new Error('ArgumentOutOfRangeException: Offset or length is incorrect');\n        }\n        if (typeof data === 'string') {\n            var encode = new Encoding(false);\n            encode.type = 'Utf8';\n            data = new Uint8Array(encode.getBytes(data, 0, data.length));\n            end = offset + data.length;\n        }\n        this.inputBuffer = data;\n        this.inputOffset = offset;\n        this.inputEnd = end;\n        if (!this.noWrap) {\n            this.checkSum = ChecksumCalculator.checksumUpdate(this.checkSum, this.inputBuffer, this.inputOffset, end);\n        }\n        while (!(this.inputEnd === this.inputOffset) || !(this.pendingBufLength === 0)) {\n            this.pendingBufferFlush();\n            this.compressData(false);\n        }\n    };\n    /**\n     * write ZLib header to the compressed data\n     * @return {void}\n     */\n    CompressedStreamWriter.prototype.writeZLibHeader = function () {\n        /* Initialize header.*/\n        var headerDate = (8 + (7 << 4)) << 8;\n        /* Save compression level.*/\n        headerDate |= ((5 >> 2) & 3) << 6;\n        /* Align header.*/\n        headerDate += 31 - (headerDate % 31);\n        /* Write header to stream.*/\n        this.pendingBufferWriteShortBytes(headerDate);\n    };\n    /**\n     *  Write Most Significant Bytes in to stream\n     * @param {number} s - check sum value\n     */\n    CompressedStreamWriter.prototype.pendingBufferWriteShortBytes = function (s) {\n        this.pendingBuffer[this.pendingBufLength++] = s >> 8;\n        this.pendingBuffer[this.pendingBufLength++] = s;\n    };\n    CompressedStreamWriter.prototype.compressData = function (finish) {\n        var success;\n        do {\n            this.fillWindow();\n            var canFlush = (finish && this.inputEnd === this.inputOffset);\n            success = this.compressSlow(canFlush, finish);\n        } while (this.pendingBufLength === 0 && success);\n        return success;\n    };\n    CompressedStreamWriter.prototype.compressSlow = function (flush, finish) {\n        if (this.lookAhead < 262 && !flush) {\n            return false;\n        }\n        while (this.lookAhead >= 262 || flush) {\n            if (this.lookAhead === 0) {\n                return this.lookAheadCompleted(finish);\n            }\n            if (this.stringStart >= 2 * this.windowSize - 262) {\n                this.slideWindow();\n            }\n            var prevMatch = this.matchStart;\n            var prevLen = this.matchLength;\n            if (this.lookAhead >= 3) {\n                this.discardMatch();\n            }\n            if (prevLen >= 3 && this.matchLength <= prevLen) {\n                prevLen = this.matchPreviousBest(prevMatch, prevLen);\n            }\n            else {\n                this.matchPreviousAvailable();\n            }\n            if (this.bufferPosition >= (1 << 14)) {\n                return this.huffmanIsFull(finish);\n            }\n        }\n        return true;\n    };\n    CompressedStreamWriter.prototype.discardMatch = function () {\n        var hashHead = this.insertString();\n        if (hashHead !== 0 && this.stringStart - hashHead <= this.maxDist && this.findLongestMatch(hashHead)) {\n            if (this.matchLength <= 5 && (this.matchLength === 3 && this.stringStart - this.matchStart > 4096)) {\n                this.matchLength = 3 - 1;\n            }\n        }\n    };\n    CompressedStreamWriter.prototype.matchPreviousAvailable = function () {\n        if (this.matchPrevAvail) {\n            this.huffmanTallyLit(this.dataWindow[this.stringStart - 1] & 0xff);\n        }\n        this.matchPrevAvail = true;\n        this.stringStart++;\n        this.lookAhead--;\n    };\n    CompressedStreamWriter.prototype.matchPreviousBest = function (prevMatch, prevLen) {\n        this.huffmanTallyDist(this.stringStart - 1 - prevMatch, prevLen);\n        prevLen -= 2;\n        do {\n            this.stringStart++;\n            this.lookAhead--;\n            if (this.lookAhead >= 3) {\n                this.insertString();\n            }\n        } while (--prevLen > 0);\n        this.stringStart++;\n        this.lookAhead--;\n        this.matchPrevAvail = false;\n        this.matchLength = 3 - 1;\n        return prevLen;\n    };\n    CompressedStreamWriter.prototype.lookAheadCompleted = function (finish) {\n        if (this.matchPrevAvail) {\n            this.huffmanTallyLit(this.dataWindow[this.stringStart - 1] & 0xff);\n        }\n        this.matchPrevAvail = false;\n        this.huffmanFlushBlock(this.dataWindow, this.blockStart, this.stringStart - this.blockStart, finish);\n        this.blockStart = this.stringStart;\n        return false;\n    };\n    CompressedStreamWriter.prototype.huffmanIsFull = function (finish) {\n        var len = this.stringStart - this.blockStart;\n        if (this.matchPrevAvail) {\n            len--;\n        }\n        var lastBlock = (finish && this.lookAhead === 0 && !this.matchPrevAvail);\n        this.huffmanFlushBlock(this.dataWindow, this.blockStart, len, lastBlock);\n        this.blockStart += len;\n        return !lastBlock;\n    };\n    CompressedStreamWriter.prototype.fillWindow = function () {\n        if (this.stringStart >= this.windowSize + this.maxDist) {\n            this.slideWindow();\n        }\n        while (this.lookAhead < 262 && this.inputOffset < this.inputEnd) {\n            var more = 2 * this.windowSize - this.lookAhead - this.stringStart;\n            if (more > this.inputEnd - this.inputOffset) {\n                more = this.inputEnd - this.inputOffset;\n            }\n            this.dataWindow.set(this.inputBuffer.subarray(this.inputOffset, this.inputOffset + more), this.stringStart + this.lookAhead);\n            this.inputOffset += more;\n            this.totalBytesIn += more;\n            this.lookAhead += more;\n        }\n        if (this.lookAhead >= 3) {\n            this.updateHash();\n        }\n    };\n    CompressedStreamWriter.prototype.slideWindow = function () {\n        this.dataWindow.set(this.dataWindow.subarray(this.windowSize, this.windowSize + this.windowSize), 0);\n        this.matchStart -= this.windowSize;\n        this.stringStart -= this.windowSize;\n        this.blockStart -= this.windowSize;\n        for (var i = 0; i < this.hashSize; ++i) {\n            var m = this.hashHead[i] & 0xffff;\n            this.hashHead[i] = (((m >= this.windowSize) ? (m - this.windowSize) : 0));\n        }\n        for (var i = 0; i < this.windowSize; i++) {\n            var m = this.hashPrevious[i] & 0xffff;\n            this.hashPrevious[i] = ((m >= this.windowSize) ? (m - this.windowSize) : 0);\n        }\n    };\n    CompressedStreamWriter.prototype.insertString = function () {\n        var match;\n        var hash = ((this.currentHash << this.hashShift) ^ this.dataWindow[this.stringStart + (3 - 1)]) & this.hashMask;\n        this.hashPrevious[this.stringStart & this.windowMask] = match = this.hashHead[hash];\n        this.hashHead[hash] = this.stringStart;\n        this.currentHash = hash;\n        return match & 0xffff;\n    };\n    CompressedStreamWriter.prototype.findLongestMatch = function (curMatch) {\n        var chainLen = 4096;\n        var niceLen = 258;\n        var scan = this.stringStart;\n        var match;\n        var bestEnd = this.stringStart + this.matchLength;\n        var bestLength = Math.max(this.matchLength, 3 - 1);\n        var limit = Math.max(this.stringStart - this.maxDist, 0);\n        var stringEnd = this.stringStart + 258 - 1;\n        var scanEnd1 = this.dataWindow[bestEnd - 1];\n        var scanEnd = this.dataWindow[bestEnd];\n        var data = this.dataWindow;\n        if (bestLength >= 32) {\n            chainLen >>= 2;\n        }\n        if (niceLen > this.lookAhead) {\n            niceLen = this.lookAhead;\n        }\n        do {\n            if (data[curMatch + bestLength] !== scanEnd ||\n                data[curMatch + bestLength - 1] !== scanEnd1 ||\n                data[curMatch] !== data[scan] ||\n                data[curMatch + 1] !== data[scan + 1]) {\n                continue;\n            }\n            match = curMatch + 2;\n            scan += 2;\n            /* tslint:disable */\n            while (data[++scan] === data[++match] && data[++scan] === data[++match] &&\n                data[++scan] === data[++match] && data[++scan] === data[++match] &&\n                data[++scan] === data[++match] && data[++scan] === data[++match] &&\n                data[++scan] === data[++match] && data[++scan] === data[++match] && scan < stringEnd) {\n                /* tslint:disable */\n            }\n            if (scan > bestEnd) {\n                this.matchStart = curMatch;\n                bestEnd = scan;\n                bestLength = scan - this.stringStart;\n                if (bestLength >= niceLen) {\n                    break;\n                }\n                scanEnd1 = data[bestEnd - 1];\n                scanEnd = data[bestEnd];\n            }\n            scan = this.stringStart;\n        } while ((curMatch = (this.hashPrevious[curMatch & this.windowMask] & 0xffff)) > limit && --chainLen !== 0);\n        this.matchLength = Math.min(bestLength, this.lookAhead);\n        return this.matchLength >= 3;\n    };\n    CompressedStreamWriter.prototype.updateHash = function () {\n        this.currentHash = (this.dataWindow[this.stringStart] << this.hashShift) ^ this.dataWindow[this.stringStart + 1];\n    };\n    CompressedStreamWriter.prototype.huffmanTallyLit = function (literal) {\n        this.arrDistances[this.bufferPosition] = 0;\n        this.arrLiterals[this.bufferPosition++] = literal;\n        this.treeLiteral.codeFrequencies[literal]++;\n        return this.bufferPosition >= (1 << 14);\n    };\n    CompressedStreamWriter.prototype.huffmanTallyDist = function (dist, len) {\n        this.arrDistances[this.bufferPosition] = dist;\n        this.arrLiterals[this.bufferPosition++] = (len - 3);\n        var lc = this.huffmanLengthCode(len - 3);\n        this.treeLiteral.codeFrequencies[lc]++;\n        if (lc >= 265 && lc < 285) {\n            this.extraBits += Math.floor((lc - 261) / 4);\n        }\n        var dc = this.huffmanDistanceCode(dist - 1);\n        this.treeDistances.codeFrequencies[dc]++;\n        if (dc >= 4) {\n            this.extraBits += Math.floor((dc / 2 - 1));\n        }\n        return this.bufferPosition >= (1 << 14);\n    };\n    CompressedStreamWriter.prototype.huffmanFlushBlock = function (stored, storedOffset, storedLength, lastBlock) {\n        this.treeLiteral.codeFrequencies[256]++;\n        this.treeLiteral.buildTree();\n        this.treeDistances.buildTree();\n        this.treeLiteral.calculateBLFreq(this.treeCodeLengths);\n        this.treeDistances.calculateBLFreq(this.treeCodeLengths);\n        this.treeCodeLengths.buildTree();\n        var blTreeCodes = 4;\n        for (var i = 18; i > blTreeCodes; i--) {\n            if (this.treeCodeLengths.codeLengths[CompressorHuffmanTree.huffCodeLengthOrders[i]] > 0) {\n                blTreeCodes = i + 1;\n            }\n        }\n        var opt_len = 14 + blTreeCodes * 3 + this.treeCodeLengths.getEncodedLength() +\n            this.treeLiteral.getEncodedLength() + this.treeDistances.getEncodedLength() + this.extraBits;\n        var static_len = this.extraBits;\n        for (var i = 0; i < 286; i++) {\n            static_len += this.treeLiteral.codeFrequencies[i] * arrLiteralLengths[i];\n        }\n        for (var i = 0; i < 30; i++) {\n            static_len += this.treeDistances.codeFrequencies[i] * arrDistanceLengths[i];\n        }\n        if (opt_len >= static_len) {\n            // Force static trees.\n            opt_len = static_len;\n        }\n        if (storedOffset >= 0 && storedLength + 4 < opt_len >> 3) {\n            this.huffmanFlushStoredBlock(stored, storedOffset, storedLength, lastBlock);\n        }\n        else if (opt_len == static_len) {\n            // Encode with static tree.\n            this.pendingBufferWriteBits((1 << 1) + (lastBlock ? 1 : 0), 3);\n            this.treeLiteral.setStaticCodes(arrLiteralCodes, arrLiteralLengths);\n            this.treeDistances.setStaticCodes(arrDistanceCodes, arrDistanceLengths);\n            this.huffmanCompressBlock();\n            this.huffmanReset();\n        }\n        else {\n            this.pendingBufferWriteBits((2 << 1) + (lastBlock ? 1 : 0), 3);\n            this.huffmanSendAllTrees(blTreeCodes);\n            this.huffmanCompressBlock();\n            this.huffmanReset();\n        }\n    };\n    CompressedStreamWriter.prototype.huffmanFlushStoredBlock = function (stored, storedOffset, storedLength, lastBlock) {\n        this.pendingBufferWriteBits((0 << 1) + (lastBlock ? 1 : 0), 3);\n        this.pendingBufferAlignToByte();\n        this.pendingBufferWriteShort(storedLength);\n        this.pendingBufferWriteShort(~storedLength);\n        this.pendingBufferWriteByteBlock(stored, storedOffset, storedLength);\n        this.huffmanReset();\n    };\n    CompressedStreamWriter.prototype.huffmanLengthCode = function (len) {\n        if (len === 255) {\n            return 285;\n        }\n        var code = 257;\n        while (len >= 8) {\n            code += 4;\n            len >>= 1;\n        }\n        return code + len;\n    };\n    CompressedStreamWriter.prototype.huffmanDistanceCode = function (distance) {\n        var code = 0;\n        while (distance >= 4) {\n            code += 2;\n            distance >>= 1;\n        }\n        return code + distance;\n    };\n    CompressedStreamWriter.prototype.huffmanSendAllTrees = function (blTreeCodes) {\n        this.treeCodeLengths.buildCodes();\n        this.treeLiteral.buildCodes();\n        this.treeDistances.buildCodes();\n        this.pendingBufferWriteBits(this.treeLiteral.treeLength - 257, 5);\n        this.pendingBufferWriteBits(this.treeDistances.treeLength - 1, 5);\n        this.pendingBufferWriteBits(blTreeCodes - 4, 4);\n        for (var rank = 0; rank < blTreeCodes; rank++) {\n            this.pendingBufferWriteBits(this.treeCodeLengths.codeLengths[CompressorHuffmanTree.huffCodeLengthOrders[rank]], 3);\n        }\n        this.treeLiteral.writeTree(this.treeCodeLengths);\n        this.treeDistances.writeTree(this.treeCodeLengths);\n    };\n    CompressedStreamWriter.prototype.huffmanReset = function () {\n        this.bufferPosition = 0;\n        this.extraBits = 0;\n        this.treeLiteral.reset();\n        this.treeDistances.reset();\n        this.treeCodeLengths.reset();\n    };\n    CompressedStreamWriter.prototype.huffmanCompressBlock = function () {\n        for (var i = 0; i < this.bufferPosition; i++) {\n            var literalLen = this.arrLiterals[i] & 255;\n            var dist = this.arrDistances[i];\n            if (dist-- !== 0) {\n                var lc = this.huffmanLengthCode(literalLen);\n                this.treeLiteral.writeCodeToStream(lc);\n                var bits = Math.floor((lc - 261) / 4);\n                if (bits > 0 && bits <= 5) {\n                    this.pendingBufferWriteBits(literalLen & ((1 << bits) - 1), bits);\n                }\n                var dc = this.huffmanDistanceCode(dist);\n                this.treeDistances.writeCodeToStream(dc);\n                bits = Math.floor(dc / 2 - 1);\n                if (bits > 0) {\n                    this.pendingBufferWriteBits(dist & ((1 << bits) - 1), bits);\n                }\n            }\n            else {\n                this.treeLiteral.writeCodeToStream(literalLen);\n            }\n        }\n        this.treeLiteral.writeCodeToStream(256);\n    };\n    /**\n     * write bits in to internal buffer\n     * @param {number} b - source of bits\n     * @param {number} count - count of bits to write\n     */\n    CompressedStreamWriter.prototype.pendingBufferWriteBits = function (b, count) {\n        var uint = new Uint32Array(1);\n        uint[0] = this.pendingBufCache | (b << this.pendingBufBitsInCache);\n        this.pendingBufCache = uint[0];\n        this.pendingBufBitsInCache += count;\n        this.pendingBufferFlushBits();\n    };\n    CompressedStreamWriter.prototype.pendingBufferFlush = function (isClose) {\n        this.pendingBufferFlushBits();\n        if (this.pendingBufLength > 0) {\n            var array = new Uint8Array(this.pendingBufLength);\n            array.set(this.pendingBuffer.subarray(0, this.pendingBufLength), 0);\n            this.stream.push(array);\n        }\n        this.pendingBufLength = 0;\n    };\n    CompressedStreamWriter.prototype.pendingBufferFlushBits = function () {\n        var result = 0;\n        while (this.pendingBufBitsInCache >= 8 && this.pendingBufLength < (1 << 16)) {\n            this.pendingBuffer[this.pendingBufLength++] = this.pendingBufCache;\n            this.pendingBufCache >>= 8;\n            this.pendingBufBitsInCache -= 8;\n            result++;\n        }\n        return result;\n    };\n    CompressedStreamWriter.prototype.pendingBufferWriteByteBlock = function (data, offset, length) {\n        var array = data.subarray(offset, offset + length);\n        this.pendingBuffer.set(array, this.pendingBufLength);\n        this.pendingBufLength += length;\n    };\n    CompressedStreamWriter.prototype.pendingBufferWriteShort = function (s) {\n        this.pendingBuffer[this.pendingBufLength++] = s;\n        this.pendingBuffer[this.pendingBufLength++] = (s >> 8);\n    };\n    CompressedStreamWriter.prototype.pendingBufferAlignToByte = function () {\n        if (this.pendingBufBitsInCache > 0) {\n            this.pendingBuffer[this.pendingBufLength++] = this.pendingBufCache;\n        }\n        this.pendingBufCache = 0;\n        this.pendingBufBitsInCache = 0;\n    };\n    /**\n     * close the stream and write all pending buffer in to stream\n     * @returns {void}\n     */\n    CompressedStreamWriter.prototype.close = function () {\n        do {\n            this.pendingBufferFlush(true);\n            if (!this.compressData(true)) {\n                this.pendingBufferFlush(true);\n                this.pendingBufferAlignToByte();\n                if (!this.noWrap) {\n                    this.pendingBufferWriteShortBytes(this.checkSum >> 16);\n                    this.pendingBufferWriteShortBytes(this.checkSum & 0xffff);\n                }\n                this.pendingBufferFlush(true);\n            }\n        } while (!(this.inputEnd === this.inputOffset) ||\n            !(this.pendingBufLength === 0));\n    };\n    /**\n     * release allocated un-managed resource\n     * @returns {void}\n     */\n    CompressedStreamWriter.prototype.destroy = function () {\n        this.stream = [];\n        this.stream = undefined;\n        this.pendingBuffer = undefined;\n        this.treeLiteral = undefined;\n        this.treeDistances = undefined;\n        this.treeCodeLengths = undefined;\n        this.arrLiterals = undefined;\n        this.arrDistances = undefined;\n        this.hashHead = undefined;\n        this.hashPrevious = undefined;\n        this.dataWindow = undefined;\n        this.inputBuffer = undefined;\n        this.pendingBufLength = undefined;\n        this.pendingBufCache = undefined;\n        this.pendingBufBitsInCache = undefined;\n        this.bufferPosition = undefined;\n        this.extraBits = undefined;\n        this.currentHash = undefined;\n        this.matchStart = undefined;\n        this.matchLength = undefined;\n        this.matchPrevAvail = undefined;\n        this.blockStart = undefined;\n        this.stringStart = undefined;\n        this.lookAhead = undefined;\n        this.totalBytesIn = undefined;\n        this.inputOffset = undefined;\n        this.inputEnd = undefined;\n        this.windowSize = undefined;\n        this.windowMask = undefined;\n        this.hashSize = undefined;\n        this.hashMask = undefined;\n        this.hashShift = undefined;\n        this.maxDist = undefined;\n        this.checkSum = undefined;\n        this.noWrap = undefined;\n    };\n    return CompressedStreamWriter;\n}());\nexport { CompressedStreamWriter };\n/**\n * represent the Huffman Tree\n */\nvar CompressorHuffmanTree = /** @class */ (function () {\n    /**\n     * Create new Huffman Tree\n     * @param {CompressedStreamWriter} writer instance\n     * @param {number} elementCount - element count\n     * @param {number} minCodes - minimum count\n     * @param {number} maxLength - maximum count\n     */\n    function CompressorHuffmanTree(writer, elementCount, minCodes, maxLength) {\n        this.writer = writer;\n        this.codeMinCount = minCodes;\n        this.maxLength = maxLength;\n        this.codeFrequency = new Uint16Array(elementCount);\n        this.lengthCount = new Int32Array(maxLength);\n    }\n    Object.defineProperty(CompressorHuffmanTree.prototype, \"treeLength\", {\n        get: function () {\n            return this.codeCount;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CompressorHuffmanTree.prototype, \"codeLengths\", {\n        get: function () {\n            return this.codeLength;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CompressorHuffmanTree.prototype, \"codeFrequencies\", {\n        get: function () {\n            return this.codeFrequency;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    CompressorHuffmanTree.prototype.setStaticCodes = function (codes, lengths) {\n        var temp = new Int16Array(codes.length);\n        temp.set(codes, 0);\n        this.codes = temp;\n        var lengthTemp = new Uint8Array(lengths.length);\n        lengthTemp.set(lengths, 0);\n        this.codeLength = lengthTemp;\n    };\n    /**\n     * reset all code data in tree\n     * @returns {void}\n     */\n    CompressorHuffmanTree.prototype.reset = function () {\n        for (var i = 0; i < this.codeFrequency.length; i++) {\n            this.codeFrequency[i] = 0;\n        }\n        this.codes = undefined;\n        this.codeLength = undefined;\n    };\n    /**\n     * write code to the compressor output stream\n     * @param {number} code - code to be written\n     * @returns {void}\n     */\n    CompressorHuffmanTree.prototype.writeCodeToStream = function (code) {\n        this.writer.pendingBufferWriteBits(this.codes[code] & 0xffff, this.codeLength[code]);\n    };\n    /**\n     * calculate code from their frequencies\n     * @returns {void}\n     */\n    CompressorHuffmanTree.prototype.buildCodes = function () {\n        var nextCode = new Int32Array(this.maxLength);\n        this.codes = new Int16Array(this.codeCount);\n        var code = 0;\n        for (var bitsCount = 0; bitsCount < this.maxLength; bitsCount++) {\n            nextCode[bitsCount] = code;\n            code += this.lengthCount[bitsCount] << (15 - bitsCount);\n        }\n        for (var i = 0; i < this.codeCount; i++) {\n            var bits = this.codeLength[i];\n            if (bits > 0) {\n                this.codes[i] = CompressorHuffmanTree.bitReverse(nextCode[bits - 1]);\n                nextCode[bits - 1] += 1 << (16 - bits);\n            }\n        }\n    };\n    CompressorHuffmanTree.bitReverse = function (value) {\n        return (CompressorHuffmanTree.reverseBits[value & 15] << 12\n            | CompressorHuffmanTree.reverseBits[(value >> 4) & 15] << 8\n            | CompressorHuffmanTree.reverseBits[(value >> 8) & 15] << 4\n            | CompressorHuffmanTree.reverseBits[value >> 12]);\n    };\n    /**\n     * calculate length of compressed data\n     * @returns {number}\n     */\n    CompressorHuffmanTree.prototype.getEncodedLength = function () {\n        var len = 0;\n        for (var i = 0; i < this.codeFrequency.length; i++) {\n            len += this.codeFrequency[i] * this.codeLength[i];\n        }\n        return len;\n    };\n    /**\n     * calculate code frequencies\n     * @param {CompressorHuffmanTree} blTree\n     * @returns {void}\n     */\n    CompressorHuffmanTree.prototype.calculateBLFreq = function (blTree) {\n        var maxCount;\n        var minCount;\n        var count;\n        var curLen = -1;\n        var i = 0;\n        while (i < this.codeCount) {\n            count = 1;\n            var nextLen = this.codeLength[i];\n            if (nextLen === 0) {\n                maxCount = 138;\n                minCount = 3;\n            }\n            else {\n                maxCount = 6;\n                minCount = 3;\n                if (curLen !== nextLen) {\n                    blTree.codeFrequency[nextLen]++;\n                    count = 0;\n                }\n            }\n            curLen = nextLen;\n            i++;\n            while (i < this.codeCount && curLen === this.codeLength[i]) {\n                i++;\n                if (++count >= maxCount) {\n                    break;\n                }\n            }\n            if (count < minCount) {\n                blTree.codeFrequency[curLen] += count;\n            }\n            else if (curLen !== 0) {\n                blTree.codeFrequency[16]++;\n            }\n            else if (count <= 10) {\n                blTree.codeFrequency[17]++;\n            }\n            else {\n                blTree.codeFrequency[18]++;\n            }\n        }\n    };\n    /**\n     * @param {CompressorHuffmanTree} blTree - write tree to output stream\n     * @returns {void}\n     */\n    CompressorHuffmanTree.prototype.writeTree = function (blTree) {\n        var maxRepeatCount;\n        var minRepeatCount;\n        var currentRepeatCount;\n        var currentCodeLength = -1;\n        var i = 0;\n        while (i < this.codeCount) {\n            currentRepeatCount = 1;\n            var nextLen = this.codeLength[i];\n            if (nextLen === 0) {\n                maxRepeatCount = 138;\n                minRepeatCount = 3;\n            }\n            else {\n                maxRepeatCount = 6;\n                minRepeatCount = 3;\n                if (currentCodeLength !== nextLen) {\n                    blTree.writeCodeToStream(nextLen);\n                    currentRepeatCount = 0;\n                }\n            }\n            currentCodeLength = nextLen;\n            i++;\n            while (i < this.codeCount && currentCodeLength === this.codeLength[i]) {\n                i++;\n                if (++currentRepeatCount >= maxRepeatCount) {\n                    break;\n                }\n            }\n            if (currentRepeatCount < minRepeatCount) {\n                while (currentRepeatCount-- > 0) {\n                    blTree.writeCodeToStream(currentCodeLength);\n                }\n            }\n            else if (currentCodeLength !== 0) {\n                blTree.writeCodeToStream(16);\n                this.writer.pendingBufferWriteBits(currentRepeatCount - 3, 2);\n            }\n            else if (currentRepeatCount <= 10) {\n                blTree.writeCodeToStream(17);\n                this.writer.pendingBufferWriteBits(currentRepeatCount - 3, 3);\n            }\n            else {\n                blTree.writeCodeToStream(18);\n                this.writer.pendingBufferWriteBits(currentRepeatCount - 11, 7);\n            }\n        }\n    };\n    /**\n     * Build huffman tree\n     * @returns {void}\n     */\n    CompressorHuffmanTree.prototype.buildTree = function () {\n        var codesCount = this.codeFrequency.length;\n        var arrTree = new Int32Array(codesCount);\n        var treeLength = 0;\n        var maxCount = 0;\n        for (var n = 0; n < codesCount; n++) {\n            var freq = this.codeFrequency[n];\n            if (freq !== 0) {\n                var pos = treeLength++;\n                var pPos = 0;\n                while (pos > 0 && this.codeFrequency[arrTree[pPos = Math.floor((pos - 1) / 2)]] > freq) {\n                    arrTree[pos] = arrTree[pPos];\n                    pos = pPos;\n                }\n                arrTree[pos] = n;\n                maxCount = n;\n            }\n        }\n        while (treeLength < 2) {\n            arrTree[treeLength++] =\n                (maxCount < 2) ? ++maxCount : 0;\n        }\n        this.codeCount = Math.max(maxCount + 1, this.codeMinCount);\n        var leafsCount = treeLength;\n        var nodesCount = leafsCount;\n        var child = new Int32Array(4 * treeLength - 2);\n        var values = new Int32Array(2 * treeLength - 1);\n        for (var i = 0; i < treeLength; i++) {\n            var node = arrTree[i];\n            var iIndex = 2 * i;\n            child[iIndex] = node;\n            child[iIndex + 1] = -1;\n            values[i] = (this.codeFrequency[node] << 8);\n            arrTree[i] = i;\n        }\n        this.constructHuffmanTree(arrTree, treeLength, values, nodesCount, child);\n        this.buildLength(child);\n    };\n    CompressorHuffmanTree.prototype.constructHuffmanTree = function (arrTree, treeLength, values, nodesCount, child) {\n        do {\n            var first = arrTree[0];\n            var last = arrTree[--treeLength];\n            var lastVal = values[last];\n            var pPos = 0;\n            var path = 1;\n            while (path < treeLength) {\n                if (path + 1 < treeLength && values[arrTree[path]] > values[arrTree[path + 1]]) {\n                    path++;\n                }\n                arrTree[pPos] = arrTree[path];\n                pPos = path;\n                path = pPos * 2 + 1;\n            }\n            while ((path = pPos) > 0 && values[arrTree[pPos = Math.floor((path - 1) / 2)]] > lastVal) {\n                arrTree[path] = arrTree[pPos];\n            }\n            arrTree[path] = last;\n            var second = arrTree[0];\n            last = nodesCount++;\n            child[2 * last] = first;\n            child[2 * last + 1] = second;\n            var minDepth = Math.min(values[first] & 0xff, values[second] & 0xff);\n            values[last] = lastVal = values[first] + values[second] - minDepth + 1;\n            pPos = 0;\n            path = 1;\n            /* tslint:disable */\n            while (path < treeLength) {\n                if (path + 1 < treeLength && values[arrTree[path]] > values[arrTree[path + 1]]) {\n                    path++;\n                }\n                arrTree[pPos] = arrTree[path];\n                pPos = path;\n                path = pPos * 2 + 1;\n            } /* tslint:disable */\n            while ((path = pPos) > 0 && values[arrTree[pPos = Math.floor((path - 1) / 2)]] > lastVal) {\n                arrTree[path] = arrTree[pPos];\n            }\n            arrTree[path] = last;\n        } while (treeLength > 1);\n    };\n    CompressorHuffmanTree.prototype.buildLength = function (child) {\n        this.codeLength = new Uint8Array(this.codeFrequency.length);\n        var numNodes = Math.floor(child.length / 2);\n        var numLeafs = Math.floor((numNodes + 1) / 2);\n        var overflow = 0;\n        for (var i = 0; i < this.maxLength; i++) {\n            this.lengthCount[i] = 0;\n        }\n        overflow = this.calculateOptimalCodeLength(child, overflow, numNodes);\n        if (overflow === 0) {\n            return;\n        }\n        var iIncreasableLength = this.maxLength - 1;\n        do {\n            while (this.lengthCount[--iIncreasableLength] === 0) {\n                /* tslint:disable */\n            }\n            do {\n                this.lengthCount[iIncreasableLength]--;\n                this.lengthCount[++iIncreasableLength]++;\n                overflow -= (1 << (this.maxLength - 1 - iIncreasableLength));\n            } while (overflow > 0 && iIncreasableLength < this.maxLength - 1);\n        } while (overflow > 0);\n        this.recreateTree(child, overflow, numLeafs);\n    };\n    CompressorHuffmanTree.prototype.recreateTree = function (child, overflow, numLeafs) {\n        this.lengthCount[this.maxLength - 1] += overflow;\n        this.lengthCount[this.maxLength - 2] -= overflow;\n        var nodePtr = 2 * numLeafs;\n        for (var bits = this.maxLength; bits !== 0; bits--) {\n            var n = this.lengthCount[bits - 1];\n            while (n > 0) {\n                var childPtr = 2 * child[nodePtr++];\n                if (child[childPtr + 1] === -1) {\n                    this.codeLength[child[childPtr]] = bits;\n                    n--;\n                }\n            }\n        }\n    };\n    CompressorHuffmanTree.prototype.calculateOptimalCodeLength = function (child, overflow, numNodes) {\n        var lengths = new Int32Array(numNodes);\n        lengths[numNodes - 1] = 0;\n        for (var i = numNodes - 1; i >= 0; i--) {\n            var childIndex = 2 * i + 1;\n            if (child[childIndex] !== -1) {\n                var bitLength = lengths[i] + 1;\n                if (bitLength > this.maxLength) {\n                    bitLength = this.maxLength;\n                    overflow++;\n                }\n                lengths[child[childIndex - 1]] = lengths[child[childIndex]] = bitLength;\n            }\n            else {\n                var bitLength = lengths[i];\n                this.lengthCount[bitLength - 1]++;\n                this.codeLength[child[childIndex - 1]] = lengths[i];\n            }\n        }\n        return overflow;\n    };\n    CompressorHuffmanTree.reverseBits = [0, 8, 4, 12, 2, 10, 6, 14, 1, 9, 5, 13, 3, 11, 7, 15];\n    CompressorHuffmanTree.huffCodeLengthOrders = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15];\n    return CompressorHuffmanTree;\n}());\nexport { CompressorHuffmanTree };\n/**\n * Checksum calculator, based on Adler32 algorithm.\n */\nvar ChecksumCalculator = /** @class */ (function () {\n    function ChecksumCalculator() {\n    }\n    /**\n     * Updates checksum by calculating checksum of the\n     * given buffer and adding it to current value.\n     * @param {number} checksum - current checksum.\n     * @param {Uint8Array} buffer - data byte array.\n     * @param {number} offset - offset in the buffer.\n     * @param {number} length - length of data to be used from the stream.\n     * @returns {number}\n     */\n    ChecksumCalculator.checksumUpdate = function (checksum, buffer, offset, length) {\n        var uint = new Uint32Array(1);\n        uint[0] = checksum;\n        var checksum_uint = uint[0];\n        var s1 = uint[0] = checksum_uint & 65535;\n        var s2 = uint[0] = checksum_uint >> ChecksumCalculator.checkSumBitOffset;\n        while (length > 0) {\n            var steps = Math.min(length, ChecksumCalculator.checksumIterationCount);\n            length -= steps;\n            while (--steps >= 0) {\n                s1 = s1 + (uint[0] = (buffer[offset++] & 255));\n                s2 = s2 + s1;\n            }\n            s1 %= ChecksumCalculator.checksumBase;\n            s2 %= ChecksumCalculator.checksumBase;\n        }\n        checksum_uint = (s2 << ChecksumCalculator.checkSumBitOffset) | s1;\n        return checksum_uint;\n    };\n    ChecksumCalculator.checkSumBitOffset = 16;\n    ChecksumCalculator.checksumBase = 65521;\n    ChecksumCalculator.checksumIterationCount = 3800;\n    return ChecksumCalculator;\n}());\nexport { ChecksumCalculator };\n/**\n * Huffman Tree literal calculation\n */\n(function () {\n    var i = 0;\n    while (i < 144) {\n        arrLiteralCodes[i] = CompressorHuffmanTree.bitReverse((0x030 + i) << 8);\n        arrLiteralLengths[i++] = 8;\n    }\n    while (i < 256) {\n        arrLiteralCodes[i] = CompressorHuffmanTree.bitReverse((0x190 - 144 + i) << 7);\n        arrLiteralLengths[i++] = 9;\n    }\n    while (i < 280) {\n        arrLiteralCodes[i] = CompressorHuffmanTree.bitReverse((0x000 - 256 + i) << 9);\n        arrLiteralLengths[i++] = 7;\n    }\n    while (i < 286) {\n        arrLiteralCodes[i] = CompressorHuffmanTree.bitReverse((0x0c0 - 280 + i) << 8);\n        arrLiteralLengths[i++] = 8;\n    }\n    for (i = 0; i < 30; i++) {\n        arrDistanceCodes[i] = CompressorHuffmanTree.bitReverse(i << 11);\n        arrDistanceLengths[i] = 5;\n    }\n})();\n","import { CompressedStreamWriter } from './compression-writer';\nimport { Save } from '@syncfusion/ej2-file-utils';\nvar crc32Table = [];\n/**\n * class provide compression library\n * ```typescript\n * let archive = new ZipArchive();\n * archive.compressionLevel = 'Normal';\n * let archiveItem = new ZipArchiveItem(archive, 'directoryName\\fileName.txt');\n * archive.addItem(archiveItem);\n * archive.save(fileName.zip);\n * ```\n */\nvar ZipArchive = /** @class */ (function () {\n    /**\n     * constructor for creating ZipArchive instance\n     */\n    function ZipArchive() {\n        this.files = [];\n        this.level = 'Normal';\n        Save.isMicrosoftBrowser = !(!navigator.msSaveBlob);\n    }\n    Object.defineProperty(ZipArchive.prototype, \"compressionLevel\", {\n        /**\n         * gets compression level\n         */\n        get: function () {\n            return this.level;\n        },\n        /**\n         * sets compression level\n         */\n        set: function (level) {\n            this.level = level;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ZipArchive.prototype, \"length\", {\n        /**\n         * gets items count\n         */\n        get: function () {\n            if (this.files === undefined) {\n                return 0;\n            }\n            return this.files.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * add new item to archive\n     * @param {ZipArchiveItem} item - item to be added\n     * @returns {void}\n     */\n    ZipArchive.prototype.addItem = function (item) {\n        if (item === null || item === undefined) {\n            throw new Error('ArgumentException: item cannot be null or undefined');\n        }\n        for (var i = 0; i < this.files.length; i++) {\n            var file = this.files[i];\n            if (file instanceof ZipArchiveItem) {\n                if (file.name === item.name) {\n                    throw new Error('item with same name already exist');\n                }\n            }\n        }\n        this.files.push(item);\n    };\n    /**\n     * add new directory to archive\n     * @param directoryName directoryName to be created\n     * @returns {void}\n     */\n    ZipArchive.prototype.addDirectory = function (directoryName) {\n        if (directoryName === null || directoryName === undefined) {\n            throw new Error('ArgumentException: string cannot be null or undefined');\n        }\n        if (directoryName.length === 0) {\n            throw new Error('ArgumentException: string cannot be empty');\n        }\n        if (directoryName.slice(-1) !== '/') {\n            directoryName += '/';\n        }\n        if (this.files.indexOf(directoryName) !== -1) {\n            throw new Error('item with same name already exist');\n        }\n        this.files.push(directoryName);\n    };\n    /**\n     * gets item at specified index\n     * @param {number} index - item index\n     * @returns {ZipArchiveItem}\n     */\n    ZipArchive.prototype.getItem = function (index) {\n        if (index >= 0 && index < this.files.length) {\n            return this.files[index];\n        }\n        return undefined;\n    };\n    /**\n     * determines whether an element is in the collection\n     * @param {string | ZipArchiveItem} item - item to search\n     * @returns {boolean}\n     */\n    ZipArchive.prototype.contains = function (item) {\n        return this.files.indexOf(item) !== -1 ? true : false;\n    };\n    /**\n     * save archive with specified file name\n     * @param {string} fileName save archive with specified file name\n     * @returns {Promise<ZipArchive>}\n     */\n    ZipArchive.prototype.save = function (fileName) {\n        if (fileName === null || fileName === undefined || fileName.length === 0) {\n            throw new Error('ArgumentException: fileName cannot be null or undefined');\n        }\n        if (this.files.length === 0) {\n            throw new Error('InvalidOperation');\n        }\n        var zipArchive = this;\n        var promise;\n        return promise = new Promise(function (resolve, reject) {\n            zipArchive.saveInternal(fileName, false).then(function () {\n                resolve(zipArchive);\n            });\n        });\n    };\n    /**\n     * Save archive as blob\n     * @return {Promise<Blob>}\n     */\n    ZipArchive.prototype.saveAsBlob = function () {\n        var zipArchive = this;\n        var promise;\n        return promise = new Promise(function (resolve, reject) {\n            zipArchive.saveInternal('', true).then(function (blob) {\n                resolve(blob);\n            });\n        });\n    };\n    ZipArchive.prototype.saveInternal = function (fileName, skipFileSave) {\n        var _this = this;\n        var zipArchive = this;\n        var promise;\n        return promise = new Promise(function (resolve, reject) {\n            var zipData = [];\n            var dirLength = 0;\n            for (var i = 0; i < zipArchive.files.length; i++) {\n                var compressedObject = _this.getCompressedData(_this.files[i]);\n                compressedObject.then(function (data) {\n                    dirLength = zipArchive.constructZippedObject(zipData, data, dirLength, data.isDirectory);\n                    if (zipData.length === zipArchive.files.length) {\n                        var blob = zipArchive.writeZippedContent(fileName, zipData, dirLength, skipFileSave);\n                        resolve(blob);\n                    }\n                });\n            }\n        });\n    };\n    /**\n     * release allocated un-managed resource\n     * @returns {void}\n     */\n    ZipArchive.prototype.destroy = function () {\n        if (this.files !== undefined && this.files.length > 0) {\n            for (var i = 0; i < this.files.length; i++) {\n                var file = this.files[i];\n                if (file instanceof ZipArchiveItem) {\n                    file.destroy();\n                }\n                file = undefined;\n            }\n            this.files = [];\n        }\n        this.files = undefined;\n        this.level = undefined;\n    };\n    ZipArchive.prototype.getCompressedData = function (item) {\n        var zipArchive = this;\n        var promise = new Promise(function (resolve, reject) {\n            if (item instanceof ZipArchiveItem) {\n                var reader_1 = new FileReader();\n                reader_1.onload = function () {\n                    var input = new Uint8Array(reader_1.result);\n                    var data = {\n                        fileName: item.name, crc32Value: 0, compressedData: [],\n                        compressedSize: undefined, uncompressedDataSize: input.length, compressionType: undefined,\n                        isDirectory: false\n                    };\n                    if (zipArchive.level === 'Normal') {\n                        zipArchive.compressData(input, data, crc32Table);\n                        var length_1 = 0;\n                        for (var i = 0; i < data.compressedData.length; i++) {\n                            length_1 += data.compressedData[i].length;\n                        }\n                        data.compressedSize = length_1;\n                        data.compressionType = '\\x08\\x00'; //Deflated = 8\n                    }\n                    else {\n                        data.compressedSize = input.length;\n                        data.crc32Value = zipArchive.calculateCrc32Value(0, input, crc32Table);\n                        data.compressionType = '\\x00\\x00'; // Stored = 0\n                        data.compressedData.push(input);\n                    }\n                    resolve(data);\n                };\n                reader_1.readAsArrayBuffer(item.data);\n            }\n            else {\n                var data = {\n                    fileName: item, crc32Value: 0, compressedData: '', compressedSize: 0, uncompressedDataSize: 0,\n                    compressionType: '\\x00\\x00', isDirectory: true\n                };\n                resolve(data);\n            }\n        });\n        return promise;\n    };\n    ZipArchive.prototype.compressData = function (input, data, crc32Table) {\n        var compressor = new CompressedStreamWriter(true);\n        var currentIndex = 0;\n        var nextIndex = 0;\n        do {\n            if (currentIndex >= input.length) {\n                compressor.close();\n                break;\n            }\n            nextIndex = Math.min(input.length, currentIndex + 16384);\n            var subArray = input.subarray(currentIndex, nextIndex);\n            data.crc32Value = this.calculateCrc32Value(data.crc32Value, subArray, crc32Table);\n            compressor.write(subArray, 0, nextIndex - currentIndex);\n            currentIndex = nextIndex;\n        } while (currentIndex <= input.length);\n        data.compressedData = compressor.compressedData;\n        compressor.destroy();\n    };\n    ZipArchive.prototype.constructZippedObject = function (zipParts, data, dirLength, isDirectory) {\n        var extFileAttr = 0;\n        var date = new Date();\n        if (isDirectory) {\n            extFileAttr = extFileAttr | 0x00010; // directory flag\n        }\n        extFileAttr = extFileAttr | (0 & 0x3F);\n        var header = this.writeHeader(data, date);\n        var localHeader = 'PK\\x03\\x04' + header + data.fileName;\n        var centralDir = this.writeCentralDirectory(data, header, dirLength, extFileAttr);\n        zipParts.push({ localHeader: localHeader, centralDir: centralDir, compressedData: data });\n        return dirLength + localHeader.length + data.compressedSize;\n    };\n    ZipArchive.prototype.writeHeader = function (data, date) {\n        var zipHeader = '';\n        zipHeader += '\\x0A\\x00' + '\\x00\\x00'; // version needed to extract & general purpose bit flag\n        zipHeader += data.compressionType; // compression method Deflate=8,Stored=0\n        zipHeader += this.getBytes(this.getModifiedTime(date), 2); // last modified Time\n        zipHeader += this.getBytes(this.getModifiedDate(date), 2); // last modified date\n        zipHeader += this.getBytes(data.crc32Value, 4); // crc-32 value\n        zipHeader += this.getBytes(data.compressedSize, 4); // compressed file size\n        zipHeader += this.getBytes(data.uncompressedDataSize, 4); // uncompressed file size\n        zipHeader += this.getBytes(data.fileName.length, 2); // file name length\n        zipHeader += this.getBytes(0, 2); // extra field length\n        return zipHeader;\n    };\n    ZipArchive.prototype.writeZippedContent = function (fileName, zipData, localDirLen, skipFileSave) {\n        var cenDirLen = 0;\n        var buffer = [];\n        for (var i = 0; i < zipData.length; i++) {\n            var item = zipData[i];\n            cenDirLen += item.centralDir.length;\n            buffer.push(this.getArrayBuffer(item.localHeader));\n            while (item.compressedData.compressedData.length) {\n                buffer.push(item.compressedData.compressedData.shift().buffer);\n            }\n        }\n        for (var i = 0; i < zipData.length; i++) {\n            buffer.push(this.getArrayBuffer(zipData[i].centralDir));\n        }\n        buffer.push(this.getArrayBuffer(this.writeFooter(zipData, cenDirLen, localDirLen)));\n        var blob = new Blob(buffer, { type: 'application/zip' });\n        if (!skipFileSave) {\n            Save.save(fileName, blob);\n        }\n        return blob;\n    };\n    ZipArchive.prototype.writeCentralDirectory = function (data, localHeader, offset, externalFileAttribute) {\n        var directoryHeader = 'PK\\x01\\x02' +\n            this.getBytes(0x0014, 2) + localHeader + // inherit from file header\n            this.getBytes(0, 2) + // comment length\n            '\\x00\\x00' + '\\x00\\x00' + // internal file attributes \n            this.getBytes(externalFileAttribute, 4) + // external file attributes\n            this.getBytes(offset, 4) + // local fileHeader relative offset\n            data.fileName;\n        return directoryHeader;\n    };\n    ZipArchive.prototype.writeFooter = function (zipData, centralLength, localLength) {\n        var dirEnd = 'PK\\x05\\x06' + '\\x00\\x00' + '\\x00\\x00' +\n            this.getBytes(zipData.length, 2) + this.getBytes(zipData.length, 2) +\n            this.getBytes(centralLength, 4) + this.getBytes(localLength, 4) +\n            this.getBytes(0, 2);\n        return dirEnd;\n    };\n    ZipArchive.prototype.getArrayBuffer = function (input) {\n        var a = new Uint8Array(input.length);\n        for (var j = 0; j < input.length; ++j) {\n            a[j] = input.charCodeAt(j) & 0xFF;\n        }\n        return a.buffer;\n    };\n    ZipArchive.prototype.getBytes = function (value, offset) {\n        var bytes = '';\n        for (var i = 0; i < offset; i++) {\n            bytes += String.fromCharCode(value & 0xff);\n            value = value >>> 8;\n        }\n        return bytes;\n    };\n    ZipArchive.prototype.getModifiedTime = function (date) {\n        var modTime = date.getHours();\n        modTime = modTime << 6;\n        modTime = modTime | date.getMinutes();\n        modTime = modTime << 5;\n        return modTime = modTime | date.getSeconds() / 2;\n    };\n    ZipArchive.prototype.getModifiedDate = function (date) {\n        var modiDate = date.getFullYear() - 1980;\n        modiDate = modiDate << 4;\n        modiDate = modiDate | (date.getMonth() + 1);\n        modiDate = modiDate << 5;\n        return modiDate = modiDate | date.getDate();\n    };\n    ZipArchive.prototype.calculateCrc32Value = function (crc32Value, input, crc32Table) {\n        crc32Value ^= -1;\n        for (var i = 0; i < input.length; i++) {\n            crc32Value = (crc32Value >>> 8) ^ crc32Table[(crc32Value ^ input[i]) & 0xFF];\n        }\n        return (crc32Value ^ (-1));\n    };\n    return ZipArchive;\n}());\nexport { ZipArchive };\n/**\n * Class represent unique ZipArchive item\n * ```typescript\n * let archiveItem = new ZipArchiveItem(archive, 'directoryName\\fileName.txt');\n * ```\n */\nvar ZipArchiveItem = /** @class */ (function () {\n    /**\n     * constructor for creating {ZipArchiveItem} instance\n     * @param {Blob|ArrayBuffer} data file data\n     * @param {itemName} itemName absolute file path\n     */\n    function ZipArchiveItem(data, itemName) {\n        if (data === null || data === undefined) {\n            throw new Error('ArgumentException: data cannot be null or undefined');\n        }\n        if (itemName === null || itemName === undefined) {\n            throw new Error('ArgumentException: string cannot be null or undefined');\n        }\n        if (itemName.length === 0) {\n            throw new Error('string cannot be empty');\n        }\n        this.data = data;\n        this.name = itemName;\n    }\n    Object.defineProperty(ZipArchiveItem.prototype, \"name\", {\n        /**\n         * Get the name of archive item\n         * @returns string\n         */\n        get: function () {\n            return this.fileName;\n        },\n        /**\n         * Set the name of archive item\n         * @param  {string} value\n         */\n        set: function (value) {\n            this.fileName = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * release allocated un-managed resource\n     * @returns {void}\n     */\n    ZipArchiveItem.prototype.destroy = function () {\n        this.fileName = undefined;\n        this.data = undefined;\n    };\n    return ZipArchiveItem;\n}());\nexport { ZipArchiveItem };\n/**\n * construct cyclic redundancy code table\n */\n(function () {\n    var i;\n    for (var j = 0; j < 256; j++) {\n        i = j;\n        for (var k = 0; k < 8; k++) {\n            i = ((i & 1) ? (0xEDB88320 ^ (i >>> 1)) : (i >>> 1));\n        }\n        crc32Table[j] = i;\n    }\n})();\n","/**\n * `PdfString` class is used to perform string related primitive operations.\n * @private\n */\nexport var InternalEnum;\n(function (InternalEnum) {\n    //Internals\n    /**\n     * public Enum for `ForceEncoding`.\n     * @private\n     */\n    var ForceEncoding;\n    (function (ForceEncoding) {\n        /**\n         * Specifies the type of `None`.\n         * @private\n         */\n        ForceEncoding[ForceEncoding[\"None\"] = 0] = \"None\";\n        /**\n         * Specifies the type of `Ascii`.\n         * @private\n         */\n        ForceEncoding[ForceEncoding[\"Ascii\"] = 1] = \"Ascii\";\n        /**\n         * Specifies the type of `Unicode`.\n         * @private\n         */\n        ForceEncoding[ForceEncoding[\"Unicode\"] = 2] = \"Unicode\";\n    })(ForceEncoding = InternalEnum.ForceEncoding || (InternalEnum.ForceEncoding = {}));\n    /**\n     * public Enum for `SourceType`.\n     * @private\n     */\n    var SourceType;\n    (function (SourceType) {\n        /**\n         * Specifies the type of `StringValue`.\n         * @private\n         */\n        SourceType[SourceType[\"StringValue\"] = 0] = \"StringValue\";\n        /**\n         * Specifies the type of `ByteBuffer`.\n         * @private\n         */\n        SourceType[SourceType[\"ByteBuffer\"] = 1] = \"ByteBuffer\";\n    })(SourceType || (SourceType = {}));\n})(InternalEnum || (InternalEnum = {}));\nvar PdfString = /** @class */ (function () {\n    function PdfString(value) {\n        /**\n         * Value indicating whether the string was converted to hex.\n         * @default false\n         * @private\n         */\n        this.bHex = false;\n        /**\n         * Internal variable to store the `position`.\n         * @default -1\n         * @private\n         */\n        this.position1 = -1;\n        /**\n         * Internal variable to hold `cloned object`.\n         * @default null\n         * @private\n         */\n        this.clonedObject1 = null;\n        /**\n         * `Shows` if the data of the stream was decrypted.\n         * @default false\n         * @private\n         */\n        this.bDecrypted = false;\n        /**\n         * Shows if the data of the stream `was decrypted`.\n         * @default false\n         * @private\n         */\n        this.isParentDecrypted = false;\n        /**\n         * Gets a value indicating whether the object is `packed or not`.\n         * @default false\n         * @private\n         */\n        this.isPacked = false;\n        /**\n         * @hidden\n         * @private\n         */\n        this.isFormField = false;\n        /**\n         * @hidden\n         * @private\n         */\n        this.isColorSpace = false;\n        /**\n         * @hidden\n         * @private\n         */\n        this.isHexString = true;\n        if (typeof value === 'undefined') {\n            this.bHex = false;\n        }\n        else {\n            if (!(value.length > 0 && value[0] === '0xfeff')) {\n                this.stringValue = value;\n                this.data = [];\n                for (var i = 0; i < value.length; ++i) {\n                    this.data.push(value.charCodeAt(i));\n                }\n            }\n        }\n    }\n    Object.defineProperty(PdfString.prototype, \"hex\", {\n        //Property\n        /**\n         * Gets a value indicating whether string is in `hex`.\n         * @private\n         */\n        get: function () {\n            return this.bHex;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfString.prototype, \"value\", {\n        /**\n         * Gets or sets string `value` of the object.\n         * @private\n         */\n        get: function () {\n            return this.stringValue;\n        },\n        set: function (value) {\n            this.stringValue = value;\n            this.data = null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfString.prototype, \"status\", {\n        /**\n         * Gets or sets the `Status` of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.status1;\n        },\n        set: function (value) {\n            this.status1 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfString.prototype, \"isSaving\", {\n        /**\n         * Gets or sets a value indicating whether this document `is saving` or not.\n         * @private\n         */\n        get: function () {\n            return this.isSaving1;\n        },\n        set: function (value) {\n            this.isSaving1 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfString.prototype, \"objectCollectionIndex\", {\n        /**\n         * Gets or sets the `index` value of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.index1;\n        },\n        set: function (value) {\n            this.index1 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfString.prototype, \"clonedObject\", {\n        /**\n         * Returns `cloned object`.\n         * @private\n         */\n        get: function () {\n            return this.clonedObject1;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfString.prototype, \"position\", {\n        /**\n         * Gets or sets the `position` of the object.\n         * @private\n         */\n        get: function () {\n            return this.position1;\n        },\n        set: function (value) {\n            this.position1 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfString.prototype, \"CrossTable\", {\n        /**\n         * Returns `PdfCrossTable` associated with the object.\n         * @private\n         */\n        get: function () {\n            return this.crossTable;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Methods\n    /**\n     * Converts `bytes to string using hex format` for representing string.\n     * @private\n     */\n    PdfString.bytesToHex = function (bytes) {\n        if (bytes == null) {\n            return '';\n        }\n        var builder = '';\n        return builder;\n    };\n    /**\n     * `Saves` the object using the specified writer.\n     * @private\n     */\n    PdfString.prototype.save = function (writer) {\n        if (writer === null) {\n            throw new Error('ArgumentNullException : writer');\n        }\n        writer.write(PdfString.stringMark[0] + this.value + PdfString.stringMark[1]);\n    };\n    /**\n     * Creates a `copy of PdfString`.\n     * @private\n     */\n    PdfString.prototype.clone = function (crossTable) {\n        if (this.clonedObject1 !== null && this.clonedObject1.CrossTable === crossTable) {\n            return this.clonedObject1;\n        }\n        else {\n            this.clonedObject1 = null;\n        }\n        var newString = new PdfString(this.stringValue);\n        newString.bHex = this.bHex;\n        newString.crossTable = crossTable;\n        newString.isColorSpace = this.isColorSpace;\n        this.clonedObject1 = newString;\n        return newString;\n    };\n    //constants = ;\n    /**\n     * `General markers` for string.\n     * @private\n     */\n    PdfString.stringMark = '()';\n    /**\n     * `Hex markers` for string.\n     * @private\n     */\n    PdfString.hexStringMark = '<>';\n    /**\n     * Format of password data.\n     * @private\n     */\n    PdfString.hexFormatPattern = '{0:X2}';\n    return PdfString;\n}());\nexport { PdfString };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfDictionary } from './pdf-dictionary';\nimport { PdfNumber } from './pdf-number';\nimport { Operators } from './../input-output/pdf-operators';\nimport { PdfName } from './pdf-name';\nimport { PdfArray } from './pdf-array';\nimport { PdfReferenceHolder } from './pdf-reference';\nimport { CompressedStreamWriter } from '@syncfusion/ej2-compression';\n/**\n * `PdfStream` class is used to perform stream related primitive operations.\n * @private\n */\nvar PdfStream = /** @class */ (function (_super) {\n    __extends(PdfStream, _super);\n    function PdfStream(dictionary, data) {\n        var _this = _super.call(this, dictionary) || this;\n        //Constants\n        /**\n         * @hidden\n         * @private\n         */\n        _this.dicPrefix = 'stream';\n        /**\n         * @hidden\n         * @private\n         */\n        _this.dicSuffix = 'endstream';\n        /**\n         * Internal variable to hold `cloned object`.\n         * @private\n         */\n        _this.clonedObject2 = null;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.bCompress = true;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.isImageStream = false;\n        if (typeof dictionary !== 'undefined' || typeof data !== 'undefined') {\n            _this.dataStream2 = [];\n            _this.dataStream2 = data;\n            _this.bCompress2 = false;\n        }\n        else {\n            _this.dataStream2 = [];\n            _this.bCompress2 = true;\n            //Pending\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfStream.prototype, \"internalStream\", {\n        /**\n         * Gets the `internal` stream.\n         * @private\n         */\n        get: function () {\n            return this.dataStream2;\n        },\n        set: function (value) {\n            this.dataStream2 = [];\n            this.dataStream2 = value;\n            this.modify();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStream.prototype, \"isImage\", {\n        /**\n         * Gets or sets 'is image' flag.\n         * @private\n         */\n        get: function () {\n            return this.isImageStream;\n        },\n        set: function (value) {\n            this.isImageStream = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStream.prototype, \"compress\", {\n        /**\n         * Gets or sets `compression` flag.\n         * @private\n         */\n        get: function () {\n            return this.bCompress;\n        },\n        set: function (value) {\n            this.bCompress = value;\n            this.modify();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStream.prototype, \"data\", {\n        /**\n         * Gets or sets the `data`.\n         * @private\n         */\n        get: function () {\n            return this.dataStream2;\n        },\n        set: function (value) {\n            this.dataStream2 = [];\n            this.dataStream2 = value;\n            this.modify();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Clear` the internal stream.\n     * @private\n     */\n    PdfStream.prototype.clearStream = function () {\n        this.internalStream = [];\n        this.remove(this.dictionaryProperties.filter);\n        this.bCompress = true;\n        this.modify();\n    };\n    /**\n     * `Writes` the specified string.\n     * @private\n     */\n    PdfStream.prototype.write = function (text) {\n        if (text == null) {\n            throw new Error('ArgumentNullException:text');\n        }\n        if (text.length <= 0) {\n            throw new Error('ArgumentException: Can not write an empty string, text');\n        }\n        this.dataStream2.push(text);\n        this.modify();\n    };\n    /**\n     * `Compresses the content` if it's required.\n     * @private\n     */\n    PdfStream.prototype.compressContent = function (data, writer) {\n        if (this.bCompress) {\n            var sw = new CompressedStreamWriter();\n            // data = 'Hello World!!!';\n            sw.write(data, 0, data.length);\n            sw.close();\n            data = sw.getCompressedString;\n            this.addFilter(this.dictionaryProperties.flatedecode);\n        }\n        return data;\n    };\n    /**\n     * `Adds a filter` to the filter array.\n     * @private\n     */\n    PdfStream.prototype.addFilter = function (filterName) {\n        var obj = this.items.getValue(this.dictionaryProperties.filter);\n        if (obj instanceof PdfReferenceHolder) {\n            var rh = obj;\n            obj = rh.object;\n        }\n        var array = obj;\n        var name = obj;\n        if (name != null) {\n            array = new PdfArray();\n            array.insert(0, name);\n            this.items.setValue(this.dictionaryProperties.filter, array);\n        }\n        name = new PdfName(filterName);\n        if (array == null) {\n            this.items.setValue(this.dictionaryProperties.filter, name);\n        }\n        else {\n            array.insert(0, name);\n        }\n    };\n    /**\n     * `Saves` the object using the specified writer.\n     * @private\n     */\n    PdfStream.prototype.save = function (writer) {\n        var data = '';\n        for (var i = 0; i < this.data.length; i++) {\n            data = data + this.data[i];\n        }\n        if (data.length > 1 && !this.isImage) {\n            data = 'q\\r\\n' + data + 'Q\\r\\n';\n        }\n        data = this.compressContent(data, writer);\n        var length = data.length;\n        this.items.setValue(this.dictionaryProperties.length, new PdfNumber(length));\n        _super.prototype.save.call(this, writer, false);\n        writer.write(this.dicPrefix);\n        writer.write(Operators.newLine);\n        if (data.length > 0) {\n            writer.write(data);\n        }\n        writer.write(Operators.newLine);\n        writer.write(this.dicSuffix);\n        writer.write(Operators.newLine);\n    };\n    /**\n     * Converts `bytes to string`.\n     * @private\n     */\n    PdfStream.bytesToString = function (byteArray) {\n        var output = '';\n        for (var i = 0; i < byteArray.length; i++) {\n            output = output + String.fromCharCode(byteArray[i]);\n        }\n        return output;\n    };\n    return PdfStream;\n}(PdfDictionary));\nexport { PdfStream };\n","/**\n * public Enum for `PdfHorizontalAlignment`.\n * @private\n */\nexport var PdfHorizontalAlignment;\n(function (PdfHorizontalAlignment) {\n    /**\n     * Specifies the type of `Left`.\n     * @private\n     */\n    PdfHorizontalAlignment[PdfHorizontalAlignment[\"Left\"] = 0] = \"Left\";\n    /**\n     * Specifies the type of `Center`.\n     * @private\n     */\n    PdfHorizontalAlignment[PdfHorizontalAlignment[\"Center\"] = 1] = \"Center\";\n    /**\n     * Specifies the type of `Right`.\n     * @private\n     */\n    PdfHorizontalAlignment[PdfHorizontalAlignment[\"Right\"] = 2] = \"Right\";\n})(PdfHorizontalAlignment || (PdfHorizontalAlignment = {}));\n/**\n * public Enum for `PdfVerticalAlignment`.\n * @private\n */\nexport var PdfVerticalAlignment;\n(function (PdfVerticalAlignment) {\n    /**\n     * Specifies the type of `Top`.\n     * @private\n     */\n    PdfVerticalAlignment[PdfVerticalAlignment[\"Top\"] = 0] = \"Top\";\n    /**\n     * Specifies the type of `Middle`.\n     * @private\n     */\n    PdfVerticalAlignment[PdfVerticalAlignment[\"Middle\"] = 1] = \"Middle\";\n    /**\n     * Specifies the type of `Bottom`.\n     * @private\n     */\n    PdfVerticalAlignment[PdfVerticalAlignment[\"Bottom\"] = 2] = \"Bottom\";\n})(PdfVerticalAlignment || (PdfVerticalAlignment = {}));\n/**\n * public Enum for `public`.\n * @private\n */\nexport var PdfTextAlignment;\n(function (PdfTextAlignment) {\n    /**\n     * Specifies the type of `Left`.\n     * @private\n     */\n    PdfTextAlignment[PdfTextAlignment[\"Left\"] = 0] = \"Left\";\n    /**\n     * Specifies the type of `Center`.\n     * @private\n     */\n    PdfTextAlignment[PdfTextAlignment[\"Center\"] = 1] = \"Center\";\n    /**\n     * Specifies the type of `Right`.\n     * @private\n     */\n    PdfTextAlignment[PdfTextAlignment[\"Right\"] = 2] = \"Right\";\n    /**\n     * Specifies the type of `Justify`.\n     * @private\n     */\n    PdfTextAlignment[PdfTextAlignment[\"Justify\"] = 3] = \"Justify\";\n})(PdfTextAlignment || (PdfTextAlignment = {}));\n/**\n * public Enum for `TextRenderingMode`.\n * @private\n */\nexport var TextRenderingMode;\n(function (TextRenderingMode) {\n    /**\n     * Specifies the type of `Fill`.\n     * @private\n     */\n    TextRenderingMode[TextRenderingMode[\"Fill\"] = 0] = \"Fill\";\n    /**\n     * Specifies the type of `Stroke`.\n     * @private\n     */\n    TextRenderingMode[TextRenderingMode[\"Stroke\"] = 1] = \"Stroke\";\n    /**\n     * Specifies the type of `FillStroke`.\n     * @private\n     */\n    TextRenderingMode[TextRenderingMode[\"FillStroke\"] = 2] = \"FillStroke\";\n    /**\n     * Specifies the type of `None`.\n     * @private\n     */\n    TextRenderingMode[TextRenderingMode[\"None\"] = 3] = \"None\";\n    /**\n     * Specifies the type of `ClipFlag`.\n     * @private\n     */\n    TextRenderingMode[TextRenderingMode[\"ClipFlag\"] = 4] = \"ClipFlag\";\n    /**\n     * Specifies the type of `ClipFill`.\n     * @private\n     */\n    TextRenderingMode[TextRenderingMode[\"ClipFill\"] = 4] = \"ClipFill\";\n    /**\n     * Specifies the type of `ClipStroke`.\n     * @private\n     */\n    TextRenderingMode[TextRenderingMode[\"ClipStroke\"] = 5] = \"ClipStroke\";\n    /**\n     * Specifies the type of `ClipFillStroke`.\n     * @private\n     */\n    TextRenderingMode[TextRenderingMode[\"ClipFillStroke\"] = 6] = \"ClipFillStroke\";\n    /**\n     * Specifies the type of `Clip`.\n     * @private\n     */\n    TextRenderingMode[TextRenderingMode[\"Clip\"] = 7] = \"Clip\";\n})(TextRenderingMode || (TextRenderingMode = {}));\n/**\n * public Enum for `PdfLineJoin`.\n * @private\n */\nexport var PdfLineJoin;\n(function (PdfLineJoin) {\n    /**\n     * Specifies the type of `Miter`.\n     * @private\n     */\n    PdfLineJoin[PdfLineJoin[\"Miter\"] = 0] = \"Miter\";\n    /**\n     * Specifies the type of `Round`.\n     * @private\n     */\n    PdfLineJoin[PdfLineJoin[\"Round\"] = 1] = \"Round\";\n    /**\n     * Specifies the type of `Bevel`.\n     * @private\n     */\n    PdfLineJoin[PdfLineJoin[\"Bevel\"] = 2] = \"Bevel\";\n})(PdfLineJoin || (PdfLineJoin = {}));\n/**\n * public Enum for `PdfLineCap`.\n * @private\n */\nexport var PdfLineCap;\n(function (PdfLineCap) {\n    /**\n     * Specifies the type of `Flat`.\n     * @private\n     */\n    PdfLineCap[PdfLineCap[\"Flat\"] = 0] = \"Flat\";\n    /**\n     * Specifies the type of `Round`.\n     * @private\n     */\n    PdfLineCap[PdfLineCap[\"Round\"] = 1] = \"Round\";\n    /**\n     * Specifies the type of `Square`.\n     * @private\n     */\n    PdfLineCap[PdfLineCap[\"Square\"] = 2] = \"Square\";\n})(PdfLineCap || (PdfLineCap = {}));\n/**\n * public Enum for `PdfDashStyle`.\n * @private\n */\nexport var PdfDashStyle;\n(function (PdfDashStyle) {\n    /**\n     * Specifies the type of `Solid`.\n     * @private\n     */\n    PdfDashStyle[PdfDashStyle[\"Solid\"] = 0] = \"Solid\";\n    /**\n     * Specifies the type of `Dash`.\n     * @private\n     */\n    PdfDashStyle[PdfDashStyle[\"Dash\"] = 1] = \"Dash\";\n    /**\n     * Specifies the type of `Dot`.\n     * @private\n     */\n    PdfDashStyle[PdfDashStyle[\"Dot\"] = 2] = \"Dot\";\n    /**\n     * Specifies the type of `DashDot`.\n     * @private\n     */\n    PdfDashStyle[PdfDashStyle[\"DashDot\"] = 3] = \"DashDot\";\n    /**\n     * Specifies the type of `DashDotDot`.\n     * @private\n     */\n    PdfDashStyle[PdfDashStyle[\"DashDotDot\"] = 4] = \"DashDotDot\";\n    /**\n     * Specifies the type of `Custom`.\n     * @private\n     */\n    PdfDashStyle[PdfDashStyle[\"Custom\"] = 5] = \"Custom\";\n})(PdfDashStyle || (PdfDashStyle = {}));\n/**\n * public Enum for `PdfFillMode`.\n * @private\n */\nexport var PdfFillMode;\n(function (PdfFillMode) {\n    /**\n     * Specifies the type of `Winding`.\n     * @private\n     */\n    PdfFillMode[PdfFillMode[\"Winding\"] = 0] = \"Winding\";\n    /**\n     * Specifies the type of `Alternate`.\n     * @private\n     */\n    PdfFillMode[PdfFillMode[\"Alternate\"] = 1] = \"Alternate\";\n})(PdfFillMode || (PdfFillMode = {}));\n/**\n * public Enum for `PdfColorSpace`.\n * @private\n */\nexport var PdfColorSpace;\n(function (PdfColorSpace) {\n    /**\n     * Specifies the type of `Rgb`.\n     * @private\n     */\n    PdfColorSpace[PdfColorSpace[\"Rgb\"] = 0] = \"Rgb\";\n    /**\n     * Specifies the type of `Cmyk`.\n     * @private\n     */\n    PdfColorSpace[PdfColorSpace[\"Cmyk\"] = 1] = \"Cmyk\";\n    /**\n     * Specifies the type of `GrayScale`.\n     * @private\n     */\n    PdfColorSpace[PdfColorSpace[\"GrayScale\"] = 2] = \"GrayScale\";\n    /**\n     * Specifies the type of `Indexed`.\n     * @private\n     */\n    PdfColorSpace[PdfColorSpace[\"Indexed\"] = 3] = \"Indexed\";\n})(PdfColorSpace || (PdfColorSpace = {}));\n/**\n * public Enum for `PdfBlendMode`.\n * @private\n */\nexport var PdfBlendMode;\n(function (PdfBlendMode) {\n    /**\n     * Specifies the type of `Normal`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Normal\"] = 0] = \"Normal\";\n    /**\n     * Specifies the type of `Multiply`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Multiply\"] = 1] = \"Multiply\";\n    /**\n     * Specifies the type of `Screen`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Screen\"] = 2] = \"Screen\";\n    /**\n     * Specifies the type of `Overlay`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Overlay\"] = 3] = \"Overlay\";\n    /**\n     * Specifies the type of `Darken`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Darken\"] = 4] = \"Darken\";\n    /**\n     * Specifies the type of `Lighten`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Lighten\"] = 5] = \"Lighten\";\n    /**\n     * Specifies the type of `ColorDodge`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"ColorDodge\"] = 6] = \"ColorDodge\";\n    /**\n     * Specifies the type of `ColorBurn`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"ColorBurn\"] = 7] = \"ColorBurn\";\n    /**\n     * Specifies the type of `HardLight`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"HardLight\"] = 8] = \"HardLight\";\n    /**\n     * Specifies the type of `SoftLight`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"SoftLight\"] = 9] = \"SoftLight\";\n    /**\n     * Specifies the type of `Difference`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Difference\"] = 10] = \"Difference\";\n    /**\n     * Specifies the type of `Exclusion`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Exclusion\"] = 11] = \"Exclusion\";\n    /**\n     * Specifies the type of `Hue`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Hue\"] = 12] = \"Hue\";\n    /**\n     * Specifies the type of `Saturation`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Saturation\"] = 13] = \"Saturation\";\n    /**\n     * Specifies the type of `Color`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Color\"] = 14] = \"Color\";\n    /**\n     * Specifies the type of `Luminosity`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Luminosity\"] = 15] = \"Luminosity\";\n})(PdfBlendMode || (PdfBlendMode = {}));\n/**\n * public Enum for `PdfGraphicsUnit`.\n * @private\n */\nexport var PdfGraphicsUnit;\n(function (PdfGraphicsUnit) {\n    /**\n     * Specifies the type of `Centimeter`.\n     * @private\n     */\n    PdfGraphicsUnit[PdfGraphicsUnit[\"Centimeter\"] = 0] = \"Centimeter\";\n    /**\n     * Specifies the type of `Pica`.\n     * @private\n     */\n    PdfGraphicsUnit[PdfGraphicsUnit[\"Pica\"] = 1] = \"Pica\";\n    /**\n     * Specifies the type of `Pixel`.\n     * @private\n     */\n    PdfGraphicsUnit[PdfGraphicsUnit[\"Pixel\"] = 2] = \"Pixel\";\n    /**\n     * Specifies the type of `Point`.\n     * @private\n     */\n    PdfGraphicsUnit[PdfGraphicsUnit[\"Point\"] = 3] = \"Point\";\n    /**\n     * Specifies the type of `Inch`.\n     * @private\n     */\n    PdfGraphicsUnit[PdfGraphicsUnit[\"Inch\"] = 4] = \"Inch\";\n    /**\n     * Specifies the type of `Document`.\n     * @private\n     */\n    PdfGraphicsUnit[PdfGraphicsUnit[\"Document\"] = 5] = \"Document\";\n    /**\n     * Specifies the type of `Millimeter`.\n     * @private\n     */\n    PdfGraphicsUnit[PdfGraphicsUnit[\"Millimeter\"] = 6] = \"Millimeter\";\n})(PdfGraphicsUnit || (PdfGraphicsUnit = {}));\n/**\n * public Enum for `PdfGridImagePosition`.\n * @private\n */\nexport var PdfGridImagePosition;\n(function (PdfGridImagePosition) {\n    /**\n     * Specifies the type of `Fit`.\n     * @private\n     */\n    PdfGridImagePosition[PdfGridImagePosition[\"Fit\"] = 0] = \"Fit\";\n    /**\n     * Specifies the type of `Center`.\n     * @private\n     */\n    PdfGridImagePosition[PdfGridImagePosition[\"Center\"] = 1] = \"Center\";\n    /**\n     * Specifies the type of `Stretch`.\n     * @private\n     */\n    PdfGridImagePosition[PdfGridImagePosition[\"Stretch\"] = 2] = \"Stretch\";\n    /**\n     * Specifies the type of `Tile`.\n     * @private\n     */\n    PdfGridImagePosition[PdfGridImagePosition[\"Tile\"] = 3] = \"Tile\";\n})(PdfGridImagePosition || (PdfGridImagePosition = {}));\n","import { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\nimport { PdfStream } from './../primitives/pdf-stream';\nimport { PdfArray } from './../primitives/pdf-array';\nimport { PdfNumber } from './../primitives/pdf-number';\nimport { PdfName } from './../primitives/pdf-name';\nimport { PdfDictionary } from './../primitives/pdf-dictionary';\nimport { PdfString } from './../primitives/pdf-string';\n/**\n * `PdfReference` class is used to perform reference related primitive operations.\n * @private\n */\nvar PdfReference = /** @class */ (function () {\n    function PdfReference(objNumber, genNumber) {\n        /**\n         * Holds the `index` number of the object.\n         * @default -1\n         * @private\n         */\n        this.index3 = -1;\n        /**\n         * Internal variable to store the `position`.\n         * @default -1\n         * @private\n         */\n        this.position3 = -1;\n        /**\n         * Holds the `object number`.\n         * @default 0\n         * @private\n         */\n        this.objNumber = 0;\n        /**\n         * Holds the `generation number` of the object.\n         * @default 0\n         * @private\n         */\n        this.genNumber = 0;\n        if (typeof objNumber === 'number' && typeof genNumber === 'number') {\n            this.objNumber = objNumber;\n            this.genNumber = genNumber;\n            // } else if (typeof objNum === 'string' && typeof genNum === 'string') {\n        }\n        else {\n            this.objNumber = Number(objNumber);\n            this.genNumber = Number(genNumber);\n        }\n    }\n    Object.defineProperty(PdfReference.prototype, \"status\", {\n        //Property\n        /**\n         * Gets or sets the `Status` of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.status3;\n        },\n        set: function (value) {\n            this.status3 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReference.prototype, \"isSaving\", {\n        /**\n         * Gets or sets a value indicating whether this document `is saving` or not.\n         * @private\n         */\n        get: function () {\n            return this.isSaving3;\n        },\n        set: function (value) {\n            this.isSaving3 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReference.prototype, \"objectCollectionIndex\", {\n        /**\n         * Gets or sets the `index` value of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.index3;\n        },\n        set: function (value) {\n            this.index3 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReference.prototype, \"position\", {\n        /**\n         * Gets or sets the `position` of the object.\n         * @private\n         */\n        get: function () {\n            return this.position3;\n        },\n        set: function (value) {\n            this.position3 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReference.prototype, \"clonedObject\", {\n        /**\n         * Returns `cloned object`.\n         * @private\n         */\n        get: function () {\n            var returnObject3 = null;\n            return returnObject3;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //IPdfPrimitives methods\n    /**\n     * `Saves` the object.\n     * @private\n     */\n    PdfReference.prototype.save = function (writer) {\n        writer.write(this.toString());\n    };\n    /**\n     * Returns a `string` representing the object.\n     * @private\n     */\n    PdfReference.prototype.toString = function () {\n        return this.objNumber.toString() + ' ' + this.genNumber.toString() + ' R';\n    };\n    /**\n     * Creates a `deep copy` of the IPdfPrimitive object.\n     * @private\n     */\n    PdfReference.prototype.clone = function (crossTable) {\n        return null;\n    };\n    return PdfReference;\n}());\nexport { PdfReference };\n/**\n * `PdfReferenceHolder` class is used to perform reference holder related primitive operations.\n * @private\n */\nvar PdfReferenceHolder = /** @class */ (function () {\n    function PdfReferenceHolder(obj1, obj2) {\n        /**\n         * Holds the `index` number of the object.\n         * @default -1\n         * @private\n         */\n        this.index4 = -1;\n        /**\n         * Internal variable to store the `position`.\n         * @default -1\n         * @private\n         */\n        this.position4 = -1;\n        /**\n         * The `index` of the object within the object collection.\n         * @default -1\n         * @private\n         */\n        this.objectIndex = -1;\n        /**\n         * @hidden\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        // if (typeof obj2 === 'undefined') {\n        if (obj1 instanceof PdfArray\n            || obj1 instanceof PdfDictionary\n            || obj1 instanceof PdfName\n            || obj1 instanceof PdfNumber\n            || obj1 instanceof PdfStream\n            || obj1 instanceof PdfReference\n            || obj1 instanceof PdfString) {\n            // if (obj1 === null) {\n            //     throw new Error('ArgumentNullException : obj');\n            // }\n            this.primitiveObject = obj1;\n            // } else if (obj1 instanceof PdfPageBase\n            //             || obj1 instanceof PdfPage\n            //             || obj1 instanceof PdfSection\n            //             || obj1 instanceof PdfSectionCollection) {\n        }\n        else {\n            var tempObj = obj1;\n            this.constructor(tempObj.element);\n        }\n        // }\n        // else {\n        //     if (obj2 === null) {\n        //         throw new Error('ArgumentNullException : crossTable');\n        //     }\n        //     if (obj1 === null) {\n        //         throw new Error('ArgumentNullException : reference');\n        //     }\n        //     this.crossTable = obj2;\n        //     let tempObj1 : PdfReference = <PdfReference>obj1;\n        //     this.reference = tempObj1;\n        // }\n    }\n    Object.defineProperty(PdfReferenceHolder.prototype, \"status\", {\n        //Properties\n        /**\n         * Gets or sets the `Status` of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.status4;\n        },\n        set: function (value) {\n            this.status4 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReferenceHolder.prototype, \"isSaving\", {\n        /**\n         * Gets or sets a value indicating whether this document `is saving` or not.\n         * @private\n         */\n        get: function () {\n            return this.isSaving4;\n        },\n        set: function (value) {\n            this.isSaving4 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReferenceHolder.prototype, \"objectCollectionIndex\", {\n        /**\n         * Gets or sets the `index` value of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.index4;\n        },\n        set: function (value) {\n            this.index4 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReferenceHolder.prototype, \"position\", {\n        /**\n         * Gets or sets the `position` of the object.\n         * @private\n         */\n        get: function () {\n            return this.position4;\n        },\n        set: function (value) {\n            this.position4 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReferenceHolder.prototype, \"clonedObject\", {\n        /**\n         * Returns `cloned object`.\n         * @private\n         */\n        get: function () {\n            return null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReferenceHolder.prototype, \"object\", {\n        /**\n         * Gets the `object` the reference is of.\n         * @private\n         */\n        get: function () {\n            // if ((this.reference != null) || (this.object == null)) {\n            //     this.object = this.GetterObject();\n            // }\n            return this.primitiveObject;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReferenceHolder.prototype, \"reference\", {\n        /**\n         * Gets the `reference`.\n         * @private\n         */\n        get: function () {\n            return this.pdfReference;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReferenceHolder.prototype, \"index\", {\n        /**\n         * Gets the `index` of the object.\n         * @private\n         */\n        get: function () {\n            // let items : PdfMainObjectCollection = this.crossTable.PdfObjects;\n            // this.objectIndex = items.GetObjectIndex(this.reference);\n            // if (this.objectIndex < 0) {\n            //     let obj : IPdfPrimitive = this.crossTable.GetObject(this.reference);\n            //     this.objectIndex = items.Count - 1;\n            // }\n            return this.objectIndex;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReferenceHolder.prototype, \"element\", {\n        /**\n         * Gets the `element`.\n         * @private\n         */\n        get: function () {\n            return this.primitiveObject;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Writes` a reference into a PDF document.\n     * @private\n     */\n    PdfReferenceHolder.prototype.save = function (writer) {\n        // if (writer == null) {\n        //     throw new Error('ArgumentNullException : writer');\n        // }\n        var position = writer.position;\n        var cTable = writer.document.crossTable;\n        // if (cTable.Document instanceof PdfDocument) {\n        this.object.isSaving = true;\n        // }\n        var reference = null;\n        // if (writer.Document.FileStructure.IncrementalUpdate === true && writer.Document.isStreamCopied === true) {\n        //     if (this.reference === null) {\n        //         reference = cTable.GetReference(this.Object);\n        //     } else {\n        //         reference = this.reference;\n        //     }\n        // } else {\n        //     reference = cTable.GetReference(this.Object);\n        // }\n        // if (!(writer.Document.FileStructure.IncrementalUpdate === true && writer.Document.isStreamCopied === true)) {\n        reference = cTable.getReference(this.object);\n        // }\n        // if (writer.Position !== position) {\n        //     writer.Position = position;\n        // }\n        reference.save(writer);\n    };\n    /**\n     * Creates a `copy of PdfReferenceHolder`.\n     * @private\n     */\n    PdfReferenceHolder.prototype.clone = function (crossTable) {\n        var refHolder = null;\n        var temp = null;\n        var refNum = '';\n        var reference = null;\n        // Restricts addition of same object multiple time.\n        /* if (this.Reference != null && this.crossTable != null && this.crossTable.PageCorrespondance.containsKey(this.Reference)) {\n            refHolder = new PdfReferenceHolder(this.crossTable.PageCorrespondance.getValue(this.Reference) as PdfReference, crossTable);\n            return refHolder;\n        }\n        if (Object instanceof PdfNumber) {\n            return new PdfNumber((Object as PdfNumber).IntValue);\n        }\n        */\n        // if (Object instanceof PdfDictionary) {\n        //     // Meaning the referenced page is not available for import.\n        //     let type : PdfName = new PdfName(this.dictionaryProperties.type);\n        //     let dict : PdfDictionary = Object as PdfDictionary;\n        //     if (dict.ContainsKey(type)) {\n        //         let pageName : PdfName = dict.Items.getValue(type.Value) as PdfName;\n        //         if (pageName !== null) {\n        //             if (pageName.Value === 'Page') {\n        //                 return new PdfNull();\n        //             }\n        //         }\n        //     }\n        // }\n        /* if (Object instanceof PdfName) {\n            return new PdfName ((Object as PdfName ).Value);\n        }\n        */\n        // Resolves circular references.\n        // if (crossTable.PrevReference !== null && (crossTable.PrevReference.indexOf(this.Reference) !== -1)) {\n        //     let obj : IPdfPrimitive = this.crossTable.GetObject(this.Reference).ClonedObject;\n        //     if (obj !== null) {\n        //         reference = crossTable.GetReference(obj);\n        //         return new PdfReferenceHolder(reference, crossTable);\n        //     } else {\n        //         return new PdfNull();\n        //     }\n        // }\n        /*if (this.Reference !== null) {\n            crossTable.PrevReference.push(this.Reference);\n        }\n        reference = crossTable.GetReference(temp);\n        refHolder = new PdfReferenceHolder(reference, crossTable);\n        return refHolder;\n        */\n        return null;\n    };\n    return PdfReferenceHolder;\n}());\nexport { PdfReferenceHolder };\n","import { PdfDictionary } from './../primitives/pdf-dictionary';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { PdfName } from './../primitives/pdf-name';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\n/**\n * `PdfAction` class represents base class for all action types.\n * @private\n */\nvar PdfAction = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initialize instance for `Action` class.\n     * @private\n     */\n    function PdfAction() {\n        /**\n         * Specifies the Next `action` to perform.\n         * @private\n         */\n        this.action = null;\n        /**\n         * Specifies the Internal variable to store `dictionary properties`.\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        // super(); -> Object()\n        this.initialize();\n    }\n    Object.defineProperty(PdfAction.prototype, \"next\", {\n        // Properties\n        /**\n         * Gets and Sets the `Next` action to perform.\n         * @private\n         */\n        get: function () {\n            return this.action;\n        },\n        set: function (value) {\n            // if (this.action !== value) {\n            this.action = value;\n            this.dictionary.items.setValue(this.dictionaryProperties.next, new PdfReferenceHolder(this.action));\n            // }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAction.prototype, \"dictionary\", {\n        /**\n         * Gets and Sets the instance of PdfDictionary class for `Dictionary`.\n         * @private\n         */\n        get: function () {\n            if (typeof this.pdfDictionary === 'undefined') {\n                this.pdfDictionary = new PdfDictionary();\n            }\n            return this.pdfDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * `Initialize` the action type.\n     * @private\n     */\n    PdfAction.prototype.initialize = function () {\n        this.dictionary.items.setValue(this.dictionaryProperties.type, new PdfName(this.dictionaryProperties.action));\n    };\n    Object.defineProperty(PdfAction.prototype, \"element\", {\n        // IPdfWrapper Members\n        /**\n         * Gets the `Element` as IPdfPrimitive class.\n         * @private\n         */\n        get: function () {\n            return this.dictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfAction;\n}());\nexport { PdfAction };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfAction } from './action';\nimport { PdfString } from './../primitives/pdf-string';\nimport { PdfName } from './../primitives/pdf-name';\n/**\n * `PdfUriAction` class for initialize the uri related internals.\n * @private\n */\nvar PdfUriAction = /** @class */ (function (_super) {\n    __extends(PdfUriAction, _super);\n    function PdfUriAction(uri) {\n        var _this = _super.call(this) || this;\n        // Fields\n        /**\n         * Specifies the `uri` string.\n         * @default ''.\n         * @private\n         */\n        _this.uniformResourceIdentifier = '';\n        return _this;\n    }\n    Object.defineProperty(PdfUriAction.prototype, \"uri\", {\n        // Properties\n        /**\n         * Gets and Sets the value of `Uri`.\n         * @private\n         */\n        get: function () {\n            return this.uniformResourceIdentifier;\n        },\n        set: function (value) {\n            this.uniformResourceIdentifier = value;\n            this.dictionary.items.setValue(this.dictionaryProperties.uri, new PdfString(this.uniformResourceIdentifier));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * `Initialize` the internals.\n     * @private\n     */\n    PdfUriAction.prototype.initialize = function () {\n        _super.prototype.initialize.call(this);\n        this.dictionary.items.setValue(this.dictionaryProperties.s, new PdfName(this.dictionaryProperties.uri));\n    };\n    return PdfUriAction;\n}(PdfAction));\nexport { PdfUriAction };\n","import { PdfColorSpace } from './enum';\nimport { Operators } from './../input-output/pdf-operators';\nimport { Dictionary } from './../collections/dictionary';\nimport { PdfNumber } from './../primitives/pdf-number';\nimport { PdfArray } from './../primitives/pdf-array';\n/**\n * Implements structures and routines working with `color`.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // add a new page to the document\n * let page1 : PdfPage = document.pages.add();\n * // set the font\n * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n * //\n * // set color\n * let brushColor : PdfColor = new PdfColor(0, 0, 0);\n * //\n * // create black brush\n * let blackBrush : PdfSolidBrush = new PdfSolidBrush(brushColor);\n * // draw the text\n * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(0, 0));\n * // save the document\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n * @default black color\n */\nvar PdfColor = /** @class */ (function () {\n    function PdfColor(color1, color2, color3, color4) {\n        if (color1 instanceof PdfColor) {\n            this.redColor = color1.r;\n            this.greenColor = color1.g;\n            this.blueColor = color1.b;\n            this.grayColor = color1.gray;\n            this.alpha = color1.alpha;\n            this.filled = (this.alpha !== 0);\n        }\n        else if (typeof color1 === 'number' && typeof color2 === 'number' && typeof color3 === 'number' &&\n            typeof color4 === 'undefined') {\n            this.constructor(PdfColor.maxColourChannelValue, color1, color2, color3); //doubt-byte/float\n        }\n        else if (typeof color1 === 'number' && typeof color2 === 'number' && typeof color3 === 'number' && typeof color4 === 'number') {\n            this.redColor = color2;\n            this.cyanColor = 0;\n            this.greenColor = color3;\n            this.magentaColor = 0;\n            this.blueColor = color4;\n            this.yellowColor = 0;\n            this.blackColor = 0;\n            this.grayColor = 0;\n            this.alpha = color1;\n            this.filled = true;\n            this.assignCMYK(color2, color3, color4);\n        }\n    }\n    /**\n     * `Calculate and assign` cyan, megenta, yellow colors from rgb values..\n     * @private\n     */\n    PdfColor.prototype.assignCMYK = function (r, g, b) {\n        var red = r / PdfColor.maxColourChannelValue;\n        var green = g / PdfColor.maxColourChannelValue;\n        var blue = b / PdfColor.maxColourChannelValue;\n        var black = PdfNumber.min(1 - red, 1 - green, 1 - blue);\n        var cyan = (black === 1.0) ? 0 : (1 - red - black) / (1 - black);\n        var magenta = (black === 1.0) ? 0 : (1 - green - black) / (1 - black);\n        var yellow = (black === 1.0) ? 0 : (1 - blue - black) / (1 - black);\n        this.blackColor = black;\n        this.cyanColor = cyan;\n        this.magentaColor = magenta;\n        this.yellowColor = yellow;\n    };\n    Object.defineProperty(PdfColor.prototype, \"r\", {\n        //Properties\n        // public static get Empty():PdfColor\n        // {\n        //     return this.s_emptyColor\n        // }\n        /**\n         * Gets or sets `Red` channel value.\n         * @private\n         */\n        get: function () {\n            return this.redColor;\n        },\n        set: function (value) {\n            this.redColor = value;\n            this.assignCMYK(this.redColor, this.greenColor, this.blueColor);\n            this.filled = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"red\", {\n        /**\n         * Gets the `Red` color\n         * @private\n         */\n        get: function () {\n            return (this.r / PdfColor.maxColourChannelValue);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"b\", {\n        /**\n         * Gets or sets `Blue` channel value.\n         * @private\n         */\n        get: function () {\n            return this.blueColor;\n        },\n        set: function (value) {\n            this.blueColor = value;\n            this.assignCMYK(this.redColor, this.greenColor, this.blueColor);\n            this.filled = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"blue\", {\n        /**\n         * Gets the `blue` color.\n         * @private\n         */\n        get: function () {\n            return (this.b / PdfColor.maxColourChannelValue);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"g\", {\n        /**\n         *  Gets or sets `Green` channel value.\n         * @private\n         */\n        get: function () {\n            return this.greenColor;\n        },\n        set: function (value) {\n            this.greenColor = value;\n            this.assignCMYK(this.redColor, this.greenColor, this.blueColor);\n            this.filled = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"green\", {\n        /**\n         * Gets the `Green` color.\n         * @private\n         */\n        get: function () {\n            return (this.g / PdfColor.maxColourChannelValue);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"gray\", {\n        /**\n         * Gets or sets `Gray` channel value.\n         * @private\n         */\n        get: function () {\n            return ((((this.redColor + this.greenColor) + this.blueColor)) / (PdfColor.maxColourChannelValue * 3));\n        },\n        set: function (value) {\n            if (value < 0) {\n                this.grayColor = 0;\n            }\n            else if (value > 1) {\n                this.grayColor = 1;\n            }\n            else {\n                this.grayColor = value;\n            }\n            this.r = (this.grayColor * PdfColor.maxColourChannelValue);\n            this.g = (this.grayColor * PdfColor.maxColourChannelValue);\n            this.b = (this.grayColor * PdfColor.maxColourChannelValue);\n            this.assignCMYK(this.redColor, this.greenColor, this.blueColor);\n            this.filled = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"isEmpty\", {\n        /**\n         * Gets whether the PDFColor `is Empty` or not.\n         * @private\n         */\n        get: function () {\n            return !this.filled;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"a\", {\n        /**\n         * Gets or sets `Alpha` channel value.\n         * @private\n         */\n        get: function () {\n            return this.alpha;\n        },\n        set: function (value) {\n            if (value < 0) {\n                this.alpha = 0;\n            }\n            else {\n                // if (this.alpha !== value) {\n                this.alpha = value;\n                // }\n            }\n            this.filled = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Public methods\n    /**\n     * Converts `PDFColor to PDF string` representation.\n     * @private\n     */\n    PdfColor.prototype.toString = function (colorSpace, stroke) {\n        if (this.isEmpty) {\n            return '';\n        }\n        return this.rgbToString(stroke);\n    };\n    /**\n     * Sets `RGB` color.\n     * @private\n     */\n    PdfColor.prototype.rgbToString = function (ifStroking) {\n        var r = this.r;\n        var g = this.g;\n        var b = this.b;\n        var key = (r << 16) + (g << 8) + b;\n        if (ifStroking) {\n            key += 1 << 24;\n        }\n        var colour = '';\n        var obj = null;\n        if (PdfColor.rgbStrings.containsKey(key)) {\n            obj = PdfColor.rgbStrings.getValue(key);\n        }\n        if (obj == null) {\n            var red = r / PdfColor.maxColourChannelValue;\n            var green = g / PdfColor.maxColourChannelValue;\n            var blue = b / PdfColor.maxColourChannelValue;\n            if (ifStroking) {\n                colour = red.toString() + ' ' + green.toString() + ' ' + blue.toString() + ' RG';\n            }\n            else {\n                colour = red.toString() + ' ' + green.toString() + ' ' + blue.toString() + ' rg';\n            }\n            PdfColor.rgbStrings.setValue(key, colour);\n        }\n        else {\n            colour = obj.toString();\n        }\n        return colour + Operators.newLine;\n    };\n    /**\n     * Converts `colour to a PDF array`.\n     * @private\n     */\n    PdfColor.prototype.toArray = function (colorSpace) {\n        var array = new PdfArray();\n        switch (colorSpace) {\n            case PdfColorSpace.Rgb:\n                array.add(new PdfNumber(this.red));\n                array.add(new PdfNumber(this.green));\n                array.add(new PdfNumber(this.blue));\n                break;\n            default:\n                throw new Error('NotSupportedException : Unsupported colour space.');\n        }\n        return array;\n    };\n    //Fields\n    /**\n     * Holds `RGB colors` converted into strings.\n     * @private\n     */\n    PdfColor.rgbStrings = new Dictionary();\n    /**\n     * Holds Gray scale colors converted into strings for `stroking`.\n     * @private\n     */\n    PdfColor.grayStringsSroke = new Dictionary();\n    /**\n     * Holds Gray scale colors converted into strings for `filling`.\n     * @private\n     */\n    PdfColor.grayStringsFill = new Dictionary();\n    /**\n     * `Max value` of color channel.\n     * @private\n     */\n    PdfColor.maxColourChannelValue = 255.0;\n    return PdfColor;\n}());\nexport { PdfColor };\n","/**\n * public Enum for `PdfFontStyle`.\n * @private\n */\nexport var PdfFontStyle;\n(function (PdfFontStyle) {\n    /**\n     * Specifies the type of `Regular`.\n     * @private\n     */\n    PdfFontStyle[PdfFontStyle[\"Regular\"] = 0] = \"Regular\";\n    /**\n     * Specifies the type of `Bold`.\n     * @private\n     */\n    PdfFontStyle[PdfFontStyle[\"Bold\"] = 1] = \"Bold\";\n    /**\n     * Specifies the type of `Italic`.\n     * @private\n     */\n    PdfFontStyle[PdfFontStyle[\"Italic\"] = 2] = \"Italic\";\n    /**\n     * Specifies the type of `Underline`.\n     * @private\n     */\n    PdfFontStyle[PdfFontStyle[\"Underline\"] = 4] = \"Underline\";\n    /**\n     * Specifies the type of `Strikeout`.\n     * @private\n     */\n    PdfFontStyle[PdfFontStyle[\"Strikeout\"] = 8] = \"Strikeout\";\n})(PdfFontStyle || (PdfFontStyle = {}));\n/**\n * Specifies the font family from the standard font.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // add a new page to the document\n * let page1 : PdfPage = document.pages.add();\n * // create new standard font\n * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n * // create black brush\n * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n * // draw the text\n * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(0, 0));\n * // save the document\n * document.save('output.pdf');\n * ```\n */\nexport var PdfFontFamily;\n(function (PdfFontFamily) {\n    /**\n     * Specifies the `Helvetica` font.\n     */\n    PdfFontFamily[PdfFontFamily[\"Helvetica\"] = 0] = \"Helvetica\";\n    /**\n     * Specifies the `Courier` font.\n     */\n    PdfFontFamily[PdfFontFamily[\"Courier\"] = 1] = \"Courier\";\n    /**\n     * Specifies the `TimesRoman` font.\n     */\n    PdfFontFamily[PdfFontFamily[\"TimesRoman\"] = 2] = \"TimesRoman\";\n    /**\n     * Specifies the `Symbol` font.\n     */\n    PdfFontFamily[PdfFontFamily[\"Symbol\"] = 3] = \"Symbol\";\n    /**\n     * Specifies the `ZapfDingbats` font.\n     */\n    PdfFontFamily[PdfFontFamily[\"ZapfDingbats\"] = 4] = \"ZapfDingbats\";\n})(PdfFontFamily || (PdfFontFamily = {}));\n/**\n * public Enum for `PdfFontType`.\n * @private\n */\nexport var PdfFontType;\n(function (PdfFontType) {\n    /**\n     * Specifies the type of `Standard`.\n     * @private\n     */\n    PdfFontType[PdfFontType[\"Standard\"] = 0] = \"Standard\";\n    /**\n     * Specifies the type of `TrueType`.\n     * @private\n     */\n    PdfFontType[PdfFontType[\"TrueType\"] = 1] = \"TrueType\";\n    /**\n     * Specifies the type of `TrueTypeEmbedded`.\n     * @private\n     */\n    PdfFontType[PdfFontType[\"TrueTypeEmbedded\"] = 2] = \"TrueTypeEmbedded\";\n})(PdfFontType || (PdfFontType = {}));\n/**\n * public Enum for `PdfWordWrapType`.\n * @private\n */\nexport var PdfWordWrapType;\n(function (PdfWordWrapType) {\n    /**\n     * Specifies the type of `None`.\n     * @private\n     */\n    PdfWordWrapType[PdfWordWrapType[\"None\"] = 0] = \"None\";\n    /**\n     * Specifies the type of `Word`.\n     * @private\n     */\n    PdfWordWrapType[PdfWordWrapType[\"Word\"] = 1] = \"Word\";\n    /**\n     * Specifies the type of `WordOnly`.\n     * @private\n     */\n    PdfWordWrapType[PdfWordWrapType[\"WordOnly\"] = 2] = \"WordOnly\";\n    /**\n     * Specifies the type of `Character`.\n     * @private\n     */\n    PdfWordWrapType[PdfWordWrapType[\"Character\"] = 3] = \"Character\";\n})(PdfWordWrapType || (PdfWordWrapType = {}));\n/**\n * public Enum for `PdfSubSuperScript`.\n * @private\n */\nexport var PdfSubSuperScript;\n(function (PdfSubSuperScript) {\n    /**\n     * Specifies the type of `None`.\n     * @private\n     */\n    PdfSubSuperScript[PdfSubSuperScript[\"None\"] = 0] = \"None\";\n    /**\n     * Specifies the type of `SuperScript`.\n     * @private\n     */\n    PdfSubSuperScript[PdfSubSuperScript[\"SuperScript\"] = 1] = \"SuperScript\";\n    /**\n     * Specifies the type of `SubScript`.\n     * @private\n     */\n    PdfSubSuperScript[PdfSubSuperScript[\"SubScript\"] = 2] = \"SubScript\";\n})(PdfSubSuperScript || (PdfSubSuperScript = {}));\n/**\n * public Enum for `FontEncoding`.\n * @private\n */\nexport var FontEncoding;\n(function (FontEncoding) {\n    /**\n     * Specifies the type of `Unknown`.\n     * @private\n     */\n    FontEncoding[FontEncoding[\"Unknown\"] = 0] = \"Unknown\";\n    /**\n     * Specifies the type of `StandardEncoding`.\n     * @private\n     */\n    FontEncoding[FontEncoding[\"StandardEncoding\"] = 1] = \"StandardEncoding\";\n    /**\n     * Specifies the type of `MacRomanEncoding`.\n     * @private\n     */\n    FontEncoding[FontEncoding[\"MacRomanEncoding\"] = 2] = \"MacRomanEncoding\";\n    /**\n     * Specifies the type of `MacExpertEncoding`.\n     * @private\n     */\n    FontEncoding[FontEncoding[\"MacExpertEncoding\"] = 3] = \"MacExpertEncoding\";\n    /**\n     * Specifies the type of `WinAnsiEncoding`.\n     * @private\n     */\n    FontEncoding[FontEncoding[\"WinAnsiEncoding\"] = 4] = \"WinAnsiEncoding\";\n    /**\n     * Specifies the type of `PdfDocEncoding`.\n     * @private\n     */\n    FontEncoding[FontEncoding[\"PdfDocEncoding\"] = 5] = \"PdfDocEncoding\";\n    /**\n     * Specifies the type of `IdentityH`.\n     * @private\n     */\n    FontEncoding[FontEncoding[\"IdentityH\"] = 6] = \"IdentityH\";\n})(FontEncoding || (FontEncoding = {}));\n","/**\n * Coordinates of Position for `PointF`.\n * @private\n */\nvar PointF = /** @class */ (function () {\n    function PointF(x, y) {\n        if (typeof x === 'undefined') {\n            this.x = 0;\n            this.y = 0;\n        }\n        else {\n            if (x !== null) {\n                this.x = x;\n            }\n            else {\n                this.x = 0;\n            }\n            if (y !== null) {\n                this.y = y;\n            }\n            else {\n                this.y = 0;\n            }\n        }\n    }\n    return PointF;\n}());\nexport { PointF };\n/**\n * Width and Height as `Size`.\n * @private\n */\nvar SizeF = /** @class */ (function () {\n    function SizeF(width, height) {\n        if (typeof height === 'undefined') {\n            this.height = 0;\n            this.width = 0;\n        }\n        else {\n            if (height !== null) {\n                this.height = height;\n            }\n            else {\n                this.height = 0;\n            }\n            if (width !== null) {\n                this.width = width;\n            }\n            else {\n                this.width = 0;\n            }\n        }\n    }\n    return SizeF;\n}());\nexport { SizeF };\n/**\n * `RectangleF` with Position and size.\n * @private\n */\nvar RectangleF = /** @class */ (function () {\n    function RectangleF(arg1, arg2, arg3, arg4) {\n        if (typeof arg1 === typeof arg1 && typeof arg1 === 'undefined') {\n            this.x = 0;\n            this.y = 0;\n            this.height = 0;\n            this.width = 0;\n        }\n        else {\n            if (arg1 instanceof PointF && arg2 instanceof SizeF && typeof arg3 === 'undefined') {\n                var pointf = arg1;\n                this.x = pointf.x;\n                this.y = pointf.y;\n                var sizef = arg2;\n                this.height = sizef.height;\n                this.width = sizef.width;\n            }\n            else {\n                var x = arg1;\n                var y = arg2;\n                var width = arg3;\n                var height = arg4;\n                this.x = x;\n                this.y = y;\n                this.height = height;\n                this.width = width;\n            }\n        }\n    }\n    return RectangleF;\n}());\nexport { RectangleF };\n","/**\n * `PdfBrush` class provides objects used to fill the interiors of graphical shapes such as rectangles,\n * ellipses, pies, polygons, and paths.\n * @private\n */\nvar PdfBrush = /** @class */ (function () {\n    /**\n     * Creates instanceof `PdfBrush` class.\n     * @hidden\n     * @private\n     */\n    function PdfBrush() {\n        //\n    }\n    return PdfBrush;\n}());\nexport { PdfBrush };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfColor } from './../pdf-color';\nimport { PdfColorSpace } from './../enum';\nimport { PdfBrush } from './pdf-brush';\n/**\n * Represents a brush that fills any object with a solid color.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // add a pages to the document\n * let page1 : PdfPage = document.pages.add();\n * // set font\n * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n * // set brush\n * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n * // draw the text\n * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(10, 10));\n * // save the document\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfSolidBrush = /** @class */ (function (_super) {\n    __extends(PdfSolidBrush, _super);\n    //Constructors\n    /**\n     * Initializes a new instance of the `PdfSolidBrush` class.\n     * ```typescript\n     * // create a new PDF document\n     * let document : PdfDocument = new PdfDocument();\n     * // add a pages to the document\n     * let page1 : PdfPage = document.pages.add();\n     * // set font\n     * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n     * // set brush\n     * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n     * // draw the text\n     * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(10, 10));\n     * // save the document\n     * document.save('output.pdf');\n     * // destroy the document\n     * document.destroy();\n     * ```\n     * @param color color of the brush\n     */\n    function PdfSolidBrush(color) {\n        var _this = _super.call(this) || this;\n        _this.pdfColor = color;\n        return _this;\n    }\n    Object.defineProperty(PdfSolidBrush.prototype, \"color\", {\n        //Properties\n        /**\n         * Gets or sets the `color` of the brush.\n         * @private\n         */\n        get: function () {\n            return this.pdfColor;\n        },\n        set: function (value) {\n            this.pdfColor = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Implementation\n    /**\n     * `Monitors` the changes of the brush and modify PDF state respectively.\n     * @private\n     */\n    PdfSolidBrush.prototype.monitorChanges = function (brush, streamWriter, getResources, saveChanges, currentColorSpace) {\n        if (streamWriter == null) {\n            throw new Error('ArgumentNullException:streamWriter');\n        }\n        var diff = false;\n        if (brush == null) {\n            diff = true;\n            streamWriter.setColorAndSpace(this.pdfColor, currentColorSpace, false);\n            return diff;\n        }\n        else {\n            var sBrush = brush;\n            diff = true;\n            streamWriter.setColorAndSpace(this.pdfColor, currentColorSpace, false);\n            return diff;\n        }\n    };\n    /**\n     * `Resets` the changes, which were made by the brush.\n     * @private\n     */\n    PdfSolidBrush.prototype.resetChanges = function (streamWriter) {\n        streamWriter.setColorAndSpace(new PdfColor(0, 0, 0), PdfColorSpace.Rgb, false);\n    };\n    return PdfSolidBrush;\n}(PdfBrush));\nexport { PdfSolidBrush };\n","/**\n * PdfStringFormat.ts class for EJ2-PDF\n */\nimport { PdfVerticalAlignment } from './../../graphics/enum';\nimport { PdfSubSuperScript, PdfWordWrapType } from './../../graphics/fonts/enum';\n/**\n * `PdfStringFormat` class represents the text layout information on PDF.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // add a pages to the document\n * let page1 : PdfPage = document.pages.add();\n * // set font\n * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n * // set brush\n * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n * //\n * // set the format for string\n * let stringFormat : PdfStringFormat = new PdfStringFormat();\n * // set the text alignment\n * stringFormat.alignment = PdfTextAlignment.Center;\n * // set the vertical alignment\n * stringFormat.lineAlignment = PdfVerticalAlignment.Middle;\n * //\n * // draw the text\n * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(10, 10), stringFormat);\n * // save the document\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfStringFormat = /** @class */ (function () {\n    function PdfStringFormat(arg1, arg2) {\n        /**\n         * The `scaling factor` of the text being drawn.\n         * @private\n         */\n        this.scalingFactor = 100.0;\n        if (typeof arg1 === 'undefined') {\n            this.internalLineLimit = true;\n            this.wordWrapType = PdfWordWrapType.Word;\n        }\n        else if (typeof arg1 === 'string') {\n            this.constructor();\n        }\n        else {\n            if (typeof arg2 === 'undefined') {\n                this.constructor();\n                this.textAlignment = arg1;\n            }\n            else {\n                this.constructor(arg1);\n                this.verticalAlignment = arg2;\n            }\n        }\n    }\n    Object.defineProperty(PdfStringFormat.prototype, \"alignment\", {\n        //Properties\n        /**\n         * Gets or sets the `horizontal` text alignment\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // add a pages to the document\n         * let page1 : PdfPage = document.pages.add();\n         * // set font\n         * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n         * // set brush\n         * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n         * //\n         * // set the format for string\n         * let stringFormat : PdfStringFormat = new PdfStringFormat();\n         * // set the text alignment\n         * stringFormat.alignment = PdfTextAlignment.Center;\n         * //\n         * // draw the text\n         * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(10, 10), stringFormat);\n         * // save the document\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this.textAlignment;\n        },\n        set: function (value) {\n            this.textAlignment = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"lineAlignment\", {\n        /**\n         * Gets or sets the `vertical` text alignment.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // add a pages to the document\n         * let page1 : PdfPage = document.pages.add();\n         * // set font\n         * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n         * // set brush\n         * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n         * //\n         * // set the format for string\n         * let stringFormat : PdfStringFormat = new PdfStringFormat();\n         * // set the vertical alignment\n         * stringFormat.lineAlignment = PdfVerticalAlignment.Middle;\n         * //\n         * // draw the text\n         * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(10, 10), stringFormat);\n         * // save the document\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this.verticalAlignment === 'undefined' || this.verticalAlignment == null) {\n                return PdfVerticalAlignment.Top;\n            }\n            else {\n                return this.verticalAlignment;\n            }\n        },\n        set: function (value) {\n            this.verticalAlignment = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"rightToLeft\", {\n        /**\n         * Gets or sets the value that indicates text `direction` mode.\n         * @private\n         */\n        get: function () {\n            if (typeof this.isRightToLeft === 'undefined' || this.isRightToLeft == null) {\n                return false;\n            }\n            else {\n                return this.isRightToLeft;\n            }\n        },\n        set: function (value) {\n            this.isRightToLeft = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"characterSpacing\", {\n        /**\n         * Gets or sets value that indicates a `size` among the characters in the text.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // add a pages to the document\n         * let page1 : PdfPage = document.pages.add();\n         * // set font\n         * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n         * // set brush\n         * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n         * //\n         * // set the format for string\n         * let stringFormat : PdfStringFormat = new PdfStringFormat();\n         * // set character spacing\n         * stringFormat.characterSpacing = 10;\n         * //\n         * // draw the text\n         * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(10, 10), stringFormat);\n         * // save the document\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this.internalCharacterSpacing === 'undefined' || this.internalCharacterSpacing == null) {\n                return 0;\n            }\n            else {\n                return this.internalCharacterSpacing;\n            }\n        },\n        set: function (value) {\n            this.internalCharacterSpacing = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"wordSpacing\", {\n        /**\n         * Gets or sets value that indicates a `size` among the words in the text.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // add a pages to the document\n         * let page1 : PdfPage = document.pages.add();\n         * // set font\n         * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n         * // set brush\n         * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n         * //\n         * // set the format for string\n         * let stringFormat : PdfStringFormat = new PdfStringFormat();\n         * // set word spacing\n         * stringFormat.wordSpacing = 10;\n         * //\n         * // draw the text\n         * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(10, 10), stringFormat);\n         * // save the document\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this.internalWordSpacing === 'undefined' || this.internalWordSpacing == null) {\n                return 0;\n            }\n            else {\n                return this.internalWordSpacing;\n            }\n        },\n        set: function (value) {\n            this.internalWordSpacing = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"lineSpacing\", {\n        /**\n         * Gets or sets value that indicates the `vertical distance` between the baselines of adjacent lines of text.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // add a pages to the document\n         * let page1 : PdfPage = document.pages.add();\n         * // set font\n         * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n         * // set brush\n         * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n         * // set string\n         * let text : string = 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor\n         * incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitati';\n         * // set rectangle bounds\n         * let rectangle : RectangleF = new RectangleF({x : 0, y : 0}, {width : 300, height : 100})\n         * //\n         * // set the format for string\n         * let stringFormat : PdfStringFormat = new PdfStringFormat();\n         * // set line spacing\n         * stringFormat.lineSpacing = 10;\n         * //\n         * // draw the text\n         * page1.graphics.drawString(text, font, blackBrush, rectangle, stringFormat);\n         * // save the document\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this.leading === 'undefined' || this.leading == null) {\n                return 0;\n            }\n            else {\n                return this.leading;\n            }\n        },\n        set: function (value) {\n            this.leading = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"clipPath\", {\n        /**\n         * Gets or sets a value indicating whether the text is `clipped` or not.\n         * @private\n         */\n        get: function () {\n            if (typeof this.clip === 'undefined' || this.clip == null) {\n                return false;\n            }\n            else {\n                return this.clip;\n            }\n        },\n        set: function (value) {\n            this.clip = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"subSuperScript\", {\n        /**\n         * Gets or sets value indicating whether the text is in `subscript or superscript` mode.\n         * @private\n         */\n        get: function () {\n            if (typeof this.pdfSubSuperScript === 'undefined' || this.pdfSubSuperScript == null) {\n                return PdfSubSuperScript.None;\n            }\n            else {\n                return this.pdfSubSuperScript;\n            }\n        },\n        set: function (value) {\n            this.pdfSubSuperScript = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"paragraphIndent\", {\n        /**\n         * Gets or sets the `indent` of the first line in the paragraph.\n         * @private\n         */\n        get: function () {\n            if (typeof this.internalParagraphIndent === 'undefined' || this.internalParagraphIndent == null) {\n                return 0;\n            }\n            else {\n                return this.internalParagraphIndent;\n            }\n        },\n        set: function (value) {\n            this.internalParagraphIndent = value;\n            this.firstLineIndent = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"lineLimit\", {\n        /**\n         * Gets or sets a value indicating whether [`line limit`].\n         * @private\n         */\n        get: function () {\n            return this.internalLineLimit;\n        },\n        set: function (value) {\n            this.internalLineLimit = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"measureTrailingSpaces\", {\n        /**\n         * Gets or sets a value indicating whether [`measure trailing spaces`].\n         * @private\n         */\n        get: function () {\n            if (typeof this.trailingSpaces === 'undefined' || this.trailingSpaces == null) {\n                return false;\n            }\n            else {\n                return this.trailingSpaces;\n            }\n        },\n        set: function (value) {\n            this.trailingSpaces = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"noClip\", {\n        /**\n         * Gets or sets a value indicating whether [`no clip`].\n         * @private\n         */\n        get: function () {\n            if (typeof this.isNoClip === 'undefined' || this.isNoClip == null) {\n                return false;\n            }\n            else {\n                return this.isNoClip;\n            }\n        },\n        set: function (value) {\n            this.isNoClip = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"wordWrap\", {\n        /**\n         * Gets or sets value indicating type of the text `wrapping`.\n         * @private\n         */\n        get: function () {\n            // if (typeof this.wrapType === 'undefined' || this.wrapType == null) {\n            //     return PdfWordWrapType.Word;\n            // } else {\n            return this.wordWrapType;\n            // }\n        },\n        set: function (value) {\n            this.wordWrapType = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"horizontalScalingFactor\", {\n        /**\n         * Gets or sets the `scaling factor`.\n         * @private\n         */\n        get: function () {\n            // if (typeof this.scalingFactor === 'undefined' || this.scalingFactor == null) {\n            //     return 100;\n            // } else {\n            return this.scalingFactor;\n            // }\n        },\n        set: function (value) {\n            if (value <= 0) {\n                throw new Error('ArgumentOutOfRangeException:The scaling factor cant be less of equal to zero, ScalingFactor');\n            }\n            this.scalingFactor = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"firstLineIndent\", {\n        /**\n         * Gets or sets the `indent` of the first line in the text.\n         * @private\n         */\n        get: function () {\n            if (typeof this.initialLineIndent === 'undefined' || this.initialLineIndent == null) {\n                return 0;\n            }\n            else {\n                return this.initialLineIndent;\n            }\n        },\n        set: function (value) {\n            this.initialLineIndent = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Clones` the object.\n     * @private\n     */\n    //IClonable implementation\n    PdfStringFormat.prototype.clone = function () {\n        var format = this;\n        return format;\n    };\n    return PdfStringFormat;\n}());\nexport { PdfStringFormat };\n","import { SizeF, RectangleF, PointF } from './../../drawing/pdf-drawing';\nimport { PdfWordWrapType } from './enum';\nimport { StringTokenizer } from './string-tokenizer';\n/**\n * Class `lay outing the text`.\n */\nvar PdfStringLayouter = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initializes a new instance of the `StringLayouter` class.\n     * @private\n     */\n    function PdfStringLayouter() {\n        /**\n         * Checks whether the x co-ordinate is need to set as client size or not.\n         * @hidden\n         * @private\n         */\n        this.isOverloadWithPosition = false;\n        //\n    }\n    PdfStringLayouter.prototype.layout = function (arg1, arg2, arg3, arg4, arg5, arg6, arg7) {\n        if (arg4 instanceof RectangleF) {\n            this.initialize(arg1, arg2, arg3, arg4, arg5);\n            this.isOverloadWithPosition = arg6;\n            this.clientSize = arg7;\n            var result = this.doLayout();\n            this.clear();\n            return result;\n        }\n        else {\n            this.initialize(arg1, arg2, arg3, arg4);\n            this.isOverloadWithPosition = arg5;\n            this.clientSize = arg6;\n            var result = this.doLayout();\n            this.clear();\n            return result;\n        }\n    };\n    PdfStringLayouter.prototype.initialize = function (text, font, format, rectSize, pageHeight) {\n        if (typeof pageHeight === 'number') {\n            if (text == null) {\n                throw new Error('ArgumentNullException:text');\n            }\n            if (font == null) {\n                throw new Error('ArgumentNullException:font');\n            }\n            this.text = text;\n            this.font = font;\n            this.format = format;\n            this.size = new SizeF(rectSize.width, rectSize.height);\n            this.rectangle = rectSize;\n            this.pageHeight = pageHeight;\n            this.reader = new StringTokenizer(text);\n        }\n        else {\n            this.initialize(text, font, format, new RectangleF(new PointF(0, 0), rectSize), 0);\n        }\n    };\n    /**\n     * `Clear` all resources.\n     * @private\n     */\n    PdfStringLayouter.prototype.clear = function () {\n        this.font = null;\n        this.format = null;\n        this.reader.close();\n        this.reader = null;\n        this.text = null;\n    };\n    /**\n     * `Layouts` the text.\n     * @private\n     */\n    PdfStringLayouter.prototype.doLayout = function () {\n        var result = new PdfStringLayoutResult();\n        var lineResult = new PdfStringLayoutResult();\n        var lines = [];\n        var line = this.reader.peekLine();\n        var lineIndent = this.getLineIndent(true);\n        while (line != null) {\n            lineResult = this.layoutLine(line, lineIndent);\n            // if (!lineResult.Empty) {\n            var numSymbolsInserted = 0;\n            /* tslint:disable */\n            var returnedValue = this.copyToResult(result, lineResult, lines, /*out*/ numSymbolsInserted);\n            /* tslint:enable */\n            var success = returnedValue.success;\n            numSymbolsInserted = returnedValue.numInserted;\n            this.reader.readLine();\n            line = this.reader.peekLine();\n            lineIndent = this.getLineIndent(false);\n        }\n        this.finalizeResult(result, lines);\n        return result;\n    };\n    /**\n     * Returns `line indent` for the line.\n     * @private\n     */\n    PdfStringLayouter.prototype.getLineIndent = function (firstLine) {\n        var lineIndent = 0;\n        if (this.format != null) {\n            lineIndent = (firstLine) ? this.format.firstLineIndent : this.format.paragraphIndent;\n            lineIndent = (this.size.width > 0) ? Math.min(this.size.width, lineIndent) : lineIndent;\n        }\n        return lineIndent;\n    };\n    /**\n     * Calculates `height` of the line.\n     * @private\n     */\n    PdfStringLayouter.prototype.getLineHeight = function () {\n        var height = this.font.height;\n        if (this.format != null && this.format.lineSpacing !== 0) {\n            height = this.format.lineSpacing + this.font.height;\n        }\n        return height;\n    };\n    /**\n     * Calculates `width` of the line.\n     * @private\n     */\n    PdfStringLayouter.prototype.getLineWidth = function (line) {\n        var width = this.font.getLineWidth(line, this.format);\n        return width;\n    };\n    // tslint:disable\n    /**\n     * `Layouts` line.\n     * @private\n     */\n    PdfStringLayouter.prototype.layoutLine = function (line, lineIndent) {\n        var lineResult = new PdfStringLayoutResult();\n        lineResult.layoutLineHeight = this.getLineHeight();\n        var lines = [];\n        var maxWidth = this.size.width;\n        var lineWidth = this.getLineWidth(line) + lineIndent;\n        var lineType = LineType.FirstParagraphLine;\n        var readWord = true;\n        // line is in bounds.\n        if (maxWidth <= 0 || Math.round(lineWidth) <= Math.round(maxWidth)) {\n            this.addToLineResult(lineResult, lines, line, lineWidth, LineType.NewLineBreak | lineType);\n        }\n        else {\n            var builder = '';\n            var curLine = '';\n            lineWidth = lineIndent;\n            var curIndent = lineIndent;\n            var reader = new StringTokenizer(line);\n            var word = reader.peekWord();\n            var isSingleWord = false;\n            while (word != null) {\n                curLine = curLine + word;\n                var curLineWidth = this.getLineWidth(curLine.toString()) + curIndent /*)*/;\n                if (curLineWidth > maxWidth) {\n                    if (this.getWrapType() == PdfWordWrapType.None)\n                        break;\n                    if (this.getWrapType() != PdfWordWrapType.Character || !readWord) {\n                        var ln = builder.toString();\n                        if (ln.indexOf(' ') === -1) {\n                            isSingleWord = true;\n                            this.addToLineResult(lineResult, lines, curLine, lineWidth, LineType.LayoutBreak | lineType);\n                        }\n                        else {\n                            this.addToLineResult(lineResult, lines, ln, lineWidth, LineType.LayoutBreak | lineType);\n                        }\n                        if (this.isOverloadWithPosition) {\n                            maxWidth = this.clientSize.width;\n                        }\n                        curLine = '';\n                        builder = '';\n                        lineWidth = 0;\n                        curIndent = 0;\n                        curLineWidth = 0;\n                        lineType = LineType.None;\n                        if (isSingleWord) {\n                            reader.readWord();\n                            readWord = false;\n                        }\n                        word = (readWord) ? word : reader.peekWord();\n                        isSingleWord = false;\n                        readWord = true;\n                    }\n                    else {\n                        readWord = false;\n                        curLine = curLine + builder.toString();\n                        word = reader.peek().toString();\n                    }\n                    continue;\n                }\n                builder = builder + word;\n                lineWidth = curLineWidth;\n                if (readWord) {\n                    reader.readWord();\n                    word = reader.peekWord();\n                    isSingleWord = false;\n                }\n                else {\n                    reader.read();\n                    word = reader.peek().toString();\n                }\n            }\n            if (builder.length > 0) {\n                var ln = builder.toString();\n                this.addToLineResult(lineResult, lines, ln, lineWidth, LineType.NewLineBreak | LineType.LastParagraphLine);\n            }\n            reader.close();\n        }\n        lineResult.layoutLines = [];\n        for (var index = 0; index < lines.length; index++) {\n            lineResult.layoutLines.push(lines[index]);\n        }\n        lines = [];\n        return lineResult;\n    };\n    /**\n     * `Adds` line to line result.\n     * @private\n     */\n    PdfStringLayouter.prototype.addToLineResult = function (lineResult, lines, line, lineWidth, breakType) {\n        var info = new LineInfo();\n        info.text = line;\n        info.width = lineWidth;\n        info.lineType = breakType;\n        lines.push(info);\n        var size = lineResult.actualSize;\n        size.height += this.getLineHeight();\n        size.width = Math.max(size.width, lineWidth);\n        lineResult.size = size;\n    };\n    /**\n     * `Copies` layout result from line result to entire result. Checks whether we can proceed lay outing or not.\n     * @private\n     */\n    PdfStringLayouter.prototype.copyToResult = function (result, lineResult, lines, \n        /*out*/ numInserted) {\n        var success = true;\n        var allowPartialLines = (this.format != null && !this.format.lineLimit);\n        var height = result.actualSize.height;\n        var maxHeight = this.size.height;\n        if ((this.pageHeight > 0) && (maxHeight + this.rectangle.y > this.pageHeight)) {\n            maxHeight = this.rectangle.y - this.pageHeight;\n            maxHeight = Math.max(maxHeight, -maxHeight);\n        }\n        numInserted = 0;\n        for (var i = 0, len = lineResult.lines.length; i < len; i++) {\n            var expHeight = height + lineResult.lineHeight;\n            var info = lineResult.lines[i];\n            numInserted += info.text.length;\n            info = this.trimLine(info, (lines.length === 0));\n            lines.push(info);\n            // Update width.\n            var size_1 = result.actualSize;\n            size_1.width = Math.max(size_1.width, info.width);\n            result.size = size_1;\n            height = expHeight;\n        }\n        var size = result.actualSize;\n        size.height = height;\n        result.size = size;\n        return { success: success, numInserted: numInserted };\n    };\n    /**\n     * `Finalizes` final result.\n     * @private\n     */\n    PdfStringLayouter.prototype.finalizeResult = function (result, lines) {\n        result.layoutLines = [];\n        for (var index = 0; index < lines.length; index++) {\n            result.layoutLines.push(lines[index]);\n        }\n        result.layoutLineHeight = this.getLineHeight();\n        lines = [];\n    };\n    /**\n     * `Trims` whitespaces at the line.\n     * @private\n     */\n    PdfStringLayouter.prototype.trimLine = function (info, firstLine) {\n        var line = info.text;\n        var lineWidth = info.width;\n        // Trim start whitespaces if the line is not a start of the paragraph only.\n        // let trimStartSpaces : boolean = ((info.LineType & LineType.FirstParagraphLine) === 0);\n        var start = (this.format == null || !this.format.rightToLeft);\n        var spaces = StringTokenizer.spaces;\n        line = (start) ? line.trim() : line.trim();\n        // Recalculate line width.\n        if (line.length !== info.text.length) {\n            lineWidth = this.getLineWidth(line);\n            lineWidth += this.getLineIndent(firstLine);\n        }\n        info.text = line;\n        info.width = lineWidth;\n        return info;\n    };\n    /**\n     * Returns `wrap` type.\n     * @private\n     */\n    PdfStringLayouter.prototype.getWrapType = function () {\n        var wrapType = (this.format != null) ? this.format.wordWrap : PdfWordWrapType.Word;\n        return wrapType;\n    };\n    return PdfStringLayouter;\n}());\nexport { PdfStringLayouter };\n//Internal declaration\nvar PdfStringLayoutResult = /** @class */ (function () {\n    function PdfStringLayoutResult() {\n    }\n    Object.defineProperty(PdfStringLayoutResult.prototype, \"remainder\", {\n        // Properties\n        /**\n         * Gets the `text` which is not lay outed.\n         * @private\n         */\n        get: function () {\n            return this.textRemainder;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringLayoutResult.prototype, \"actualSize\", {\n        /**\n         * Gets the actual layout text `bounds`.\n         * @private\n         */\n        get: function () {\n            if (typeof this.size === 'undefined') {\n                this.size = new SizeF(0, 0);\n            }\n            return this.size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringLayoutResult.prototype, \"lines\", {\n        /**\n         * Gets layout `lines` information.\n         * @private\n         */\n        get: function () {\n            return this.layoutLines;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringLayoutResult.prototype, \"lineHeight\", {\n        /**\n         * Gets the `height` of the line.\n         * @private\n         */\n        get: function () {\n            return this.layoutLineHeight;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringLayoutResult.prototype, \"empty\", {\n        /**\n         * Gets value that indicates whether any layout text [`empty`].\n         * @private\n         */\n        get: function () {\n            return (this.layoutLines == null || this.layoutLines.length === 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringLayoutResult.prototype, \"lineCount\", {\n        /**\n         * Gets `number of` the layout lines.\n         * @private\n         */\n        get: function () {\n            var count = (!this.empty) ? this.layoutLines.length : 0;\n            return count;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfStringLayoutResult;\n}());\nexport { PdfStringLayoutResult };\nvar LineInfo = /** @class */ (function () {\n    function LineInfo() {\n    }\n    Object.defineProperty(LineInfo.prototype, \"lineType\", {\n        //Properties\n        /**\n         * Gets the `type` of the line text.\n         * @private\n         */\n        get: function () {\n            return this.type;\n        },\n        set: function (value) {\n            this.type = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LineInfo.prototype, \"text\", {\n        /**\n         * Gets the line `text`.\n         * @private\n         */\n        get: function () {\n            return this.content;\n        },\n        set: function (value) {\n            this.content = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LineInfo.prototype, \"width\", {\n        /**\n         * Gets `width` of the line text.\n         * @private\n         */\n        get: function () {\n            return this.lineWidth;\n        },\n        set: function (value) {\n            this.lineWidth = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return LineInfo;\n}());\nexport { LineInfo };\n/**\n* Break type of the `line`.\n* @private\n*/\nexport var LineType;\n(function (LineType) {\n    /**\n     * Specifies the type of `None`.\n     * @private\n     */\n    LineType[LineType[\"None\"] = 0] = \"None\";\n    /**\n     * Specifies the type of `NewLineBreak`.\n     * @private\n     */\n    LineType[LineType[\"NewLineBreak\"] = 1] = \"NewLineBreak\";\n    /**\n     * Specifies the type of `LayoutBreak`.\n     * @private\n     */\n    LineType[LineType[\"LayoutBreak\"] = 2] = \"LayoutBreak\";\n    /**\n     * Specifies the type of `FirstParagraphLine`.\n     * @private\n     */\n    LineType[LineType[\"FirstParagraphLine\"] = 4] = \"FirstParagraphLine\";\n    /**\n     * Specifies the type of `LastParagraphLine`.\n     * @private\n     */\n    LineType[LineType[\"LastParagraphLine\"] = 8] = \"LastParagraphLine\";\n})(LineType || (LineType = {}));\n","/**\n * StringTokenizer.ts class for EJ2-PDF\n * Utility class for working with strings.\n * @private\n */\nvar StringTokenizer = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initializes a new instance of the `StringTokenizer` class.\n     * @private\n     */\n    function StringTokenizer(textValue) {\n        /**\n         * Current `position`.\n         * @private\n         */\n        this.currentPosition = 0;\n        if (textValue == null) {\n            throw new Error('ArgumentNullException:text');\n        }\n        this.text = textValue;\n    }\n    Object.defineProperty(StringTokenizer.prototype, \"length\", {\n        // Properties\n        /**\n         * Gets text `length`.\n         * @private\n         */\n        get: function () {\n            return this.text.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(StringTokenizer.prototype, \"position\", {\n        /**\n         * Gets or sets the position.\n         * @private\n         */\n        get: function () {\n            return this.currentPosition;\n        },\n        set: function (value) {\n            this.currentPosition = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    StringTokenizer.getCharsCount = function (text, symbols) {\n        if (typeof symbols === 'string') {\n            if (text == null) {\n                throw new Error('ArgumentNullException:wholeText');\n            }\n            var numSymbols = 0;\n            var curIndex = 0;\n            for (;;) {\n                curIndex = text.indexOf(symbols, curIndex);\n                if (curIndex === -1) {\n                    break;\n                }\n                else {\n                    numSymbols++;\n                    curIndex++;\n                }\n            }\n            return numSymbols;\n        }\n        else {\n            if (text == null) {\n                throw new Error('ArgumentNullException:text');\n            }\n            if (symbols == null) {\n                throw new Error('ArgumentNullException:symbols');\n            }\n            var count = 0;\n            for (var i = 0, len = text.length; i < len; i++) {\n                var ch = text[i];\n                if (this.contains(symbols, ch)) {\n                    count++;\n                }\n            }\n            return count;\n        }\n    };\n    /**\n     * Reads line of the text.\n     * @private\n     */\n    StringTokenizer.prototype.readLine = function () {\n        var pos = this.currentPosition;\n        while (pos < this.length) {\n            var ch = this.text[pos];\n            switch (ch) {\n                case '\\r':\n                case '\\n': {\n                    var text = this.text.substring(this.currentPosition, pos - this.currentPosition);\n                    this.currentPosition = pos + 1;\n                    this.currentPosition++;\n                    return text;\n                }\n            }\n            pos++;\n        }\n        // The remaining text.\n        if (pos > this.currentPosition) {\n            var text2 = this.text.substring(this.currentPosition, pos - this.currentPosition);\n            this.currentPosition = pos;\n            return text2;\n        }\n        return null;\n    };\n    /**\n     * Reads line of the text.\n     * @private\n     */\n    StringTokenizer.prototype.peekLine = function () {\n        var pos = this.currentPosition;\n        var line = this.readLine();\n        this.currentPosition = pos;\n        return line;\n    };\n    /**\n     * Reads a word from the text.\n     * @private\n     */\n    StringTokenizer.prototype.readWord = function () {\n        var pos = this.currentPosition;\n        while (pos < this.length) {\n            var ch = this.text[pos];\n            switch (ch) {\n                case '\\r':\n                case '\\n':\n                    var textValue = this.text.substr(this.currentPosition, pos - this.currentPosition);\n                    this.currentPosition = pos + 1;\n                    if (((ch === '\\r') && (this.currentPosition < this.length)) && (this.text[this.currentPosition] === '\\n')) {\n                        this.currentPosition++;\n                    }\n                    return textValue;\n                case ' ':\n                case '\\t': {\n                    if (pos === this.currentPosition) {\n                        pos++;\n                    }\n                    var text = this.text.substr(this.currentPosition, pos - this.currentPosition);\n                    this.currentPosition = pos;\n                    return text;\n                }\n            }\n            pos++;\n        }\n        // The remaining text.\n        if (pos > this.currentPosition) {\n            var text2 = this.text.substr(this.currentPosition, pos - this.currentPosition);\n            this.currentPosition = pos;\n            return text2;\n        }\n        return null;\n    };\n    /**\n     * Peeks a word from the text.\n     * @private\n     */\n    StringTokenizer.prototype.peekWord = function () {\n        var pos = this.currentPosition;\n        var word = this.readWord();\n        this.currentPosition = pos;\n        return word;\n    };\n    StringTokenizer.prototype.read = function (count) {\n        if (typeof count === 'undefined') {\n            var ch = '0';\n            return ch;\n        }\n        else {\n            var num = 0;\n            var builder = '';\n            return builder;\n        }\n    };\n    /**\n     * Peeks char form the data.\n     * @private\n     */\n    StringTokenizer.prototype.peek = function () {\n        var ch = '0';\n        return ch;\n    };\n    /**\n     * Closes a reader.\n     * @private\n     */\n    StringTokenizer.prototype.close = function () {\n        this.text = null;\n    };\n    //Implementation\n    /**\n     * Checks whether array contains a symbol.\n     * @private\n     */\n    StringTokenizer.contains = function (array, symbol) {\n        var contains = false;\n        for (var i = 0; i < array.length; i++) {\n            if (array[i] === symbol) {\n                contains = true;\n                break;\n            }\n        }\n        return contains;\n    };\n    // Constants\n    /**\n     * `Whitespace` symbol.\n     * @private\n     */\n    StringTokenizer.whiteSpace = ' ';\n    /**\n     * `tab` symbol.\n     * @private\n     */\n    StringTokenizer.tab = '\\t';\n    /**\n     * Array of `spaces`.\n     * @private\n     */\n    StringTokenizer.spaces = [StringTokenizer.whiteSpace, StringTokenizer.tab];\n    /**\n     * `Pattern` for WhiteSpace.\n     * @private\n     */\n    StringTokenizer.whiteSpacePattern = '^[ \\t]+$';\n    return StringTokenizer;\n}());\nexport { StringTokenizer };\n","/**\n * PdfFont.ts class for EJ2-PDF\n */\nimport { PdfFontStyle } from './enum';\nimport { SizeF } from './../../drawing/pdf-drawing';\nimport { PdfStringFormat } from './pdf-string-format';\nimport { PdfStringLayouter } from './string-layouter';\nimport { StringTokenizer } from './string-tokenizer';\n/**\n * Defines a particular format for text, including font face, size, and style attributes.\n * @private\n */\nvar PdfFont = /** @class */ (function () {\n    function PdfFont(size, style) {\n        /**\n         * `Style` of the font.\n         * @private\n         */\n        this.fontStyle = PdfFontStyle.Regular;\n        if (typeof size === 'number' && typeof style === 'undefined') {\n            this.fontSize = size;\n        }\n        else {\n            this.fontSize = size;\n            this.setStyle(style);\n        }\n    }\n    Object.defineProperty(PdfFont.prototype, \"name\", {\n        //Properties\n        /**\n         * Gets the face name of this Font.\n         * @private\n         */\n        get: function () {\n            return this.metrics.name;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"size\", {\n        /**\n         * Gets the size of this font.\n         * @private\n         */\n        get: function () {\n            return this.fontSize;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"height\", {\n        /**\n         * Gets the height of the font in points.\n         * @private\n         */\n        get: function () {\n            return this.metrics.getHeight(null);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"style\", {\n        /**\n         * Gets the style information for this font.\n         * @private\n         */\n        get: function () {\n            return this.fontStyle;\n        },\n        set: function (value) {\n            this.fontStyle = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"bold\", {\n        /**\n         * Gets a value indicating whether this `PdfFont` is `bold`.\n         * @private\n         */\n        get: function () {\n            return ((this.style & PdfFontStyle.Bold) > 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"italic\", {\n        /**\n         * Gets a value indicating whether this `PdfFont` has the `italic` style applied.\n         * @private\n         */\n        get: function () {\n            return ((this.style & PdfFontStyle.Italic) > 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"strikeout\", {\n        /**\n         * Gets a value indicating whether this `PdfFont` is `strikeout`.\n         * @private\n         */\n        get: function () {\n            return ((this.style & PdfFontStyle.Strikeout) > 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"underline\", {\n        /**\n         * Gets a value indicating whether this `PdfFont` is `underline`.\n         * @private\n         */\n        get: function () {\n            return ((this.style & PdfFontStyle.Underline) > 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"metrics\", {\n        /**\n         * Gets or sets the `metrics` for this font.\n         * @private\n         */\n        get: function () {\n            return this.fontMetrics;\n        },\n        set: function (value) {\n            this.fontMetrics = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"element\", {\n        // /**\n        //  * Gets and Sets the font `internals`.\n        //  * @private\n        //  */\n        // public get fontInternal() : IPdfPrimitive {\n        //     return this.pdfFontInternals;\n        // }\n        // public set fontInternal(value : IPdfPrimitive) {\n        //     this.pdfFontInternals = value;\n        // }\n        //IPdfWrapper Members\n        /**\n         * Gets the `element` representing the font.\n         * @private\n         */\n        get: function () {\n            return this.pdfFontInternals;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfFont.prototype.measureString = function (text, arg2, arg3, arg4, arg5) {\n        if (typeof text === 'string' && typeof arg2 === 'undefined') {\n            return this.measureString(text, null);\n        }\n        else if (typeof text === 'string' && (arg2 instanceof PdfStringFormat || arg2 == null) && typeof arg3 === 'undefined' && typeof arg4 === 'undefined') {\n            var temparg2 = arg2;\n            var charactersFitted = 0;\n            var linesFilled = 0;\n            return this.measureString(text, temparg2, charactersFitted, linesFilled);\n        }\n        else if (typeof text === 'string' && (arg2 instanceof PdfStringFormat || arg2 == null) && typeof arg3 === 'number' && typeof arg4 === 'number') {\n            var temparg2 = arg2;\n            return this.measureString(text, 0, temparg2, arg3, arg4);\n            // } else if (typeof text === 'string' && typeof arg2 === 'number' && typeof arg3 === 'undefined') {\n            //     return this.measureString(text, arg2, null);\n            // } else if (typeof text === 'string' && typeof arg2 === 'number' && (arg3 instanceof PdfStringFormat || arg3 == null) && typeof arg4 === 'undefined' && typeof arg5 === 'undefined') {\n            //     let temparg3 : PdfStringFormat = arg3 as PdfStringFormat;\n            //     let charactersFitted : number = 0;\n            //     let linesFilled : number = 0;\n            //     return this.measureString(text, arg2, temparg3, charactersFitted, linesFilled);\n        }\n        else if (typeof text === 'string' && typeof arg2 === 'number' && (arg3 instanceof PdfStringFormat || arg3 == null) && typeof arg4 === 'number' && typeof arg5 === 'number') {\n            var layoutArea = new SizeF(arg2, 0);\n            var temparg3 = arg3;\n            return this.measureString(text, layoutArea, temparg3, arg4, arg5);\n            // } else if (typeof text === 'string' && arg2 instanceof SizeF && typeof arg3 === 'undefined') {\n            //     return this.measureString(text, arg2, null);\n            // } else if (typeof text === 'string' && arg2 instanceof SizeF && (arg3 instanceof PdfStringFormat || arg3 == null) && typeof arg4 === 'undefined' && typeof arg5 === 'undefined') {\n            //     let temparg3 : PdfStringFormat = arg3 as PdfStringFormat;\n            //     let charactersFitted : number = 0;\n            //     let linesFilled : number = 0;\n            //     return this.measureString(text, arg2, temparg3, charactersFitted, linesFilled);\n        }\n        else {\n            if (text == null) {\n                throw Error(\"ArgumentNullException(\\\"text\\\")\");\n            }\n            var temparg2 = arg2;\n            var temparg3 = arg3;\n            var layouter = new PdfStringLayouter();\n            var result = layouter.layout(text, this, temparg3, temparg2, false, new SizeF(0, 0));\n            // arg4 = (result.Remainder == null) ? text.length : text.length - result.Remainder.length;\n            arg4 = text.length;\n            arg5 = (result.empty) ? 0 : result.lines.length;\n            return result.actualSize;\n        }\n    };\n    /* tslint:enable */\n    //IPdfCache Members\n    /**\n     * `Checks` whether the object is similar to another object.\n     * @private\n     */\n    PdfFont.prototype.equalsTo = function (obj) {\n        var result = this.equalsToFont(obj);\n        return result;\n    };\n    /**\n     * Returns `internals` of the object.\n     * @private\n     */\n    PdfFont.prototype.getInternals = function () {\n        return this.pdfFontInternals;\n    };\n    /**\n     * Sets `internals` to the object.\n     * @private\n     */\n    PdfFont.prototype.setInternals = function (internals) {\n        if (internals == null) {\n            throw new Error('ArgumentNullException:internals');\n        }\n        this.pdfFontInternals = internals;\n    };\n    /**\n     * Sets the `style` of the font.\n     * @private\n     */\n    PdfFont.prototype.setStyle = function (style) {\n        this.fontStyle = style;\n    };\n    /**\n     * Applies `settings` to the default line width.\n     * @private\n     */\n    PdfFont.prototype.applyFormatSettings = function (line, format, width) {\n        // if (line == null) {\n        //     throw new Error(`ArgumentNullException:line`);\n        // }\n        var realWidth = width;\n        if (format != null && width > 0) {\n            // Space among characters is not default.\n            if (format.characterSpacing !== 0) {\n                realWidth += (line.length - 1) * format.characterSpacing;\n            }\n            // Space among words is not default.\n            if (format.wordSpacing !== 0) {\n                var symbols = StringTokenizer.spaces;\n                var whitespacesCount = StringTokenizer.getCharsCount(line, symbols);\n                realWidth += whitespacesCount * format.wordSpacing;\n            }\n        }\n        return realWidth;\n    };\n    //Constants\n    /**\n     * `Multiplier` of the symbol width.\n     * @default 0.001\n     * @private\n     */\n    PdfFont.charSizeMultiplier = 0.001;\n    /**\n     * `Synchronization` object.\n     * @private\n     */\n    PdfFont.syncObject = new Object();\n    return PdfFont;\n}());\nexport { PdfFont };\n","/**\n * public Enum for `CompositeFontType`.\n * @private\n */\nexport var ObjectStatus;\n(function (ObjectStatus) {\n    /**\n     * Specifies the type of `None`.\n     * @private\n     */\n    ObjectStatus[ObjectStatus[\"None\"] = 0] = \"None\";\n    /**\n     * Specifies the type of `Registered`.\n     * @private\n     */\n    ObjectStatus[ObjectStatus[\"Registered\"] = 1] = \"Registered\";\n})(ObjectStatus || (ObjectStatus = {}));\n","/**\n * Used to `write a string` into output file.\n * @private\n */\nvar PdfWriter = /** @class */ (function () {\n    /**\n     * Initialize an instance of `PdfWriter` class.\n     * @private\n     */\n    function PdfWriter(stream) {\n        this.streamWriter = stream;\n    }\n    Object.defineProperty(PdfWriter.prototype, \"document\", {\n        //properties\n        /**\n         * Gets and Sets the `document`.\n         * @private\n         */\n        get: function () {\n            return this.pdfDocument;\n        },\n        set: function (value) {\n            this.pdfDocument = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWriter.prototype, \"position\", {\n        /**\n         * Gets the `position`.\n         * @private\n         */\n        get: function () {\n            return this.streamWriter.buffer.size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWriter.prototype, \"length\", {\n        /**\n         * Gets  the `length` of the stream'.\n         * @private\n         */\n        get: function () {\n            return this.streamWriter.buffer.size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWriter.prototype, \"stream\", {\n        /**\n         * Gets the `stream`.\n         * @private\n         */\n        get: function () {\n            var result = this.streamWriter;\n            return result;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //public Methods\n    /**\n     * `Writes the specified data`.\n     * @private\n     */\n    PdfWriter.prototype.write = function (overload) {\n        var data = [];\n        var tempOverload = overload;\n        this.streamWriter.write(tempOverload);\n    };\n    return PdfWriter;\n}());\nexport { PdfWriter };\n","/**\n * PdfMainObjectCollection.ts class for EJ2-PDF\n */\nimport { Dictionary } from './../collections/dictionary';\nimport { ObjectStatus } from './enum';\n/**\n * The collection of all `objects` within a PDF document.\n * @private\n */\nvar PdfMainObjectCollection = /** @class */ (function () {\n    function PdfMainObjectCollection() {\n        //Fields\n        /**\n         * The collection of the `indirect objects`.\n         * @default []\n         * @private\n         */\n        this.objectCollections = [];\n        /**\n         * The collection of the `Indirect objects`.\n         * @default new Dictionary<number, ObjectInfo>()\n         * @private\n         */\n        this.mainObjectCollection = new Dictionary();\n        /**\n         * The collection of `primitive objects`.\n         * @private\n         */\n        this.primitiveObjectCollection = new Dictionary();\n    }\n    Object.defineProperty(PdfMainObjectCollection.prototype, \"count\", {\n        //Properties\n        /**\n         * Gets the `count`.\n         * @private\n         */\n        get: function () {\n            return this.objectCollections.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the value of `ObjectInfo` from object collection.\n     * @private\n     */\n    PdfMainObjectCollection.prototype.items = function (index) {\n        return this.objectCollections[index];\n    };\n    Object.defineProperty(PdfMainObjectCollection.prototype, \"outIsNew\", {\n        //Methods\n        /**\n         * Specifies the value of `IsNew`.\n         * @private\n         */\n        get: function () {\n            return this.isNew;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Adds` the specified element.\n     * @private\n     */\n    PdfMainObjectCollection.prototype.add = function (element) {\n        var objInfo = new ObjectInfo(element);\n        this.objectCollections.push(objInfo);\n        if (!this.primitiveObjectCollection.containsKey(element)) {\n            this.primitiveObjectCollection.setValue(element, this.objectCollections.length - 1);\n        }\n        element.position = this.index = this.objectCollections.length - 1;\n        element.status = ObjectStatus.Registered;\n    };\n    /**\n     * `Looks` through the collection for the object specified.\n     * @private\n     */\n    PdfMainObjectCollection.prototype.lookFor = function (obj) {\n        var index = -1;\n        if (obj.position !== -1) {\n            return obj.position;\n        }\n        if (this.primitiveObjectCollection.containsKey(obj) && this.count === this.primitiveObjectCollection.size()) {\n            index = this.primitiveObjectCollection.getValue(obj);\n        }\n        else {\n            for (var i = this.count - 1; i >= 0; i--) {\n                var oi = this.objectCollections[i];\n                if (oi.object === obj) {\n                    index = i;\n                    break;\n                }\n            }\n        }\n        return index;\n    };\n    /**\n     * Gets the `reference of the object`.\n     * @private\n     */\n    PdfMainObjectCollection.prototype.getReference = function (index, isNew) {\n        this.index = this.lookFor(index);\n        var reference;\n        this.isNew = false;\n        var oi = this.objectCollections[this.index];\n        reference = oi.reference;\n        var obj = { reference: reference, wasNew: isNew };\n        return obj;\n    };\n    /**\n     * Tries to set the `reference to the object`.\n     * @private\n     */\n    PdfMainObjectCollection.prototype.trySetReference = function (obj, reference, found) {\n        var result = true;\n        found = true;\n        this.index = this.lookFor(obj);\n        var oi = this.objectCollections[this.index];\n        oi.setReference(reference);\n        return result;\n    };\n    PdfMainObjectCollection.prototype.destroy = function () {\n        for (var _i = 0, _a = this.objectCollections; _i < _a.length; _i++) {\n            var obj = _a[_i];\n            if (obj !== undefined) {\n                obj.pdfObject.position = -1;\n                obj.pdfObject.isSaving = undefined;\n                obj.pdfObject.objectCollectionIndex = undefined;\n                obj.pdfObject.position = undefined;\n            }\n        }\n        this.objectCollections = [];\n        this.mainObjectCollection = new Dictionary();\n        this.primitiveObjectCollection = new Dictionary();\n    };\n    return PdfMainObjectCollection;\n}());\nexport { PdfMainObjectCollection };\nvar ObjectInfo = /** @class */ (function () {\n    function ObjectInfo(obj, reference) {\n        this.pdfObject = obj;\n        this.pdfReference = reference;\n    }\n    Object.defineProperty(ObjectInfo.prototype, \"object\", {\n        //Properties\n        /**\n         * Gets the `object`.\n         * @private\n         */\n        get: function () {\n            return this.pdfObject;\n        },\n        set: function (value) {\n            this.pdfObject = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ObjectInfo.prototype, \"reference\", {\n        /**\n         * Gets the `reference`.\n         * @private\n         */\n        get: function () {\n            return this.pdfReference;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Sets the `reference`.\n     * @private\n     */\n    ObjectInfo.prototype.setReference = function (reference) {\n        this.pdfReference = reference;\n    };\n    return ObjectInfo;\n}());\nexport { ObjectInfo };\n","/**\n * public Enum for `ObjectType`.\n * @private\n */\nexport var ObjectType;\n(function (ObjectType) {\n    /**\n     * Specifies the type of `Free`.\n     * @private\n     */\n    ObjectType[ObjectType[\"Free\"] = 0] = \"Free\";\n    /**\n     * Specifies the type of `Normal`.\n     * @private\n     */\n    ObjectType[ObjectType[\"Normal\"] = 1] = \"Normal\";\n    /**\n     * Specifies the type of `Packed`.\n     * @private\n     */\n    ObjectType[ObjectType[\"Packed\"] = 2] = \"Packed\";\n})(ObjectType || (ObjectType = {}));\n","import { StreamWriter } from '@syncfusion/ej2-file-utils';\nimport { Encoding } from '@syncfusion/ej2-file-utils';\nimport { PdfDocument } from './pdf-document';\n/**\n * `PdfDocumentBase` class represent common properties of PdfDocument classes.\n * @private\n */\nvar PdfDocumentBase = /** @class */ (function () {\n    function PdfDocumentBase(document) {\n        /**\n         * If the stream is copied,  then it specifies true.\n         * @private\n         */\n        this.isStreamCopied = false;\n        if (document instanceof PdfDocument) {\n            this.document = document;\n        }\n    }\n    Object.defineProperty(PdfDocumentBase.prototype, \"pdfObjects\", {\n        //Prpperties\n        /**\n         * Gets the `PDF objects` collection, which stores all objects and references to it..\n         * @private\n         */\n        get: function () {\n            return this.objects;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentBase.prototype, \"crossTable\", {\n        /**\n         * Gets the `cross-reference` table.\n         * @private\n         */\n        get: function () {\n            return this.pdfCrossTable;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentBase.prototype, \"currentSavingObj\", {\n        /**\n         * Gets or sets the current saving `object number`.\n         * @private\n         */\n        get: function () {\n            return this.currentSavingObject;\n        },\n        set: function (value) {\n            this.currentSavingObject = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentBase.prototype, \"catalog\", {\n        /**\n         * Gets the PDF document `catalog`.\n         * @private\n         */\n        get: function () {\n            return this.pdfCatalog;\n        },\n        set: function (value) {\n            this.pdfCatalog = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Public methods\n    /**\n     * Sets the `main object collection`.\n     * @private\n     */\n    PdfDocumentBase.prototype.setMainObjectCollection = function (mainObjectCollection) {\n        this.objects = mainObjectCollection;\n    };\n    /**\n     * Sets the `cross table`.\n     * @private\n     */\n    PdfDocumentBase.prototype.setCrossTable = function (cTable) {\n        this.pdfCrossTable = cTable;\n    };\n    /**\n     * Sets the `catalog`.\n     * @private\n     */\n    PdfDocumentBase.prototype.setCatalog = function (catalog) {\n        this.pdfCatalog = catalog;\n    };\n    PdfDocumentBase.prototype.save = function (filename) {\n        var _this = this;\n        var encoding = new Encoding(true);\n        var SW = new StreamWriter(encoding);\n        if (typeof filename === 'undefined') {\n            var encoding_1 = new Encoding(true);\n            var SW_1 = new StreamWriter(encoding_1);\n            return new Promise(function (resolve, reject) {\n                /* tslint:disable-next-line:no-any */\n                var obj = {};\n                obj.blobData = new Blob([_this.document.docSave(SW_1, true)], { type: 'application/pdf' });\n                resolve(obj);\n            });\n        }\n        else {\n            this.document.docSave(SW, filename, true);\n        }\n    };\n    /**\n     * `Clone` of parent object - PdfDocument.\n     * @private\n     */\n    PdfDocumentBase.prototype.clone = function () {\n        return this.document;\n    };\n    return PdfDocumentBase;\n}());\nexport { PdfDocumentBase };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfCatalog.ts class for EJ2-PDF\n */\nimport { PdfDictionary } from './../primitives/pdf-dictionary';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\nimport { PdfName } from './../primitives/pdf-name';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\n/**\n * `PdfCatalog` class represents internal catalog of the Pdf document.\n * @private\n */\nvar PdfCatalog = /** @class */ (function (_super) {\n    __extends(PdfCatalog, _super);\n    //constructor\n    /**\n     * Initializes a new instance of the `PdfCatalog` class.\n     * @private\n     */\n    function PdfCatalog() {\n        var _this = _super.call(this) || this;\n        //fields\n        /**\n         * Internal variable to store collection of `sections`.\n         * @default null\n         * @private\n         */\n        _this.sections = null;\n        /**\n         * Internal variable for accessing fields from `DictionryProperties` class.\n         * @private\n         */\n        _this.tempDictionaryProperties = new DictionaryProperties();\n        _this.items.setValue(new DictionaryProperties().type, new PdfName('Catalog'));\n        return _this;\n    }\n    Object.defineProperty(PdfCatalog.prototype, \"pages\", {\n        //Properties\n        /**\n         * Gets or sets the sections, which contain `pages`.\n         * @private\n         */\n        get: function () {\n            return this.sections;\n        },\n        set: function (value) {\n            var dictionary = value.element;\n            // if (this.sections !== value) {\n            //     this.sections = value;\n            //     this.Items.setValue(this.tempDictionaryProperties.pages, new PdfReferenceHolder(value));\n            // }\n            this.sections = value;\n            this.items.setValue(this.tempDictionaryProperties.pages, new PdfReferenceHolder(value));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfCatalog;\n}(PdfDictionary));\nexport { PdfCatalog };\n","/**\n * public Enum for `PdfPageOrientation`.\n * @private\n */\nexport var PdfPageOrientation;\n(function (PdfPageOrientation) {\n    /**\n     * Specifies the type of `Portrait`.\n     * @private\n     */\n    PdfPageOrientation[PdfPageOrientation[\"Portrait\"] = 0] = \"Portrait\";\n    /**\n     * Specifies the type of `Landscape`.\n     * @private\n     */\n    PdfPageOrientation[PdfPageOrientation[\"Landscape\"] = 1] = \"Landscape\";\n})(PdfPageOrientation || (PdfPageOrientation = {}));\n/**\n * public Enum for `PdfPageRotateAngle`.\n * @private\n */\nexport var PdfPageRotateAngle;\n(function (PdfPageRotateAngle) {\n    /**\n     * Specifies the type of `RotateAngle0`.\n     * @private\n     */\n    PdfPageRotateAngle[PdfPageRotateAngle[\"RotateAngle0\"] = 0] = \"RotateAngle0\";\n    /**\n     * Specifies the type of `RotateAngle90`.\n     * @private\n     */\n    PdfPageRotateAngle[PdfPageRotateAngle[\"RotateAngle90\"] = 1] = \"RotateAngle90\";\n    /**\n     * Specifies the type of `RotateAngle180`.\n     * @private\n     */\n    PdfPageRotateAngle[PdfPageRotateAngle[\"RotateAngle180\"] = 2] = \"RotateAngle180\";\n    /**\n     * Specifies the type of `RotateAngle270`.\n     * @private\n     */\n    PdfPageRotateAngle[PdfPageRotateAngle[\"RotateAngle270\"] = 3] = \"RotateAngle270\";\n})(PdfPageRotateAngle || (PdfPageRotateAngle = {}));\n/**\n * public Enum for `PdfNumberStyle`.\n * @private\n */\nexport var PdfNumberStyle;\n(function (PdfNumberStyle) {\n    /**\n     * Specifies the type of `None`.\n     * @private\n     */\n    PdfNumberStyle[PdfNumberStyle[\"None\"] = 0] = \"None\";\n    /**\n     * Specifies the type of `Numeric`.\n     * @private\n     */\n    PdfNumberStyle[PdfNumberStyle[\"Numeric\"] = 1] = \"Numeric\";\n    /**\n     * Specifies the type of `LowerLatin`.\n     * @private\n     */\n    PdfNumberStyle[PdfNumberStyle[\"LowerLatin\"] = 2] = \"LowerLatin\";\n    /**\n     * Specifies the type of `LowerRoman`.\n     * @private\n     */\n    PdfNumberStyle[PdfNumberStyle[\"LowerRoman\"] = 3] = \"LowerRoman\";\n    /**\n     * Specifies the type of `UpperLatin`.\n     * @private\n     */\n    PdfNumberStyle[PdfNumberStyle[\"UpperLatin\"] = 4] = \"UpperLatin\";\n    /**\n     * Specifies the type of `UpperRoman`.\n     * @private\n     */\n    PdfNumberStyle[PdfNumberStyle[\"UpperRoman\"] = 5] = \"UpperRoman\";\n})(PdfNumberStyle || (PdfNumberStyle = {}));\n/**\n * public Enum for `PdfDockStyle`.\n * @private\n */\nexport var PdfDockStyle;\n(function (PdfDockStyle) {\n    /**\n     * Specifies the type of `None`.\n     * @private\n     */\n    PdfDockStyle[PdfDockStyle[\"None\"] = 0] = \"None\";\n    /**\n     * Specifies the type of `Bottom`.\n     * @private\n     */\n    PdfDockStyle[PdfDockStyle[\"Bottom\"] = 1] = \"Bottom\";\n    /**\n     * Specifies the type of `Top`.\n     * @private\n     */\n    PdfDockStyle[PdfDockStyle[\"Top\"] = 2] = \"Top\";\n    /**\n     * Specifies the type of `Left`.\n     * @private\n     */\n    PdfDockStyle[PdfDockStyle[\"Left\"] = 3] = \"Left\";\n    /**\n     * Specifies the type of `Right`.\n     * @private\n     */\n    PdfDockStyle[PdfDockStyle[\"Right\"] = 4] = \"Right\";\n    /**\n     * Specifies the type of `Fill`.\n     * @private\n     */\n    PdfDockStyle[PdfDockStyle[\"Fill\"] = 5] = \"Fill\";\n})(PdfDockStyle || (PdfDockStyle = {}));\n/**\n * public Enum for `PdfAlignmentStyle`.\n * @private\n */\nexport var PdfAlignmentStyle;\n(function (PdfAlignmentStyle) {\n    /**\n     * Specifies the type of `None`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"None\"] = 0] = \"None\";\n    /**\n     * Specifies the type of `TopLeft`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"TopLeft\"] = 1] = \"TopLeft\";\n    /**\n     * Specifies the type of `TopCenter`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"TopCenter\"] = 2] = \"TopCenter\";\n    /**\n     * Specifies the type of `TopRight`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"TopRight\"] = 3] = \"TopRight\";\n    /**\n     * Specifies the type of `MiddleLeft`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"MiddleLeft\"] = 4] = \"MiddleLeft\";\n    /**\n     * Specifies the type of `MiddleCenter`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"MiddleCenter\"] = 5] = \"MiddleCenter\";\n    /**\n     * Specifies the type of `MiddleRight`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"MiddleRight\"] = 6] = \"MiddleRight\";\n    /**\n     * Specifies the type of `BottomLeft`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"BottomLeft\"] = 7] = \"BottomLeft\";\n    /**\n     * Specifies the type of `BottomCenter`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"BottomCenter\"] = 8] = \"BottomCenter\";\n    /**\n     * Specifies the type of `BottomRight`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"BottomRight\"] = 9] = \"BottomRight\";\n})(PdfAlignmentStyle || (PdfAlignmentStyle = {}));\n/**\n * public Enum for `TemplateType`.\n * @private\n */\nexport var TemplateType;\n(function (TemplateType) {\n    /**\n     * Specifies the type of `None`.\n     * @private\n     */\n    TemplateType[TemplateType[\"None\"] = 0] = \"None\";\n    /**\n     * Specifies the type of `Top`.\n     * @private\n     */\n    TemplateType[TemplateType[\"Top\"] = 1] = \"Top\";\n    /**\n     * Specifies the type of `Bottom`.\n     * @private\n     */\n    TemplateType[TemplateType[\"Bottom\"] = 2] = \"Bottom\";\n    /**\n     * Specifies the type of `Left`.\n     * @private\n     */\n    TemplateType[TemplateType[\"Left\"] = 3] = \"Left\";\n    /**\n     * Specifies the type of `Right`.\n     * @private\n     */\n    TemplateType[TemplateType[\"Right\"] = 4] = \"Right\";\n})(TemplateType || (TemplateType = {}));\n","import { ObjectStatus } from './../input-output/enum';\nimport { PdfDictionary } from './../primitives/pdf-dictionary';\nimport { DictionaryProperties } from './pdf-dictionary-properties';\nimport { Operators } from './pdf-operators';\nimport { Dictionary } from './../collections/dictionary';\nimport { PdfReference } from './../primitives/pdf-reference';\nimport { ObjectType } from './cross-table';\nimport { PdfStream } from './../primitives/pdf-stream';\nimport { PdfNumber } from './../primitives/pdf-number';\nimport { PdfCatalog } from './../document/pdf-catalog';\n/**\n * `PdfCrossTable` is responsible for intermediate level parsing\n * and savingof a PDF document.\n * @private\n */\nvar PdfCrossTable = /** @class */ (function () {\n    function PdfCrossTable() {\n        /**\n         * The modified `objects` that should be saved.\n         * @private\n         */\n        this.objects = new Dictionary();\n        /**\n         * Holds `maximal generation number` or offset to object.\n         * @default 0\n         * @private\n         */\n        this.maxGenNumIndex = 0;\n        /**\n         * The `number of the objects`.\n         * @default 0\n         * @private\n         */\n        this.objectCount = 0;\n        /**\n         * Internal variable for accessing fields from `DictionryProperties` class.\n         * @default new PdfDictionaryProperties()\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n    }\n    Object.defineProperty(PdfCrossTable.prototype, \"isMerging\", {\n        //Properties\n        /**\n         * Gets or sets if the document `is merged`.\n         * @private\n         */\n        get: function () {\n            return this.merging;\n        },\n        set: function (value) {\n            this.merging = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCrossTable.prototype, \"trailer\", {\n        /**\n         * Gets the `trailer`.\n         * @private\n         */\n        get: function () {\n            if (this.internalTrailer == null) {\n                this.internalTrailer = new PdfStream();\n            }\n            return this.internalTrailer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCrossTable.prototype, \"document\", {\n        /**\n         * Gets or sets the main `PdfDocument` class instance.\n         * @private\n         */\n        get: function () {\n            return this.pdfDocument;\n        },\n        set: function (value) {\n            this.pdfDocument = value;\n            this.items = this.pdfDocument.pdfObjects;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCrossTable.prototype, \"pdfObjects\", {\n        /**\n         * Gets the catched `PDF object` main collection.\n         * @private\n         */\n        get: function () {\n            return this.items;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCrossTable.prototype, \"objectCollection\", {\n        /**\n         * Gets the `object collection`.\n         * @private\n         */\n        get: function () {\n            return this.pdfDocument.pdfObjects;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCrossTable.prototype, \"count\", {\n        /**\n         * Gets or sets the `number of the objects` within the document.\n         * @private\n         */\n        get: function () {\n            return this.objectCount;\n        },\n        set: function (value) {\n            this.objectCount = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCrossTable.prototype, \"nextObjNumber\", {\n        /**\n         * Returns `next available object number`.\n         * @private\n         */\n        get: function () {\n            this.count = this.count + 1;\n            return this.count;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfCrossTable.prototype.save = function (writer, filename) {\n        this.saveHead(writer);\n        var state = false;\n        this.mappedReferences = null;\n        this.objects.clear();\n        this.markTrailerReferences();\n        this.saveObjects(writer);\n        var saveCount = this.count;\n        var xrefPos = writer.position;\n        this.registerObject(0, new PdfReference(0, -1), true);\n        var prevXRef = 0;\n        writer.write(Operators.xref);\n        writer.write(Operators.newLine);\n        this.saveSections(writer);\n        this.saveTrailer(writer, this.count, prevXRef);\n        this.saveTheEndess(writer, xrefPos);\n        this.count = saveCount;\n        for (var i = 0; i < this.objectCollection.count; ++i) {\n            var oi = this.objectCollection.items(i);\n            oi.object.isSaving = false;\n        }\n        if (typeof filename === 'undefined') {\n            return writer.stream.buffer;\n        }\n        else {\n            writer.stream.save(filename);\n        }\n    };\n    /**\n     * `Saves the endess` of the file.\n     * @private\n     */\n    PdfCrossTable.prototype.saveTheEndess = function (writer, xrefPos) {\n        writer.write(Operators.newLine + Operators.startxref + Operators.newLine);\n        writer.write(xrefPos.toString() + Operators.newLine);\n        writer.write(Operators.eof + Operators.newLine);\n    };\n    /**\n     * `Saves the new trailer` dictionary.\n     * @private\n     */\n    PdfCrossTable.prototype.saveTrailer = function (writer, count, prevXRef) {\n        writer.write(Operators.trailer + Operators.newLine);\n        // Save the dictionary.\n        var trailer = this.trailer;\n        trailer.items.setValue(this.dictionaryProperties.size, new PdfNumber(this.objectCount + 1));\n        trailer = new PdfDictionary(trailer); // Make it real dictionary.\n        trailer.setEncrypt(false);\n        trailer.save(writer);\n    };\n    /**\n     * `Saves the xref section`.\n     * @private\n     */\n    PdfCrossTable.prototype.saveSections = function (writer) {\n        var objectNum = 0;\n        var count = 0;\n        do {\n            count = this.prepareSubsection(objectNum);\n            this.saveSubsection(writer, objectNum, count);\n            objectNum += count;\n        } while (count !== 0);\n    };\n    /**\n     * `Saves a subsection`.\n     * @private\n     */\n    PdfCrossTable.prototype.saveSubsection = function (writer, objectNum, count) {\n        if (count <= 0 || objectNum >= this.count) {\n            return;\n        }\n        var subsectionHead = '{0} {1}{2}';\n        writer.write(objectNum + ' ' + (count + 1) + Operators.newLine);\n        for (var i = objectNum; i <= objectNum + count; ++i) {\n            var obj = this.objects.getValue(i);\n            var str = '';\n            if (obj.type === ObjectType.Free) {\n                str = this.getItem(obj.offset, 65535, true);\n            }\n            else {\n                str = this.getItem(obj.offset, obj.generation, false);\n            }\n            writer.write(str);\n        }\n    };\n    /**\n     * Generates string for `xref table item`.\n     * @private\n     */\n    PdfCrossTable.prototype.getItem = function (offset, genNumber, isFree) {\n        var returnString = '';\n        var addOffsetLength = 10 - offset.toString().length;\n        if (genNumber <= 0) {\n            genNumber = 0;\n        }\n        var addGenNumberLength = (5 - genNumber.toString().length) <= 0 ? 0 : (5 - genNumber.toString().length);\n        for (var index = 0; index < addOffsetLength; index++) {\n            returnString = returnString + '0';\n        }\n        returnString = returnString + offset.toString() + ' ';\n        for (var index = 0; index < addGenNumberLength; index++) {\n            returnString = returnString + '0';\n        }\n        returnString = returnString + genNumber.toString() + ' ';\n        returnString = returnString + ((isFree) ? Operators.f : Operators.n) + Operators.newLine;\n        return returnString;\n    };\n    /**\n     * `Prepares a subsection` of the current section within the cross-reference table.\n     * @private\n     */\n    PdfCrossTable.prototype.prepareSubsection = function (objectNum) {\n        var count = 0;\n        var i;\n        var total = this.count;\n        for (var k = 0; k < this.document.pdfObjects.count; k++) {\n            var reference = this.document.pdfObjects.items(k).reference;\n            var refString = reference.toString();\n            var refArray = refString.split(' ');\n        }\n        if (objectNum >= total) {\n            return count;\n        }\n        // search for first changed indirect object.\n        for (i = objectNum; i < total; ++i) {\n            break;\n        }\n        objectNum = i;\n        // look up for all indirect objects in one subsection.\n        for (; i < total; ++i) {\n            ++count;\n        }\n        return count;\n    };\n    /**\n     * `Marks the trailer references` being saved.\n     * @private\n     */\n    PdfCrossTable.prototype.markTrailerReferences = function () {\n        var tempArray;\n        var keys = this.trailer.items.keys();\n        var values = this.trailer.items.values();\n    };\n    /**\n     * `Saves the head`.\n     * @private\n     */\n    PdfCrossTable.prototype.saveHead = function (writer) {\n        var version = this.generateFileVersion(writer.document);\n        writer.write('%PDF-' + version);\n        writer.write(Operators.newLine);\n    };\n    /**\n     * Generates the `version` of the file.\n     * @private\n     */\n    PdfCrossTable.prototype.generateFileVersion = function (document) {\n        var iVersion = 4;\n        var version = '1.' + iVersion.toString();\n        return version;\n    };\n    PdfCrossTable.prototype.getReference = function (obj, bNew) {\n        if (typeof bNew === 'undefined') {\n            var wasNew = false;\n            return this.getReference(obj, wasNew);\n        }\n        else {\n            //code splitted for reducing lines of code exceeds 100.\n            return this.getSubReference(obj, bNew);\n        }\n    };\n    /**\n     * Retrieves the `reference` of the object given.\n     * @private\n     */\n    PdfCrossTable.prototype.getSubReference = function (obj, bNew) {\n        var isNew = false;\n        var wasNew;\n        var reference = null;\n        // if (obj.IsSaving) {\n        if (this.items.count > 0 && obj.objectCollectionIndex > 0 && this.items.count > obj.objectCollectionIndex - 1) {\n            var tempObj = this.document.pdfObjects.getReference(obj, wasNew);\n            reference = tempObj.reference;\n            wasNew = tempObj.wasNew;\n        }\n        if (reference == null) {\n            if (obj.status === ObjectStatus.Registered) {\n                wasNew = false;\n            }\n            else {\n                wasNew = true;\n            }\n        }\n        else {\n            wasNew = false;\n        }\n        // need to add mapped reference code\n        if (reference == null) {\n            var objnumber = this.nextObjNumber;\n            reference = new PdfReference(objnumber, 0);\n            var found = void 0;\n            if (wasNew) {\n                this.document.pdfObjects.add(obj);\n                this.document.pdfObjects.trySetReference(obj, reference, found);\n                var tempIndex = this.document.pdfObjects.count - 1;\n                var tempkey = this.document.pdfObjects.objectCollections[tempIndex].reference.objNumber;\n                var tempvalue = this.document.pdfObjects.objectCollections[this.document.pdfObjects.count - 1];\n                this.document.pdfObjects.mainObjectCollection.setValue(tempkey, tempvalue);\n                obj.position = -1;\n            }\n            else {\n                this.document.pdfObjects.trySetReference(obj, reference, found);\n            }\n            obj.objectCollectionIndex = reference.objNumber;\n            obj.status = ObjectStatus.None;\n            isNew = true;\n        }\n        bNew = isNew || this.bForceNew;\n        return reference;\n    };\n    /**\n     * `Saves all objects` in the collection.\n     * @private\n     */\n    PdfCrossTable.prototype.saveObjects = function (writer) {\n        var objectCollection = this.objectCollection;\n        for (var i = 0; i < objectCollection.count; ++i) {\n            var oi = objectCollection.items(i);\n            var obj = oi.object;\n            obj.isSaving = true;\n            this.saveIndirectObject(obj, writer);\n        }\n    };\n    /**\n     * `Saves indirect object`.\n     * @private\n     */\n    PdfCrossTable.prototype.saveIndirectObject = function (obj, writer) {\n        var reference = this.getReference(obj);\n        if (obj instanceof PdfCatalog) {\n            this.trailer.items.setValue(this.dictionaryProperties.root, reference);\n        }\n        // NOTE :  This is needed for correct string objects encryption.\n        this.pdfDocument.currentSavingObj = reference;\n        var tempArchive = false;\n        tempArchive = obj.getArchive();\n        var allowedType = !((obj instanceof PdfStream) || !tempArchive || (obj instanceof PdfCatalog));\n        var sigFlag = false;\n        this.registerObject(writer.position, reference);\n        this.doSaveObject(obj, reference, writer);\n    };\n    /**\n     * Performs `real saving` of the save object.\n     * @private\n     */\n    PdfCrossTable.prototype.doSaveObject = function (obj, reference, writer) {\n        var correctPosition = writer.length;\n        writer.write(reference.objNumber.toString());\n        writer.write(Operators.whiteSpace);\n        writer.write(reference.genNumber.toString());\n        writer.write(Operators.whiteSpace);\n        writer.write(Operators.obj);\n        writer.write(Operators.newLine);\n        obj.save(writer);\n        var stream = writer.stream;\n        writer.write(Operators.endObj);\n        writer.write(Operators.newLine);\n    };\n    PdfCrossTable.prototype.registerObject = function (offset, reference, free) {\n        if (typeof free === 'boolean') {\n            // Register the object by its number.\n            this.objects.setValue(reference.objNumber, new RegisteredObject(offset, reference, free));\n            this.maxGenNumIndex = Math.max(this.maxGenNumIndex, reference.genNumber);\n        }\n        else if (typeof free === 'undefined') {\n            // Register the object by its number.\n            this.objects.setValue(reference.objNumber, new RegisteredObject(offset, reference));\n            this.maxGenNumIndex = Math.max(this.maxGenNumIndex, reference.genNumber);\n        }\n    };\n    /**\n     * `Dereferences` the specified primitive object.\n     * @private\n     */\n    PdfCrossTable.dereference = function (obj) {\n        var rh = obj;\n        if (rh != null) {\n            obj = rh.object;\n        }\n        return obj;\n    };\n    return PdfCrossTable;\n}());\nexport { PdfCrossTable };\nvar RegisteredObject = /** @class */ (function () {\n    function RegisteredObject(offset, reference, free) {\n        if (typeof free === 'undefined') {\n            var tempOffset = offset;\n            this.offsetNumber = tempOffset;\n            var tempReference = reference;\n            this.generation = tempReference.genNumber;\n            this.object = tempReference.objNumber;\n            this.type = ObjectType.Normal;\n        }\n        else {\n            var tempOffset = offset;\n            var tempReference = reference;\n            this.constructor(tempOffset, tempReference);\n            var tempFree = free;\n            this.type = ObjectType.Free;\n        }\n    }\n    Object.defineProperty(RegisteredObject.prototype, \"objectNumber\", {\n        //Properties\n        /**\n         * Gets the `object number`.\n         * @private\n         */\n        get: function () {\n            return this.object;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RegisteredObject.prototype, \"offset\", {\n        /**\n         * Gets the `offset`.\n         * @private\n         */\n        get: function () {\n            var result;\n            result = this.offsetNumber;\n            return result;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return RegisteredObject;\n}());\nexport { RegisteredObject };\n","/**\n * PdfPageSize.ts class for EJ2-PDF\n */\nimport { SizeF } from './../drawing/pdf-drawing';\n/**\n * Represents information about various predefined `page sizes`.\n */\nvar PdfPageSize = /** @class */ (function () {\n    //constructor\n    /**\n     * Initialize an instance for `PdfPageSize` class.\n     * @private\n     */\n    function PdfPageSize() {\n        // \n    }\n    /**\n     * Specifies the size of `letter`.\n     * @private\n     */\n    PdfPageSize.letter = new SizeF(612, 792);\n    /**\n     * Specifies the size of `note`.\n     * @private\n     */\n    PdfPageSize.note = new SizeF(540, 720);\n    /**\n     * Specifies the size of `legal`.\n     * @private\n     */\n    PdfPageSize.legal = new SizeF(612, 1008);\n    /**\n     * Specifies the size of `a0`.\n     * @private\n     */\n    PdfPageSize.a0 = new SizeF(2380, 3368);\n    /**\n     * Specifies the size of `a1`.\n     * @private\n     */\n    PdfPageSize.a1 = new SizeF(1684, 2380);\n    /**\n     * Specifies the size of `a2`.\n     * @private\n     */\n    PdfPageSize.a2 = new SizeF(1190, 1684);\n    /**\n     * Specifies the size of `a3`.\n     * @private\n     */\n    PdfPageSize.a3 = new SizeF(842, 1190);\n    /**\n     * Specifies the size of `a4`.\n     * @private\n     */\n    PdfPageSize.a4 = new SizeF(595, 842);\n    /**\n     * Specifies the size of `a5`.\n     * @private\n     */\n    PdfPageSize.a5 = new SizeF(421, 595);\n    /**\n     * Specifies the size of `a6`.\n     * @private\n     */\n    PdfPageSize.a6 = new SizeF(297, 421);\n    /**\n     * Specifies the size of `a7`.\n     * @private\n     */\n    PdfPageSize.a7 = new SizeF(210, 297);\n    /**\n     * Specifies the size of `a8`.\n     * @private\n     */\n    PdfPageSize.a8 = new SizeF(148, 210);\n    /**\n     * Specifies the size of `a9`.\n     * @private\n     */\n    PdfPageSize.a9 = new SizeF(105, 148);\n    /**\n     * Specifies the size of `a10`.\n     * @private\n     */\n    PdfPageSize.a10 = new SizeF(74, 105);\n    /**\n     * Specifies the size of `b0`.\n     * @private\n     */\n    PdfPageSize.b0 = new SizeF(2836, 4008);\n    /**\n     * Specifies the size of `b1`.\n     * @private\n     */\n    PdfPageSize.b1 = new SizeF(2004, 2836);\n    /**\n     * Specifies the size of `b2`.\n     * @private\n     */\n    PdfPageSize.b2 = new SizeF(1418, 2004);\n    /**\n     * Specifies the size of `b3`.\n     * @private\n     */\n    PdfPageSize.b3 = new SizeF(1002, 1418);\n    /**\n     * Specifies the size of `b4`.\n     * @private\n     */\n    PdfPageSize.b4 = new SizeF(709, 1002);\n    /**\n     * Specifies the size of `b5`.\n     * @private\n     */\n    PdfPageSize.b5 = new SizeF(501, 709);\n    /**\n     * Specifies the size of `archE`.\n     * @private\n     */\n    PdfPageSize.archE = new SizeF(2592, 3456);\n    /**\n     * Specifies the size of `archD`.\n     * @private\n     */\n    PdfPageSize.archD = new SizeF(1728, 2592);\n    /**\n     * Specifies the size of `archC`.\n     * @private\n     */\n    PdfPageSize.archC = new SizeF(1296, 1728);\n    /**\n     * Specifies the size of `archB`.\n     * @private\n     */\n    PdfPageSize.archB = new SizeF(864, 1296);\n    /**\n     * Specifies the size of `archA`.\n     * @private\n     */\n    PdfPageSize.archA = new SizeF(648, 864);\n    /**\n     * Specifies the size of `flsa`.\n     * @private\n     */\n    PdfPageSize.flsa = new SizeF(612, 936);\n    /**\n     * Specifies the size of `halfLetter`.\n     * @private\n     */\n    PdfPageSize.halfLetter = new SizeF(396, 612);\n    /**\n     * Specifies the size of `letter11x17`.\n     * @private\n     */\n    PdfPageSize.letter11x17 = new SizeF(792, 1224);\n    /**\n     * Specifies the size of `ledger`.\n     * @private\n     */\n    PdfPageSize.ledger = new SizeF(1224, 792);\n    return PdfPageSize;\n}());\nexport { PdfPageSize };\n","/**\n * PdfMargins.ts class for EJ2-PDF\n * A class representing PDF page margins.\n */\nvar PdfMargins = /** @class */ (function () {\n    /**\n     * Initializes a new instance of the `PdfMargins` class.\n     * @private\n     */\n    function PdfMargins() {\n        /**\n         * Represents the `Default Page Margin` value.\n         * @default 0.0\n         * @private\n         */\n        this.pdfMargin = 40.0;\n        this.setMargins(this.pdfMargin);\n    }\n    Object.defineProperty(PdfMargins.prototype, \"left\", {\n        //Properties\n        /**\n         * Gets or sets the `left margin` size.\n         * @private\n         */\n        get: function () {\n            return this.leftMargin;\n        },\n        set: function (value) {\n            this.leftMargin = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfMargins.prototype, \"top\", {\n        /**\n         * Gets or sets the `top margin` size.\n         * @private\n         */\n        get: function () {\n            return this.topMargin;\n        },\n        set: function (value) {\n            this.topMargin = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfMargins.prototype, \"right\", {\n        /**\n         * Gets or sets the `right margin` size.\n         * @private\n         */\n        get: function () {\n            return this.rightMargin;\n        },\n        set: function (value) {\n            this.rightMargin = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfMargins.prototype, \"bottom\", {\n        /**\n         * Gets or sets the `bottom margin` size.\n         * @private\n         */\n        get: function () {\n            return this.bottomMargin;\n        },\n        set: function (value) {\n            this.bottomMargin = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfMargins.prototype, \"all\", {\n        /**\n         * Sets the `margins`.\n         * @private\n         */\n        set: function (value) {\n            this.setMargins(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfMargins.prototype.setMargins = function (margin1, margin2, margin3, margin4) {\n        if (typeof margin2 === 'undefined') {\n            this.leftMargin = this.topMargin = this.rightMargin = this.bottomMargin = margin1;\n        }\n        else {\n            if (typeof margin3 === 'undefined') {\n                this.leftMargin = this.rightMargin = margin1;\n                this.bottomMargin = this.topMargin = margin2;\n            }\n            else {\n                this.leftMargin = margin1;\n                this.topMargin = margin2;\n                this.rightMargin = margin3;\n                this.bottomMargin = margin4;\n            }\n        }\n    };\n    /**\n     * `Clones` the object.\n     * @private\n     */\n    PdfMargins.prototype.clone = function () {\n        return this;\n    };\n    return PdfMargins;\n}());\nexport { PdfMargins };\n","/**\n * ImageDecoder class\n */\nimport { ByteArray } from './byte-array';\nimport { PdfStream } from './../../primitives/pdf-stream';\nimport { DictionaryProperties } from './../../input-output/pdf-dictionary-properties';\nimport { PdfName } from './../../primitives/pdf-name';\nimport { PdfNumber } from './../../primitives/pdf-number';\nimport { PdfBoolean } from './../../primitives/pdf-boolean';\nimport { PdfDictionary } from './../../primitives/pdf-dictionary';\n/**\n * Specifies the image `format`.\n * @private\n */\nexport var ImageFormat;\n(function (ImageFormat) {\n    /**\n     * Specifies the type of `Unknown`.\n     * @hidden\n     * @private\n     */\n    ImageFormat[ImageFormat[\"Unknown\"] = 0] = \"Unknown\";\n    /**\n     * Specifies the type of `Bmp`.\n     * @hidden\n     * @private\n     */\n    ImageFormat[ImageFormat[\"Bmp\"] = 1] = \"Bmp\";\n    /**\n     * Specifies the type of `Emf`.\n     * @hidden\n     * @private\n     */\n    ImageFormat[ImageFormat[\"Emf\"] = 2] = \"Emf\";\n    /**\n     * Specifies the type of `Gif`.\n     * @hidden\n     * @private\n     */\n    ImageFormat[ImageFormat[\"Gif\"] = 3] = \"Gif\";\n    /**\n     * Specifies the type of `Jpeg`.\n     * @hidden\n     * @private\n     */\n    ImageFormat[ImageFormat[\"Jpeg\"] = 4] = \"Jpeg\";\n    /**\n     * Specifies the type of `Png`.\n     * @hidden\n     * @private\n     */\n    ImageFormat[ImageFormat[\"Png\"] = 5] = \"Png\";\n    /**\n     * Specifies the type of `Wmf`.\n     * @hidden\n     * @private\n     */\n    ImageFormat[ImageFormat[\"Wmf\"] = 6] = \"Wmf\";\n    /**\n     * Specifies the type of `Icon`.\n     * @hidden\n     * @private\n     */\n    ImageFormat[ImageFormat[\"Icon\"] = 7] = \"Icon\";\n})(ImageFormat || (ImageFormat = {}));\n/**\n * `Decode the image stream`.\n * @private\n */\nvar ImageDecoder = /** @class */ (function () {\n    /**\n     * Initialize the new instance for `image-decoder` class.\n     * @private\n     */\n    function ImageDecoder(stream) {\n        /**\n         * Specifies `format` of image.\n         * @hidden\n         * @private\n         */\n        this.mFormat = ImageFormat.Unknown;\n        /**\n         * `Bits per component`.\n         * @default 8\n         * @hidden\n         * @private\n         */\n        this.mbitsPerComponent = 8;\n        /**\n         * Internal variable for accessing fields from `DictionryProperties` class.\n         * @hidden\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        this.mStream = stream;\n        this.initialize();\n    }\n    Object.defineProperty(ImageDecoder.prototype, \"height\", {\n        /**\n         * Gets the `height` of image.\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.mHeight;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ImageDecoder.prototype, \"width\", {\n        /**\n         * Gets the `width` of image.\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.mWidth;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ImageDecoder.prototype, \"bitsPerComponent\", {\n        /**\n         * Gets `bits per component`.\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.mbitsPerComponent;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ImageDecoder.prototype, \"size\", {\n        /**\n         * Gets the `size` of an image data.\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.mImageData.count;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ImageDecoder.prototype, \"imageData\", {\n        /**\n         * Gets the value of an `image data`.\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.mImageData;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ImageDecoder.prototype, \"imageDataAsNumberArray\", {\n        /**\n         * Gets the value of an `image data as number array`.\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.mImageData.internalBuffer.buffer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Initialize` image data and image stream.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.initialize = function () {\n        if (this.mFormat === ImageFormat.Unknown && this.checkIfJpeg()) {\n            this.mFormat = ImageFormat.Jpeg;\n            this.parseJpegImage();\n        }\n        this.reset();\n        this.mImageData = new ByteArray(this.mStream.count);\n        this.mStream.read(this.mImageData, 0, this.mImageData.count);\n    };\n    /**\n     * `Reset` stream position into 0.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.reset = function () {\n        this.mStream.position = 0;\n    };\n    /**\n     * `Parse` Jpeg image.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.parseJpegImage = function () {\n        this.reset();\n        var imgData = new ByteArray(this.mStream.count);\n        this.mStream.read(imgData, 0, imgData.count);\n        var i = 4;\n        /* tslint:disable */\n        if (String.fromCharCode(imgData.getBuffer(i + 2)) === 'J' && String.fromCharCode(imgData.getBuffer(i + 3)) === 'F' && String.fromCharCode(imgData.getBuffer(i + 4)) === 'I' && String.fromCharCode(imgData.getBuffer(i + 5)) === 'F' && imgData.getBuffer(i + 6) === 0) {\n            var length_1 = imgData.getBuffer(i) * 256 + imgData.getBuffer(i + 1);\n            while (i + length_1 < imgData.count) {\n                i += length_1;\n                if (imgData.getBuffer(i + 1) === 192) {\n                    this.mHeight = imgData.getBuffer(i + 5) * 256 + imgData.getBuffer(i + 6);\n                    this.mWidth = imgData.getBuffer(i + 7) * 256 + imgData.getBuffer(i + 8);\n                    return;\n                }\n                else {\n                    i += 2;\n                    length_1 = imgData.getBuffer(i) * 256 + imgData.getBuffer(i + 1);\n                }\n            }\n        }\n        /* tslint:enable */\n    };\n    Object.defineProperty(ImageDecoder.prototype, \"format\", {\n        /**\n         * Gets the image `format`.\n         * @private\n         * @hidden\n         */\n        get: function () {\n            return this.mFormat;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Checks if JPG`.\n     * @private\n     * @hidden\n     */\n    ImageDecoder.prototype.checkIfJpeg = function () {\n        this.reset();\n        for (var i = 0; i < ImageDecoder.mJpegHeader.length; i++) {\n            if (ImageDecoder.mJpegHeader[i] !== this.mStream.readByte(i)) {\n                return false;\n            }\n            this.mStream.position++;\n        }\n        return true;\n    };\n    /**\n     * Return image `dictionary`.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.getImageDictionary = function () {\n        if (this.mFormat === ImageFormat.Jpeg) {\n            var tempArrayBuffer = this.imageData.internalBuffer.length;\n            this.imageStream = new PdfStream();\n            this.imageStream.isImage = true;\n            var tempString = '';\n            var decodedString = '';\n            for (var i = 0; i < this.imageDataAsNumberArray.byteLength; i++) {\n                tempString += String.fromCharCode(null, this.mStream.readByte(i));\n            }\n            for (var i = 0; i < tempString.length; i++) {\n                if (i % 2 !== 0) {\n                    decodedString += tempString[i];\n                }\n            }\n            this.imageStream.data = [decodedString];\n            this.imageStream.compress = false;\n            this.imageStream.items.setValue(this.dictionaryProperties.type, new PdfName(this.dictionaryProperties.xObject));\n            this.imageStream.items.setValue(this.dictionaryProperties.subtype, new PdfName(this.dictionaryProperties.image));\n            this.imageStream.items.setValue(this.dictionaryProperties.width, new PdfNumber(this.width));\n            this.imageStream.items.setValue(this.dictionaryProperties.height, new PdfNumber(this.height));\n            this.imageStream.items.setValue(this.dictionaryProperties.bitsPerComponent, new PdfNumber(this.bitsPerComponent));\n            this.imageStream.items.setValue(this.dictionaryProperties.filter, new PdfName(this.dictionaryProperties.dctdecode));\n            this.imageStream.items.setValue(this.dictionaryProperties.colorSpace, new PdfName(this.getColorSpace()));\n            this.imageStream.items.setValue(this.dictionaryProperties.decodeParms, this.getDecodeParams());\n            return this.imageStream;\n        }\n        else {\n            return this.imageStream;\n        }\n    };\n    /**\n     * Return `colorSpace` of an image.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.getColorSpace = function () {\n        return this.dictionaryProperties.deviceRgb;\n    };\n    /**\n     * Return `decode parameters` of an image.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.getDecodeParams = function () {\n        var decodeParams = new PdfDictionary();\n        decodeParams.items.setValue(this.dictionaryProperties.columns, new PdfNumber(this.width));\n        decodeParams.items.setValue(this.dictionaryProperties.blackIs1, new PdfBoolean(true));\n        decodeParams.items.setValue(this.dictionaryProperties.k, new PdfNumber(-1));\n        decodeParams.items.setValue(this.dictionaryProperties.predictor, new PdfNumber(15));\n        decodeParams.items.setValue(this.dictionaryProperties.bitsPerComponent, new PdfNumber(this.bitsPerComponent));\n        return decodeParams;\n    };\n    /**\n     * Number array for `png header`.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.mPngHeader = [137, 80, 78, 71, 13, 10, 26, 10];\n    /**\n     * Number Array for `jpeg header`.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.mJpegHeader = [255, 216];\n    /**\n     * Number array for `gif header`.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.GIF_HEADER = 'G,I,F,8';\n    /**\n     * Number array for `bmp header.`\n     * @hidden\n     * @private\n     */\n    ImageDecoder.BMP_HEADER = 'B,M';\n    return ImageDecoder;\n}());\nexport { ImageDecoder };\n","/**\n * PdfPageSettings.ts class for EJ2-PDF\n */\nimport { SizeF, PointF } from './../drawing/pdf-drawing';\nimport { PdfPageSize } from './pdf-page-size';\nimport { PdfPageRotateAngle, PdfPageOrientation } from './enum';\nimport { PdfMargins } from './../graphics/pdf-margins';\n/**\n * The class provides various `setting` related with PDF pages.\n */\nvar PdfPageSettings = /** @class */ (function () {\n    function PdfPageSettings(margins) {\n        //Fields\n        /**\n         * The page `margins`.\n         * @private\n         */\n        this.pageMargins = new PdfMargins();\n        /**\n         * The page `size`.\n         * @default a4\n         * @private\n         */\n        this.pageSize = PdfPageSize.a4;\n        /**\n         * The page `rotation angle`.\n         * @default PdfPageRotateAngle.RotateAngle0\n         * @private\n         */\n        this.rotateAngle = PdfPageRotateAngle.RotateAngle0;\n        /**\n         * The page `orientation`.\n         * @default PdfPageOrientation.Portrait\n         * @private\n         */\n        this.pageOrientation = PdfPageOrientation.Portrait;\n        /**\n         * The page `origin`.\n         * @default 0,0\n         * @private\n         */\n        this.pageOrigin = new PointF(0, 0);\n        /**\n         * Checks the Whether the `rotation` is applied or not.\n         * @default false\n         * @private\n         */\n        this.isRotation = false;\n        if (typeof margins === 'number') {\n            this.pageMargins.setMargins(margins);\n        }\n    }\n    Object.defineProperty(PdfPageSettings.prototype, \"size\", {\n        //Properties\n        /**\n         * Gets or sets the `size` of the page.\n         * @private\n         */\n        get: function () {\n            return this.pageSize;\n        },\n        set: function (value) {\n            this.setSize(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageSettings.prototype, \"orientation\", {\n        /**\n         * Gets or sets the page `orientation`.\n         * @private\n         */\n        get: function () {\n            return this.pageOrientation;\n        },\n        set: function (orientation) {\n            if (this.pageOrientation !== orientation) {\n                this.pageOrientation = orientation;\n                this.updateSize(orientation);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageSettings.prototype, \"margins\", {\n        /**\n         * Gets or sets the `margins` of the page.\n         * @private\n         */\n        get: function () {\n            return this.pageMargins;\n        },\n        set: function (value) {\n            this.pageMargins = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageSettings.prototype, \"width\", {\n        /**\n         * Gets or sets the `width` of the page.\n         * @private\n         */\n        get: function () {\n            return this.pageSize.width;\n        },\n        set: function (value) {\n            this.pageSize.width = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageSettings.prototype, \"height\", {\n        /**\n         * Gets or sets the `height` of the page.\n         * @private\n         */\n        get: function () {\n            return this.pageSize.height;\n        },\n        set: function (value) {\n            this.pageSize.height = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageSettings.prototype, \"origin\", {\n        /**\n         * Gets or sets the `origin` of the page.\n         * @private\n         */\n        get: function () {\n            return this.pageOrigin;\n        },\n        set: function (value) {\n            this.pageOrigin = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageSettings.prototype, \"rotate\", {\n        /**\n         * Gets or sets the number of degrees by which the page should be `rotated` clockwise when displayed or printed.\n         * @private\n         */\n        get: function () {\n            return this.rotateAngle;\n        },\n        set: function (value) {\n            this.rotateAngle = value;\n            this.isRotation = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Methods\n    /**\n     * `Update page size` depending on orientation.\n     * @private\n     */\n    PdfPageSettings.prototype.updateSize = function (orientation) {\n        var min = Math.min(this.pageSize.width, this.pageSize.height);\n        var max = Math.max(this.pageSize.width, this.pageSize.height);\n        switch (orientation) {\n            case PdfPageOrientation.Portrait:\n                this.pageSize = new SizeF(min, max);\n                break;\n            case PdfPageOrientation.Landscape:\n                this.pageSize = new SizeF(max, min);\n                break;\n        }\n    };\n    /**\n     * Creates a `clone` of the object.\n     * @private\n     */\n    PdfPageSettings.prototype.clone = function () {\n        var settings = this;\n        settings.pageMargins = this.pageMargins.clone();\n        // if (GetTransition() != null)\n        // {\n        //     settings.Transition = (PdfPageTransition)Transition.clone();\n        // }\n        return settings;\n    };\n    /**\n     * Returns `size`, shrinked by the margins.\n     * @private\n     */\n    PdfPageSettings.prototype.getActualSize = function () {\n        var width = this.width - (this.margins.left + this.margins.right);\n        var height = this.height - (this.margins.top + this.margins.bottom);\n        var size = new SizeF(width, height);\n        return size;\n    };\n    /**\n     * Sets `size` to the page aaccording to the orientation.\n     * @private\n     */\n    PdfPageSettings.prototype.setSize = function (size) {\n        var min = Math.min(size.width, size.height);\n        var max = Math.max(size.width, size.height);\n        if (this.orientation === PdfPageOrientation.Portrait) {\n            this.pageSize = new SizeF(min, max);\n        }\n        else {\n            this.pageSize = new SizeF(max, min);\n        }\n    };\n    return PdfPageSettings;\n}());\nexport { PdfPageSettings };\n","import { Operators } from './pdf-operators';\nimport { PdfNumber } from './../primitives/pdf-number';\nimport { PointF, RectangleF } from './../drawing/pdf-drawing';\nimport { PdfString } from './../primitives/pdf-string';\nimport { PdfName } from './../primitives/pdf-name';\n/**\n * Helper class to `write PDF graphic streams` easily.\n * @private\n */\nvar PdfStreamWriter = /** @class */ (function () {\n    /**\n     * Initialize an instance of `PdfStreamWriter` class.\n     * @private\n     */\n    function PdfStreamWriter(stream) {\n        if (stream == null) {\n            throw new Error('ArgumentNullException:stream');\n        }\n        this.stream = stream;\n    }\n    //Implementation\n    /**\n     * `Clear` the stream.\n     * @public\n     */\n    PdfStreamWriter.prototype.clear = function () {\n        this.stream.clearStream();\n    };\n    PdfStreamWriter.prototype.setGraphicsState = function (dictionaryName) {\n        if (dictionaryName instanceof PdfName) {\n            this.stream.write(dictionaryName.toString());\n            this.stream.write(Operators.whiteSpace);\n            this.writeOperator(Operators.setGraphicsState);\n        }\n        else {\n            this.stream.write(Operators.slash);\n            this.stream.write(dictionaryName);\n            this.stream.write(Operators.whiteSpace);\n            this.writeOperator(Operators.setGraphicsState);\n        }\n    };\n    /**\n     * `Executes the XObject`.\n     * @private\n     */\n    PdfStreamWriter.prototype.executeObject = function (name) {\n        this.stream.write(name.toString());\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.paintXObject);\n        this.stream.write(Operators.newLine);\n    };\n    /**\n     * `Closes path object`.\n     * @private\n     */\n    PdfStreamWriter.prototype.closePath = function () {\n        this.writeOperator(Operators.closePath);\n    };\n    /**\n     * `Clips the path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.clipPath = function (useEvenOddRule) {\n        this.stream.write(Operators.clipPath);\n        if (useEvenOddRule) {\n            this.stream.write(Operators.evenOdd);\n        }\n        this.stream.write(Operators.whiteSpace);\n        this.stream.write(Operators.endPath);\n        this.stream.write(Operators.newLine);\n    };\n    /**\n     * `Closes, then fills and strokes the path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.closeFillStrokePath = function (useEvenOddRule) {\n        this.stream.write(Operators.closeFillStrokePath);\n        if (useEvenOddRule) {\n            this.stream.write(Operators.evenOdd);\n            this.stream.write(Operators.newLine);\n        }\n        else {\n            this.stream.write(Operators.newLine);\n        }\n    };\n    /**\n     * `Fills and strokes path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.fillStrokePath = function (useEvenOddRule) {\n        this.stream.write(Operators.fillStroke);\n        if (useEvenOddRule) {\n            this.stream.write(Operators.evenOdd);\n            this.stream.write(Operators.newLine);\n        }\n        else {\n            this.stream.write(Operators.newLine);\n        }\n    };\n    /**\n     * `Fills path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.fillPath = function (useEvenOddRule) {\n        this.stream.write(Operators.fill);\n        if (useEvenOddRule) {\n            this.stream.write(Operators.evenOdd);\n            this.stream.write(Operators.newLine);\n        }\n        else {\n            this.stream.write(Operators.newLine);\n        }\n    };\n    /**\n     * `Ends the path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.endPath = function () {\n        this.writeOperator(Operators.n);\n    };\n    /**\n     * `Closes and fills the path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.closeFillPath = function (useEvenOddRule) {\n        this.writeOperator(Operators.closePath);\n        this.stream.write(Operators.fill);\n        if (useEvenOddRule) {\n            this.stream.write(Operators.evenOdd);\n            this.stream.write(Operators.newLine);\n        }\n        else {\n            this.stream.write(Operators.newLine);\n        }\n    };\n    /**\n     * `Closes and strokes the path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.closeStrokePath = function () {\n        this.writeOperator(Operators.closeStrokePath);\n    };\n    /**\n     * `Sets the text scaling`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setTextScaling = function (textScaling) {\n        this.stream.write(PdfNumber.floatToString(textScaling));\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.setTextScaling);\n    };\n    /**\n     * `Strokes path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.strokePath = function () {\n        this.writeOperator(Operators.stroke);\n    };\n    /**\n     * `Restores` the graphics state.\n     * @private\n     */\n    PdfStreamWriter.prototype.restoreGraphicsState = function () {\n        this.writeOperator(Operators.restoreState);\n    };\n    /**\n     * `Saves` the graphics state.\n     * @private\n     */\n    PdfStreamWriter.prototype.saveGraphicsState = function () {\n        this.writeOperator(Operators.saveState);\n    };\n    PdfStreamWriter.prototype.startNextLine = function (arg1, arg2) {\n        if (typeof arg1 === 'undefined') {\n            this.writeOperator(Operators.goToNextLine);\n        }\n        else if (arg1 instanceof PointF) {\n            this.writePoint(arg1);\n            this.writeOperator(Operators.setCoords);\n        }\n        else {\n            this.writePoint(arg1, arg2);\n            this.writeOperator(Operators.setCoords);\n        }\n    };\n    /**\n     * Sets `text leading`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setLeading = function (leading) {\n        this.stream.write(PdfNumber.floatToString(leading));\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.setTextLeading);\n    };\n    /**\n     * `Begins the path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.beginPath = function (x, y) {\n        this.writePoint(x, y);\n        this.writeOperator(Operators.beginPath);\n    };\n    /**\n     * `Begins text`.\n     * @private\n     */\n    PdfStreamWriter.prototype.beginText = function () {\n        this.writeOperator(Operators.beginText);\n    };\n    /**\n     * `Ends text`.\n     * @private\n     */\n    PdfStreamWriter.prototype.endText = function () {\n        this.writeOperator(Operators.endText);\n    };\n    PdfStreamWriter.prototype.appendRectangle = function (arg1, arg2, arg3, arg4) {\n        if (arg1 instanceof RectangleF) {\n            this.appendRectangle(arg1.x, arg1.y, arg1.width, arg1.height);\n        }\n        else {\n            this.writePoint(arg1, arg2);\n            this.writePoint(arg3, arg4);\n            this.writeOperator(Operators.appendRectangle);\n        }\n    };\n    PdfStreamWriter.prototype.appendLineSegment = function (arg1, arg2) {\n        if (arg1 instanceof PointF) {\n            this.appendLineSegment(arg1.x, arg1.y);\n        }\n        else {\n            this.writePoint(arg1, arg2);\n            this.writeOperator(Operators.appendLineSegment);\n        }\n    };\n    /**\n     * Sets the `text rendering mode`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setTextRenderingMode = function (renderingMode) {\n        this.stream.write(renderingMode.toString());\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.setRenderingMode);\n    };\n    /**\n     * Sets the `character spacing`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setCharacterSpacing = function (charSpacing) {\n        this.stream.write(PdfNumber.floatToString(charSpacing));\n        this.stream.write(Operators.whiteSpace);\n        this.stream.write(Operators.setCharacterSpace);\n        this.stream.write(Operators.newLine);\n    };\n    /**\n     * Sets the `word spacing`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setWordSpacing = function (wordSpacing) {\n        this.stream.write(PdfNumber.floatToString(wordSpacing));\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.setWordSpace);\n    };\n    PdfStreamWriter.prototype.showNextLineText = function (arg1, arg2) {\n        if (arg1 instanceof PdfString) {\n            this.checkTextParam(arg1);\n            this.writeText(arg1);\n            this.writeOperator(Operators.setTextOnNewLine);\n        }\n        else {\n            this.checkTextParam(arg1);\n            this.writeText(arg1, arg2);\n            this.writeOperator(Operators.setTextOnNewLine);\n        }\n    };\n    PdfStreamWriter.prototype.setColorSpace = function (arg1, arg2) {\n        if (arg1 instanceof PdfName && typeof arg2 === 'boolean') {\n            var temparg1 = arg1;\n            var temparg2 = arg2;\n            // if (temparg1 == null) {\n            //     throw new Error('ArgumentNullException:name');\n            // }\n            var op = (temparg2) ? Operators.selectcolorspaceforstroking : Operators.selectcolorspacefornonstroking;\n            this.stream.write(temparg1.toString());\n            this.stream.write(Operators.whiteSpace);\n            this.stream.write(op);\n            this.stream.write(Operators.newLine);\n        }\n        else {\n            var temparg1 = arg1;\n            var temparg2 = arg2;\n            this.setColorSpace(new PdfName(temparg1), temparg2);\n        }\n    };\n    /**\n     * Modifies current `transformation matrix`.\n     * @private\n     */\n    PdfStreamWriter.prototype.modifyCtm = function (matrix) {\n        if (matrix == null) {\n            throw new Error('ArgumentNullException:matrix');\n        }\n        this.stream.write(matrix.toString());\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.modifyCtm);\n    };\n    PdfStreamWriter.prototype.setFont = function (font, name, size) {\n        if (typeof name === 'string') {\n            this.setFont(font, new PdfName(name), size);\n        }\n        else {\n            if (font == null) {\n                throw new Error('ArgumentNullException:font');\n            }\n            this.stream.write(name.toString());\n            this.stream.write(Operators.whiteSpace);\n            this.stream.write(PdfNumber.floatToString(size));\n            this.stream.write(Operators.whiteSpace);\n            this.writeOperator(Operators.setFont);\n        }\n    };\n    /**\n     * `Writes the operator`.\n     * @private\n     */\n    PdfStreamWriter.prototype.writeOperator = function (opcode) {\n        this.stream.write(opcode);\n        this.stream.write(Operators.newLine);\n    };\n    PdfStreamWriter.prototype.checkTextParam = function (text) {\n        if (text == null) {\n            throw new Error('ArgumentNullException:text');\n        }\n        if (typeof text === 'string' && text === '') {\n            throw new Error('ArgumentException:The text can not be an empty string, text');\n        }\n    };\n    PdfStreamWriter.prototype.writeText = function (arg1, arg2) {\n        if ((arg1 instanceof PdfString) && (typeof arg2 === 'undefined')) {\n            this.stream.write(arg1.value);\n        }\n        else {\n            var start = void 0;\n            var end = void 0;\n            if (arg2) {\n                start = PdfString.hexStringMark[0];\n                end = PdfString.hexStringMark[1];\n            }\n            else {\n                start = PdfString.stringMark[0];\n                end = PdfString.stringMark[1];\n            }\n            this.stream.write(start);\n            this.stream.write(arg1);\n            this.stream.write(end);\n        }\n    };\n    PdfStreamWriter.prototype.writePoint = function (arg1, arg2) {\n        if ((arg1 instanceof PointF) && (typeof arg2 === 'undefined')) {\n            this.writePoint(arg1.x, arg1.y);\n        }\n        else {\n            var temparg1 = arg1;\n            this.stream.write(PdfNumber.floatToString(temparg1));\n            this.stream.write(Operators.whiteSpace);\n            // NOTE: Change Y co-ordinate because we shifted co-ordinate system only.\n            arg2 = this.updateY(arg2);\n            this.stream.write(PdfNumber.floatToString(arg2));\n            this.stream.write(Operators.whiteSpace);\n        }\n    };\n    /**\n     * `Updates y` co-ordinate.\n     * @private\n     */\n    PdfStreamWriter.prototype.updateY = function (arg) {\n        return -arg;\n    };\n    /**\n     * `Writes string` to the file.\n     * @private\n     */\n    PdfStreamWriter.prototype.write = function (string) {\n        var builder = '';\n        builder += string;\n        builder += Operators.newLine;\n        this.writeOperator(builder);\n    };\n    /**\n     * `Writes comment` to the file.\n     * @private\n     */\n    PdfStreamWriter.prototype.writeComment = function (comment) {\n        if (comment != null && comment.length > 0) {\n            var builder = '';\n            builder += Operators.comment;\n            builder += Operators.whiteSpace;\n            builder += comment;\n            //builder.Append( Operators.NewLine );\n            this.writeOperator(builder);\n        }\n        else {\n            throw new Error('Invalid comment');\n        }\n    };\n    /**\n     * Sets the `color and space`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setColorAndSpace = function (color, colorSpace, forStroking) {\n        if (!color.isEmpty) {\n            // bool test = color is PdfExtendedColor;\n            this.stream.write(color.toString(colorSpace, forStroking));\n            this.stream.write(Operators.newLine);\n        }\n    };\n    // public setLineDashPattern(pattern : number[], patternOffset : number) : void\n    // {\n    //     let pat : PdfArray = new PdfArray(pattern);\n    //     let off : PdfNumber = new PdfNumber(patternOffset);\n    //     this.setLineDashPatternHelper(pat, off);\n    // }\n    // private setLineDashPatternHelper(pattern : PdfArray, patternOffset : PdfNumber) : void\n    // {\n    //     pattern.Save(this);\n    //     this.m_stream.write(Operators.whiteSpace);\n    //     patternOffset.Save(this);\n    //     this.m_stream.write(Operators.whiteSpace);\n    //     this.writeOperator(Operators.setDashPattern);\n    // }\n    /**\n     * Sets the `line dash pattern`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setLineDashPattern = function (pattern, patternOffset) {\n        // let pat : PdfArray = new PdfArray(pattern);\n        // let off : PdfNumber = new PdfNumber(patternOffset);\n        // this.setLineDashPatternHelper(pat, off);\n        this.setLineDashPatternHelper(pattern, patternOffset);\n    };\n    /**\n     * Sets the `line dash pattern`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setLineDashPatternHelper = function (pattern, patternOffset) {\n        var tempPattern = '[';\n        if (pattern.length > 1) {\n            for (var index = 0; index < pattern.length; index++) {\n                if (index === pattern.length - 1) {\n                    tempPattern += pattern[index].toString();\n                }\n                else {\n                    tempPattern += pattern[index].toString() + ' ';\n                }\n            }\n        }\n        tempPattern += '] ';\n        tempPattern += patternOffset.toString();\n        tempPattern += ' ' + Operators.setDashPattern;\n        this.stream.write(tempPattern);\n        this.stream.write(Operators.newLine);\n    };\n    /**\n     * Sets the `miter limit`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setMiterLimit = function (miterLimit) {\n        this.stream.write(PdfNumber.floatToString(miterLimit));\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.setMiterLimit);\n    };\n    /**\n     * Sets the `width of the line`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setLineWidth = function (width) {\n        this.stream.write(PdfNumber.floatToString(width));\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.setLineWidth);\n    };\n    /**\n     * Sets the `line cap`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setLineCap = function (lineCapStyle) {\n        this.stream.write((lineCapStyle).toString());\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.setLineCapStyle);\n    };\n    /**\n     * Sets the `line join`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setLineJoin = function (lineJoinStyle) {\n        this.stream.write((lineJoinStyle).toString());\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.setLineJoinStyle);\n    };\n    Object.defineProperty(PdfStreamWriter.prototype, \"position\", {\n        //IPdfWriter members\n        /**\n         * Gets or sets the current `position` within the stream.\n         * @private\n         */\n        get: function () {\n            return this.stream.position;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStreamWriter.prototype, \"length\", {\n        /**\n         * Gets `stream length`.\n         * @private\n         */\n        get: function () {\n            var returnValue = 0;\n            if (this.stream.data.length !== 0 && this.stream.data.length !== -1) {\n                for (var index = 0; index < this.stream.data.length; index++) {\n                    returnValue += this.stream.data[index].length;\n                }\n            }\n            return returnValue;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStreamWriter.prototype, \"document\", {\n        /**\n         * Gets and Sets the `current document`.\n         * @private\n         */\n        get: function () {\n            return null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfStreamWriter;\n}());\nexport { PdfStreamWriter };\n","/**\n * PdfPen.ts class for EJ2-PDF\n */\nimport { PdfColor } from './pdf-color';\nimport { PdfDashStyle, PdfColorSpace } from './enum';\nimport { PdfBrush } from './brushes/pdf-brush';\n/**\n * `PdfPen` class defining settings for drawing operations, that determines the color,\n * width, and style of the drawing elements.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // create a new page\n * let page1 : PdfPage = document.pages.add();\n * // set pen\n * let pen : PdfPen = new PdfPen(new PdfColor(0, 0, 0));\n * // draw rectangle\n * page1.graphics.drawRectangle(pen, new RectangleF({x : 0, y : 0}, {width : 100, height : 50}));\n * // save the document.\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfPen = /** @class */ (function () {\n    function PdfPen(arg1, arg2) {\n        //Fields\n        /**\n         * Specifies the `color of the pen`.\n         * @default new PdfColor()\n         * @private\n         */\n        this.pdfColor = new PdfColor(0, 0, 0);\n        /**\n         * Specifies the `dash offset of the pen`.\n         * @default 0\n         * @private\n         */\n        this.dashOffsetValue = 0;\n        /**\n         * Specifies the `dash pattern of the pen`.\n         * @default [0]\n         * @private\n         */\n        this.penDashPattern = [0];\n        /**\n         * Specifies the `dash style of the pen`.\n         * @default Solid\n         * @private\n         */\n        this.pdfDashStyle = PdfDashStyle.Solid;\n        /**\n         * Specifies the `line cap of the pen`.\n         * @default 0\n         * @private\n         */\n        this.pdfLineCap = 0;\n        /**\n         * Specifies the `line join of the pen`.\n         * @default 0\n         * @private\n         */\n        this.pdfLineJoin = 0;\n        /**\n         * Specifies the `width of the pen`.\n         * @default 1.0\n         * @private\n         */\n        this.penWidth = 1.0;\n        /**\n         * Specifies the `mitter limit of the pen`.\n         * @default 0.0\n         * @private\n         */\n        this.internalMiterLimit = 0.0;\n        /**\n         * Stores the `colorspace` value.\n         * @default Rgb\n         * @private\n         */\n        this.colorSpace = PdfColorSpace.Rgb;\n        if (typeof arg2 === 'number') {\n            this.constructor(arg1);\n            this.width = arg2;\n        }\n        else if (typeof arg2 === 'undefined' && arg1 instanceof PdfBrush) {\n            this.setBrush(arg1);\n        }\n        else if (typeof arg2 === 'undefined' && arg1 instanceof PdfColor) {\n            this.color = arg1;\n        }\n    }\n    Object.defineProperty(PdfPen.prototype, \"color\", {\n        //Properties\n        /**\n         * Gets or sets the `color of the pen`.\n         * @private\n         */\n        get: function () {\n            return this.pdfColor;\n        },\n        set: function (value) {\n            this.pdfColor = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPen.prototype, \"dashOffset\", {\n        /**\n         * Gets or sets the `dash offset of the pen`.\n         * @private\n         */\n        get: function () {\n            if (typeof this.dashOffsetValue === 'undefined' || this.dashOffsetValue == null) {\n                return 0;\n            }\n            else {\n                return this.dashOffsetValue;\n            }\n        },\n        set: function (value) {\n            this.dashOffsetValue = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPen.prototype, \"dashPattern\", {\n        /**\n         * Gets or sets the `dash pattern of the pen`.\n         * @private\n         */\n        get: function () {\n            return this.penDashPattern;\n        },\n        set: function (value) {\n            this.penDashPattern = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPen.prototype, \"dashStyle\", {\n        /**\n         * Gets or sets the `dash style of the pen`.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // create a new page\n         * let page1 : PdfPage = document.pages.add();\n         * // set pen\n         * let pen : PdfPen = new PdfPen(new PdfColor(0, 0, 0));\n         * //\n         * // set pen style\n         * pen.dashStyle = PdfDashStyle.DashDot;\n         * // get pen style\n         * let style : PdfDashStyle = pen.dashStyle;\n         * //\n         * // draw rectangle\n         * page1.graphics.drawRectangle(pen, new RectangleF({x : 0, y : 0}, {width : 100, height : 50}));\n         * // save the document.\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this.pdfDashStyle;\n        },\n        set: function (value) {\n            if (this.pdfDashStyle !== value) {\n                this.pdfDashStyle = value;\n                switch (this.pdfDashStyle) {\n                    case PdfDashStyle.Custom:\n                        break;\n                    case PdfDashStyle.Dash:\n                        this.penDashPattern = [3, 1];\n                        break;\n                    case PdfDashStyle.Dot:\n                        this.penDashPattern = [1, 1];\n                        break;\n                    case PdfDashStyle.DashDot:\n                        this.penDashPattern = [3, 1, 1, 1];\n                        break;\n                    case PdfDashStyle.DashDotDot:\n                        this.penDashPattern = [3, 1, 1, 1, 1, 1];\n                        break;\n                    case PdfDashStyle.Solid:\n                        break;\n                    default:\n                        this.pdfDashStyle = PdfDashStyle.Solid;\n                        this.penDashPattern = [0];\n                        break;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPen.prototype, \"lineCap\", {\n        /**\n         * Gets or sets the `line cap of the pen`.\n         * @private\n         */\n        get: function () {\n            return this.pdfLineCap;\n        },\n        set: function (value) {\n            this.pdfLineCap = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPen.prototype, \"lineJoin\", {\n        /**\n         * Gets or sets the `line join style of the pen`.\n         * @private\n         */\n        get: function () {\n            return this.pdfLineJoin;\n        },\n        set: function (value) {\n            this.pdfLineJoin = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPen.prototype, \"miterLimit\", {\n        /**\n         * Gets or sets the `miter limit`.\n         * @private\n         */\n        get: function () {\n            return this.internalMiterLimit;\n        },\n        set: function (value) {\n            this.internalMiterLimit = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPen.prototype, \"width\", {\n        /**\n         * Gets or sets the `width of the pen`.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // create a new page\n         * let page1 : PdfPage = document.pages.add();\n         * // set pen\n         * let pen : PdfPen = new PdfPen(new PdfColor(0, 0, 0));\n         * //\n         * // set pen width\n         * pen.width = 2;\n         * //\n         * // draw rectangle\n         * page1.graphics.drawRectangle(pen, new RectangleF({x : 0, y : 0}, {width : 100, height : 50}));\n         * // save the document.\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this.penWidth;\n        },\n        set: function (value) {\n            this.penWidth = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Helper\n    /**\n     * `Clones` this instance of PdfPen class.\n     * @private\n     */\n    PdfPen.prototype.clone = function () {\n        var pen = this;\n        return pen;\n    };\n    /**\n     * `Sets the brush`.\n     * @private\n     */\n    PdfPen.prototype.setBrush = function (brush) {\n        var sBrush = brush;\n        this.color = sBrush.color;\n        this.pdfBrush = sBrush;\n    };\n    /**\n     * `Monitors the changes`.\n     * @private\n     */\n    PdfPen.prototype.monitorChanges = function (currentPen, streamWriter, getResources, saveState, currentColorSpace, matrix) {\n        var diff = false;\n        saveState = true;\n        if (currentPen == null) {\n            diff = true;\n        }\n        diff = this.dashControl(currentPen, saveState, streamWriter);\n        streamWriter.setLineWidth(this.width);\n        streamWriter.setLineJoin(this.lineJoin);\n        streamWriter.setLineCap(this.lineCap);\n        var miterLimit = this.miterLimit;\n        if (miterLimit > 0) {\n            streamWriter.setMiterLimit(miterLimit);\n            diff = true;\n        }\n        var brush = this.pdfBrush;\n        streamWriter.setColorAndSpace(this.color, currentColorSpace, true);\n        diff = true;\n        return diff;\n    };\n    /**\n     * `Controls the dash style` and behaviour of each line.\n     * @private\n     */\n    PdfPen.prototype.dashControl = function (pen, saveState, streamWriter) {\n        saveState = true;\n        var lineWidth = this.width;\n        var pattern = this.getPattern();\n        streamWriter.setLineDashPattern(pattern, this.dashOffset * lineWidth);\n        return saveState;\n    };\n    /**\n     * `Gets the pattern` of PdfPen.\n     * @private\n     */\n    PdfPen.prototype.getPattern = function () {\n        var pattern = this.dashPattern;\n        for (var i = 0; i < pattern.length; ++i) {\n            pattern[i] *= this.width;\n        }\n        return pattern;\n    };\n    return PdfPen;\n}());\nexport { PdfPen };\n","/**\n * PdfTransformationMatrix.ts class for EJ2-PDF\n */\nimport { PointF } from './../drawing/pdf-drawing';\nimport { PdfNumber } from './../primitives/pdf-number';\n/**\n * Class for representing Root `transformation matrix`.\n */\nvar PdfTransformationMatrix = /** @class */ (function () {\n    function PdfTransformationMatrix(value) {\n        /**\n         * Value for `angle converting`.\n         * @default 180.0 / Math.PI\n         * @private\n         */\n        this.radDegFactor = 180.0 / Math.PI;\n        if (typeof value === 'undefined') {\n            this.transformationMatrix = new Matrix(1.00, 0.00, 0.00, 1.00, 0.00, 0.00);\n        }\n        else {\n            this.transformationMatrix = new Matrix(1.00, 0.00, 0.00, -1.00, 0.00, 0.00);\n        }\n    }\n    Object.defineProperty(PdfTransformationMatrix.prototype, \"matrix\", {\n        // Properties\n        /**\n         * Gets or sets the `internal matrix object`.\n         * @private\n         */\n        get: function () {\n            return this.transformationMatrix;\n        },\n        set: function (value) {\n            this.transformationMatrix = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Public methods\n    /**\n     * `Translates` coordinates by specified coordinates.\n     * @private\n     */\n    PdfTransformationMatrix.prototype.translate = function (offsetX, offsetY) {\n        this.transformationMatrix.translate(offsetX, offsetY);\n    };\n    /**\n     * `Scales` coordinates by specified coordinates.\n     * @private\n     */\n    PdfTransformationMatrix.prototype.scale = function (scaleX, scaleY) {\n        this.transformationMatrix.elements[0] = scaleX;\n        this.transformationMatrix.elements[3] = scaleY;\n    };\n    /**\n     * `Rotates` coordinate system in counterclockwise direction.\n     * @private\n     */\n    PdfTransformationMatrix.prototype.rotate = function (angle) {\n        //Convert from degree to radian \n        angle = (angle * Math.PI) / 180;\n        //Rotation \n        this.transformationMatrix.elements[0] = Math.cos(angle);\n        this.transformationMatrix.elements[1] = Math.sin(angle);\n        this.transformationMatrix.elements[2] = -Math.sin(angle);\n        this.transformationMatrix.elements[3] = Math.cos(angle);\n    };\n    // Overrides\n    /**\n     * Gets `PDF representation`.\n     * @private\n     */\n    PdfTransformationMatrix.prototype.toString = function () {\n        var builder = '';\n        var whitespace = ' ';\n        for (var i = 0, len = this.transformationMatrix.elements.length; i < len; i++) {\n            var temp = this.matrix.elements[i];\n            builder += PdfNumber.floatToString(this.transformationMatrix.elements[i]);\n            builder += whitespace;\n        }\n        return builder;\n    };\n    // Implementation\n    /**\n     * `Multiplies` matrices (changes coordinate system.)\n     * @private\n     */\n    PdfTransformationMatrix.prototype.multiply = function (matrix) {\n        this.transformationMatrix.multiply(matrix.matrix);\n    };\n    /**\n     * Converts `degrees to radians`.\n     * @private\n     */\n    PdfTransformationMatrix.degreesToRadians = function (degreesX) {\n        return this.degRadFactor * degreesX;\n    };\n    /**\n     * Converts `radians to degrees`.\n     * @private\n     */\n    PdfTransformationMatrix.prototype.radiansToDegrees = function (radians) {\n        return this.radDegFactor * radians;\n    };\n    /**\n     * `Clones` this instance of PdfTransformationMatrix.\n     * @private\n     */\n    PdfTransformationMatrix.prototype.clone = function () {\n        return this;\n    };\n    // Constants\n    /**\n     * Value for `angle converting`.\n     * @default Math.PI / 180.0\n     * @private\n     */\n    PdfTransformationMatrix.degRadFactor = Math.PI / 180.0;\n    return PdfTransformationMatrix;\n}());\nexport { PdfTransformationMatrix };\nvar Matrix = /** @class */ (function () {\n    function Matrix(arg1, arg2, arg3, arg4, arg5, arg6) {\n        if (typeof arg1 === 'undefined') {\n            this.metrixElements = [];\n        }\n        else if (typeof arg1 === 'number') {\n            this.constructor();\n            this.metrixElements.push(arg1);\n            this.metrixElements.push(arg2);\n            this.metrixElements.push(arg3);\n            this.metrixElements.push(arg4);\n            this.metrixElements.push(arg5);\n            this.metrixElements.push(arg6);\n        }\n        else {\n            this.metrixElements = arg1;\n        }\n    }\n    Object.defineProperty(Matrix.prototype, \"elements\", {\n        // Properties\n        /**\n         * Gets the `elements`.\n         * @private\n         */\n        get: function () {\n            return this.metrixElements;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Matrix.prototype, \"offsetX\", {\n        /**\n         * Gets the off set `X`.\n         * @private\n         */\n        get: function () {\n            return this.metrixElements[4];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Matrix.prototype, \"offsetY\", {\n        /**\n         * Gets the off set `Y`.\n         * @private\n         */\n        get: function () {\n            return this.metrixElements[5];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * `Translates` coordinates by specified coordinates.\n     * @private\n     */\n    Matrix.prototype.translate = function (offsetX, offsetY) {\n        this.metrixElements[4] = offsetX;\n        this.metrixElements[5] = offsetY;\n    };\n    /**\n     * `Translates` the specified offset X.\n     * @private\n     */\n    Matrix.prototype.transform = function (point) {\n        var x = point.x;\n        var y = point.y;\n        var x2 = x * this.elements[0] + y * this.elements[2] + this.offsetX;\n        var y2 = x * this.elements[1] + y * this.elements[3] + this.offsetY;\n        return new PointF(x2, y2);\n    };\n    /**\n     * `Multiplies matrices` (changes coordinate system.)\n     * @private\n     */\n    Matrix.prototype.multiply = function (matrix) {\n        var tempMatrix = [];\n        tempMatrix.push(this.elements[0] * matrix.elements[0] + this.elements[1] * matrix.elements[2]);\n        tempMatrix[1] = (this.elements[0] * matrix.elements[1] + this.elements[1] * matrix.elements[3]);\n        tempMatrix[2] = (this.elements[2] * matrix.elements[0] + this.elements[3] * matrix.elements[2]);\n        tempMatrix[3] = (this.elements[2] * matrix.elements[1] + this.elements[3] * matrix.elements[3]);\n        tempMatrix[4] = (this.offsetX * matrix.elements[0] + this.offsetY * matrix.elements[2] + matrix.offsetX);\n        tempMatrix[5] = (this.offsetX * matrix.elements[1] + this.offsetY * matrix.elements[3] + matrix.offsetY);\n        for (var i = 0; i < tempMatrix.length; i++) {\n            this.elements[i] = tempMatrix[i];\n        }\n    };\n    // IDisposable Members\n    /**\n     * `Dispose` this instance of PdfTransformationMatrix class.\n     * @private\n     */\n    Matrix.prototype.dispose = function () {\n        this.metrixElements = null;\n    };\n    // ICloneable Members\n    /**\n     * `Clones` this instance of PdfTransformationMatrix class.\n     * @private\n     */\n    Matrix.prototype.clone = function () {\n        var m = new Matrix(this.metrixElements);\n        return m;\n    };\n    return Matrix;\n}());\nexport { Matrix };\n","/**\n * `constants.ts` class for EJ2-PDF\n * @private\n */\nvar ProcedureSets = /** @class */ (function () {\n    function ProcedureSets() {\n        /**\n         * Specifies the `PDF` procedure set.\n         * @private\n         */\n        this.pdf = 'PDF';\n        /**\n         * Specifies the `Text` procedure set.\n         * @private\n         */\n        this.text = 'Text';\n        /**\n         * Specifies the `ImageB` procedure set.\n         * @private\n         */\n        this.imageB = 'ImageB';\n        /**\n         * Specifies the `ImageC` procedure set.\n         * @private\n         */\n        this.imageC = 'ImageC';\n        /**\n         * Specifies the `ImageI` procedure set.\n         * @private\n         */\n        this.imageI = 'ImageI';\n    }\n    return ProcedureSets;\n}());\nexport { ProcedureSets };\n","/**\n * Dictionary class\n * @private\n * @hidden\n */\nvar TemporaryDictionary = /** @class */ (function () {\n    function TemporaryDictionary() {\n        /**\n         * @hidden\n         * @private\n         */\n        this.mKeys = [];\n        /**\n         * @hidden\n         * @private\n         */\n        this.mValues = [];\n    }\n    /**\n     * @hidden\n     * @private\n     */\n    TemporaryDictionary.prototype.size = function () {\n        return this.mKeys.length;\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    TemporaryDictionary.prototype.add = function (key, value) {\n        if (key === undefined || key === null || value === undefined || value === null) {\n            throw new ReferenceError('Provided key or value is not valid.');\n        }\n        var index = this.mKeys.indexOf(key);\n        if (index < 0) {\n            this.mKeys.push(key);\n            this.mValues.push(value);\n            return 1;\n        }\n        else {\n            throw new RangeError('An item with the same key has already been added.');\n        }\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    TemporaryDictionary.prototype.keys = function () {\n        return this.mKeys;\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    TemporaryDictionary.prototype.values = function () {\n        return this.mValues;\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    TemporaryDictionary.prototype.getValue = function (key) {\n        if (key === undefined || key === null) {\n            throw new ReferenceError('Provided key is not valid.');\n        }\n        var index = this.mKeys.indexOf(key);\n        if (index < 0) {\n            throw new RangeError('No item with the specified key has been added.');\n        }\n        else {\n            return this.mValues[index];\n        }\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    TemporaryDictionary.prototype.setValue = function (key, value) {\n        if (key === undefined || key === null) {\n            throw new ReferenceError('Provided key is not valid.');\n        }\n        var index = this.mKeys.indexOf(key);\n        if (index < 0) {\n            this.mKeys.push(key);\n            this.mValues.push(value);\n        }\n        else {\n            this.mValues[index] = value;\n        }\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    TemporaryDictionary.prototype.remove = function (key) {\n        if (key === undefined || key === null) {\n            throw new ReferenceError('Provided key is not valid.');\n        }\n        var index = this.mKeys.indexOf(key);\n        if (index < 0) {\n            throw new RangeError('No item with the specified key has been added.');\n        }\n        else {\n            this.mKeys.splice(index, 1);\n            this.mValues.splice(index, 1);\n            return true;\n        }\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    TemporaryDictionary.prototype.containsKey = function (key) {\n        if (key === undefined || key === null) {\n            throw new ReferenceError('Provided key is not valid.');\n        }\n        var index = this.mKeys.indexOf(key);\n        if (index < 0) {\n            return false;\n        }\n        return true;\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    TemporaryDictionary.prototype.clear = function () {\n        this.mKeys = [];\n        this.mValues = [];\n    };\n    return TemporaryDictionary;\n}());\nexport { TemporaryDictionary };\n","import { PdfDictionary } from './../primitives/pdf-dictionary';\nimport { PdfNumber } from './../primitives/pdf-number';\nimport { PdfName } from './../primitives/pdf-name';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\n/**\n * Represents a simple `transparency`.\n * @private\n */\nvar PdfTransparency = /** @class */ (function () {\n    // Properties\n    // /**\n    //  * Gets the `stroke` operation alpha value.\n    //  * @private\n    //  */\n    // public get stroke() : number {\n    //     let result : number = this.getNumber(this.dictionaryProperties.CA);\n    //     return result;\n    // }\n    // /**\n    //  * Gets the `fill` operation alpha value.\n    //  * @private\n    //  */\n    // public get fill() : number {\n    //     let result : number = this.getNumber(this.dictionaryProperties.ca);\n    //     return result;\n    // }\n    // /**\n    //  * Gets the `blend mode`.\n    //  * @private\n    //  */\n    // public get mode() : PdfBlendMode {\n    //     let result : string = this.getName(this.dictionaryProperties.ca);\n    //     return PdfBlendMode.Normal;\n    // }\n    // Constructors\n    /**\n     * Initializes a new instance of the `Transparency` class.\n     * @private\n     */\n    function PdfTransparency(stroke, fill, mode) {\n        // Fields\n        /**\n         * Internal variable to store `dictionary`.\n         * @default new PdfDictionary()\n         * @private\n         */\n        this.dictionary = new PdfDictionary();\n        /**\n         * Internal variable for accessing fields from `DictionryProperties` class.\n         * @default new DictionaryProperties()\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        this.dictionary.items.setValue(this.dictionaryProperties.CA, new PdfNumber(stroke));\n        this.dictionary.items.setValue(this.dictionaryProperties.ca, new PdfNumber(fill));\n        this.dictionary.items.setValue(this.dictionaryProperties.BM, new PdfName(mode.toString()));\n    }\n    Object.defineProperty(PdfTransparency.prototype, \"element\", {\n        // // Implementation\n        // /**\n        //  * Gets the `number value`.\n        //  * @private\n        //  */\n        // private getNumber(keyName : string) : number {\n        //     let result : number = 0.0;\n        //     let numb : PdfNumber = this.dictionary.items.getValue(keyName) as PdfNumber;\n        //     result = numb.intValue;\n        //     return result;\n        // }\n        // /**\n        //  * Gets the `name value`.\n        //  * @private\n        //  */\n        // private getName(keyName : string) : string {\n        //     let result : string = null;\n        //     let name : PdfName = this.dictionary.items.getValue(keyName) as PdfName;\n        //     result = name.value;\n        //     return result;\n        // }\n        // IPdfWrapper Members\n        /**\n         * Gets the `element`.\n         * @private\n         */\n        get: function () {\n            return this.dictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfTransparency;\n}());\nexport { PdfTransparency };\n","/**\n * Represent a `collection of automatic fields information`.\n * @private\n */\nvar PdfAutomaticFieldInfoCollection = /** @class */ (function () {\n    /**\n     * Initializes a new instance of the 'PdfPageNumberFieldInfoCollection' class.\n     * @private\n     */\n    function PdfAutomaticFieldInfoCollection() {\n        /**\n         * Internal variable to store instance of `pageNumberFields` class.\n         * @private\n         */\n        this.automaticFieldsInformation = [];\n        //\n    }\n    Object.defineProperty(PdfAutomaticFieldInfoCollection.prototype, \"automaticFields\", {\n        /**\n         * Gets the `page number fields collection`.\n         * @private\n         */\n        get: function () {\n            return this.automaticFieldsInformation;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Public methods\n    /// Adds the specified field info.\n    /**\n     * Add page number field into collection.\n     * @private\n     */\n    PdfAutomaticFieldInfoCollection.prototype.add = function (fieldInfo) {\n        return this.automaticFields.push(fieldInfo);\n    };\n    return PdfAutomaticFieldInfoCollection;\n}());\nexport { PdfAutomaticFieldInfoCollection };\n","/**\n * Represents a base class for all page graphics elements.\n */\nvar PdfGraphicsElement = /** @class */ (function () {\n    // Constructors\n    function PdfGraphicsElement() {\n        //\n    }\n    /**\n     * `Draws` the page number field.\n     * @public\n     */\n    PdfGraphicsElement.prototype.drawHelper = function (graphics, x, y) {\n        var bNeedSave = (x !== 0 || y !== 0);\n        var gState = null;\n        // Translate co-ordinates.\n        if (bNeedSave) {\n            // Save state.\n            gState = graphics.save();\n            graphics.translateTransform(x, y);\n        }\n        this.drawInternal(graphics);\n        if (bNeedSave) {\n            // Restore state.\n            graphics.restore(gState);\n        }\n    };\n    return PdfGraphicsElement;\n}());\nexport { PdfGraphicsElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfAutomaticField.ts class for EJ2-PDF\n */\nimport { RectangleF, SizeF, PointF } from './../../drawing/pdf-drawing';\nimport { PdfSolidBrush } from './../../graphics/brushes/pdf-solid-brush';\nimport { PdfColor } from './../../graphics/pdf-color';\nimport { PdfDocument } from './../pdf-document';\nimport { PdfGraphicsElement } from './../../graphics/figures/base/graphics-element';\nimport { PdfAutomaticFieldInfo } from './automatic-field-info';\n/**\n * Represents a fields which is calculated before the document saves.\n */\nvar PdfAutomaticField = /** @class */ (function (_super) {\n    __extends(PdfAutomaticField, _super);\n    // Constructors\n    function PdfAutomaticField() {\n        var _this = _super.call(this) || this;\n        // Fields\n        _this.internalBounds = new RectangleF(0, 0, 0, 0);\n        _this.internalTemplateSize = new SizeF(0, 0);\n        return _this;\n    }\n    Object.defineProperty(PdfAutomaticField.prototype, \"bounds\", {\n        // Properties\n        get: function () {\n            return this.internalBounds;\n        },\n        set: function (value) {\n            this.internalBounds = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAutomaticField.prototype, \"size\", {\n        get: function () {\n            return new SizeF(this.bounds.width, this.bounds.height);\n        },\n        set: function (value) {\n            this.bounds.width = value.width;\n            this.bounds.height = value.height;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAutomaticField.prototype, \"location\", {\n        get: function () {\n            return new PointF(this.bounds.x, this.bounds.y);\n        },\n        set: function (value) {\n            this.bounds.x = value.x;\n            this.bounds.y = value.y;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAutomaticField.prototype, \"font\", {\n        get: function () {\n            return this.internalFont;\n        },\n        set: function (value) {\n            this.internalFont = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAutomaticField.prototype, \"brush\", {\n        get: function () {\n            return this.internalBrush;\n        },\n        set: function (value) {\n            this.internalBrush = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAutomaticField.prototype, \"pen\", {\n        get: function () {\n            return this.internalPen;\n        },\n        set: function (value) {\n            this.internalPen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAutomaticField.prototype, \"stringFormat\", {\n        get: function () {\n            return this.internalStringFormat;\n        },\n        set: function (value) {\n            this.internalStringFormat = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfAutomaticField.prototype.performDrawHelper = function (graphics, location, scalingX, scalingY) {\n        if (this.bounds.height === 0 || this.bounds.width === 0) {\n            var text = this.getValue(graphics);\n            this.internalTemplateSize = this.getFont().measureString(text, this.size, this.stringFormat);\n        }\n    };\n    PdfAutomaticField.prototype.draw = function (arg1, arg2, arg3) {\n        if (typeof arg2 === 'undefined') {\n            var location_1 = new PointF(0, 0);\n            this.draw(arg1, location_1);\n        }\n        else if (arg2 instanceof PointF) {\n            this.draw(arg1, arg2.x, arg2.y);\n        }\n        else {\n            this.drawHelper(arg1, arg2, arg3);\n            var info = new PdfAutomaticFieldInfo(this, new PointF(arg2, arg3));\n            arg1.automaticFields.add(info);\n        }\n    };\n    PdfAutomaticField.prototype.getSize = function () {\n        if (this.bounds.height === 0 || this.bounds.width === 0) {\n            return this.internalTemplateSize;\n        }\n        else {\n            return this.size;\n        }\n    };\n    PdfAutomaticField.prototype.drawInternal = function (graphics) {\n        //\n    };\n    /* tslint:disable */\n    PdfAutomaticField.prototype.getBrush = function () {\n        return (typeof this.internalBrush === 'undefined' || this.internalBrush == null) ? new PdfSolidBrush(new PdfColor(0, 0, 0)) : this.internalBrush;\n    };\n    PdfAutomaticField.prototype.getFont = function () {\n        return (typeof this.internalFont === 'undefined' || this.internalFont == null) ? PdfDocument.defaultFont : this.internalFont;\n    };\n    /* tslint:enable */\n    PdfAutomaticField.prototype.getPageFromGraphics = function (graphics) {\n        if (typeof graphics.page !== 'undefined' && graphics.page !== null) {\n            var page = graphics.page;\n            return page;\n        }\n        else {\n            var page = graphics.currentPage;\n            return page;\n        }\n    };\n    return PdfAutomaticField;\n}(PdfGraphicsElement));\nexport { PdfAutomaticField };\n","/**\n * PdfAutomaticFieldInfo.ts class for EJ2-PDF\n * @private\n */\nimport { PointF } from './../../drawing/pdf-drawing';\nimport { PdfAutomaticField } from './automatic-field';\n/**\n * Represents information about the automatic field.\n * @private\n */\nvar PdfAutomaticFieldInfo = /** @class */ (function () {\n    function PdfAutomaticFieldInfo(field, location, scaleX, scaleY) {\n        // Fields\n        /**\n         * Internal variable to store location of the field.\n         * @private\n         */\n        this.pageNumberFieldLocation = new PointF();\n        /**\n         * Internal variable to store field.\n         * @private\n         */\n        this.pageNumberField = null;\n        /**\n         * Internal variable to store x scaling factor.\n         * @private\n         */\n        this.scaleX = 1;\n        /**\n         * Internal variable to store y scaling factor.\n         * @private\n         */\n        this.scaleY = 1;\n        if (typeof location === 'undefined' && field instanceof PdfAutomaticFieldInfo) {\n            this.pageNumberField = field.field;\n            this.pageNumberFieldLocation = field.location;\n            this.scaleX = field.scalingX;\n            this.scaleY = field.scalingY;\n        }\n        else if (typeof scaleX === 'undefined' && location instanceof PointF && field instanceof PdfAutomaticField) {\n            this.pageNumberField = field;\n            this.pageNumberFieldLocation = location;\n        }\n        else {\n            this.pageNumberField = field;\n            this.pageNumberFieldLocation = location;\n            this.scaleX = scaleX;\n            this.scaleY = scaleY;\n        }\n    }\n    Object.defineProperty(PdfAutomaticFieldInfo.prototype, \"location\", {\n        /* tslint:enable */\n        // Properties\n        /**\n         * Gets or sets the location.\n         * @private\n         */\n        get: function () {\n            return this.pageNumberFieldLocation;\n        },\n        set: function (value) {\n            this.pageNumberFieldLocation = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAutomaticFieldInfo.prototype, \"field\", {\n        /**\n         * Gets or sets the field.\n         * @private\n         */\n        get: function () {\n            return this.pageNumberField;\n        },\n        set: function (value) {\n            this.pageNumberField = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAutomaticFieldInfo.prototype, \"scalingX\", {\n        /**\n         * Gets or sets the scaling X factor.\n         * @private\n         */\n        get: function () {\n            return this.scaleX;\n        },\n        set: function (value) {\n            this.scaleX = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAutomaticFieldInfo.prototype, \"scalingY\", {\n        /**\n         * Gets or sets the scaling Y factor.\n         * @private\n         */\n        get: function () {\n            return this.scaleY;\n        },\n        set: function (value) {\n            this.scaleY = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfAutomaticFieldInfo;\n}());\nexport { PdfAutomaticFieldInfo };\n","/**\n * PdfGraphics.ts class for EJ2-PDF\n */\nimport { PdfColorSpace, TextRenderingMode, PdfFillMode, PdfTextAlignment } from './enum';\nimport { PdfVerticalAlignment, PdfBlendMode } from './enum';\nimport { PdfSubSuperScript } from './fonts/enum';\nimport { PdfStreamWriter } from './../input-output/pdf-stream-writer';\nimport { PdfPen } from './pdf-pen';\nimport { PdfBrush } from './brushes/pdf-brush';\nimport { PdfSolidBrush } from './brushes/pdf-solid-brush';\nimport { PdfFont } from './fonts/pdf-font';\nimport { PdfTransformationMatrix } from './pdf-transformation-matrix';\nimport { PointF, SizeF, RectangleF } from './../drawing/pdf-drawing';\nimport { ProcedureSets } from './constants';\nimport { PdfString } from './../primitives/pdf-string';\nimport { PdfStringFormat } from './fonts/pdf-string-format';\nimport { TemporaryDictionary } from './../collections/object-object-pair/dictionary';\nimport { PdfTransparency } from './pdf-transparency';\nimport { PdfStringLayouter, LineType } from './fonts/string-layouter';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\nimport { StringTokenizer } from './fonts/string-tokenizer';\nimport { PdfAutomaticFieldInfoCollection } from './../document/automatic-fields/automatic-field-info-collection';\nimport { PdfAutomaticFieldInfo } from './../document/automatic-fields/automatic-field-info';\nimport { Operators } from './../input-output/pdf-operators';\n/**\n * `PdfGraphics` class represents a graphics context of the objects.\n * It's used for performing all the graphics operations.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // add a new page to the document\n * let page1 : PdfPage = document.pages.add();\n * // set the font\n * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n * // create black brush\n * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n * //\n * //graphics of the page\n * let page1Graphics : PdfGraphics = page1.graphics;\n * // draw the text on the page1 graphics\n * page1Graphics.drawString('Hello World', font, blackBrush, new PointF(0, 0));\n * //\n * // save the document\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfGraphics = /** @class */ (function () {\n    function PdfGraphics(arg1, arg2, arg3) {\n        /**\n         * Represents the `Current color space`.\n         * @private\n         */\n        this.currentColorSpace = PdfColorSpace.Rgb;\n        /**\n         * Stores `previous rendering mode`.\n         * @private\n         */\n        this.previousTextRenderingMode = TextRenderingMode.Fill;\n        /**\n         * Previous `character spacing` value or 0.\n         * @private\n         */\n        this.previousCharacterSpacing = 0.0;\n        /**\n         * Previous `word spacing` value or 0.\n         * @private\n         */\n        this.previousWordSpacing = 0.0;\n        /**\n         * The `previously used text scaling` value.\n         * @private\n         */\n        this.previousTextScaling = 100.0;\n        /**\n         * Instance of `ProcedureSets` class.\n         * @private\n         */\n        this.procedureSets = new ProcedureSets();\n        /**\n         * To check wihether it is a `direct text rendering`.\n         * @default true\n         * @private\n         */\n        this.isNormalRender = true;\n        /**\n         * check whether to `use font size` to calculate the shift.\n         * @default false\n         * @private\n         */\n        this.isUseFontSize = false;\n        /**\n         * check whether the font is in `italic type`.\n         * @default false\n         * @private\n         */\n        this.isItalic = false;\n        /**\n         * Check whether it is an `emf Text Matrix`.\n         * @default false\n         * @private\n         */\n        this.isEmfTextScaled = false;\n        /**\n         * Check whether it is an `emf` call.\n         * @default false\n         * @private\n         */\n        this.isEmf = false;\n        /**\n         * Check whether it is an `emf plus` call.\n         * @default false\n         * @private\n         */\n        this.isEmfPlus = false;\n        /**\n         * Check whether it is in `base line format`.\n         * @default true\n         * @private\n         */\n        this.isBaselineFormat = true;\n        /**\n         * Emf Text `Scaling Factor`.\n         * @private\n         */\n        this.emfScalingFactor = new SizeF(0, 0);\n        /**\n         * To check whether the `last color space` of document and garphics is saved.\n         * @private\n         */\n        this.colorSpaceChanged = false;\n        /**\n         * Stores an instance of `DictionaryProperties`.\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        /**\n         * Checks whether the x co-ordinate is need to set as client size or not.\n         * @hidden\n         * @private\n         */\n        this.isOverloadWithPosition = false;\n        /**\n         * Checks whether the x co-ordinate is need to set as client size or not.\n         * @hidden\n         * @private\n         */\n        this.isPointOverload = false;\n        /**\n         * Current colorspaces.\n         * @hidden\n         * @private\n         */\n        this.currentColorSpaces = ['RGB', 'CMYK', 'GrayScale', 'Indexed'];\n        /**\n         * Checks the current image `is optimized` or not.\n         * @default false.\n         * @private\n         */\n        this.isImageOptimized = false;\n        /**\n         * Stores the `graphics states`.\n         * @private\n         */\n        this.graphicsState = [];\n        /**\n         * Indicates whether the object `had trasparency`.\n         * @default false\n         * @private\n         */\n        this.istransparencySet = false;\n        /**\n         * Stores the instance of `PdfAutomaticFieldInfoCollection` class .\n         * @default null\n         * @private\n         */\n        this.internalAutomaticFields = null;\n        /**\n         * Stores the index of the start line that should draw with in the next page.\n         * @private\n         */\n        this.startCutIndex = -1;\n        if (arg3 instanceof PdfStreamWriter) {\n            this.pdfStreamWriter = arg3;\n            this.getResources = arg2;\n            this.canvasSize = arg1;\n            this.initialize();\n        }\n        else {\n            this.constructor(arg1, arg2, new PdfStreamWriter(arg3));\n        }\n    }\n    Object.defineProperty(PdfGraphics.prototype, \"stringLayoutResult\", {\n        //  Properties\n        /**\n         * Returns the `result` after drawing string.\n         * @private\n         */\n        get: function () {\n            return this.pdfStringLayoutResult;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphics.prototype, \"size\", {\n        /**\n         * Gets the `size` of the canvas.\n         * @private\n         */\n        get: function () {\n            return this.canvasSize;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphics.prototype, \"mediaBoxUpperRightBound\", {\n        /**\n         * Gets and Sets the value of `MediaBox upper right bound`.\n         * @private\n         */\n        get: function () {\n            if (typeof this.internalMediaBoxUpperRightBound === 'undefined') {\n                this.internalMediaBoxUpperRightBound = 0;\n            }\n            return this.internalMediaBoxUpperRightBound;\n        },\n        set: function (value) {\n            this.internalMediaBoxUpperRightBound = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphics.prototype, \"clientSize\", {\n        /**\n         * Gets the `size` of the canvas reduced by margins and page templates.\n         * @private\n         */\n        get: function () {\n            return new SizeF(this.clipBounds.width, this.clipBounds.height);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphics.prototype, \"colorSpace\", {\n        /**\n         * Gets or sets the current `color space` of the document\n         * @private\n         */\n        get: function () {\n            return this.currentColorSpace;\n        },\n        set: function (value) {\n            this.currentColorSpace = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphics.prototype, \"streamWriter\", {\n        /**\n         * Gets the `stream writer`.\n         * @private\n         */\n        get: function () {\n            return this.pdfStreamWriter;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphics.prototype, \"matrix\", {\n        /**\n         * Gets the `transformation matrix` reflecting current transformation.\n         * @private\n         */\n        get: function () {\n            if (this.transformationMatrix == null) {\n                this.transformationMatrix = new PdfTransformationMatrix();\n            }\n            return this.transformationMatrix;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphics.prototype, \"layer\", {\n        /**\n         * Gets the `layer` for the graphics, if exists.\n         * @private\n         */\n        get: function () {\n            return this.pageLayer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphics.prototype, \"page\", {\n        /**\n         * Gets the `page` for this graphics, if exists.\n         * @private\n         */\n        get: function () {\n            return this.pageLayer.page;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphics.prototype, \"automaticFields\", {\n        get: function () {\n            if (this.internalAutomaticFields == null || typeof this.internalAutomaticFields === 'undefined') {\n                this.internalAutomaticFields = new PdfAutomaticFieldInfoCollection();\n            }\n            return this.internalAutomaticFields;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Implementation\n    /**\n     * `Initializes` this instance.\n     * @private\n     */\n    PdfGraphics.prototype.initialize = function () {\n        this.bStateSaved = false;\n        this.currentPen = null;\n        this.currentBrush = null;\n        this.currentFont = null;\n        this.currentColorSpace = PdfColorSpace.Rgb;\n        this.bCSInitialized = false;\n        this.transformationMatrix = null;\n        this.previousTextRenderingMode = (-1); //.Fill;\n        this.previousCharacterSpacing = -1.0;\n        this.previousWordSpacing = -1.0;\n        this.previousTextScaling = -100.0;\n        // this.m_trasparencies = null;\n        this.currentStringFormat = null;\n        this.clipBounds = new RectangleF(new PointF(0, 0), this.size);\n        this.getResources.getResources().requireProcedureSet(this.procedureSets.pdf);\n    };\n    PdfGraphics.prototype.drawPdfTemplate = function (template, location, size) {\n        if (typeof size === 'undefined') {\n            if (template == null) {\n                throw Error('ArgumentNullException-template');\n            }\n            this.drawPdfTemplate(template, location, template.size);\n        }\n        else {\n            // let crossTable : PdfCrossTable = null;\n            // if (this.pageLayer != null) {\n            //     crossTable = (this.page as PdfPage).section.parentDocument.crossTable;\n            // }\n            if (template == null) {\n                throw Error('ArgumentNullException-template');\n            }\n            var scaleX = (template.width > 0) ? size.width / template.width : 1;\n            var scaleY = (template.height > 0) ? size.height / template.height : 1;\n            var bNeedScale = !(scaleX === 1 && scaleY === 1);\n            // Save state.\n            var state = this.save();\n            // Take into consideration that rect location is bottom/left.\n            var matrix = new PdfTransformationMatrix();\n            if (this.pageLayer != null) {\n                this.getTranslateTransform(location.x, location.y + size.height, matrix);\n            }\n            if (bNeedScale) {\n                this.getScaleTransform(scaleX, scaleY, matrix);\n            }\n            this.pdfStreamWriter.modifyCtm(matrix);\n            // Output template.\n            var resources = this.getResources.getResources();\n            var name_1 = resources.getName(template);\n            this.pdfStreamWriter.executeObject(name_1);\n            // Restore state.\n            this.restore(state);\n            //Transfer automatic fields from template.\n            var g = template.graphics;\n            if (g != null) {\n                for (var index = 0; index < g.automaticFields.automaticFields.length; index++) {\n                    var fieldInfo = g.automaticFields.automaticFields[index];\n                    var newLocation = new PointF(fieldInfo.location.x + location.x, fieldInfo.location.y + location.y);\n                    var scalingX = template.size.width == 0 ? 0 : size.width / template.size.width;\n                    var scalingY = template.size.height == 0 ? 0 : size.height / template.size.height;\n                    this.automaticFields.add(new PdfAutomaticFieldInfo(fieldInfo.field, newLocation, scalingX, scalingY));\n                    this.page.dictionary.modify();\n                }\n            }\n            this.getResources.getResources().requireProcedureSet(this.procedureSets.imageB);\n            this.getResources.getResources().requireProcedureSet(this.procedureSets.imageC);\n            this.getResources.getResources().requireProcedureSet(this.procedureSets.imageI);\n            this.getResources.getResources().requireProcedureSet(this.procedureSets.text);\n        }\n    };\n    /* tslint:disable */\n    /**\n     * @public\n     */\n    PdfGraphics.prototype.drawString = function (arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9) {\n        if (typeof arg1 === 'string' && arg2 instanceof PdfFont && (arg3 instanceof PdfPen || arg3 === null) && (arg4 instanceof PdfBrush || arg4 === null) && typeof arg5 === 'number' && typeof arg6 === 'number' && (arg7 instanceof PdfStringFormat || arg7 === null) && typeof arg8 === 'undefined') {\n            this.isOverloadWithPosition = true;\n            this.drawString(arg1, arg2, arg3, arg4, arg5, arg6, (this.clientSize.width - arg5), 0, arg7);\n        }\n        else {\n            var temparg3 = arg3;\n            var temparg4 = arg4;\n            var temparg5 = arg5;\n            var temparg6 = arg6;\n            var temparg7 = arg7;\n            var temparg8 = arg8;\n            var temparg9 = arg9;\n            var layouter = new PdfStringLayouter();\n            var result = layouter.layout(arg1, arg2, temparg9, new SizeF(temparg7, 0), this.isOverloadWithPosition, this.clientSize);\n            if (!result.empty) {\n                var rect = this.checkCorrectLayoutRectangle(result.actualSize, temparg5, temparg6, temparg9);\n                if (temparg7 <= 0) {\n                    temparg5 = rect.x;\n                    temparg7 = rect.width;\n                }\n                if (temparg8 <= 0) {\n                    temparg6 = rect.y;\n                    temparg8 = rect.height;\n                }\n                this.drawStringLayoutResult(result, arg2, temparg3, temparg4, new RectangleF(temparg5, temparg6, temparg7, temparg8), temparg9);\n                this.isEmfTextScaled = false;\n                this.emfScalingFactor = new SizeF(0, 0);\n            }\n            this.getResources.getResources().requireProcedureSet(this.procedureSets.text);\n            this.isNormalRender = true;\n            this.pdfStringLayoutResult = result;\n            this.isUseFontSize = false;\n        }\n    }; /* tslint:enable */\n    PdfGraphics.prototype.drawLine = function (arg1, arg2, arg3, arg4, arg5) {\n        if (arg2 instanceof PointF) {\n            var temparg2 = arg2;\n            var temparg3 = arg3;\n            this.drawLine(arg1, temparg2.x, temparg2.y, temparg3.x, temparg3.y);\n        }\n        else {\n            var temparg2 = arg2;\n            var temparg3 = arg3;\n            var temparg4 = arg4;\n            var temparg5 = arg5;\n            this.stateControl(arg1, null, null);\n            var sw = this.streamWriter;\n            sw.beginPath(temparg2, temparg3);\n            sw.appendLineSegment(temparg4, temparg5);\n            sw.strokePath();\n            this.getResources.getResources().requireProcedureSet(this.procedureSets.pdf);\n        }\n    };\n    /* tslint:disable */\n    PdfGraphics.prototype.drawRectangle = function (arg1, arg2, arg3, arg4, arg5, arg6) {\n        if (arg1 instanceof PdfPen && typeof arg2 === 'number') {\n            var temparg3 = arg3;\n            this.drawRectangle(arg1, null, arg2, temparg3, arg4, arg5);\n        }\n        else if (arg1 instanceof PdfBrush && typeof arg2 === 'number') {\n            var temparg3 = arg3;\n            this.drawRectangle(null, arg1, arg2, temparg3, arg4, arg5);\n        }\n        else {\n            var temparg3 = arg3;\n            var temparg4 = arg4;\n            var temparg5 = arg5;\n            var temparg6 = arg6;\n            if (arg2 instanceof PdfSolidBrush && arg2.color.isEmpty) {\n                arg2 = null;\n            }\n            var temparg1 = arg1;\n            var temparg2 = arg2;\n            this.stateControl(temparg1, temparg2, null);\n            this.streamWriter.appendRectangle(temparg3, temparg4, temparg5, temparg6);\n            this.drawPath(temparg1, temparg2, false);\n        }\n    };\n    PdfGraphics.prototype.drawPath = function (arg1, arg2, arg3, arg4) {\n        if (typeof arg3 === 'boolean') {\n            var temparg3 = arg3;\n            this.drawPath(arg1, arg2, PdfFillMode.Winding, temparg3);\n        }\n        else {\n            var temparg3 = arg3;\n            var temparg4 = arg4;\n            var isPen = arg1 != null;\n            var isBrush = arg2 != null;\n            var isEvenOdd = (temparg3 === PdfFillMode.Alternate);\n            if (isPen && isBrush) {\n                this.streamWriter.fillStrokePath(isEvenOdd);\n            }\n            else if (!isPen && !isBrush) {\n                this.streamWriter.endPath();\n            }\n            else if (isPen) {\n                this.streamWriter.strokePath();\n            }\n            else {\n                this.streamWriter.fillPath(isEvenOdd);\n            }\n        }\n    };\n    /* tslint:disable */\n    PdfGraphics.prototype.drawImage = function (arg1, arg2, arg3, arg4, arg5) {\n        if (typeof arg2 === 'number' && typeof arg3 === 'number' && typeof arg4 === 'undefined') {\n            var size = arg1.physicalDimension;\n            this.drawImage(arg1, arg2, arg3, size.width, size.height);\n        }\n        else {\n            var temparg2 = arg2;\n            var temparg3 = arg3;\n            var temparg4 = arg4;\n            var temparg5 = arg5;\n            arg1.save();\n            var matrix = new PdfTransformationMatrix();\n            this.getTranslateTransform(temparg2, (temparg3 + temparg5), matrix);\n            this.getScaleTransform(arg4, arg5, matrix);\n            this.pdfStreamWriter.write('q');\n            this.pdfStreamWriter.modifyCtm(matrix);\n            // Output template.\n            var resources = this.getResources.getResources();\n            if (typeof this.pageLayer !== 'undefined' && this.page != null) {\n                resources.document = this.page.document;\n            }\n            var name_2 = resources.getName(arg1);\n            if (typeof this.pageLayer !== 'undefined') {\n                this.page.setResources(resources);\n            }\n            this.pdfStreamWriter.executeObject(name_2);\n            this.pdfStreamWriter.write(Operators.restoreState);\n            this.pdfStreamWriter.write(Operators.newLine);\n            var resource = this.getResources.getResources();\n            resource.requireProcedureSet(this.procedureSets.imageB);\n            resource.requireProcedureSet(this.procedureSets.imageC);\n            resource.requireProcedureSet(this.procedureSets.imageI);\n            resource.requireProcedureSet(this.procedureSets.text);\n        }\n    };\n    //Implementation\n    /* tslint:disable */\n    /**\n     * Returns `bounds` of the line info.\n     * @private\n     */\n    PdfGraphics.prototype.getLineBounds = function (lineIndex, result, font, layoutRectangle, format) {\n        var bounds;\n        if (!result.empty && lineIndex < result.lineCount && lineIndex >= 0) {\n            var line = result.lines[lineIndex];\n            var vShift = this.getTextVerticalAlignShift(result.actualSize.height, layoutRectangle.height, format);\n            var y = vShift + layoutRectangle.y + (result.lineHeight * lineIndex);\n            var lineWidth = line.width;\n            var hShift = this.getHorizontalAlignShift(lineWidth, layoutRectangle.width, format);\n            var lineIndent = this.getLineIndent(line, format, layoutRectangle, (lineIndex === 0));\n            hShift += (!this.rightToLeft(format)) ? lineIndent : 0;\n            var x = layoutRectangle.x + hShift;\n            /* tslint:disable */\n            var width = (!this.shouldJustify(line, layoutRectangle.width, format)) ? lineWidth - lineIndent : layoutRectangle.width - lineIndent; /* tslint:enable */\n            var height = result.lineHeight;\n            bounds = new RectangleF(x, y, width, height);\n        }\n        else {\n            bounds = new RectangleF(0, 0, 0, 0);\n        }\n        return bounds;\n    };\n    /**\n     * Creates `lay outed rectangle` depending on the text settings.\n     * @private\n     */\n    PdfGraphics.prototype.checkCorrectLayoutRectangle = function (textSize, x, y, format) {\n        var layoutedRectangle = new RectangleF(x, y, textSize.width, textSize.width);\n        if (format != null) {\n            switch (format.alignment) {\n                case PdfTextAlignment.Center:\n                    layoutedRectangle.x -= layoutedRectangle.width / 2;\n                    break;\n                case PdfTextAlignment.Right:\n                    layoutedRectangle.x -= layoutedRectangle.width;\n                    break;\n            }\n            switch (format.lineAlignment) {\n                case PdfVerticalAlignment.Middle:\n                    layoutedRectangle.y -= layoutedRectangle.height / 2;\n                    break;\n                case PdfVerticalAlignment.Bottom:\n                    layoutedRectangle.y -= layoutedRectangle.height;\n                    break;\n            }\n        }\n        return layoutedRectangle;\n    };\n    /**\n     * Sets the `layer` for the graphics.\n     * @private\n     */\n    PdfGraphics.prototype.setLayer = function (layer) {\n        this.pageLayer = layer;\n        var page = layer.page;\n        if (page != null && typeof page !== 'undefined') {\n            page.beginSave = this.pageSave;\n        }\n    };\n    /**\n     * Adding page number field before page saving.\n     * @private\n     */\n    /* tslint:disable */\n    PdfGraphics.prototype.pageSave = function (page) {\n        if (page.graphics.automaticFields != null) {\n            for (var i = 0; i < page.graphics.automaticFields.automaticFields.length; i++) {\n                var fieldInfo = page.graphics.automaticFields.automaticFields[i];\n                fieldInfo.field.performDraw(page.graphics, fieldInfo.location, fieldInfo.scalingX, fieldInfo.scalingY);\n            }\n        }\n    };\n    /**\n     * `Draws a layout result`.\n     * @private\n     */\n    PdfGraphics.prototype.drawStringLayoutResult = function (result, font, pen, brush, layoutRectangle, format) {\n        if (!result.empty) {\n            this.applyStringSettings(font, pen, brush, format, layoutRectangle);\n            // Set text scaling\n            var textScaling = (format != null) ? format.horizontalScalingFactor : 100.0;\n            if (textScaling !== this.previousTextScaling && !this.isEmfTextScaled) {\n                this.pdfStreamWriter.setTextScaling(textScaling);\n                this.previousTextScaling = textScaling;\n            }\n            var height = (format == null || format.lineSpacing === 0) ? font.height : format.lineSpacing + font.height;\n            var subScript = (format != null && format.subSuperScript === PdfSubSuperScript.SubScript);\n            var shift = 0;\n            shift = (subScript) ? height - (font.height + font.metrics.getDescent(format)) : (height - font.metrics.getAscent(format));\n            this.shift = shift;\n            this.pdfStreamWriter.startNextLine(layoutRectangle.x, layoutRectangle.y - shift);\n            this.pdfStreamWriter.setLeading(+height);\n            var resultHeight = 0;\n            var remainingString = '';\n            for (var i = 0; i < result.lines.length; i++) {\n                resultHeight += result.lineHeight;\n                if ((layoutRectangle.y + resultHeight) > this.clientSize.height) {\n                    this.startCutIndex = i;\n                    break;\n                }\n            }\n            for (var j = this.startCutIndex; (j < result.lines.length && j >= 0); j++) {\n                remainingString += result.lines[j].text;\n            }\n            var bounds = new RectangleF(layoutRectangle.x, layoutRectangle.y, layoutRectangle.width, layoutRectangle.height);\n            this.drawLayoutResult(result, font, format, layoutRectangle);\n            this.underlineStrikeoutText(pen, brush, result, font, bounds, format);\n            this.isEmfPlus = false;\n            this.isUseFontSize = false;\n            if (this.startCutIndex !== -1) {\n                var page = this.getNextPage();\n                page.graphics.drawString(remainingString, font, pen, brush, layoutRectangle.x, 0, layoutRectangle.width, 0, format);\n            }\n        }\n        else {\n            throw new Error('ArgumentNullException:result');\n        }\n    };\n    /**\n     * Gets the `next page`.\n     * @private\n     */\n    PdfGraphics.prototype.getNextPage = function () {\n        var section = this.currentPage.section;\n        var nextPage = null;\n        var index = section.indexOf(this.currentPage);\n        if (index === section.count - 1) {\n            nextPage = section.add();\n        }\n        else {\n            nextPage = section.getPages()[index + 1];\n        }\n        return nextPage;\n    };\n    PdfGraphics.prototype.setClip = function (rectangle, mode) {\n        if (typeof mode === 'undefined') {\n            this.setClip(rectangle, PdfFillMode.Winding);\n        }\n        else {\n            this.pdfStreamWriter.appendRectangle(rectangle);\n            this.pdfStreamWriter.clipPath((mode === PdfFillMode.Alternate));\n        }\n    };\n    /**\n     * Applies all the `text settings`.\n     * @private\n     */\n    PdfGraphics.prototype.applyStringSettings = function (font, pen, brush, format, bounds) {\n        var setLineWidth = false;\n        var tm = this.getTextRenderingMode(pen, brush, format);\n        this.stateControl(pen, brush, font, format);\n        this.pdfStreamWriter.beginText();\n        if ((tm) !== this.previousTextRenderingMode) {\n            this.pdfStreamWriter.setTextRenderingMode(tm);\n            this.previousTextRenderingMode = tm;\n        }\n        // Set character spacing.\n        var cs = (format != null) ? format.characterSpacing : 0;\n        if (cs !== this.previousCharacterSpacing && !this.isEmfTextScaled) {\n            this.pdfStreamWriter.setCharacterSpacing(cs);\n            this.previousCharacterSpacing = cs;\n        }\n        // Set word spacing.\n        // NOTE: it works only if the space code is equal to 32 (0x20).\n        var ws = (format != null) ? format.wordSpacing : 0;\n        if (ws !== this.previousWordSpacing) {\n            this.pdfStreamWriter.setWordSpacing(ws);\n            this.previousWordSpacing = ws;\n        }\n    };\n    /**\n     * Calculates `shift value` if the text is vertically aligned.\n     * @private\n     */\n    PdfGraphics.prototype.getTextVerticalAlignShift = function (textHeight, boundsHeight, format) {\n        var shift = 0;\n        if (boundsHeight >= 0 && format != null && format.lineAlignment !== PdfVerticalAlignment.Top) {\n            switch (format.lineAlignment) {\n                case PdfVerticalAlignment.Middle:\n                    shift = (boundsHeight - textHeight) / 2;\n                    break;\n                case PdfVerticalAlignment.Bottom:\n                    shift = boundsHeight - textHeight;\n                    break;\n            }\n        }\n        return shift;\n    };\n    /* tslint:disable */\n    /**\n     * `Draws layout result`.\n     * @private\n     */\n    PdfGraphics.prototype.drawLayoutResult = function (result, font, format, layoutRectangle) {\n        var vAlignShift = this.getTextVerticalAlignShift(result.actualSize.height, layoutRectangle.height, format);\n        if (vAlignShift !== 0) {\n            this.pdfStreamWriter.startNextLine(0, vAlignShift);\n        }\n        var lines = result.lines;\n        for (var i = 0, len = lines.length; (i < len && i !== this.startCutIndex); i++) {\n            var lineInfo = lines[i];\n            var line = lineInfo.text;\n            var lineWidth = lineInfo.width;\n            var hAlignShift = this.getHorizontalAlignShift(lineWidth, layoutRectangle.width, format);\n            var lineIndent = this.getLineIndent(lineInfo, format, layoutRectangle, (i === 0));\n            hAlignShift += (!this.rightToLeft(format)) ? lineIndent : 0;\n            if (hAlignShift !== 0 && !this.isEmfTextScaled) {\n                this.pdfStreamWriter.startNextLine(hAlignShift, 0);\n            }\n            this.drawAsciiLine(lineInfo, layoutRectangle, font, format);\n            if (hAlignShift !== 0 && !this.isEmfTextScaled) {\n                this.pdfStreamWriter.startNextLine(-hAlignShift, 0);\n            }\n            if (this.isOverloadWithPosition && lines.length > 1) {\n                this.pdfStreamWriter.startNextLine(-(layoutRectangle.x), 0);\n                layoutRectangle.x = 0;\n                layoutRectangle.width = this.clientSize.width;\n                this.isOverloadWithPosition = false;\n                this.isPointOverload = true;\n            }\n        }\n        this.getResources.getResources().requireProcedureSet(this.procedureSets.text);\n        if (vAlignShift !== 0) {\n            this.pdfStreamWriter.startNextLine(0, -(vAlignShift - result.lineHeight));\n        }\n        this.pdfStreamWriter.endText();\n    };\n    /**\n     * `Draws Ascii line`.\n     * @private\n     */\n    PdfGraphics.prototype.drawAsciiLine = function (lineInfo, layoutRectangle, font, format) {\n        this.justifyLine(lineInfo, layoutRectangle.width, format);\n        var value = '';\n        if (lineInfo.text.indexOf('(') !== -1 || lineInfo.text.indexOf(')') !== -1) {\n            for (var i = 0; i < lineInfo.text.length; i++) {\n                if (lineInfo.text[i] === '(') {\n                    value += '\\\\\\(';\n                }\n                else if (lineInfo.text[i] === ')') {\n                    value += '\\\\\\)';\n                }\n                else {\n                    value += lineInfo.text[i];\n                }\n            }\n        }\n        if (value === '') {\n            value = lineInfo.text;\n        }\n        var line = '(' + value + ')';\n        this.pdfStreamWriter.showNextLineText(new PdfString(line));\n    };\n    /**\n     * `Justifies` the line if needed.\n     * @private\n     */\n    PdfGraphics.prototype.justifyLine = function (lineInfo, boundsWidth, format) {\n        var line = lineInfo.text;\n        var lineWidth = lineInfo.width;\n        var shouldJustify = this.shouldJustify(lineInfo, boundsWidth, format);\n        var hasWordSpacing = (format != null && format.wordSpacing !== 0);\n        var symbols = StringTokenizer.spaces;\n        var whitespacesCount = StringTokenizer.getCharsCount(line, symbols);\n        var wordSpace = 0;\n        if (shouldJustify) {\n            // Correct line width.\n            if (hasWordSpacing) {\n                lineWidth -= (whitespacesCount * format.wordSpacing);\n            }\n            var difference = boundsWidth - lineWidth;\n            wordSpace = difference / whitespacesCount;\n            this.pdfStreamWriter.setWordSpacing(wordSpace);\n        }\n        else {\n            // If there is justifying, but the line shouldn't be justified, restore default word spacing.\n            if (hasWordSpacing) {\n                this.pdfStreamWriter.setWordSpacing(format.wordSpacing);\n            }\n            else {\n                this.pdfStreamWriter.setWordSpacing(0);\n            }\n        }\n        return wordSpace;\n    };\n    /**\n     * `Reset` or reinitialize the current graphic value.\n     * @private\n     */\n    PdfGraphics.prototype.reset = function (size) {\n        this.canvasSize = size;\n        this.streamWriter.clear();\n        this.initialize();\n        this.initializeCoordinates();\n    };\n    /**\n     * Checks whether the line should be `justified`.\n     * @private\n     */\n    PdfGraphics.prototype.shouldJustify = function (lineInfo, boundsWidth, format) {\n        var line = lineInfo.text;\n        var lineWidth = lineInfo.width;\n        var justifyStyle = (format != null && format.alignment === PdfTextAlignment.Justify);\n        var goodWidth = (boundsWidth >= 0 && lineWidth < boundsWidth);\n        var symbols = StringTokenizer.spaces;\n        var whitespacesCount = StringTokenizer.getCharsCount(line, symbols);\n        var hasSpaces = (whitespacesCount > 0 && line[0] !== StringTokenizer.whiteSpace);\n        var goodLineBreakStyle = ((lineInfo.lineType & LineType.LayoutBreak) > 0);\n        /* tslint:disable */\n        var shouldJustify = (justifyStyle && goodWidth && hasSpaces && (goodLineBreakStyle || format.alignment === PdfTextAlignment.Justify)); /* tslint:enable */\n        return shouldJustify;\n    };\n    /* tslint:disable */\n    /**\n     * Emulates `Underline, Strikeout` of the text if needed.\n     * @private\n     */\n    PdfGraphics.prototype.underlineStrikeoutText = function (pen, brush, result, font, layoutRectangle, format) {\n        if (font.underline || font.strikeout) {\n            // Calculate line width.\n            var linePen = this.createUnderlineStikeoutPen(pen, brush, font, format);\n            if (linePen != null) {\n                // Approximate line positions.\n                var vShift = this.getTextVerticalAlignShift(result.actualSize.height, layoutRectangle.height, format);\n                var underlineYOffset = 0;\n                underlineYOffset = layoutRectangle.y + vShift + font.metrics.getAscent(format) + 1.5 * linePen.width;\n                var strikeoutYOffset = layoutRectangle.y + vShift + font.metrics.getHeight(format) / 2 + 1.5 * linePen.width;\n                var lines = result.lines;\n                // Run through the text and draw lines.\n                for (var i = 0, len = result.lineCount; i < len; i++) {\n                    var lineInfo = lines[i];\n                    var line = lineInfo.text;\n                    var lineWidth = lineInfo.width;\n                    var hShift = this.getHorizontalAlignShift(lineWidth, layoutRectangle.width, format);\n                    var lineIndent = this.getLineIndent(lineInfo, format, layoutRectangle, (i === 0));\n                    hShift += (!this.rightToLeft(format)) ? lineIndent : 0;\n                    var x1 = layoutRectangle.x + hShift;\n                    /* tslint:disable */\n                    var x2 = (!this.shouldJustify(lineInfo, layoutRectangle.width, format)) ? x1 + lineWidth - lineIndent : x1 + layoutRectangle.width - lineIndent;\n                    /* tslint:enable */\n                    if (font.underline) {\n                        var y = underlineYOffset;\n                        this.drawLine(linePen, x1, y, x2, y);\n                        underlineYOffset += result.lineHeight;\n                    }\n                    if (font.strikeout) {\n                        var y = strikeoutYOffset;\n                        this.drawLine(linePen, x1, y, x2, y);\n                        strikeoutYOffset += result.lineHeight;\n                    }\n                    if (this.isPointOverload && lines.length > 1) {\n                        layoutRectangle.x = 0;\n                        layoutRectangle.width = this.clientSize.width;\n                    }\n                }\n                this.isPointOverload = false;\n            }\n        }\n    };\n    /**\n     * `Creates a pen` for drawing lines in the text.\n     * @private\n     */\n    PdfGraphics.prototype.createUnderlineStikeoutPen = function (pen, brush, font, format) {\n        // Calculate line width.\n        var lineWidth = font.metrics.getSize(format) / 20;\n        var linePen = null;\n        // Create a pen fo the lines.\n        if (pen != null) {\n            linePen = new PdfPen(pen.color, lineWidth);\n        }\n        else if (brush != null) {\n            linePen = new PdfPen(brush, lineWidth);\n        }\n        return linePen;\n    };\n    /**\n     * Return `text rendering mode`.\n     * @private\n     */\n    PdfGraphics.prototype.getTextRenderingMode = function (pen, brush, format) {\n        var tm = TextRenderingMode.None;\n        if (pen != null && brush != null) {\n            tm = TextRenderingMode.FillStroke;\n        }\n        else if (pen != null) {\n            tm = TextRenderingMode.Stroke;\n        }\n        else {\n            tm = TextRenderingMode.Fill;\n        }\n        if (format != null && format.clipPath) {\n            tm |= TextRenderingMode.ClipFlag;\n        }\n        return tm;\n    };\n    /**\n     * Returns `line indent` for the line.\n     * @private\n     */\n    PdfGraphics.prototype.getLineIndent = function (lineInfo, format, layoutBounds, firstLine) {\n        var lineIndent = 0;\n        var firstParagraphLine = ((lineInfo.lineType & LineType.FirstParagraphLine) > 0);\n        if (format != null && firstParagraphLine) {\n            lineIndent = (firstLine) ? format.firstLineIndent : format.paragraphIndent;\n            lineIndent = (layoutBounds.width > 0) ? Math.min(layoutBounds.width, lineIndent) : lineIndent;\n        }\n        return lineIndent;\n    };\n    /**\n     * Calculates shift value if the line is `horizontaly aligned`.\n     * @private\n     */\n    PdfGraphics.prototype.getHorizontalAlignShift = function (lineWidth, boundsWidth, format) {\n        var shift = 0;\n        if (boundsWidth >= 0 && format != null && format.alignment !== PdfTextAlignment.Left) {\n            switch (format.alignment) {\n                case PdfTextAlignment.Center:\n                    shift = (boundsWidth - lineWidth) / 2;\n                    break;\n                case PdfTextAlignment.Right:\n                    shift = boundsWidth - lineWidth;\n                    break;\n            }\n        }\n        return shift;\n    };\n    /**\n     * Gets or sets the value that indicates `text direction` mode.\n     * @private\n     */\n    PdfGraphics.prototype.rightToLeft = function (format) {\n        var rtl = (format != null && format.rightToLeft);\n        return rtl;\n    };\n    PdfGraphics.prototype.stateControl = function (pen, brush, font, format) {\n        if (typeof format === 'undefined') {\n            this.stateControl(pen, brush, font, null);\n        }\n        else {\n            var saveState = false;\n            if (brush !== null) {\n                var solidBrush = brush;\n                if (typeof this.pageLayer !== 'undefined' && this.pageLayer != null) {\n                    if (this.colorSpaceChanged === false) {\n                        this.lastDocumentCS = this.pageLayer.page.document.colorSpace;\n                        this.lastGraphicsCS = this.pageLayer.page.graphics.colorSpace;\n                        this.colorSpace = this.pageLayer.page.document.colorSpace;\n                        this.currentColorSpace = this.pageLayer.page.document.colorSpace;\n                        this.colorSpaceChanged = true;\n                    }\n                }\n                this.initCurrentColorSpace(this.currentColorSpace);\n            }\n            else if (pen != null) {\n                var pdfPen = pen;\n                if (typeof this.pageLayer !== 'undefined' && this.pageLayer != null) {\n                    /* tslint:disable */\n                    this.colorSpace = this.pageLayer.page.document.colorSpace;\n                    this.currentColorSpace = this.pageLayer.page.document.colorSpace;\n                }\n                this.initCurrentColorSpace(this.currentColorSpace);\n            }\n            this.penControl(pen, saveState);\n            this.brushControl(brush, saveState);\n            this.fontControl(font, format, saveState);\n        }\n    };\n    /**\n     * Initializes the `current color space`.\n     * @private\n     */\n    PdfGraphics.prototype.initCurrentColorSpace = function (colorspace) {\n        var re = this.getResources.getResources();\n        if (!this.bCSInitialized) {\n            this.pdfStreamWriter.setColorSpace('Device' + this.currentColorSpaces[this.currentColorSpace], true);\n            this.pdfStreamWriter.setColorSpace('Device' + this.currentColorSpaces[this.currentColorSpace], false);\n            this.bCSInitialized = true;\n        }\n    };\n    /**\n     * Controls the `pen state`.\n     * @private\n     */\n    PdfGraphics.prototype.penControl = function (pen, saveState) {\n        if (pen != null) {\n            this.currentPen = pen;\n            this.colorSpace = PdfColorSpace.Rgb;\n            /* tslint:disable */\n            pen.monitorChanges(this.currentPen, this.pdfStreamWriter, this.getResources, saveState, this.colorSpace, this.matrix.clone());\n            /* tslint:enable */\n            this.currentPen = pen.clone();\n        }\n    };\n    /**\n     * Controls the `brush state`.\n     * @private\n     */\n    PdfGraphics.prototype.brushControl = function (brush, saveState) {\n        if (brush != null) {\n            this.currentBrush = brush;\n            /* tslint:disable */\n            brush.monitorChanges(this.currentBrush, this.pdfStreamWriter, this.getResources, saveState, this.colorSpace);\n            /* tslint:enable */\n            this.currentBrush = brush;\n            brush = null;\n        }\n    };\n    /**\n     * Saves the font and other `font settings`.\n     * @private\n     */\n    PdfGraphics.prototype.fontControl = function (font, format, saveState) {\n        if (font != null) {\n            var curSubSuper = (format != null) ? format.subSuperScript : PdfSubSuperScript.None;\n            /* tslint:disable */\n            var prevSubSuper = (this.currentStringFormat != null) ? this.currentStringFormat.subSuperScript : PdfSubSuperScript.None; /* tslint:enable */\n            if (saveState || font !== this.currentFont || curSubSuper !== prevSubSuper) {\n                var resources = this.getResources.getResources();\n                this.currentFont = font;\n                this.currentStringFormat = format;\n                var size = font.metrics.getSize(format);\n                /* tslint:disable */\n                this.isEmfTextScaled = false;\n                var fontName = resources.getName(font);\n                this.pdfStreamWriter.setFont(font, fontName, size);\n            }\n        }\n    };\n    PdfGraphics.prototype.setTransparency = function (arg1, arg2, arg3) {\n        if (typeof arg2 === 'undefined') {\n            this.istransparencySet = true;\n            this.setTransparency(arg1, arg1, PdfBlendMode.Normal);\n        }\n        else if (typeof arg2 === 'number' && typeof arg3 === 'undefined') {\n            this.setTransparency(arg1, arg2, PdfBlendMode.Normal);\n        }\n        else {\n            if (this.trasparencies == null) {\n                this.trasparencies = new TemporaryDictionary();\n            }\n            var transp = null;\n            var td = new TransparencyData(arg1, arg2, arg3);\n            if (this.trasparencies.containsKey(td)) {\n                transp = this.trasparencies.getValue(td);\n            }\n            if (transp == null) {\n                transp = new PdfTransparency(arg1, arg2, arg3);\n                this.trasparencies.setValue(td, transp);\n            }\n            var resources = this.getResources.getResources();\n            var name_3 = resources.getName(transp);\n            var sw = this.streamWriter;\n            sw.setGraphicsState(name_3);\n        }\n    };\n    PdfGraphics.prototype.clipTranslateMargins = function (x, y, left, top, right, bottom) {\n        if (x instanceof RectangleF && typeof y === 'undefined') {\n            this.clipBounds = x;\n            this.pdfStreamWriter.writeComment('Clip margins.');\n            this.pdfStreamWriter.appendRectangle(x);\n            this.pdfStreamWriter.closePath();\n            this.pdfStreamWriter.clipPath(false);\n            this.pdfStreamWriter.writeComment('Translate co-ordinate system.');\n            this.translateTransform(x.x, x.y);\n        }\n        else if (typeof x === 'number') {\n            var clipArea = new RectangleF(left, top, this.size.width - left - right, this.size.height - top - bottom);\n            this.clipBounds = clipArea;\n            this.pdfStreamWriter.writeComment(\"Clip margins.\");\n            this.pdfStreamWriter.appendRectangle(clipArea);\n            this.pdfStreamWriter.closePath();\n            this.pdfStreamWriter.clipPath(false);\n            this.pdfStreamWriter.writeComment(\"Translate co-ordinate system.\");\n            this.translateTransform(x, y);\n        }\n    };\n    /**\n     * `Updates y` co-ordinate.\n     * @private\n     */\n    PdfGraphics.prototype.updateY = function (y) {\n        return -y;\n    };\n    /**\n     * Used to `translate the transformation`.\n     * ```typescript\n     * // create a new PDF document\n     * let document : PdfDocument = new PdfDocument();\n     * // create a new page\n     * let page1 : PdfPage = document.pages.add();\n     * // set pen\n     * let pen : PdfPen = new PdfPen(new PdfColor(0, 0, 0));\n     * //\n     * // set translate transform\n     * page1.graphics.translateTransform(100, 100);\n     * //\n     * // draw the rectangle after applying translate transform\n     * page1.graphics.drawRectangle(pen, new RectangleF({x : 0, y : 0}, {width : 100, height : 50}));\n     * // save the document.\n     * document.save('output.pdf');\n     * // destroy the document\n     * document.destroy();\n     * ```\n     * @param offsetX The x-coordinate of the translation.\n     * @param offsetY The y-coordinate of the translation.\n     */\n    PdfGraphics.prototype.translateTransform = function (offsetX, offsetY) {\n        var matrix = new PdfTransformationMatrix();\n        this.getTranslateTransform(offsetX, offsetY, matrix);\n        this.pdfStreamWriter.modifyCtm(matrix);\n        this.matrix.multiply(matrix);\n    };\n    /**\n     * `Translates` coordinates of the input matrix.\n     * @private\n     */\n    PdfGraphics.prototype.getTranslateTransform = function (x, y, input) {\n        input.translate(x, this.updateY(y));\n        return input;\n    };\n    /* tslint:disable */\n    /**\n     * Applies the specified `scaling operation` to the transformation matrix of this Graphics by prepending it to the object's transformation matrix.\n     * ```typescript\n     * // create a new PDF document\n     * let document : PdfDocument = new PdfDocument();\n     * // create a new page\n     * let page1 : PdfPage = document.pages.add();\n     * // create pen\n     * let pen : PdfPen = new PdfPen(new PdfColor(0, 0, 0));\n     * //\n     * // apply scaling trasformation\n     * page1.graphics.scaleTransform(1.5, 2);\n     * //\n     * // draw the rectangle after applying scaling transform\n     * page1.graphics.drawRectangle(pen, new RectangleF({x : 100, y : 100}, {width : 100, height : 50}));\n     * // save the document.\n     * document.save('output.pdf');\n     * // destroy the document\n     * document.destroy();\n     * ```\n     * @param scaleX Scale factor in the x direction.\n     * @param scaleY Scale factor in the y direction.\n     */\n    /* tslint:enable */\n    PdfGraphics.prototype.scaleTransform = function (scaleX, scaleY) {\n        var matrix = new PdfTransformationMatrix();\n        this.getScaleTransform(scaleX, scaleY, matrix);\n        this.pdfStreamWriter.modifyCtm(matrix);\n        this.matrix.multiply(matrix);\n    };\n    /**\n     * `Scales` coordinates of the input matrix.\n     * @private\n     */\n    PdfGraphics.prototype.getScaleTransform = function (x, y, input) {\n        if (input == null) {\n            input = new PdfTransformationMatrix();\n        }\n        input.scale(x, y);\n        return input;\n    };\n    /**\n     * Applies the specified `rotation` to the transformation matrix of this Graphics.\n     * ```typescript\n     * // create a new PDF document\n     * let document : PdfDocument = new PdfDocument();\n     * // create a new page\n     * let page1 : PdfPage = document.pages.add();\n     * // create pen\n     * let pen : PdfPen = new PdfPen(new PdfColor(0, 0, 0));\n     * //\n     * // set RotateTransform with 25 degree of angle\n     * page1.graphics.rotateTransform(25);\n     * //\n     * // draw the rectangle after RotateTransformation\n     * page1.graphics.drawRectangle(pen, new RectangleF({x : 100, y : 100}, {width : 100, height : 50}));\n     * // save the document.\n     * document.save('output.pdf');\n     * // destroy the document\n     * document.destroy();\n     * ```\n     * @param angle Angle of rotation in degrees.\n     */\n    PdfGraphics.prototype.rotateTransform = function (angle) {\n        var matrix = new PdfTransformationMatrix();\n        this.getRotateTransform(angle, matrix);\n        this.pdfStreamWriter.modifyCtm(matrix);\n        this.matrix.multiply(matrix);\n    };\n    /**\n     * `Initializes coordinate system`.\n     * @private\n     */\n    PdfGraphics.prototype.initializeCoordinates = function () {\n        // Matrix equation: TM(T-1)=M', where T=[1 0 0 -1 0 h]\n        this.pdfStreamWriter.writeComment('Change co-ordinate system to left/top.');\n        // Translate co-ordinates only, don't flip.\n        if (this.mediaBoxUpperRightBound !== -(this.size.height)) {\n            if (this.cropBox == null) {\n                if (this.mediaBoxUpperRightBound === this.size.height || this.mediaBoxUpperRightBound === 0) {\n                    this.translateTransform(0, this.updateY(this.size.height));\n                }\n                else {\n                    this.translateTransform(0, this.updateY(this.mediaBoxUpperRightBound));\n                }\n            }\n        }\n    };\n    /**\n     * `Rotates` coordinates of the input matrix.\n     * @private\n     */\n    PdfGraphics.prototype.getRotateTransform = function (angle, input) {\n        if (input == null || typeof input === 'undefined') {\n            input = new PdfTransformationMatrix();\n        }\n        input.rotate(this.updateY(angle));\n        return input;\n    };\n    /**\n     * `Saves` the current state of this Graphics and identifies the saved state with a GraphicsState.\n     * ```typescript\n     * // create a new PDF document\n     * let document : PdfDocument = new PdfDocument();\n     * // create a new page\n     * let page1 : PdfPage = document.pages.add();\n     * // create pen\n     * let pen : PdfPen = new PdfPen(new PdfColor(0, 0, 0));\n     * //\n     * // save the graphics state\n     * let state1 : PdfGraphicsState = page1.graphics.save();\n     * //\n     * page1.graphics.scaleTransform(1.5, 2);\n     * // draw the rectangle\n     * page1.graphics.drawRectangle(pen, new RectangleF({x : 100, y : 100}, {width : 100, height : 50}));\n     * // restore the graphics state\n     * page1.graphics.restore(state1);\n     * // save the document.\n     * document.save('output.pdf');\n     * // destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfGraphics.prototype.save = function () {\n        var state = new PdfGraphicsState(this, this.matrix.clone());\n        state.brush = this.currentBrush;\n        state.pen = this.currentPen;\n        state.font = this.currentFont;\n        state.colorSpace = this.currentColorSpace;\n        state.characterSpacing = this.previousCharacterSpacing;\n        state.wordSpacing = this.previousWordSpacing;\n        state.textScaling = this.previousTextScaling;\n        state.textRenderingMode = this.previousTextRenderingMode;\n        this.graphicsState.push(state);\n        this.pdfStreamWriter.saveGraphicsState();\n        return state;\n    };\n    PdfGraphics.prototype.restore = function (state) {\n        if (typeof state === 'undefined') {\n            if (this.graphicsState.length > 0) {\n                this.doRestoreState();\n            }\n        }\n        else {\n            if (this.graphicsState.indexOf(state) !== -1) {\n                for (;;) {\n                    if (this.graphicsState.length === 0) {\n                        break;\n                    }\n                    var popState = this.doRestoreState();\n                    if (popState === state) {\n                        break;\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * `Restores graphics state`.\n     * @private\n     */\n    PdfGraphics.prototype.doRestoreState = function () {\n        var state = this.graphicsState.pop();\n        this.transformationMatrix = state.matrix;\n        this.currentBrush = state.brush;\n        this.currentPen = state.pen;\n        this.currentFont = state.font;\n        this.currentColorSpace = state.colorSpace;\n        this.previousCharacterSpacing = state.characterSpacing;\n        this.previousWordSpacing = state.wordSpacing;\n        this.previousTextScaling = state.textScaling;\n        this.previousTextRenderingMode = state.textRenderingMode;\n        this.pdfStreamWriter.restoreGraphicsState();\n        return state;\n    };\n    // Constants\n    /**\n     * Specifies the mask of `path type values`.\n     * @private\n     */\n    PdfGraphics.pathTypesValuesMask = 0xf;\n    /**\n     * Checks whether the object is `transparencyObject`.\n     * @hidden\n     * @private\n     */\n    PdfGraphics.transparencyObject = false;\n    return PdfGraphics;\n}());\nexport { PdfGraphics };\n/**\n * `GetResourceEventHandler` class is alternate for event handlers and delegates.\n * @private\n * @hidden\n */\nvar GetResourceEventHandler = /** @class */ (function () {\n    /**\n     * Initialize instance of `GetResourceEventHandler` class.\n     * Alternate for event handlers and delegates.\n     * @private\n     */\n    function GetResourceEventHandler(sender) {\n        this.sender = sender;\n    }\n    /**\n     * Return the instance of `PdfResources` class.\n     * @private\n     */\n    GetResourceEventHandler.prototype.getResources = function () {\n        return this.sender.getResources();\n    };\n    return GetResourceEventHandler;\n}());\nexport { GetResourceEventHandler };\nvar PdfGraphicsState = /** @class */ (function () {\n    function PdfGraphicsState(graphics, matrix) {\n        /**\n         * Stores `previous rendering mode`.\n         * @default TextRenderingMode.Fill\n         * @private\n         */\n        this.internalTextRenderingMode = TextRenderingMode.Fill;\n        /**\n         * `Previous character spacing` value or 0.\n         * @default 0.0\n         * @private\n         */\n        this.internalCharacterSpacing = 0.0;\n        /**\n         * `Previous word spacing` value or 0.\n         * @default 0.0\n         * @private\n         */\n        this.internalWordSpacing = 0.0;\n        /**\n         * The previously used `text scaling value`.\n         * @default 100.0\n         * @private\n         */\n        this.internalTextScaling = 100.0;\n        /**\n         * `Current color space`.\n         * @default PdfColorSpace.Rgb\n         * @private\n         */\n        this.pdfColorSpace = PdfColorSpace.Rgb;\n        if (typeof graphics !== 'undefined') {\n            this.pdfGraphics = graphics;\n            this.transformationMatrix = matrix;\n        }\n    }\n    Object.defineProperty(PdfGraphicsState.prototype, \"graphics\", {\n        // Properties\n        /**\n         * Gets the parent `graphics object`.\n         * @private\n         */\n        get: function () {\n            return this.pdfGraphics;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphicsState.prototype, \"matrix\", {\n        /**\n         * Gets the `current matrix`.\n         * @private\n         */\n        get: function () {\n            return this.transformationMatrix;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphicsState.prototype, \"characterSpacing\", {\n        /**\n         * Gets or sets the `current character spacing`.\n         * @private\n         */\n        get: function () {\n            return this.internalCharacterSpacing;\n        },\n        set: function (value) {\n            this.internalCharacterSpacing = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphicsState.prototype, \"wordSpacing\", {\n        /**\n         * Gets or sets the `word spacing` value.\n         * @private\n         */\n        get: function () {\n            return this.internalWordSpacing;\n        },\n        set: function (value) {\n            this.internalWordSpacing = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphicsState.prototype, \"textScaling\", {\n        /**\n         * Gets or sets the `text scaling` value.\n         * @private\n         */\n        get: function () {\n            return this.internalTextScaling;\n        },\n        set: function (value) {\n            this.internalTextScaling = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphicsState.prototype, \"pen\", {\n        /**\n         * Gets or sets the `current pen` object.\n         * @private\n         */\n        get: function () {\n            return this.pdfPen;\n        },\n        set: function (value) {\n            this.pdfPen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphicsState.prototype, \"brush\", {\n        /**\n         * Gets or sets the `brush`.\n         * @private\n         */\n        get: function () {\n            return this.pdfBrush;\n        },\n        set: function (value) {\n            this.pdfBrush = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphicsState.prototype, \"font\", {\n        /**\n         * Gets or sets the `current font` object.\n         * @private\n         */\n        get: function () {\n            return this.pdfFont;\n        },\n        set: function (value) {\n            this.pdfFont = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphicsState.prototype, \"colorSpace\", {\n        /**\n         * Gets or sets the `current color space` value.\n         * @private\n         */\n        get: function () {\n            return this.pdfColorSpace;\n        },\n        set: function (value) {\n            this.pdfColorSpace = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphicsState.prototype, \"textRenderingMode\", {\n        /**\n         * Gets or sets the `text rendering mode`.\n         * @private\n         */\n        get: function () {\n            return this.internalTextRenderingMode;\n        },\n        set: function (value) {\n            this.internalTextRenderingMode = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfGraphicsState;\n}());\nexport { PdfGraphicsState };\nvar TransparencyData = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initializes a new instance of the `TransparencyData` class.\n     * @private\n     */\n    function TransparencyData(alphaPen, alphaBrush, blendMode) {\n        this.alphaPen = alphaPen;\n        this.alphaBrush = alphaBrush;\n        this.blendMode = blendMode;\n    }\n    return TransparencyData;\n}());\n","import { PdfStream } from './../primitives/pdf-stream';\nimport { PdfGraphics, GetResourceEventHandler } from './../graphics/pdf-graphics';\nimport { PdfPageLayerCollection } from './pdf-page-layer-collection';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\nimport { PdfColorSpace } from './../graphics/enum';\n/**\n * The `PdfPageLayer` used to create layers in PDF document.\n * @private\n */\nvar PdfPageLayer = /** @class */ (function () {\n    function PdfPageLayer(page, streamClipPageTemplates) {\n        // private bSaved : boolean;\n        /**\n         * Local Variable to store the `color space` of the document.\n         * @private\n         */\n        this.pdfColorSpace = PdfColorSpace.Rgb;\n        /**\n         * Local Variable to set `visibility`.\n         * @default true\n         * @private\n         */\n        this.isVisible = true;\n        /**\n         * Indicates if `Sublayer` is present.\n         * @default false\n         * @private\n         */\n        this.sublayer = false;\n        /**\n         * Local variable to store `length` of the graphics.\n         * @default 0\n         * @private\n         */\n        this.contentLength = 0;\n        /**\n         * Instance for `PdfDictionaryProperties` Class.\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        if (typeof streamClipPageTemplates === 'undefined') {\n            this.pdfPage = page;\n            this.clipPageTemplates = true;\n            this.content = new PdfStream();\n        }\n        else if (streamClipPageTemplates instanceof PdfStream || streamClipPageTemplates === null) {\n            if (page == null) {\n                throw new Error('ArgumentNullException:page');\n            }\n            if (streamClipPageTemplates == null) {\n                throw new Error('ArgumentNullException:stream');\n            }\n            this.pdfPage = page;\n            this.content = streamClipPageTemplates;\n        }\n        else {\n            this.constructor(page);\n            this.clipPageTemplates = streamClipPageTemplates;\n        }\n    }\n    Object.defineProperty(PdfPageLayer.prototype, \"colorSpace\", {\n        // Properties\n        /**\n         * Get or set the `color space`.\n         * @private\n         */\n        get: function () {\n            return this.pdfColorSpace;\n        },\n        set: function (value) {\n            this.pdfColorSpace = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageLayer.prototype, \"page\", {\n        /**\n         * Gets parent `page` of the layer.\n         * @private\n         */\n        get: function () {\n            return this.pdfPage;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageLayer.prototype, \"layerId\", {\n        /**\n         * Gets and Sets the `id of the layer`.\n         * @private\n         */\n        get: function () {\n            return this.layerid;\n        },\n        set: function (value) {\n            this.layerid = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageLayer.prototype, \"name\", {\n        /**\n         * Gets or sets the `name` of the layer.\n         * @private\n         */\n        get: function () {\n            return this.layerName;\n        },\n        set: function (value) {\n            this.layerName = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageLayer.prototype, \"visible\", {\n        /**\n         * Gets or sets the `visibility` of the layer.\n         * @private\n         */\n        get: function () {\n            return this.isVisible;\n        },\n        set: function (value) {\n            this.isVisible = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageLayer.prototype, \"graphics\", {\n        /**\n         * Gets `Graphics` context of the layer, used to draw various graphical content on layer.\n         * @private\n         */\n        get: function () {\n            if ((this.pdfGraphics == null)) {\n                this.initializeGraphics(this.page);\n            }\n            return this.pdfGraphics;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageLayer.prototype, \"layers\", {\n        /**\n         * Gets the collection of `PdfPageLayer`, this collection handle by the class 'PdfPageLayerCollection'.\n         * @private\n         */\n        get: function () {\n            if (this.layer == null) {\n                this.layer = new PdfPageLayerCollection(this.page);\n                this.layer.sublayer = true;\n                return this.layer;\n            }\n            else {\n                return this.layer;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * `Adds` a new PDF Page layer.\n     * @private\n     */\n    PdfPageLayer.prototype.add = function () {\n        var layer = new PdfPageLayer(this.pdfPage);\n        layer.name = '';\n        return layer;\n    };\n    /**\n     * Returns a value indicating the `sign` of a single-precision floating-point number.\n     * @private\n     */\n    PdfPageLayer.prototype.sign = function (number) {\n        if (number === 0) {\n            return 0;\n        }\n        else if (number > 0) {\n            return 1;\n        }\n        else {\n            return -1;\n        }\n    };\n    /**\n     * `Initializes Graphics context` of the layer.\n     * @private\n     */\n    PdfPageLayer.prototype.initializeGraphics = function (page) {\n        var oPage = page;\n        var gr = new GetResourceEventHandler(this.page);\n        var cropBox = null;\n        this.pdfGraphics = new PdfGraphics(page.size, gr, this.content);\n        this.pdfGraphics.mediaBoxUpperRightBound = 0;\n        if (oPage != null) {\n            var sc = oPage.section.parent;\n            if (sc != null) {\n                this.pdfGraphics.colorSpace = sc.document.colorSpace;\n                this.colorSpace = sc.document.colorSpace;\n            }\n        }\n        // Transform coordinates to the left/top and activate margins.\n        var isSame = (this.sign(page.origin.y) === this.sign(page.origin.x));\n        // if (page != null) {\n        if (page.origin.x >= 0 && page.origin.y >= 0 || !(isSame)) {\n            this.pdfGraphics.initializeCoordinates();\n        }\n        else {\n            // this.m_graphics.InitializeCoordinates(page);\n        }\n        var clipRect = oPage.section.getActualBounds(oPage, true);\n        var margins = oPage.section.pageSettings.margins;\n        if (this.clipPageTemplates) {\n            if (page.origin.x >= 0 && page.origin.y >= 0) {\n                this.pdfGraphics.clipTranslateMargins(clipRect);\n            }\n        }\n        else {\n            this.graphics.clipTranslateMargins(clipRect.x, clipRect.y, margins.left, margins.top, margins.right, margins.bottom);\n        }\n        this.pdfGraphics.setLayer(this);\n        // this.bSaved = false;\n    };\n    Object.defineProperty(PdfPageLayer.prototype, \"element\", {\n        // IPdfWrapper Members\n        /**\n         * Gets the wrapped `element`.\n         * @private\n         */\n        get: function () {\n            return this.content;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfPageLayer;\n}());\nexport { PdfPageLayer };\n","/**\n * PdfCollection.ts class for EJ2-PDF\n * The class used to handle the collection of PdF objects.\n */\nvar PdfCollection = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initializes a new instance of the `Collection` class.\n     * @private\n     */\n    function PdfCollection() {\n        //\n    }\n    Object.defineProperty(PdfCollection.prototype, \"count\", {\n        // Properties\n        /**\n         * Gets the `Count` of stored objects.\n         * @private\n         */\n        get: function () {\n            if (typeof this.collection === 'undefined') {\n                this.collection = [];\n            }\n            return this.collection.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCollection.prototype, \"list\", {\n        /**\n         * Gets the `list` of stored objects.\n         * @private\n         */\n        get: function () {\n            if (typeof this.collection === 'undefined') {\n                this.collection = [];\n            }\n            return this.collection;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfCollection;\n}());\nexport { PdfCollection };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfPageLayerCollection.ts class for EJ2-PDF\n */\nimport { PdfPageBase } from './pdf-page-base';\nimport { PdfDictionary } from './../primitives/pdf-dictionary';\nimport { PdfPageLayer } from './pdf-page-layer';\nimport { PdfCollection } from './../general/pdf-collection';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { PdfStream } from './../primitives/pdf-stream';\n/**\n * The class provides methods and properties to handle the collections of `PdfPageLayer`.\n */\nvar PdfPageLayerCollection = /** @class */ (function (_super) {\n    __extends(PdfPageLayerCollection, _super);\n    function PdfPageLayerCollection(page) {\n        var _this = _super.call(this) || this;\n        /**\n         * Stores the `number of first level layers` in the document.\n         * @default 0\n         * @private\n         */\n        _this.parentLayerCount = 0;\n        /**\n         * Indicates if `Sublayer` is present.\n         * @default false\n         * @private\n         */\n        _this.sublayer = false;\n        /**\n         * Stores the `optional content dictionary`.\n         * @private\n         */\n        _this.optionalContent = new PdfDictionary();\n        if (page instanceof PdfPageBase) {\n            // if (page == null) {\n            //     throw new Error('ArgumentNullException:page');\n            // }\n            _this.page = page;\n            var lPage = page;\n            // if (lPage != null) {\n            _this.parseLayers(lPage);\n            // }\n        }\n        return _this;\n    }\n    PdfPageLayerCollection.prototype.items = function (index, value) {\n        if (typeof index === 'number' && typeof value === 'undefined') {\n            var obj = this.list[index];\n            return obj;\n        }\n        else {\n            if (value == null) {\n                throw new Error('ArgumentNullException: layer');\n            }\n            if (value.page !== this.page) {\n                throw new Error('ArgumentException: The layer belongs to another page');\n            }\n            // // Add/remove the layer.\n            // let layer : PdfPageLayer = this.items(index);\n            // if (layer != null) {\n            //     this.RemoveLayer(layer);\n            // }\n            // this.List[index] = value;\n            // this.InsertLayer(index, value);\n        }\n    };\n    PdfPageLayerCollection.prototype.add = function (firstArgument, secondArgument) {\n        if (typeof firstArgument === 'undefined') {\n            var layer = new PdfPageLayer(this.page);\n            layer.name = '';\n            this.add(layer);\n            return layer;\n        }\n        else if (firstArgument instanceof PdfPageLayer) {\n            // if (layer == null)\n            //     throw new ArgumentNullException(\"layer\");\n            // if (layer.Page != m_page)\n            //     throw new ArgumentException(\"The layer belongs to another page\");\n            var index = this.list.push(firstArgument);\n            // Register layer.\n            this.addLayer(index, firstArgument);\n            return index;\n        }\n        else {\n            return 0;\n        }\n    };\n    /**\n     * Registers `layer` at the page.\n     * @private\n     */\n    PdfPageLayerCollection.prototype.addLayer = function (index, layer) {\n        var reference = new PdfReferenceHolder(layer);\n        this.page.contents.add(reference);\n    };\n    // private RemoveLayer(layer : PdfPageLayer) : void {\n    //     if (layer == null) {\n    //         throw new Error('ArgumentNullException:layer');\n    //     }\n    //     let reference : PdfReferenceHolder = new PdfReferenceHolder(layer);\n    //     if (this.page != null) {\n    //         this.page.Contents.Remove(reference);\n    //     }\n    // }\n    /**\n     * Inserts `PdfPageLayer` into the collection at specified index.\n     * @private\n     */\n    PdfPageLayerCollection.prototype.insert = function (index, layer) {\n        // if (index < 0)\n        //     throw new ArgumentOutOfRangeException(\"index\", \"Value can not be less 0\");\n        // if (layer == null)\n        //     throw new ArgumentNullException(\"layer\");\n        // if (layer.Page != m_page)\n        //     throw new ArgumentException(\"The layer belongs to another page\");\n        var list = [];\n        var length = this.list.length;\n        for (var i = index; i < length; i++) {\n            list.push(this.list.pop());\n        }\n        this.list.push(layer);\n        for (var i = 0; i < list.length; i++) {\n            this.list.push(list[i]);\n        }\n        // Register layer.\n        this.insertLayer(index, layer);\n    };\n    /**\n     * Registers layer at the page.\n     * @private\n     */\n    PdfPageLayerCollection.prototype.insertLayer = function (index, layer) {\n        if (layer == null) {\n            throw new Error('ArgumentNullException:layer');\n        }\n        var reference = new PdfReferenceHolder(layer);\n        this.page.contents.insert(index, reference);\n    };\n    // tslint:disable\n    /**\n     * `Parses the layers`.\n     * @private\n     */\n    PdfPageLayerCollection.prototype.parseLayers = function (loadedPage) {\n        // if (loadedPage == null) {\n        //     throw new Error('ArgumentNullException:loadedPage');\n        // }\n        var contents = this.page.contents;\n        var resource = this.page.getResources();\n        var crossTable = null;\n        var ocproperties = null;\n        var propertie = null;\n        var isLayerAdded = false;\n        // if (loadedPage instanceof PdfPage) {\n        crossTable = loadedPage.crossTable;\n        // } else {\n        //     crossTable = (loadedPage as PdfLoadedPage).CrossTable;\n        //     Propertie = PdfCrossTable.Dereference(Resource[DictionaryProperties.Properties]) as PdfDictionary;\n        //     ocproperties = PdfCrossTable.Dereference((loadedPage as PdfLoadedPage).\n        //     Document.Catalog[DictionaryProperties.OCProperties]) as PdfDictionary;\n        // }\n        var saveStream = new PdfStream();\n        var restoreStream = new PdfStream();\n        var saveState = 'q';\n        var newLine = '\\n';\n        var restoreState = 'Q';\n        // for (let index : number = 0; index < contents.Items.length; index++) {\n        //     let obj : IPdfPrimitive = contents[index];\n        //     let stream : PdfStream = crossTable.GetObject(obj) as PdfStream;\n        //     if (stream == null)\n        //         throw new PdfDocumentException(\"Invalid contents array.\");\n        //     // if (stream.Compress)\n        //     {\n        //         if (!loadedPage.Imported)\n        //             stream.Decompress();\n        //     }\n        //     byte[] contentId = stream.Data;\n        //     string str = PdfString.ByteToString(contentId);\n        //     if (!loadedPage.Imported && (contents.Count == 1) && ((stream.Data[stream.Data.Length - 2] ==\n        //     RestoreState) || (stream.Data[stream.Data.Length - 1] == RestoreState)))\n        //     {\n        //         byte[] content = stream.Data;\n        //         byte[] data = new byte[content.Length + 4];\n        //         data[0] = SaveState;\n        //         data[1] = NewLine;\n        //         content.CopyTo(data, 2);\n        //         data[data.Length - 2] = NewLine;\n        //         data[data.Length - 1] = RestoreState;\n        //         stream.Data = data;\n        //     }\n        //     if (ocproperties != null)\n        //     {\n        //         if (Propertie != null)\n        //         {\n        //             foreach (KeyValuePair<PdfName, IPdfPrimitive> prop in Propertie.Items)\n        //             {\n        //                 String Key = prop.Key.ToString();\n        //                 PdfReferenceHolder refh = prop.Value as PdfReferenceHolder;\n        //                 PdfDictionary Dict = null;\n        //                 if (refh != null)\n        //                 {\n        //                     Dict = refh.Object as PdfDictionary;\n        //                 }\n        //                 else\n        //                 {\n        //                     Dict = prop.Value as PdfDictionary;\n        //                 }\n        //                 PdfDictionary m_usage = PdfCrossTable.Dereference(Dict[DictionaryProperties.Usage]) as PdfDictionary;\n        //                 if (m_usage != null)\n        //                 {\n        //                     if (str.Contains(Key))\n        //                     {\n        //                         PdfPageLayer layer = new PdfPageLayer(loadedPage, stream);\n        //                         PdfDictionary printoption = PdfCrossTable.Dereference(m_usage[DictionaryProperties.Print])\n        //                         as PdfDictionary;\n        //                         if (printoption != null)\n        //                         {\n        //                             layer.m_printOption = printoption;\n        //                             foreach (KeyValuePair<PdfName, IPdfPrimitive> value in printoption.Items)\n        //                             {\n        //                                 if (value.Key.Value.Equals(DictionaryProperties.PrintState))\n        //                                 {\n        //                                     string printState = (value.Value as PdfName).Value;\n        //                                     if (printState.Equals(DictionaryProperties.OCGON))\n        //                                     {\n        //                                         layer.PrintState = PdfPrintState.AlwaysPrint;\n        //                                         break;\n        //                                     }\n        //                                     else\n        //                                     {\n        //                                         layer.PrintState = PdfPrintState.NeverPrint;\n        //                                         break;\n        //                                     }\n        //                                 }\n        //                             }\n        //                         }\n        //                         PdfString layerName = PdfCrossTable.Dereference(Dict[DictionaryProperties.Name]) as PdfString;\n        //                         layer.Name = layerName.Value;\n        //                         List.add(layer);\n        //                         isLayerAdded = true;\n        //                         if(!str.Contains(\"EMC\"))\n        //                         break;\n        //                     }\n        //                 }\n        //                 else\n        //                 {\n        //                     if (str.Contains(Key))\n        //                     {\n        //                         PdfPageLayer layer = new PdfPageLayer(loadedPage, stream);\n        //                         List.add(layer);\n        //                         if(Dict.ContainsKey(DictionaryProperties.Name))\n        //                         {\n        //                         PdfString layerName = PdfCrossTable.Dereference(Dict[DictionaryProperties.Name]) as PdfString;\n        //                         layer.Name = layerName.Value;\n        //                         }\n        //                         isLayerAdded = true;\n        //                         break;\n        //                     }\n        //                 }\n        //             }\n        //         }\n        //     }\n        //     if (!isLayerAdded)\n        //     {\n        //         PdfPageLayer layer = new PdfPageLayer(loadedPage, stream);\n        //         List.add(layer);\n        //     }\n        //     else\n        //         isLayerAdded = false;\n        // }\n        var saveData = [];\n        saveData.push(saveState);\n        saveStream.data = saveData;\n        contents.insert(0, new PdfReferenceHolder(saveStream));\n        saveData = [];\n        saveData.push(restoreState);\n        restoreStream.data = saveData;\n        contents.insert(contents.count, new PdfReferenceHolder(restoreStream));\n    };\n    /**\n     * Returns `index of` the `PdfPageLayer` in the collection if exists, -1 otherwise.\n     * @private\n     */\n    PdfPageLayerCollection.prototype.indexOf = function (layer) {\n        if (layer == null) {\n            throw new Error('ArgumentNullException: layer');\n        }\n        var index = this.list.indexOf(layer);\n        return index;\n    };\n    return PdfPageLayerCollection;\n}(PdfCollection));\nexport { PdfPageLayerCollection };\n","/**\n * PdfTemplate.ts class for EJ2-PDF\n */\nimport { PdfStream } from './../../primitives/pdf-stream';\nimport { DictionaryProperties } from './../../input-output/pdf-dictionary-properties';\nimport { PdfArray } from './../../primitives/pdf-array';\nimport { PdfGraphics } from './../pdf-graphics';\nimport { PdfResources } from './../pdf-resources';\nimport { PdfName } from './../../primitives/pdf-name';\nimport { PointF, SizeF, RectangleF } from './../../drawing/pdf-drawing';\nimport { GetResourceEventHandler } from './../pdf-graphics';\n/**\n * Represents `Pdf Template` object.\n * @private\n */\nvar PdfTemplate = /** @class */ (function () {\n    function PdfTemplate(arg1, arg2) {\n        /**\n         * Initialize an instance for `DictionaryProperties` class.\n         * @private\n         * @hidden\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        /**\n         * Checks whether the transformation 'is performed'.\n         * @default true\n         * @private\n         */\n        this.writeTransformation = true;\n        if (typeof arg1 === 'undefined') {\n            //\n        }\n        else if (arg1 instanceof SizeF && typeof arg2 === 'undefined') {\n            this.content = new PdfStream();\n            var tempSize = new SizeF(arg1.width, arg1.height);\n            this.setSize(tempSize);\n            this.initialize();\n        }\n        else {\n            this.content = new PdfStream();\n            this.setSize(new SizeF(arg1, arg2));\n            this.initialize();\n        }\n    }\n    Object.defineProperty(PdfTemplate.prototype, \"size\", {\n        //Properties\n        /**\n         * Gets the size of the 'PdfTemplate'.\n         */\n        get: function () {\n            return this.templateSize;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTemplate.prototype, \"width\", {\n        /**\n         * Gets the width of the 'PdfTemplate'.\n         */\n        get: function () {\n            return this.size.width;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTemplate.prototype, \"height\", {\n        /**\n         * Gets the height of the 'PdfTemplate'.\n         */\n        get: function () {\n            return this.size.height;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTemplate.prototype, \"graphics\", {\n        /**\n         * Gets the `graphics` of the 'PdfTemplate'.\n         */\n        get: function () {\n            if (this.pdfGraphics == null || typeof this.pdfGraphics === 'undefined') {\n                var gr = new GetResourceEventHandler(this);\n                var g = new PdfGraphics(this.size, gr, this.content);\n                this.pdfGraphics = g;\n                // if(this.writeTransformation) {\n                // Transform co-ordinates to Top/Left.\n                this.pdfGraphics.initializeCoordinates();\n                // }\n            }\n            return this.pdfGraphics;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the resources and modifies the template dictionary.\n     * @private\n     */\n    PdfTemplate.prototype.getResources = function () {\n        if (this.resources == null) {\n            this.resources = new PdfResources();\n            this.content.items.setValue(this.dictionaryProperties.resources, this.resources);\n        }\n        return this.resources;\n    };\n    // Public methods\n    /**\n     * `Initialize` the type and subtype of the template.\n     * @private\n     */\n    PdfTemplate.prototype.initialize = function () {\n        this.addType();\n        this.addSubType();\n    };\n    /**\n     * `Adds type key`.\n     * @private\n     */\n    PdfTemplate.prototype.addType = function () {\n        var value = new PdfName(this.dictionaryProperties.xObject);\n        this.content.items.setValue(this.dictionaryProperties.type, value);\n    };\n    /**\n     * `Adds SubType key`.\n     * @private\n     */\n    PdfTemplate.prototype.addSubType = function () {\n        var value = new PdfName(this.dictionaryProperties.form);\n        this.content.items.setValue(this.dictionaryProperties.subtype, value);\n    };\n    PdfTemplate.prototype.reset = function (size) {\n        if (typeof size === 'undefined') {\n            if (this.resources != null) {\n                this.resources = null;\n                this.content.remove(this.dictionaryProperties.resources);\n            }\n            if (this.graphics != null) {\n                this.graphics.reset(this.size);\n            }\n        }\n        else {\n            this.setSize(size);\n            this.reset();\n        }\n    };\n    /**\n     * `Set the size` of the 'PdfTemplate'.\n     * @private\n     */\n    PdfTemplate.prototype.setSize = function (size) {\n        var rect = new RectangleF(new PointF(0, 0), size);\n        var val = PdfArray.fromRectangle(rect);\n        this.content.items.setValue(this.dictionaryProperties.bBox, val);\n        this.templateSize = size;\n    };\n    Object.defineProperty(PdfTemplate.prototype, \"element\", {\n        // /**\n        //  * Returns the value of current graphics.\n        //  * @private\n        //  */\n        // public GetGraphics(g : PdfGraphics) : PdfGraphics {\n        //     if (this.graphics == null || typeof this.graphics === 'undefined') {\n        //         this.graphics = g;\n        //         this.graphics.Size = this.Size;\n        //         this.graphics.StreamWriter = new PdfStreamWriter(this.content)\n        //         this.graphics.Initialize();\n        //         if(this.writeTransformation) {\n        //             this.graphics.InitializeCoordinates();\n        //         }\n        //     }\n        //     return this.graphics;\n        // }\n        // IPdfWrapper Members\n        /**\n         * Gets the `content stream` of 'PdfTemplate' class.\n         * @private\n         */\n        get: function () {\n            return this.content;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfTemplate;\n}());\nexport { PdfTemplate };\n","/**\n * ByteArray class\n * Used to keep information about image stream as byte array.\n * @private\n */\nvar ByteArray = /** @class */ (function () {\n    /**\n     * Initialize the new instance for `byte-array` class\n     * @hidden\n     * @private\n     */\n    function ByteArray(length) {\n        /**\n         * Current stream `position`.\n         * @default 0\n         * @private\n         */\n        this.mPosition = 0;\n        this.buffer = new Uint8Array(length);\n        this.dataView = new DataView(this.buffer.buffer);\n    }\n    Object.defineProperty(ByteArray.prototype, \"position\", {\n        /**\n         * Gets and Sets a current `position` of byte array.\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.mPosition;\n        },\n        set: function (value) {\n            this.mPosition = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Read` from current stream position.\n     * @default 0\n     * @hidden\n     * @private\n     */\n    ByteArray.prototype.read = function (buffer, offset, count) {\n        for (var index = offset; index < count; index++) {\n            var position = this.position;\n            buffer.buffer[index] = this.readByte(position);\n            this.position++;\n        }\n    };\n    /**\n     * @hidden\n     */\n    ByteArray.prototype.getBuffer = function (index) {\n        return this.buffer[index];\n    };\n    /**\n     * @hidden\n     */\n    ByteArray.prototype.writeFromBase64String = function (base64) {\n        var arr = this.encodedString(base64);\n        this.buffer = arr;\n    };\n    /**\n     * @hidden\n     */\n    ByteArray.prototype.encodedString = function (input) {\n        var keyStr = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n        var chr1;\n        var chr2;\n        var chr3;\n        var enc1;\n        var enc2;\n        var enc3;\n        var enc4;\n        var i = 0;\n        var resultIndex = 0;\n        var dataUrlPrefix = 'data:';\n        input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, '');\n        var totalLength = input.length * 3 / 4;\n        if (input.charAt(input.length - 1) === keyStr.charAt(64)) {\n            totalLength--;\n        }\n        var output = new Uint8Array(totalLength | 0);\n        while (i < input.length) {\n            enc1 = keyStr.indexOf(input.charAt(i++));\n            enc2 = keyStr.indexOf(input.charAt(i++));\n            enc3 = keyStr.indexOf(input.charAt(i++));\n            enc4 = keyStr.indexOf(input.charAt(i++));\n            chr1 = (enc1 << 2) | (enc2 >> 4);\n            chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\n            chr3 = ((enc3 & 3) << 6) | enc4;\n            output[resultIndex++] = chr1;\n            output[resultIndex++] = chr2;\n            output[resultIndex++] = chr3;\n        }\n        return output;\n    };\n    /**\n     * @hidden\n     */\n    ByteArray.prototype.readByte = function (offset) {\n        return (this.buffer[offset]);\n    };\n    Object.defineProperty(ByteArray.prototype, \"internalBuffer\", {\n        /**\n         * @hidden\n         */\n        get: function () {\n            return this.buffer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ByteArray.prototype, \"count\", {\n        /**\n         * @hidden\n         */\n        get: function () {\n            return this.buffer.byteLength;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return ByteArray;\n}());\nexport { ByteArray };\n","/**\n * `PdfBoolean` class is used to perform boolean related primitive operations.\n * @private\n */\nvar PdfBoolean = /** @class */ (function () {\n    //constructor\n    /**\n     * Initializes a new instance of the `PdfBoolean` class.\n     * @private\n     */\n    function PdfBoolean(value) {\n        /**\n         * Internal variable to store the `position`.\n         * @default -1\n         * @private\n         */\n        this.currentPosition = -1;\n        this.value = value;\n    }\n    Object.defineProperty(PdfBoolean.prototype, \"status\", {\n        //Properties\n        /**\n         * Gets or sets the `Status` of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.objectStatus;\n        },\n        set: function (value) {\n            this.objectStatus = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBoolean.prototype, \"isSaving\", {\n        /**\n         * Gets or sets a value indicating whether this document `is saving` or not.\n         * @private\n         */\n        get: function () {\n            return this.saving;\n        },\n        set: function (value) {\n            this.saving = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBoolean.prototype, \"objectCollectionIndex\", {\n        /**\n         * Gets or sets the `index` value of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.index;\n        },\n        set: function (value) {\n            this.index = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBoolean.prototype, \"position\", {\n        /**\n         * Gets or sets the `position` of the object.\n         * @private\n         */\n        get: function () {\n            return this.currentPosition;\n        },\n        set: function (value) {\n            this.currentPosition = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBoolean.prototype, \"clonedObject\", {\n        /**\n         * Returns `cloned object`.\n         * @private\n         */\n        get: function () {\n            var rValue = null;\n            return rValue;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Saves` the object using the specified writer.\n     * @private\n     */\n    PdfBoolean.prototype.save = function (writer) {\n        writer.write(this.boolToStr(this.value));\n    };\n    /**\n     * Creates a `copy of PdfBoolean`.\n     * @private\n     */\n    PdfBoolean.prototype.clone = function (crossTable) {\n        var newNumber = new PdfBoolean(this.value);\n        return newNumber;\n    };\n    // Implementation\n    /**\n     * Converts `boolean to string` - 0/1 'true'/'false'.\n     * @private\n     */\n    PdfBoolean.prototype.boolToStr = function (value) {\n        return value ? 'true' : 'false';\n    };\n    return PdfBoolean;\n}());\nexport { PdfBoolean };\n","/**\n * public Enum for `PdfLayoutType`.\n * @private\n */\nexport var PdfLayoutType;\n(function (PdfLayoutType) {\n    /**\n     * Specifies the type of `Paginate`.\n     * @private\n     */\n    PdfLayoutType[PdfLayoutType[\"Paginate\"] = 0] = \"Paginate\";\n    /**\n     * Specifies the type of `OnePage`.\n     * @private\n     */\n    PdfLayoutType[PdfLayoutType[\"OnePage\"] = 1] = \"OnePage\";\n})(PdfLayoutType || (PdfLayoutType = {}));\n/**\n * public Enum for `PdfLayoutBreakType`.\n * @private\n */\nexport var PdfLayoutBreakType;\n(function (PdfLayoutBreakType) {\n    /**\n     * Specifies the type of `FitPage`.\n     * @private\n     */\n    PdfLayoutBreakType[PdfLayoutBreakType[\"FitPage\"] = 0] = \"FitPage\";\n    /**\n     * Specifies the type of `FitElement`.\n     * @private\n     */\n    PdfLayoutBreakType[PdfLayoutBreakType[\"FitElement\"] = 1] = \"FitElement\";\n    /**\n     * Specifies the type of `FitColumnsToPage`.\n     * @private\n     */\n    PdfLayoutBreakType[PdfLayoutBreakType[\"FitColumnsToPage\"] = 2] = \"FitColumnsToPage\";\n})(PdfLayoutBreakType || (PdfLayoutBreakType = {}));\n","/**\n * Used to perform `convertion between pixels and points`.\n * @private\n */\nvar PdfUnitConverter = /** @class */ (function () {\n    //constructors\n    /**\n     * Initializes a new instance of the `UnitConvertor` class with DPI value.\n     * @private\n     */\n    function PdfUnitConverter(dpi) {\n        this.updateProportionsHelper(dpi);\n    }\n    /**\n     * `Converts` the value, from one graphics unit to another graphics unit.\n     * @private\n     */\n    PdfUnitConverter.prototype.convertUnits = function (value, from, to) {\n        return this.convertFromPixels(this.convertToPixels(value, from), to);\n    };\n    /**\n     * Converts the value `to pixel` from specified graphics unit.\n     * @private\n     */\n    PdfUnitConverter.prototype.convertToPixels = function (value, from) {\n        var index = from;\n        var result = (value * this.proportions[index]);\n        return result;\n    };\n    /**\n     * Converts value, to specified graphics unit `from Pixel`.\n     * @private\n     */\n    PdfUnitConverter.prototype.convertFromPixels = function (value, to) {\n        var index = to;\n        var result = (value / this.proportions[index]);\n        return result;\n    };\n    /**\n     * `Update proportions` matrix according to Graphics settings.\n     * @private\n     */\n    PdfUnitConverter.prototype.updateProportionsHelper = function (pixelPerInch) {\n        this.proportions = [\n            pixelPerInch / 2.54,\n            pixelPerInch / 6.0,\n            1,\n            pixelPerInch / 72.0,\n            pixelPerInch,\n            pixelPerInch / 300.0,\n            pixelPerInch / 25.4 // Millimeter\n        ];\n    };\n    //Fields\n    /**\n     * Indicates default `horizontal resolution`.\n     * @default 96\n     * @private\n     */\n    PdfUnitConverter.horizontalResolution = 96;\n    /**\n     * Indicates default `vertical resolution`.\n     * @default 96\n     * @private\n     */\n    PdfUnitConverter.verticalResolution = 96;\n    return PdfUnitConverter;\n}());\nexport { PdfUnitConverter };\n","import { SizeF } from './../../drawing/pdf-drawing';\nimport { PdfGraphicsUnit } from './../enum';\nimport { PdfUnitConverter } from './../unit-convertor';\n/**\n * `PdfImage` class represents the base class for images and provides functionality for the 'PdfBitmap' class.\n * @private\n */\nvar PdfImage = /** @class */ (function () {\n    function PdfImage() {\n    }\n    Object.defineProperty(PdfImage.prototype, \"width\", {\n        /**\n         * Gets and Sets the `width` of an image.\n         * @private\n         */\n        get: function () {\n            return this.imageWidth;\n        },\n        set: function (value) {\n            this.imageWidth = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfImage.prototype, \"height\", {\n        /**\n         * Gets and Sets the `height` of an image.\n         * @private\n         */\n        get: function () {\n            return this.imageHeight;\n        },\n        set: function (value) {\n            this.imageHeight = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfImage.prototype, \"size\", {\n        /**\n         * Gets or sets the size of the image.\n         * @private\n         */\n        set: function (value) {\n            this.width = value.width;\n            this.height = value.height;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfImage.prototype, \"physicalDimension\", {\n        /**\n         * Gets the `physical dimension` of an image.\n         * @private\n         */\n        get: function () {\n            this.imagePhysicalDimension = this.getPointSize(this.width, this.height, this.horizontalResolution, this.verticalResolution);\n            return new SizeF(this.width, this.height);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfImage.prototype, \"element\", {\n        // /**\n        //  * Gets the `image stream as string`.\n        //  * @private\n        //  */\n        // public static fromString(string : string) : PdfImage {\n        //     let image : PdfImage = new PdfBitmap(string);\n        //     return image;\n        // }\n        /**\n         * Gets the `element` image stream.\n         * @private\n         */\n        get: function () {\n            return this.imageStream;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfImage.prototype.getPointSize = function (width, height, horizontalResolution, verticalResolution) {\n        if (typeof horizontalResolution === 'undefined') {\n            var dpiX = PdfUnitConverter.horizontalResolution;\n            var dpiY = PdfUnitConverter.verticalResolution;\n            var size = this.getPointSize(width, height, dpiX, dpiY);\n            return size;\n        }\n        else {\n            var ucX = new PdfUnitConverter(horizontalResolution);\n            var ucY = new PdfUnitConverter(verticalResolution);\n            var ptWidth = ucX.convertUnits(width, PdfGraphicsUnit.Pixel, PdfGraphicsUnit.Point);\n            var ptHeight = ucY.convertUnits(height, PdfGraphicsUnit.Pixel, PdfGraphicsUnit.Point);\n            var size = new SizeF(ptWidth, ptHeight);\n            return size;\n        }\n    };\n    return PdfImage;\n}());\nexport { PdfImage };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfBitmap.ts class for EJ2-PDF\n */\nimport { ImageDecoder } from './../../graphics/images/image-decoder';\nimport { ByteArray } from './../../graphics/images/byte-array';\nimport { DictionaryProperties } from './../../input-output/pdf-dictionary-properties';\nimport { PdfImage } from './pdf-image';\n/**\n * The 'PdfBitmap' contains methods and properties to handle the Bitmap images.\n * ```typescript\n * // create a new PDF document.\n * let document : PdfDocument = new PdfDocument();\n * // add a page to the document.\n * let page1 : PdfPage = document.pages.add();\n * // base64 string of an image\n * let imageString : string = '/9j/3+2w7em7HzY/KiijFw … 1OEYRUYrQ45yc5OUtz/9k=';\n * // load the image from the base64 string of original image.\n * let image : PdfBitmap = new PdfBitmap(imageString);\n * // draw the image\n * page1.graphics.drawImage(image, new RectangleF({x : 10, y : 10}, {width : 200, height : 200}));\n * // save the document.\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfBitmap = /** @class */ (function (_super) {\n    __extends(PdfBitmap, _super);\n    /**\n     * Create an instance for `PdfBitmap` class.\n     * @param encodedString Base64 string of an image.\n     * ```typescript\n     * // create a new PDF document.\n     * let document : PdfDocument = new PdfDocument();\n     * // add a page to the document.\n     * let page1 : PdfPage = document.pages.add();\n     * // base64 string of an image\n     * let imageString : string = '/9j/3+2w7em7HzY/KiijFw … 1OEYRUYrQ45yc5OUtz/9k=';\n     * //\n     * // load the image from the base64 string of original image.\n     * let image : PdfBitmap = new PdfBitmap(imageString);\n     * //\n     * // draw the image\n     * page1.graphics.drawImage(image, new RectangleF({x : 10, y : 10}, {width : 200, height : 200}));\n     * // save the document.\n     * document.save('output.pdf');\n     * // destroy the document\n     * document.destroy();\n     * ```\n     */\n    function PdfBitmap(encodedString) {\n        var _this = _super.call(this) || this;\n        //Fields\n        /**\n         * Specifies the `status` of an image.\n         * @default true.\n         * @hidden\n         * @private\n         */\n        _this.imageStatus = true;\n        /**\n         * Internal variable for accessing fields from `DictionryProperties` class.\n         * @hidden\n         * @private\n         */\n        _this.dictionaryProperties = new DictionaryProperties();\n        _this.loadImage(encodedString);\n        return _this;\n    }\n    /**\n     * `Load image`.\n     * @hidden\n     * @private\n     */\n    PdfBitmap.prototype.loadImage = function (encodedString) {\n        var task = this.initializeAsync(encodedString);\n    };\n    /**\n     * `Initialize` image parameters.\n     * @private\n     */\n    PdfBitmap.prototype.initializeAsync = function (encodedString) {\n        var byteArray = new ByteArray(encodedString.length);\n        byteArray.writeFromBase64String(encodedString);\n        this.decoder = new ImageDecoder(byteArray);\n        this.height = this.decoder.height;\n        this.width = this.decoder.width;\n        // FrameCount = BitmapImageDecoder.FrameCount;\n        this.bitsPerComponent = this.decoder.bitsPerComponent;\n    };\n    /**\n     * `Saves` the image into stream.\n     * @private\n     */\n    PdfBitmap.prototype.save = function () {\n        this.imageStatus = true;\n        this.imageStream = this.decoder.getImageDictionary();\n    };\n    return PdfBitmap;\n}(PdfImage));\nexport { PdfBitmap };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfResources.ts class for EJ2-PDF\n */\nimport { PdfDictionary } from './../primitives/pdf-dictionary';\nimport { TemporaryDictionary } from './../collections/object-object-pair/dictionary';\nimport { PdfName } from './../primitives/pdf-name';\nimport { PdfArray } from './../primitives/pdf-array';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { PdfCrossTable } from './../input-output/pdf-cross-table';\nimport { PdfFont } from './fonts/pdf-font';\nimport { PdfTemplate } from './figures/pdf-template';\nimport { PdfBrush } from './brushes/pdf-brush';\nimport { PdfTransparency } from './pdf-transparency';\nimport { PdfBitmap } from './../graphics/images/pdf-bitmap';\nimport { PdfImage } from './../graphics/images/pdf-image';\n/**\n * `PdfResources` class used to set resource contents like font, image.\n * @private\n */\nvar PdfResources = /** @class */ (function (_super) {\n    __extends(PdfResources, _super);\n    function PdfResources(baseDictionary) {\n        var _this = _super.call(this) || this;\n        /**\n         * Dictionary for the `properties names`.\n         * @private\n         */\n        _this.properties = new PdfDictionary();\n        if (baseDictionary instanceof PdfDictionary) {\n            _this = _super.call(this, baseDictionary) || this;\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfResources.prototype, \"names\", {\n        //Properties\n        /**\n         * Gets the `font names`.\n         * @private\n         */\n        get: function () {\n            return this.getNames();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfResources.prototype, \"document\", {\n        /**\n         * Get or set the `page document`.\n         * @private\n         */\n        get: function () {\n            return this.pdfDocument;\n        },\n        set: function (value) {\n            this.pdfDocument = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Public Methods\n    /**\n     * `Generates name` for the object and adds to the resource if the object is new.\n     * @private\n     */\n    PdfResources.prototype.getName = function (obj) {\n        var primitive = obj.element;\n        var name = null;\n        if (this.names.containsKey(primitive)) {\n            name = this.names.getValue(primitive);\n        }\n        // Object is new.\n        if (name == null) {\n            var sName = this.generateName();\n            name = new PdfName(sName);\n            this.names.setValue(primitive, name);\n            if (obj instanceof PdfFont) {\n                this.add(obj, name);\n            }\n            else if (obj instanceof PdfTemplate) {\n                this.add(obj, name);\n            }\n            else if (obj instanceof PdfTransparency) {\n                this.add(obj, name);\n            }\n            else if (obj instanceof PdfImage || obj instanceof PdfBitmap) {\n                this.add(obj, name);\n            }\n        }\n        return name;\n    };\n    /**\n     * Gets `resource names` to font dictionaries.\n     * @private\n     */\n    PdfResources.prototype.getNames = function () {\n        if (this.pdfNames == null) {\n            this.pdfNames = new TemporaryDictionary();\n        }\n        var fonts = this.items.getValue(this.dictionaryProperties.font);\n        if (fonts != null) {\n            var reference = fonts;\n            var dictionary = fonts;\n            dictionary = PdfCrossTable.dereference(fonts);\n        }\n        return this.pdfNames;\n    };\n    /**\n     * Add `RequireProcedureSet` into procset array.\n     * @private\n     */\n    PdfResources.prototype.requireProcedureSet = function (procedureSetName) {\n        if (procedureSetName == null) {\n            throw new Error('ArgumentNullException:procedureSetName');\n        }\n        var procSets = this.items.getValue(this.dictionaryProperties.procset);\n        if (procSets == null) {\n            procSets = new PdfArray();\n            this.items.setValue(this.dictionaryProperties.procset, procSets);\n        }\n        var name = new PdfName(procedureSetName);\n        if (!procSets.contains(name)) {\n            procSets.add(name);\n        }\n    };\n    //Helper Methods\n    /**\n     * `Remove font` from array.\n     * @private\n     */\n    PdfResources.prototype.removeFont = function (name) {\n        var key = null;\n        var keys = this.pdfNames.keys();\n        for (var index = 0; index < this.pdfNames.size(); index++) {\n            if (this.pdfNames.getValue(keys[index]) === new PdfName(name)) {\n                key = keys[index];\n                break;\n            }\n        }\n        if (key != null) {\n            this.pdfNames.remove(key);\n        }\n    };\n    /**\n     * Generates `Unique string name`.\n     * @private\n     */\n    PdfResources.prototype.generateName = function () {\n        var name = Guid.getNewGuidString();\n        return name;\n    };\n    PdfResources.prototype.add = function (arg1, arg2) {\n        if (arg1 instanceof PdfFont) {\n            var dictionary = null;\n            var fonts = this.items.getValue(this.dictionaryProperties.font);\n            if (fonts != null) {\n                var reference = fonts;\n                dictionary = fonts;\n                dictionary = fonts;\n            }\n            else {\n                dictionary = new PdfDictionary();\n                this.items.setValue(this.dictionaryProperties.font, dictionary);\n            }\n            dictionary.items.setValue(arg2.value, new PdfReferenceHolder(arg1.element));\n        }\n        else if (arg1 instanceof PdfTemplate) {\n            var xobjects = void 0;\n            xobjects = this.items.getValue(this.dictionaryProperties.xObject);\n            // Create fonts dictionary.\n            if (xobjects == null) {\n                xobjects = new PdfDictionary();\n                this.items.setValue(this.dictionaryProperties.xObject, xobjects);\n            }\n            xobjects.items.setValue(arg2.value, new PdfReferenceHolder(arg1.element));\n        }\n        else if (arg1 instanceof PdfBrush) {\n            // let savable : IPdfPrimitive = (arg1 as IPdfWrapper).Element;\n            // if (savable != null)\n            // {\n            //     let pattern : PdfDictionary = this.Items.getValue(this.dictionaryProperties.pattern) as PdfDictionary;\n            //     // Create a new pattern dictionary.\n            //     if (pattern == null) {\n            //         pattern = new PdfDictionary();\n            //         this.Items.setValue(this.dictionaryProperties.pattern, pattern);\n            //     }\n            //     pattern.Items.setValue(name, new PdfReferenceHolder(savable));\n            // }\n        }\n        else if (arg1 instanceof PdfTransparency) {\n            var savable = arg1.element;\n            var transDic = null;\n            transDic = this.items.getValue(this.dictionaryProperties.extGState);\n            // Create a new pattern dictionary.\n            if (transDic == null) {\n                transDic = new PdfDictionary();\n                this.items.setValue(this.dictionaryProperties.extGState, transDic);\n            }\n            transDic.items.setValue(arg2.value, new PdfReferenceHolder(savable));\n        }\n        else {\n            /* tslint:disable */\n            var xobjects = this.Dictionary.items.getValue(this.dictionaryProperties.xObject);\n            var parentXObjects = void 0;\n            if (typeof this.pdfDocument !== 'undefined') {\n                parentXObjects = this.pdfDocument.sections.element.items.getValue(this.dictionaryProperties.resources).items.getValue(this.dictionaryProperties.xObject);\n            }\n            var values = this.Dictionary.items.values();\n            var hasSameImageStream = false;\n            var oldReference = void 0;\n            if (typeof this.pdfDocument !== 'undefined' && (typeof parentXObjects === undefined || parentXObjects == null)) {\n                parentXObjects = new PdfDictionary();\n                this.pdfDocument.sections.element.items.getValue(this.dictionaryProperties.resources).items.setValue(this.dictionaryProperties.xObject, parentXObjects);\n            }\n            else if (typeof this.pdfDocument !== 'undefined') {\n                var values_1 = parentXObjects.items.values();\n                for (var i = 0; i < values_1.length; i++) {\n                    if (typeof values_1[i] !== 'undefined' && typeof values_1[i].element !== 'undefined') {\n                        if (values_1[i].element.data[0] === arg1.element.data[0]) {\n                            oldReference = values_1[i];\n                            hasSameImageStream = true;\n                        }\n                    }\n                }\n            }\n            if (xobjects == null) {\n                xobjects = new PdfDictionary();\n                this.Dictionary.items.setValue(this.dictionaryProperties.xObject, xobjects);\n            }\n            if (hasSameImageStream && typeof oldReference !== 'undefined') {\n                xobjects.items.setValue(arg2.value, oldReference);\n            }\n            else {\n                var reference = new PdfReferenceHolder(arg1.element);\n                xobjects.items.setValue(arg2.value, reference);\n                if (typeof this.pdfDocument !== 'undefined') {\n                    parentXObjects.items.setValue(arg2.value, reference);\n                }\n            }\n            /* tslint:enable */\n        }\n    };\n    return PdfResources;\n}(PdfDictionary));\nexport { PdfResources };\n/**\n * Used to create new guid for resources.\n * @private\n */\nvar Guid = /** @class */ (function () {\n    /**\n     * Initialize an `instance of GUID` class.\n     * @private\n     */\n    function Guid(stringValue) {\n        this.stringValue = stringValue || Guid.getNewGuidString();\n    }\n    Object.defineProperty(Guid, \"randomNumber\", {\n        /**\n         * Generate `Random number` for GUID.\n         * @private\n         */\n        get: function () {\n            Guid.guid = Guid.guid + 1;\n            Guid.guid = Guid.guid > 999999999999 ? 0 : Guid.guid;\n            return Guid.guid;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Return the value of `GUID as string`.\n     * @private\n     */\n    Guid.prototype.toString = function () {\n        return this.stringValue;\n    };\n    /**\n     * Generate `new GUID`.\n     * @private\n     */\n    Guid.getNewGuidString = function () {\n        var guid = 'abc7def4-ghi9-jkl2-m6n3-';\n        var temproaryString = 'opqrstuvwxyz';\n        var randomString = Guid.randomNumber.toString();\n        randomString = guid + temproaryString.substr(0, (12 - randomString.length)) + randomString;\n        return randomString;\n    };\n    /**\n     * static field to store `endding value of current GUID`.\n     * @private\n     */\n    Guid.guid = 0;\n    return Guid;\n}());\nexport { Guid };\n","import { PdfArray } from './../primitives/pdf-array';\nimport { PdfPageLayerCollection } from './pdf-page-layer-collection';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\nimport { PdfResources } from './../graphics/pdf-resources';\n/**\n * The abstract base class for all pages,\n * `PdfPageBase` class provides methods and properties to create PDF pages and its elements.\n * @private\n */\nvar PdfPageBase = /** @class */ (function () {\n    //constructors\n    /**\n     * Initializes a new instance of the `PdfPageBase` class.\n     * @private\n     */\n    function PdfPageBase(dictionary) {\n        /**\n         * `Index` of the default layer.\n         * @default -1.\n         * @private\n         */\n        this.defLayerIndex = -1;\n        /**\n         * Local variable to store if page `updated`.\n         * @default false.\n         * @private\n         */\n        this.modified = false;\n        /**\n         * Instance of `DictionaryProperties` class.\n         * @hidden\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        this.pageDictionary = dictionary;\n    }\n    Object.defineProperty(PdfPageBase.prototype, \"section\", {\n        //Properties\n        /**\n         * Gets the `section` of a page.\n         * @private\n         */\n        get: function () {\n            // if (this.pdfSection === null) {\n            //     throw new Error('PdfException : Page must be added to some section before using.');\n            // }\n            return this.pdfSection;\n        },\n        set: function (value) {\n            this.pdfSection = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageBase.prototype, \"dictionary\", {\n        /**\n         * Gets the page `dictionary`.\n         * @private\n         */\n        get: function () {\n            return this.pageDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageBase.prototype, \"element\", {\n        /**\n         * Gets the wrapped `element`.\n         * @private\n         */\n        get: function () {\n            return this.pageDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageBase.prototype, \"defaultLayer\", {\n        /**\n         * Gets the `default layer` of the page (Read only).\n         * @private\n         */\n        get: function () {\n            var layer = this.layers;\n            var index = this.defaultLayerIndex;\n            var returnlayer = layer.items(index);\n            return returnlayer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageBase.prototype, \"defaultLayerIndex\", {\n        /**\n         * Gets or sets `index of the default layer`.\n         * @private\n         */\n        get: function () {\n            if (this.layerCollection.count === 0 || this.defLayerIndex === -1) {\n                var layer = this.layerCollection.add();\n                this.defLayerIndex = this.layerCollection.indexOf(layer);\n            }\n            return this.defLayerIndex;\n        },\n        /**\n         * Gets or sets` index of the default layer`.\n         * @private\n         */\n        set: function (value) {\n            if (value < 0 || value > this.layers.count - 1) {\n                throw new Error('ArgumentOutOfRangeException : value, Index can not be less 0 and greater Layers.Count - 1');\n            }\n            else {\n                this.defLayerIndex = value;\n                this.modified = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageBase.prototype, \"layers\", {\n        /**\n         * Gets the collection of the page's `layers` (Read only).\n         * @private\n         */\n        get: function () {\n            if (this.layerCollection == null || typeof this.layerCollection === 'undefined') {\n                this.layerCollection = new PdfPageLayerCollection(this);\n            }\n            return this.layerCollection;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Return an instance of `PdfResources` class.\n     * @private\n     */\n    PdfPageBase.prototype.getResources = function () {\n        if (this.resources == null) {\n            this.resources = new PdfResources();\n            this.dictionary.items.setValue(this.dictionaryProperties.resources, this.resources);\n        }\n        return this.resources;\n    };\n    Object.defineProperty(PdfPageBase.prototype, \"contents\", {\n        /**\n         * Gets `array of page's content`.\n         * @private\n         */\n        get: function () {\n            var obj = this.pageDictionary.items.getValue(this.dictionaryProperties.contents);\n            var contents = obj;\n            var rh = obj;\n            if (contents == null) {\n                contents = new PdfArray();\n                this.pageDictionary.items.setValue(this.dictionaryProperties.contents, contents);\n            }\n            return contents;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Sets the `resources`.\n     * @private\n     */\n    PdfPageBase.prototype.setResources = function (res) {\n        this.resources = res;\n        this.dictionary.items.setValue(this.dictionaryProperties.resources, this.resources);\n        this.modified = true;\n    };\n    return PdfPageBase;\n}());\nexport { PdfPageBase };\n","import { PdfArray } from './../primitives/pdf-array';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\nimport { SizeF, RectangleF, PointF } from './../drawing/pdf-drawing';\nimport { PdfStringLayouter } from './../graphics/fonts/string-layouter';\nimport { PdfColorSpace } from './../graphics/enum';\n/**\n * `PdfAnnotationCollection` class represents the collection of 'PdfAnnotation' objects.\n * @private\n */\nvar PdfAnnotationCollection = /** @class */ (function () {\n    function PdfAnnotationCollection(page) {\n        // Constants\n        /**\n         * `Error` constant message.\n         * @private\n         */\n        this.alreadyExistsAnnotationError = 'This annotatation had been already added to page';\n        /**\n         * `Error` constant message.\n         * @private\n         */\n        this.missingAnnotationException = 'Annotation is not contained in collection.';\n        /**\n         * Specifies the Internal variable to store fields of `PdfDictionaryProperties`.\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        /**\n         * Array of the `annotations`.\n         * @private\n         */\n        this.internalAnnotations = new PdfArray();\n        /**\n         * privte `list` for the annotations.\n         * @private\n         */\n        this.lists = [];\n        if (typeof page !== 'undefined') {\n            this.page = page;\n        }\n    }\n    Object.defineProperty(PdfAnnotationCollection.prototype, \"annotations\", {\n        /**\n         * Gets the `PdfAnnotation` object at the specified index. Read-Only.\n         * @private\n         */\n        get: function () {\n            return this.internalAnnotations;\n        },\n        set: function (value) {\n            this.internalAnnotations = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Public methods\n    /**\n     * `Adds` a new annotation to the collection.\n     * @private\n     */\n    PdfAnnotationCollection.prototype.add = function (annotation) {\n        // this.SetPrint(annotation);\n        this.doAdd(annotation);\n    };\n    /**\n     * `Adds` a Annotation to collection.\n     * @private\n     */\n    /* tslint:disable */\n    PdfAnnotationCollection.prototype.doAdd = function (annotation) {\n        if (typeof annotation.destination !== 'undefined') {\n            var layout = new PdfStringLayouter();\n            var layoutResult = layout.layout(annotation.text, annotation.font, annotation.stringFormat, new SizeF((annotation.bounds.width), 0), false, new SizeF(0, 0));\n            var lastPosition = annotation.bounds.y;\n            if (layoutResult.lines.length === 1) {\n                var size = annotation.font.measureString(layoutResult.lines[0].text);\n                annotation.bounds = new RectangleF(new PointF(annotation.bounds.x, lastPosition), size);\n                annotation.text = layoutResult.lines[0].text;\n                //Draw Annotation Text.\n                this.page.graphics.drawString(annotation.text, annotation.font, null, annotation.brush, annotation.bounds.x, annotation.bounds.y, annotation.bounds.width, annotation.bounds.height, null);\n                //Add annotation to dictionary.\n                annotation.setPage(this.page);\n                this.setColor(annotation);\n                this.internalAnnotations.add(new PdfReferenceHolder(annotation));\n                this.lists.push(annotation);\n            }\n            else {\n                for (var i = 0; i < layoutResult.lines.length; i++) {\n                    var size = annotation.font.measureString(layoutResult.lines[i].text);\n                    if (i === 0) {\n                        annotation.bounds = new RectangleF(annotation.bounds.x, lastPosition, size.width, size.height);\n                        annotation.text = layoutResult.lines[i].text;\n                        //Draw Annotation Text.\n                        this.page.graphics.drawString(annotation.text, annotation.font, null, annotation.brush, annotation.bounds.x, lastPosition, size.width, size.height, null);\n                        //Add annotation to dictionary.\n                        annotation.setPage(this.page);\n                        this.setColor(annotation);\n                        this.internalAnnotations.add(new PdfReferenceHolder(annotation));\n                        this.lists.push(annotation);\n                        //Update y for drawing next line of the text.\n                        lastPosition += annotation.bounds.height;\n                    }\n                    else {\n                        var annot = annotation.clone();\n                        annot.bounds = new RectangleF(new PointF(annotation.bounds.x, lastPosition), size);\n                        annot.text = layoutResult.lines[i].text;\n                        //Draw Annotation Text.\n                        this.page.graphics.drawString(annot.text, annot.font, null, annot.brush, annot.bounds.x, annot.bounds.y, annot.bounds.width, annot.bounds.height, null);\n                        //Add annotation to dictionary.\n                        annot.setPage(this.page);\n                        this.setColor(annot);\n                        this.internalAnnotations.add(new PdfReferenceHolder(annot));\n                        this.lists.push(annot);\n                        //Update y for drawing next line of the text.\n                        lastPosition += annot.bounds.height;\n                    }\n                }\n            }\n        }\n        else {\n            annotation.setPage(this.page);\n            this.internalAnnotations.add(new PdfReferenceHolder(annotation));\n            return this.lists.push(annotation);\n        }\n    };\n    /* tslint:enable */\n    /**\n     * `Set a color of an annotation`.\n     * @private\n     */\n    PdfAnnotationCollection.prototype.setColor = function (annotation) {\n        var cs = PdfColorSpace.Rgb;\n        var colours = annotation.color.toArray(cs);\n        annotation.dictionary.items.setValue(this.dictionaryProperties.c, colours);\n    };\n    Object.defineProperty(PdfAnnotationCollection.prototype, \"element\", {\n        // IPdfWrapper Members\n        /**\n         * Gets the `Element` representing this object.\n         * @private\n         */\n        get: function () {\n            return this.internalAnnotations;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfAnnotationCollection;\n}());\nexport { PdfAnnotationCollection };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfPageBase } from './pdf-page-base';\nimport { PdfDictionary, SaveTemplateEventHandler } from './../primitives/pdf-dictionary';\nimport { PdfName } from './../primitives/pdf-name';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { SizeF } from './../drawing/pdf-drawing';\nimport { PdfAnnotationCollection } from './../annotations/annotation-collection';\nimport { PdfPageLayer } from './pdf-page-layer';\n/**\n * Provides methods and properties to create pages and its elements.\n * `PdfPage` class inherited from the `PdfPageBase` class.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * //\n * // add a new page to the document\n * let page1 : PdfPage = document.pages.add();\n * //\n * // set the font\n * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n * // create black brush\n * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n * // draw the text\n * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(0, 0));\n * // save the document\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfPage = /** @class */ (function (_super) {\n    __extends(PdfPage, _super);\n    //constructors\n    /**\n     * Initialize the new instance for `PdfPage` class.\n     * @private\n     */\n    function PdfPage() {\n        var _this = _super.call(this, new PdfDictionary()) || this;\n        /**\n         * Stores the instance of `PdfAnnotationCollection` class.\n         * @hidden\n         * @default null\n         * @private\n         */\n        _this.annotationCollection = null;\n        /**\n         * Stores the instance of `PageBeginSave` event for Page Number Field.\n         * @default null\n         * @private\n         */\n        _this.beginSave = null;\n        _this.initialize();\n        return _this;\n    }\n    Object.defineProperty(PdfPage.prototype, \"document\", {\n        //Properties\n        /**\n         * Gets current `document`.\n         * @private\n         */\n        get: function () {\n            if (this.section !== null && this.section.parent !== null) {\n                return this.section.parent.document;\n            }\n            else {\n                return null;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPage.prototype, \"graphics\", {\n        /**\n         * Get the current `graphics`.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // add a new page to the document\n         * let page1 : PdfPage = document.pages.add();\n         * //\n         * // get graphics\n         * let graphics : PdfGraphics = page1.graphics;\n         * //\n         * // set the font\n         * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n         * // create black brush\n         * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n         * // draw the text\n         * graphics.drawString('Hello World', font, blackBrush, new PointF(0, 0));\n         * // save the document\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var result = this.defaultLayer.graphics;\n            result.currentPage = this;\n            return result;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPage.prototype, \"crossTable\", {\n        /**\n         * Gets the `cross table`.\n         * @private\n         */\n        get: function () {\n            if (this.section === null) {\n                throw new Error('PdfDocumentException : Page is not created');\n            }\n            return this.section.parent === null ? this.section.parentDocument.crossTable : this.section.parent.document.crossTable;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPage.prototype, \"size\", {\n        /**\n         * Gets the size of the PDF page- Read only.\n         * @public\n         */\n        get: function () {\n            return this.section.pageSettings.size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPage.prototype, \"origin\", {\n        /**\n         * Gets the `origin` of the page.\n         * @private\n         */\n        get: function () {\n            return this.section.pageSettings.origin;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPage.prototype, \"annotations\", {\n        /**\n         * Gets a collection of the `annotations` of the page- Read only.\n         * @private\n         */\n        get: function () {\n            if (this.annotationCollection == null) {\n                this.annotationCollection = new PdfAnnotationCollection(this);\n                // if (!this.Dictionary.ContainsKey(this.dictionaryProperties.annots)) {\n                this.dictionary.items.setValue(this.dictionaryProperties.annots, this.annotationCollection.element);\n                // }\n                this.annotationCollection.annotations = this.dictionary.items.getValue(this.dictionaryProperties.annots);\n            }\n            return this.annotationCollection;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Implementation\n    /**\n     * `Initializes` a page.\n     * @private\n     */\n    PdfPage.prototype.initialize = function () {\n        this.dictionary.items.setValue(this.dictionaryProperties.type, new PdfName('Page'));\n        this.dictionary.pageBeginDrawTemplate = new SaveTemplateEventHandler(this);\n    };\n    /**\n     * Sets parent `section` to the page.\n     * @private\n     */\n    PdfPage.prototype.setSection = function (section) {\n        this.section = section;\n        this.dictionary.items.setValue(this.dictionaryProperties.parent, new PdfReferenceHolder(section));\n    };\n    /**\n     * `Resets the progress`.\n     * @private\n     */\n    PdfPage.prototype.resetProgress = function () {\n        this.isProgressOn = false;\n    };\n    /**\n     * Get the page size reduced by page margins and page template dimensions.\n     * ```typescript\n     * // create a new PDF document\n     * let document : PdfDocument = new PdfDocument();\n     * // add a pages to the document\n     * let page1 : PdfPage = document.pages.add();\n     * // create new standard font\n     * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n     * // set brush\n     * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n     * //\n     * // set the specified point using `getClientSize` method\n     * let point : PointF = new PointF(page1.getClientSize().width - 200, page1.getClientSize().height - 200);\n     * // draw the text\n     * page1.graphics.drawString('Hello World', font, blackBrush, point);\n     * //\n     * // save the document\n     * document.save('output.pdf');\n     * // destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfPage.prototype.getClientSize = function () {\n        var returnValue = this.section.getActualBounds(this, true);\n        return new SizeF(returnValue.width, returnValue.height);\n    };\n    /**\n     * Helper method to retrive the instance of `PageBeginSave` event for header and footer elements.\n     * @private\n     */\n    PdfPage.prototype.pageBeginSave = function () {\n        var doc = this.document;\n        if (typeof doc !== undefined && doc != null) {\n            this.drawPageTemplates(doc);\n        }\n        if (this.beginSave != null && typeof this.beginSave !== 'undefined') {\n            this.beginSave(this);\n        }\n    };\n    /**\n     * Helper method to draw template elements.\n     * @private\n     */\n    PdfPage.prototype.drawPageTemplates = function (document) {\n        // Draw Background templates.\n        var hasBackTemplates = this.section.containsTemplates(document, this, false);\n        if (hasBackTemplates) {\n            var backLayer = new PdfPageLayer(this, false);\n            this.layers.insert(0, backLayer);\n            this.section.drawTemplates(this, backLayer, document, false);\n            if (backLayer.graphics !== null && typeof backLayer.graphics !== 'undefined') {\n                for (var i = 0; i < backLayer.graphics.automaticFields.automaticFields.length; i++) {\n                    var fieldInfo = backLayer.graphics.automaticFields.automaticFields[i];\n                    fieldInfo.field.performDraw(backLayer.graphics, fieldInfo.location, fieldInfo.scalingX, fieldInfo.scalingY);\n                }\n            }\n        }\n        // Draw Foreground templates.\n        var hasFrontTemplates = this.section.containsTemplates(document, this, true);\n        if (hasFrontTemplates) {\n            var frontLayer = new PdfPageLayer(this, false);\n            this.layers.add(frontLayer);\n            this.section.drawTemplates(this, frontLayer, document, true);\n        }\n    };\n    return PdfPage;\n}(PdfPageBase));\nexport { PdfPage };\n","/**\n * Provides data for `PageAddedEventHandler` event.\n * This event raises when adding the new PDF page to the PDF document.\n */\nvar PageAddedEventArgs = /** @class */ (function () {\n    function PageAddedEventArgs(page) {\n        if (typeof page !== 'undefined') {\n            this.pdfPage = page;\n        }\n        else {\n            this.pdfPage = null;\n        }\n    }\n    Object.defineProperty(PageAddedEventArgs.prototype, \"page\", {\n        /**\n         * Gets the `newly added page`.\n         * @private\n         */\n        get: function () {\n            return this.pdfPage;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PageAddedEventArgs;\n}());\nexport { PageAddedEventArgs };\n","/**\n * Represents the `collection of pages in a section`.\n * @private\n */\nvar PdfSectionPageCollection = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initializes a new instance of the `PdfSectionPageCollection` class.\n     * @private\n     */\n    function PdfSectionPageCollection(section) {\n        //  Fields\n        /**\n         * @hidden\n         * @private\n         */\n        this.pdfSection = null;\n        if (section == null) {\n            throw Error('ArgumentNullException(\"section\")');\n        }\n        this.section = section;\n    }\n    Object.defineProperty(PdfSectionPageCollection.prototype, \"section\", {\n        // Properties\n        /**\n         * Gets the `PdfPage` at the specified index.\n         * @private\n         */\n        get: function () {\n            return this.pdfSection;\n        },\n        set: function (value) {\n            this.pdfSection = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Public Methods\n    /**\n     * `Determines` whether the specified page is within the collection.\n     * @private\n     */\n    PdfSectionPageCollection.prototype.contains = function (page) {\n        return this.section.contains(page);\n    };\n    /**\n     * `Removes` the specified page from collection.\n     * @private\n     */\n    PdfSectionPageCollection.prototype.remove = function (page) {\n        this.section.remove(page);\n    };\n    /**\n     * `Adds` a new page from collection.\n     * @private\n     */\n    PdfSectionPageCollection.prototype.add = function () {\n        return this.section.add();\n    };\n    return PdfSectionPageCollection;\n}());\nexport { PdfSectionPageCollection };\n","import { TemplateType } from './../pages/enum';\n// import { PdfStampCollection } from `./../Pages/PdfStampCollection`;\n/**\n * `PdfDocumentTemplate` class encapsulates a page template for all the pages in the document.\n * @private\n */\nvar PdfDocumentTemplate = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initializes a new instance of the `PdfDocumentTemplate` class.\n     * @public\n     */\n    function PdfDocumentTemplate() {\n        //\n    }\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"left\", {\n        // private m_stamps : PdfStampCollection;\n        // Properties\n        /**\n         * `Left` page template object.\n         * @public\n         */\n        get: function () {\n            return this.leftTemplate;\n        },\n        set: function (value) {\n            this.leftTemplate = this.checkElement(value, TemplateType.Left);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"top\", {\n        /**\n         * `Top` page template object.\n         * @public\n         */\n        get: function () {\n            return this.topTemplate;\n        },\n        set: function (value) {\n            this.topTemplate = this.checkElement(value, TemplateType.Top);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"right\", {\n        /**\n         * `Right` page template object.\n         * @public\n         */\n        get: function () {\n            return this.rightTemplate;\n        },\n        set: function (value) {\n            this.rightTemplate = this.checkElement(value, TemplateType.Right);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"bottom\", {\n        /**\n         * `Bottom` page template object.\n         * @public\n         */\n        get: function () {\n            return this.bottomTemplate;\n        },\n        set: function (value) {\n            this.bottomTemplate = this.checkElement(value, TemplateType.Bottom);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"EvenLeft\", {\n        /**\n         * `EvenLeft` page template object.\n         * @public\n         */\n        get: function () {\n            return this.evenLeft;\n        },\n        set: function (value) {\n            this.evenLeft = this.checkElement(value, TemplateType.Left);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"EvenTop\", {\n        /**\n         * `EvenTop` page template object.\n         * @public\n         */\n        get: function () {\n            return this.evenTop;\n        },\n        set: function (value) {\n            this.evenTop = this.checkElement(value, TemplateType.Top);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"EvenRight\", {\n        /**\n         * `EvenRight` page template object.\n         * @public\n         */\n        get: function () {\n            return this.evenRight;\n        },\n        set: function (value) {\n            this.evenRight = this.checkElement(value, TemplateType.Right);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"EvenBottom\", {\n        /**\n         * `EvenBottom` page template object.\n         * @public\n         */\n        get: function () {\n            return this.evenBottom;\n        },\n        set: function (value) {\n            this.evenBottom = this.checkElement(value, TemplateType.Bottom);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"OddLeft\", {\n        /**\n         * `OddLeft` page template object.\n         * @public\n         */\n        get: function () {\n            return this.oddLeft;\n        },\n        set: function (value) {\n            this.oddLeft = this.checkElement(value, TemplateType.Left);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"OddTop\", {\n        /**\n         * `OddTop` page template object.\n         * @public\n         */\n        get: function () {\n            return this.oddTop;\n        },\n        set: function (value) {\n            this.oddTop = this.checkElement(value, TemplateType.Top);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"OddRight\", {\n        /**\n         * `OddRight` page template object.\n         * @public\n         */\n        get: function () {\n            return this.oddRight;\n        },\n        set: function (value) {\n            this.oddRight = this.checkElement(value, TemplateType.Right);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"OddBottom\", {\n        /**\n         * `OddBottom` page template object.\n         * @public\n         */\n        get: function () {\n            return this.oddBottom;\n        },\n        set: function (value) {\n            this.oddBottom = this.checkElement(value, TemplateType.Bottom);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * Returns `left` template.\n     * @public\n     */\n    PdfDocumentTemplate.prototype.getLeft = function (page) {\n        if (page == null) {\n            throw new Error('ArgumentNullException:page');\n        }\n        var template = null;\n        // if (page.Document.Pages != null) {\n        var even = this.isEven(page);\n        if (even) {\n            template = (this.EvenLeft != null) ? this.EvenLeft : this.left;\n        }\n        else {\n            template = (this.OddLeft != null) ? this.OddLeft : this.left;\n        }\n        // }\n        return template;\n    };\n    /**\n     * Returns `top` template.\n     * @public\n     */\n    PdfDocumentTemplate.prototype.getTop = function (page) {\n        if (page == null) {\n            throw new Error('ArgumentNullException:page');\n        }\n        var template = null;\n        // if (page.Document.Pages != null) {\n        var even = this.isEven(page);\n        if (even) {\n            template = (this.EvenTop != null) ? this.EvenTop : this.top;\n        }\n        else {\n            template = (this.OddTop != null) ? this.OddTop : this.top;\n        }\n        // }\n        return template;\n    };\n    /**\n     * Returns `right` template.\n     * @public\n     */\n    PdfDocumentTemplate.prototype.getRight = function (page) {\n        if (page == null) {\n            throw new Error('ArgumentNullException:page');\n        }\n        var template = null;\n        // if (page.Document.Pages != null) {\n        var even = this.isEven(page);\n        if (even) {\n            template = (this.EvenRight != null) ? this.EvenRight : this.right;\n        }\n        else {\n            template = (this.OddRight != null) ? this.OddRight : this.right;\n        }\n        // }\n        return template;\n    };\n    /**\n     * Returns `bottom` template.\n     * @public\n     */\n    PdfDocumentTemplate.prototype.getBottom = function (page) {\n        if (page == null) {\n            throw new Error('ArgumentNullException:page');\n        }\n        var template = null;\n        // if (page.Document.Pages != null) {\n        var even = this.isEven(page);\n        if (even) {\n            template = (this.EvenBottom != null) ? this.EvenBottom : this.bottom;\n        }\n        else {\n            template = (this.OddBottom != null) ? this.OddBottom : this.bottom;\n        }\n        // }\n        return template;\n    };\n    /**\n     * Checks whether the page `is even`.\n     * @private\n     */\n    PdfDocumentTemplate.prototype.isEven = function (page) {\n        var pages = page.section.document.pages;\n        var index = 0;\n        if (pages.pageCollectionIndex.containsKey(page)) {\n            index = pages.pageCollectionIndex.getValue(page) + 1;\n        }\n        else {\n            index = pages.indexOf(page) + 1;\n        }\n        var even = ((index % 2) === 0);\n        return even;\n    };\n    /**\n     * Checks a `template element`.\n     * @private\n     */\n    PdfDocumentTemplate.prototype.checkElement = function (templateElement, type) {\n        if (templateElement != null) {\n            if ((typeof templateElement.type !== 'undefined') && (templateElement.type !== TemplateType.None)) {\n                throw new Error('NotSupportedException:Can not reassign the template element. Please, create new one.');\n            }\n            templateElement.type = type;\n        }\n        return templateElement;\n    };\n    return PdfDocumentTemplate;\n}());\nexport { PdfDocumentTemplate };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfSectionTemplate.ts class for EJ2-PDF\n */\nimport { PdfDocumentTemplate } from './../document/pdf-document-template';\n/**\n * Represents a `page template` for all the pages in the section.\n */\nvar PdfSectionTemplate = /** @class */ (function (_super) {\n    __extends(PdfSectionTemplate, _super);\n    // Constructors\n    /**\n     * `Creates a new object`.\n     * @private\n     */\n    function PdfSectionTemplate() {\n        var _this = _super.call(this) || this;\n        _this.leftValue = _this.topValue = _this.rightValue = _this.bottomValue = _this.stampValue = true;\n        return _this;\n    }\n    Object.defineProperty(PdfSectionTemplate.prototype, \"applyDocumentLeftTemplate\", {\n        // Properties\n        /**\n         * Gets or sets value indicating whether parent `Left page template should be used or not`.\n         * @private\n         */\n        get: function () {\n            return this.leftValue;\n        },\n        set: function (value) {\n            this.leftValue = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSectionTemplate.prototype, \"applyDocumentTopTemplate\", {\n        /**\n         * Gets or sets value indicating whether parent `Top page template should be used or not`.\n         * @private\n         */\n        get: function () {\n            return this.topValue;\n        },\n        set: function (value) {\n            this.topValue = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSectionTemplate.prototype, \"applyDocumentRightTemplate\", {\n        /**\n         * Gets or sets value indicating whether parent `Right page template should be used or not`.\n         * @private\n         */\n        get: function () {\n            return this.rightValue;\n        },\n        set: function (value) {\n            this.rightValue = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSectionTemplate.prototype, \"applyDocumentBottomTemplate\", {\n        /**\n         * Gets or sets value indicating whether parent `Bottom page template should be used or not`.\n         * @private\n         */\n        get: function () {\n            return this.bottomValue;\n        },\n        set: function (value) {\n            this.bottomValue = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSectionTemplate.prototype, \"applyDocumentStamps\", {\n        /**\n         * Gets or sets value indicating whether the `stamp value` is true or not.\n         * @private\n         */\n        get: function () {\n            return this.stampValue;\n        },\n        set: function (value) {\n            this.stampValue = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfSectionTemplate;\n}(PdfDocumentTemplate));\nexport { PdfSectionTemplate };\n","import { PdfPage } from './pdf-page';\nimport { PageAddedEventArgs } from './page-added-event-arguments';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { PdfArray } from './../primitives/pdf-array';\nimport { PdfNumber } from './../primitives/pdf-number';\nimport { PdfName } from './../primitives/pdf-name';\nimport { PdfDictionary } from './../primitives/pdf-dictionary';\nimport { SaveSectionEventHandler } from './../primitives/pdf-dictionary';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\nimport { PdfSectionCollection } from './pdf-section-collection';\nimport { PdfSectionPageCollection } from './pdf-section-page-collection';\nimport { RectangleF } from './../drawing/pdf-drawing';\nimport { PdfSectionTemplate } from './pdf-section-templates';\n/**\n * Represents a `section` entity. A section it's a set of the pages with similar page settings.\n */\nvar PdfSection = /** @class */ (function () {\n    function PdfSection(document, pageSettings) {\n        //Fields\n        //public PageAdded() : PageAddedEventArgs.PageAddedEventHandler = new PageAddedEventArgs.PageAddedEventHandler(Object,args)\n        /**\n         * @hidden\n         * @private\n         */\n        this.pageAdded = new PageAddedEventArgs();\n        /**\n         * @hidden\n         * @private\n         */\n        this.pdfPages = [];\n        /**\n         * @hidden\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        if (typeof pageSettings === 'undefined') {\n            this.constructor(document, document.pageSettings);\n        }\n        else {\n            this.pdfDocument = document;\n            this.settings = pageSettings.clone();\n            this.initialSettings = this.settings.clone();\n            this.initialize();\n        }\n    }\n    Object.defineProperty(PdfSection.prototype, \"parent\", {\n        //Property\n        /**\n         * Gets or sets the `parent`.\n         * @private\n         */\n        get: function () {\n            return this.sectionCollection;\n        },\n        set: function (value) {\n            this.sectionCollection = value;\n            this.section.items.setValue(this.dictionaryProperties.parent, new PdfReferenceHolder(value));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSection.prototype, \"parentDocument\", {\n        /**\n         * Gets the `parent document`.\n         * @private\n         */\n        get: function () {\n            return this.pdfDocument;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSection.prototype, \"pageSettings\", {\n        /**\n         * Gets or sets the `page settings` of the section.\n         * @private\n         */\n        get: function () {\n            return this.settings;\n        },\n        set: function (value) {\n            if (value != null) {\n                this.settings = value;\n            }\n            else {\n                throw Error('Value can not be null.');\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSection.prototype, \"element\", {\n        /**\n         * Gets the wrapped `element`.\n         * @private\n         */\n        get: function () {\n            return this.section;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSection.prototype, \"count\", {\n        /**\n         * Gets the `count` of the pages in the section.\n         * @private\n         */\n        get: function () {\n            return this.pagesReferences.count;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSection.prototype, \"template\", {\n        /**\n         * Gets or sets a `template` for the pages in the section.\n         * @private\n         */\n        get: function () {\n            if (this.pageTemplate == null) {\n                this.pageTemplate = new PdfSectionTemplate();\n            }\n            return this.pageTemplate;\n        },\n        set: function (value) {\n            this.pageTemplate = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSection.prototype, \"document\", {\n        /**\n         * Gets the `document`.\n         * @private\n         */\n        get: function () {\n            return this.sectionCollection.document;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSection.prototype, \"pages\", {\n        /**\n         * Gets the collection of `pages` in a section (Read only)\n         * @private\n         */\n        get: function () {\n            if (this.pagesCollection == null || typeof this.pagesCollection === 'undefined') {\n                this.pagesCollection = new PdfSectionPageCollection(this);\n            }\n            return this.pagesCollection;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //methods\n    /**\n     * `Return the page collection` of current section.\n     * @private\n     */\n    PdfSection.prototype.getPages = function () {\n        return this.pdfPages;\n    };\n    /**\n     * `Translates` point into native coordinates of the page.\n     * @private\n     */\n    PdfSection.prototype.pointToNativePdf = function (page, point) {\n        var bounds = this.getActualBounds(page, true);\n        point.x += bounds.x;\n        point.y = this.pageSettings.height - (point.y);\n        return point;\n    };\n    /**\n     * Sets the page setting of the current section.\n     * @public\n     * @param settings Instance of `PdfPageSettings`\n     */\n    PdfSection.prototype.setPageSettings = function (settings) {\n        this.settings = settings;\n        this.state.orientation = settings.orientation;\n        this.state.rotate = settings.rotate;\n        this.state.size = settings.size;\n        this.state.origin = settings.origin;\n    };\n    /**\n     * `Initializes` the object.\n     * @private\n     */\n    PdfSection.prototype.initialize = function () {\n        this.pagesReferences = new PdfArray();\n        this.section = new PdfDictionary();\n        this.state = new PageSettingsState(this.pdfDocument);\n        this.section.sectionBeginSave = new SaveSectionEventHandler(this, this.state);\n        this.pageCount = new PdfNumber(0);\n        this.section.items.setValue(this.dictionaryProperties.count, this.pageCount);\n        this.section.items.setValue(this.dictionaryProperties.type, new PdfName(this.dictionaryProperties.pages));\n        this.section.items.setValue(this.dictionaryProperties.kids, this.pagesReferences);\n    };\n    /**\n     * Checks whether any template should be printed on this layer.\n     * @private\n     * @param document The parent document.\n     * @param page The parent page.\n     * @param foreground Layer z-order.\n     * @returns True - if some content should be printed on the layer, False otherwise.\n     */\n    PdfSection.prototype.containsTemplates = function (document, page, foreground) {\n        var documentHeaders = this.getDocumentTemplates(document, page, true, foreground);\n        var documentTemplates = this.getDocumentTemplates(document, page, false, foreground);\n        var contains = (documentHeaders.length > 0 || documentTemplates.length > 0);\n        return contains;\n    };\n    /**\n     * Returns array of the document templates.\n     * @private\n     * @param document The parent document.\n     * @param page The parent page.\n     * @param headers If true - return headers/footers, if false - return simple templates.\n     * @param foreground If true - return foreground templates, if false - return background templates.\n     * @returns Returns array of the document templates.\n     */\n    /* tslint:disable */\n    PdfSection.prototype.getDocumentTemplates = function (document, page, headers, foreground) {\n        var templates = [];\n        if (headers) {\n            if (this.template.applyDocumentTopTemplate && document.template.getTop(page) != null) {\n                if ((!(document.template.getTop(page).foreground || foreground)) || (document.template.getTop(page).foreground && foreground)) {\n                    templates.push(document.template.getTop(page));\n                }\n            }\n            if (this.template.applyDocumentBottomTemplate && document.template.getBottom(page) != null) {\n                if ((!(document.template.getBottom(page).foreground || foreground)) || (document.template.getBottom(page).foreground && foreground)) {\n                    templates.push(document.template.getBottom(page));\n                }\n            }\n            if (this.template.applyDocumentLeftTemplate && document.template.getLeft(page) != null) {\n                if ((!(document.template.getLeft(page).foreground || foreground)) || (document.template.getLeft(page).foreground && foreground)) {\n                    templates.push(document.template.getLeft(page));\n                }\n            }\n            if (this.template.applyDocumentRightTemplate && document.template.getRight(page) != null) {\n                if ((!(document.template.getRight(page).foreground || foreground)) || (document.template.getRight(page).foreground && foreground)) {\n                    templates.push(document.template.getRight(page));\n                }\n            }\n        }\n        return templates;\n    };\n    /* tslint:enable */\n    /**\n     * `Adds` the specified page.\n     * @private\n     */\n    PdfSection.prototype.add = function (page) {\n        if (typeof page === 'undefined') {\n            var page_1 = new PdfPage();\n            this.add(page_1);\n            return page_1;\n        }\n        else {\n            var r = this.checkPresence(page);\n            this.pdfPages.push(page);\n            this.pagesReferences.add(r);\n            page.setSection(this);\n            page.resetProgress();\n            this.pageAddedMethod(page);\n        }\n    };\n    /**\n     * `Checks the presence`.\n     * @private\n     */\n    PdfSection.prototype.checkPresence = function (page) {\n        var rh = new PdfReferenceHolder(page);\n        var contains = false;\n        var sc = this.parent;\n        for (var index = 0; index < sc.section.length; index++) {\n            var section = sc.section[index];\n            contains = contains || section.contains(page);\n        }\n        return rh;\n    };\n    /**\n     * `Determines` whether the page in within the section.\n     * @private\n     */\n    PdfSection.prototype.contains = function (page) {\n        var index = this.indexOf(page);\n        return (0 <= index);\n    };\n    /**\n     * Get the `index of` the page.\n     * @private\n     */\n    PdfSection.prototype.indexOf = function (page) {\n        for (var index = 0; index < this.pdfPages.length; index++) {\n            if (this.pdfPages[index] === page) {\n                return this.pdfPages.indexOf(page);\n            }\n        }\n        var r = new PdfReferenceHolder(page);\n        return this.pagesReferences.indexOf(r);\n    };\n    /**\n     * Call two event's methods.\n     * @hidden\n     * @private\n     */\n    PdfSection.prototype.pageAddedMethod = function (page) {\n        //Create event's arguments\n        var args = new PageAddedEventArgs(page);\n        this.onPageAdded(args);\n        var parent = this.parent;\n        parent.document.pages.onPageAdded(args);\n        this.pageCount.intValue = this.count;\n    };\n    /**\n     * Called when the page has been added.\n     * @hidden\n     * @private\n     */\n    PdfSection.prototype.onPageAdded = function (args) {\n        //\n    };\n    PdfSection.prototype.getActualBounds = function (arg1, arg2, arg3) {\n        if (arg1 instanceof PdfPage && typeof arg2 === 'boolean') {\n            var result = void 0;\n            var document_1 = this.parent.document;\n            result = this.getActualBounds(document_1, arg1, arg2);\n            return result;\n        }\n        else {\n            arg1 = arg1;\n            arg2 = arg2;\n            arg3 = arg3;\n            var bounds = new RectangleF(0, 0, 0, 0);\n            bounds.height = (arg3) ? this.pageSettings.size.height : this.pageSettings.getActualSize().height;\n            bounds.width = (arg3) ? this.pageSettings.size.width : this.pageSettings.getActualSize().width;\n            var left = this.getLeftIndentWidth(arg1, arg2, arg3);\n            var top_1 = this.getTopIndentHeight(arg1, arg2, arg3);\n            var right = this.getRightIndentWidth(arg1, arg2, arg3);\n            var bottom = this.getBottomIndentHeight(arg1, arg2, arg3);\n            bounds.x += left;\n            bounds.y += top_1;\n            bounds.width -= (left + right);\n            bounds.height -= (top_1 + bottom);\n            return bounds;\n        }\n    };\n    /**\n     * Calculates width of the `left indent`.\n     * @private\n     */\n    PdfSection.prototype.getLeftIndentWidth = function (document, page, includeMargins) {\n        if (document == null) {\n            throw new Error('ArgumentNullException:document');\n        }\n        if (page == null) {\n            throw new Error('ArgumentNullException:page');\n        }\n        var value = (includeMargins) ? this.pageSettings.margins.left : 0;\n        var templateWidth = (this.template.getLeft(page) != null) ? this.template.getLeft(page).width : 0;\n        var docTemplateWidth = (document.template.getLeft(page) != null) ? document.template.getLeft(page).width : 0;\n        value += (this.template.applyDocumentLeftTemplate) ? Math.max(templateWidth, docTemplateWidth) : templateWidth;\n        return value;\n    };\n    /**\n     * Calculates `Height` of the top indent.\n     * @private\n     */\n    PdfSection.prototype.getTopIndentHeight = function (document, page, includeMargins) {\n        if (document == null) {\n            throw new Error('ArgumentNullException:document');\n        }\n        if (page == null) {\n            throw new Error('ArgumentNullException:page');\n        }\n        var value = (includeMargins) ? this.pageSettings.margins.top : 0;\n        var templateHeight = (this.template.getTop(page) != null) ? this.template.getTop(page).height : 0;\n        var docTemplateHeight = (document.template.getTop(page) != null) ? document.template.getTop(page).height : 0;\n        value += (this.template.applyDocumentTopTemplate) ? Math.max(templateHeight, docTemplateHeight) : templateHeight;\n        return value;\n    };\n    /**\n     * Calculates `width` of the right indent.\n     * @private\n     */\n    PdfSection.prototype.getRightIndentWidth = function (document, page, includeMargins) {\n        if (document == null) {\n            throw new Error('ArgumentNullException:document');\n        }\n        if (page == null) {\n            throw new Error('ArgumentNullException:page');\n        }\n        var value = (includeMargins) ? this.pageSettings.margins.right : 0;\n        var templateWidth = (this.template.getRight(page) != null) ? this.template.getRight(page).width : 0;\n        var docTemplateWidth = (document.template.getRight(page) != null) ? document.template.getRight(page).width : 0;\n        value += (this.template.applyDocumentRightTemplate) ? Math.max(templateWidth, docTemplateWidth) : templateWidth;\n        return value;\n    };\n    /**\n     * Calculates `Height` of the bottom indent.\n     * @private\n     */\n    PdfSection.prototype.getBottomIndentHeight = function (document, page, includeMargins) {\n        if (document == null) {\n            throw new Error('ArgumentNullException:document');\n        }\n        if (page == null) {\n            throw new Error('ArgumentNullException:page');\n        }\n        var value = (includeMargins) ? this.pageSettings.margins.bottom : 0;\n        var templateHeight = (this.template.getBottom(page) != null) ? this.template.getBottom(page).height : 0;\n        var docTemplateHeight = (document.template.getBottom(page) != null) ? document.template.getBottom(page).height : 0;\n        value += (this.template.applyDocumentBottomTemplate) ? Math.max(templateHeight, docTemplateHeight) : templateHeight;\n        return value;\n    };\n    /**\n     * `Removes` the page from the section.\n     * @private\n     */\n    PdfSection.prototype.remove = function (page) {\n        if (page == null) {\n            throw Error('ArgumentNullException(\"page\")');\n        }\n        var index = this.pdfPages.indexOf(page);\n        this.pagesReferences.removeAt(index);\n        var temproaryPages = [];\n        for (var j = 0; j < index; j++) {\n            temproaryPages.push(this.pdfPages[j]);\n        }\n        for (var j = index + 1; j < this.pdfPages.length; j++) {\n            temproaryPages.push(this.pdfPages[j]);\n        }\n        this.pdfPages = temproaryPages;\n    };\n    /**\n     * In fills dictionary by the data from `Page settings`.\n     * @private\n     */\n    PdfSection.prototype.applyPageSettings = function (container, parentSettings, state) {\n        var bounds = new RectangleF(state.origin, state.size);\n        container.items.setValue(this.dictionaryProperties.mediaBox, PdfArray.fromRectangle(bounds));\n        var rotate = 0;\n        rotate = PdfSectionCollection.rotateFactor * state.rotate;\n        var angle = new PdfNumber(rotate);\n        container.items.setValue(this.dictionaryProperties.rotate, angle);\n    };\n    /**\n     * Catches the Save event of the dictionary.\n     * @hidden\n     * @private\n     */\n    PdfSection.prototype.beginSave = function (state, writer) {\n        var doc = writer.document;\n        this.applyPageSettings(this.section, doc.pageSettings, state);\n    };\n    /**\n     * Draws page templates on the page.\n     * @private\n     */\n    PdfSection.prototype.drawTemplates = function (page, layer, document, foreground) {\n        var documentHeaders = this.getDocumentTemplates(document, page, true, foreground);\n        var documentTemplates = this.getDocumentTemplates(document, page, false, foreground);\n        if (foreground) {\n            this.drawTemplatesHelper(layer, document, documentHeaders);\n            this.drawTemplatesHelper(layer, document, documentTemplates);\n        }\n        else {\n            this.drawTemplatesHelper(layer, document, documentHeaders);\n            this.drawTemplatesHelper(layer, document, documentTemplates);\n        }\n    };\n    /**\n     * Draws page templates on the page.\n     * @private\n     */\n    PdfSection.prototype.drawTemplatesHelper = function (layer, document, templates) {\n        if (templates != null && templates.length > 0) {\n            var len = templates.length;\n            for (var i = 0; i < len; i++) {\n                var template = templates[i];\n                template.draw(layer, document);\n            }\n        }\n    };\n    return PdfSection;\n}());\nexport { PdfSection };\nvar PageSettingsState = /** @class */ (function () {\n    //Public Constructor\n    /**\n     * New instance to store the `PageSettings`.\n     * @private\n     */\n    function PageSettingsState(document) {\n        this.pageOrientation = document.pageSettings.orientation;\n        this.pageRotate = document.pageSettings.rotate;\n        this.pageSize = document.pageSettings.size;\n        this.pageOrigin = document.pageSettings.origin;\n    }\n    Object.defineProperty(PageSettingsState.prototype, \"orientation\", {\n        //public Properties\n        /**\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.pageOrientation;\n        },\n        set: function (value) {\n            this.pageOrientation = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PageSettingsState.prototype, \"rotate\", {\n        /**\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.pageRotate;\n        },\n        set: function (value) {\n            this.pageRotate = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PageSettingsState.prototype, \"size\", {\n        /**\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.pageSize;\n        },\n        set: function (value) {\n            this.pageSize = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PageSettingsState.prototype, \"origin\", {\n        /**\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.pageOrigin;\n        },\n        set: function (value) {\n            this.pageOrigin = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PageSettingsState;\n}());\nexport { PageSettingsState };\n","import { PdfNumber } from './../primitives/pdf-number';\nimport { PdfName } from './../primitives/pdf-name';\nimport { PdfArray } from './../primitives/pdf-array';\nimport { PdfDictionary, SaveSectionCollectionEventHandler } from './../primitives/pdf-dictionary';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { RectangleF, PointF } from './../drawing/pdf-drawing';\nimport { PdfSection } from './pdf-section';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\n/**\n * Represents the `collection of the sections`.\n * @private\n */\nvar PdfSectionCollection = /** @class */ (function () {\n    //constructor\n    /**\n     * Initializes a new instance of the `PdfSectionCollection` class.\n     * @private\n     */\n    function PdfSectionCollection(document) {\n        /**\n         * @hidden\n         * @private\n         */\n        this.sections = [];\n        /**\n         * @hidden\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        // if (document === null) {\n        //     throw new Error('ArgumentNullException : document');\n        // }\n        this.pdfDocument = document.clone();\n        this.initialize();\n    }\n    Object.defineProperty(PdfSectionCollection.prototype, \"section\", {\n        //Properties\n        /**\n         * Gets the `Section` collection.\n         */\n        get: function () {\n            return this.sections;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSectionCollection.prototype, \"document\", {\n        /**\n         * Gets a parent `document`.\n         * @private\n         */\n        get: function () {\n            return this.pdfDocument;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSectionCollection.prototype, \"count\", {\n        /**\n         * Gets the `number of sections` in a document.\n         * @private\n         */\n        get: function () {\n            return this.sections.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSectionCollection.prototype, \"element\", {\n        /**\n         * Gets the wrapped `element`.\n         * @private\n         */\n        get: function () {\n            return this.pages;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Methods\n    /**\n     * `Initializes the object`.\n     * @private\n     */\n    PdfSectionCollection.prototype.initialize = function () {\n        this.sectionCount = new PdfNumber(0);\n        this.sectionCollection = new PdfArray();\n        this.pages = new PdfDictionary();\n        this.pages.beginSave = new SaveSectionCollectionEventHandler(this);\n        this.pages.items.setValue(this.dictionaryProperties.type, new PdfName('Pages'));\n        this.pages.items.setValue(this.dictionaryProperties.kids, this.sectionCollection);\n        this.pages.items.setValue(this.dictionaryProperties.count, this.sectionCount);\n        this.pages.items.setValue(this.dictionaryProperties.resources, new PdfDictionary());\n        this.setPageSettings(this.pages, this.pdfDocument.pageSettings);\n    };\n    /**\n     * Initializes a new instance of the `PdfSectionCollection` class.\n     * @private\n     */\n    PdfSectionCollection.prototype.pdfSectionCollection = function (index) {\n        if (index < 0 || index >= this.count) {\n            throw new Error('IndexOutOfRangeException()');\n        }\n        return this.sections[index];\n    };\n    /**\n     * In fills dictionary by the data from `Page settings`.\n     * @private\n     */\n    PdfSectionCollection.prototype.setPageSettings = function (container, pageSettings) {\n        // if (container === null) {\n        //     throw new Error('ArgumentNullException : container');\n        // }\n        // if (pageSettings === null) {\n        //     throw new Error('ArgumentNullException : pageSettings');\n        // }\n        var bounds = new RectangleF(new PointF(), pageSettings.size);\n        container.items.setValue(this.dictionaryProperties.mediaBox, PdfArray.fromRectangle(bounds));\n    };\n    /**\n     * `Adds` the specified section.\n     * @private\n     */\n    PdfSectionCollection.prototype.add = function (section) {\n        if (typeof section === 'undefined') {\n            var section_1 = new PdfSection(this.pdfDocument);\n            this.add(section_1);\n            return section_1;\n        }\n        else {\n            // if (section === null) {\n            //     throw new Error('ArgumentNullException : section');\n            // }\n            var r = this.checkSection(section);\n            this.sections.push(section);\n            section.parent = this;\n            this.sectionCollection.add(r);\n            return this.sections.indexOf(section);\n        }\n    };\n    /**\n     * `Checks` if the section is within the collection.\n     * @private\n     */\n    PdfSectionCollection.prototype.checkSection = function (section) {\n        var r = new PdfReferenceHolder(section);\n        var contains = this.sectionCollection.contains(r);\n        // if (contains) {\n        //     throw new Error('ArgumentException : The object can not be added twice to the collection,section');\n        // }\n        return r;\n    };\n    /**\n     * Catches the Save event of the dictionary to `count the pages`.\n     * @private\n     */\n    PdfSectionCollection.prototype.countPages = function () {\n        var count = 0;\n        this.sections.forEach(function (n) { return (count += n.count); });\n        return count;\n    };\n    /**\n     * Catches the Save event of the dictionary to `count the pages`.\n     * @hidden\n     * @private\n     */\n    PdfSectionCollection.prototype.beginSave = function () {\n        this.sectionCount.intValue = this.countPages();\n    };\n    //Fields\n    /**\n     * Rotate factor for page `rotation`.\n     * @default 90\n     * @private\n     */\n    PdfSectionCollection.rotateFactor = 90;\n    return PdfSectionCollection;\n}());\nexport { PdfSectionCollection };\n","import { PdfPage } from './pdf-page';\nimport { Dictionary } from './../collections/dictionary';\nimport { PdfPageOrientation } from './enum';\n/**\n * Represents a virtual collection of all the pages in the document.\n * @private\n */\nvar PdfDocumentPageCollection = /** @class */ (function () {\n    //constructor\n    /**\n     * Initializes a new instance of the `PdfPageCollection` class.\n     * @private\n     */\n    function PdfDocumentPageCollection(document) {\n        /**\n         * It holds the page collection with the `index`.\n         * @private\n         */\n        this.pdfPageCollectionIndex = new Dictionary();\n        /**\n         * Stores the previous pages's `orientation`.\n         * @default PdfPageOrientation.Portrait\n         * @private\n         */\n        this.previousPageOrientation = PdfPageOrientation.Portrait;\n        this.document = document;\n    }\n    Object.defineProperty(PdfDocumentPageCollection.prototype, \"count\", {\n        //Property\n        /**\n         * Gets the total `number of the pages`.\n         * @private\n         */\n        get: function () {\n            return this.countPages();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentPageCollection.prototype, \"pageCollectionIndex\", {\n        /**\n         * Gets a `page index` from the document.\n         * @private\n         */\n        get: function () {\n            return this.pdfPageCollectionIndex;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfDocumentPageCollection.prototype.add = function (page) {\n        if (typeof page === 'undefined') {\n            var page_1 = new PdfPage();\n            this.add(page_1);\n            return page_1;\n        }\n        else {\n            var section = this.getLastSection();\n            if (section.pageSettings.orientation !== this.previousPageOrientation) {\n                section = this.document.sections.add();\n                section.pageSettings.orientation = this.document.pageSettings.orientation;\n            }\n            section.add(page);\n        }\n    };\n    /**\n     * Returns `last section` in the document.\n     * @private\n     */\n    PdfDocumentPageCollection.prototype.getLastSection = function () {\n        var sc = this.document.sections;\n        if (sc.section.length === 0) {\n            sc.add();\n        }\n        var section = sc.section[sc.section.length - 1];\n        return section;\n    };\n    /**\n     * Called when `new page has been added`.\n     * @private\n     */\n    PdfDocumentPageCollection.prototype.onPageAdded = function (args) {\n        // if (PageAdded !== null)\n        // {\n        //     PageAdded(this, args);\n        // }\n    };\n    /**\n     * Gets the `total number of pages`.\n     * @private\n     */\n    PdfDocumentPageCollection.prototype.countPages = function () {\n        var sc = this.document.sections;\n        var count = 0;\n        for (var index = 0; index < sc.section.length; index++) {\n            count += sc.section[index].count;\n        }\n        return count;\n    };\n    /**\n     * Gets the `page object` from page index.\n     * @private\n     */\n    PdfDocumentPageCollection.prototype.getPageByIndex = function (index) {\n        return this.getPage(index);\n    };\n    /**\n     * Gets a page by its `index` in the document.\n     * @private\n     */\n    PdfDocumentPageCollection.prototype.getPage = function (index) {\n        if ((index < 0) || (index >= this.count)) {\n            throw Error('ArgumentOutOfRangeException(\"index\", \"Value can not be less 0\")');\n        }\n        var page = null;\n        var sectionStartIndex = 0;\n        var sectionCount = 0;\n        var pageIndex = 0;\n        var length = this.document.sections.count;\n        for (var i = 0; i < length; i++) {\n            var section = this.document.sections.section[i];\n            sectionCount = section.count;\n            pageIndex = index - sectionStartIndex;\n            // We found a section containing the page.\n            if ((index >= sectionStartIndex && pageIndex < sectionCount)) {\n                page = section.getPages()[pageIndex];\n                break;\n            }\n            sectionStartIndex += sectionCount;\n        }\n        return page;\n    };\n    /**\n     * Gets the `index of` the page in the document.\n     * @private\n     */\n    PdfDocumentPageCollection.prototype.indexOf = function (page) {\n        var index = -1;\n        if (page == null) {\n            throw new Error('ArgumentNullException: page');\n        }\n        else {\n            var numPages = 0;\n            for (var i = 0, len = this.document.sections.count; i < len; i++) {\n                var section = this.document.sections.pdfSectionCollection(i);\n                index = section.indexOf(page);\n                if (index >= 0) {\n                    index += numPages;\n                    break;\n                }\n                else {\n                    index = -1;\n                }\n                numPages += section.count;\n            }\n        }\n        return index;\n    };\n    /**\n     * `Removes` the specified page.\n     * @private\n     */\n    PdfDocumentPageCollection.prototype.remove = function (page) {\n        if (page == null) {\n            throw Error('ArgumentNullException(\"page\")');\n        }\n        var section = null;\n        var len;\n        for (var i = 0, len_1 = this.document.sections.count; i < len_1; i++) {\n            section = this.document.sections.pdfSectionCollection(i);\n            if (section.pages.contains(page)) {\n                section.pages.remove(page);\n                break;\n            }\n        }\n        return section;\n    };\n    return PdfDocumentPageCollection;\n}());\nexport { PdfDocumentPageCollection };\n","/**\n * PdfCacheCollection.ts class for EJ2-PDF\n */\nimport { Dictionary } from './../collections/dictionary';\n/**\n * `Collection of the cached objects`.\n * @private\n */\nvar PdfCacheCollection = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initializes a new instance of the `PdfCacheCollection` class.\n     * @private\n     */\n    function PdfCacheCollection() {\n        this.referenceObjects = [];\n        this.pdfFontCollection = new Dictionary();\n    }\n    // Public methods\n    /**\n     * `Searches` for the similar cached object. If is not found - adds the object to the cache.\n     * @private\n     */\n    PdfCacheCollection.prototype.search = function (obj) {\n        var result = null;\n        var group = this.createNewGroup();\n        group.push(obj);\n        return result;\n    };\n    // Implementation\n    /**\n     * `Creates` a new group.\n     * @private\n     */\n    PdfCacheCollection.prototype.createNewGroup = function () {\n        var group = [];\n        this.referenceObjects.push(group);\n        return group;\n    };\n    PdfCacheCollection.prototype.destroy = function () {\n        this.pdfFontCollection = undefined;\n        this.referenceObjects = undefined;\n    };\n    return PdfCacheCollection;\n}());\nexport { PdfCacheCollection };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfWriter } from './../input-output/pdf-writer';\nimport { PdfMainObjectCollection } from './../input-output/pdf-main-object-collection';\nimport { PdfDocumentBase } from './pdf-document-base';\nimport { PdfCrossTable } from './../input-output/pdf-cross-table';\nimport { PdfCatalog } from './pdf-catalog';\nimport { PdfPageSettings } from './../pages/pdf-page-settings';\nimport { PdfSectionCollection } from './../pages/pdf-section-collection';\nimport { PdfDocumentPageCollection } from './../pages/pdf-document-page-collection';\nimport { PdfCacheCollection } from './../general/pdf-cache-collection';\nimport { PdfColorSpace } from './../graphics/enum';\nimport { PdfDocumentTemplate } from './pdf-document-template';\nimport { PdfFontFamily } from './../graphics/fonts/enum';\nimport { PdfStandardFont } from './../graphics/fonts/pdf-standard-font';\n/**\n * Represents a PDF document and can be used to create a new PDF document from the scratch.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // add a new page to the document\n * let page1 : PdfPage = document.pages.add();\n * // set the font\n * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n * // create black brush\n * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n * // draw the text\n * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(0, 0));\n * // save the document\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfDocument = /** @class */ (function (_super) {\n    __extends(PdfDocument, _super);\n    function PdfDocument(isMerging) {\n        var _this = _super.call(this) || this;\n        /**\n         * Default `margin` value.\n         * @default 40.0\n         * @private\n         */\n        _this.defaultMargin = 40.0;\n        /**\n         * Internal variable to store instance of `StreamWriter` classes..\n         * @default null\n         * @private\n         */\n        _this.streamWriter = null;\n        _this = _super.call(this, _this) || this;\n        if (isMerging === true || isMerging === false || typeof isMerging !== 'undefined') {\n            var objects = new PdfMainObjectCollection();\n            _this.setMainObjectCollection(objects);\n            var crossTable = new PdfCrossTable();\n            crossTable.isMerging = isMerging;\n            crossTable.document = _this;\n            _this.setCrossTable(crossTable);\n            var catalog = new PdfCatalog();\n            _this.setCatalog(catalog);\n            objects.add(catalog);\n            catalog.position = -1;\n            _this.sectionCollection = new PdfSectionCollection(_this);\n            _this.documentPageCollection = new PdfDocumentPageCollection(_this);\n            catalog.pages = _this.sectionCollection;\n        }\n        else {\n            PdfDocument.cacheCollection = new PdfCacheCollection();\n            _this.constructor(false);\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfDocument, \"defaultFont\", {\n        //Properties\n        /**\n         * Gets the `default font`. It is used for complex objects when font is not explicitly defined.\n         * @private\n         */\n        get: function () {\n            if (this.defaultStandardFont == null) {\n                this.defaultStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 8);\n            }\n            return this.defaultStandardFont;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"sections\", {\n        /**\n         * Gets the collection of the `sections` in the document.\n         * @private\n         */\n        get: function () {\n            return this.sectionCollection;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"pageSettings\", {\n        /**\n         * Gets the document's page setting.\n         * @public\n         */\n        get: function () {\n            if (this.settings == null) {\n                this.settings = new PdfPageSettings(this.defaultMargin);\n            }\n            return this.settings;\n        },\n        /**\n         * Sets the document's page setting.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         *\n         * // sets the right margin of the page\n         * document.pageSettings.margins.right = 0;\n         * // set the page size.\n         * document.pageSettings.size = new SizeF(500, 500);\n         * // change the page orientation to landscape\n         * document.pageSettings.orientation = PdfPageOrientation.Landscape;\n         * // apply 90 degree rotation on the page\n         * document.pageSettings.rotate = PdfPageRotateAngle.RotateAngle90;\n         *\n         * // add a pages to the document\n         * let page1 : PdfPage = document.pages.add();\n         * // set font\n         * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n         * // set brush\n         * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n         * // set the specified Point\n         * let point : PointF = new PointF(page1.getClientSize().width - 200, page1.getClientSize().height - 200);\n         * // draw the text\n         * page1.graphics.drawString('Hello World', font, blackBrush, point);\n         * // save the document\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this.settings = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"pages\", {\n        /**\n         * Represents the collection of pages in the PDF document.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * //\n         * // get the collection of pages in the document\n         * let pageCollection : PdfDocumentPageCollection  = document.pages;\n         * //\n         * // add pages\n         * let page1 : PdfPage = pageCollection.add();\n         * // save the document\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this.documentPageCollection;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument, \"cache\", {\n        /**\n         * Gets collection of the `cached objects`.\n         * @private\n         */\n        get: function () {\n            if (typeof PdfDocument.cacheCollection === 'undefined' || PdfDocument.cacheCollection == null) {\n                return new PdfCacheCollection();\n            }\n            return PdfDocument.cacheCollection;\n        },\n        /**\n         * Sets collection of the `cached objects`.\n         * @private\n         */\n        set: function (value) {\n            this.cacheCollection = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"colorSpace\", {\n        /* tslint:disable */\n        /**\n         * Gets or sets the `color space` of the document. This property can be used to create PDF document in RGB, Gray scale or CMYK color spaces.\n         * @private\n         */\n        get: function () {\n            if ((this.pdfColorSpace === PdfColorSpace.Rgb) || ((this.pdfColorSpace === PdfColorSpace.Cmyk)\n                || (this.pdfColorSpace === PdfColorSpace.GrayScale))) {\n                return this.pdfColorSpace;\n            }\n            else {\n                return PdfColorSpace.Rgb;\n            }\n        },\n        set: function (value) {\n            if ((value === PdfColorSpace.Rgb) || ((value === PdfColorSpace.Cmyk) ||\n                (value === PdfColorSpace.GrayScale))) {\n                this.pdfColorSpace = value;\n            }\n            else {\n                this.pdfColorSpace = PdfColorSpace.Rgb;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"template\", {\n        /* tslint:enable */\n        /**\n         * Gets or sets a `template` to all pages in the document.\n         * @private\n         */\n        get: function () {\n            if (this.pageTemplate == null) {\n                this.pageTemplate = new PdfDocumentTemplate();\n            }\n            return this.pageTemplate;\n        },\n        set: function (value) {\n            this.pageTemplate = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfDocument.prototype.docSave = function (stream, arg2, arg3) {\n        this.checkPagesPresence();\n        if (stream === null) {\n            throw new Error('ArgumentNullException : stream');\n        }\n        this.streamWriter = stream;\n        var writer = new PdfWriter(stream);\n        writer.document = this;\n        if (typeof arg2 === 'boolean' && typeof arg3 === 'undefined') {\n            return this.crossTable.save(writer);\n        }\n        else {\n            this.crossTable.save(writer, arg2);\n        }\n    };\n    /**\n     * Checks the pages `presence`.\n     * @private\n     */\n    PdfDocument.prototype.checkPagesPresence = function () {\n        if (this.pages.count === 0) {\n            this.pages.add();\n        }\n    };\n    /**\n     * disposes the current instance of `PdfDocument` class.\n     * ```typescript\n     * // create a new PDF document\n     * let document : PdfDocument = new PdfDocument();\n     * // add a new page to the document\n     * let page1 : PdfPage = document.pages.add();\n     * // set the font\n     * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n     * // create black brush\n     * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n     * // draw the text\n     * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(0, 0));\n     * // save the document\n     * document.save('output.pdf');\n     * // destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfDocument.prototype.destroy = function () {\n        this.catalog = undefined;\n        this.colorSpace = undefined;\n        this.currentSavingObj = undefined;\n        this.documentPageCollection = undefined;\n        this.isStreamCopied = undefined;\n        this.pageSettings = undefined;\n        this.pageTemplate = undefined;\n        this.pdfColorSpace = undefined;\n        this.sectionCollection = undefined;\n        PdfDocument.cache.destroy();\n        this.crossTable.pdfObjects.destroy();\n        PdfDocument.cache = undefined;\n        this.streamWriter.destroy();\n    };\n    /**\n     * `Font` used in complex objects to draw strings and text when it is not defined explicitly.\n     * @default null\n     * @private\n     */\n    PdfDocument.defaultStandardFont = null;\n    return PdfDocument;\n}(PdfDocumentBase));\nexport { PdfDocument };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfFont } from './pdf-font';\nimport { PdfSubSuperScript } from './enum';\nimport { PdfArray } from './../../primitives/pdf-array';\n/**\n * `Metrics` of the font.\n * @private\n */\nvar PdfFontMetrics = /** @class */ (function () {\n    function PdfFontMetrics() {\n        /**\n         * `Line gap`.\n         * @private\n         */\n        this.lineGap = 0;\n    }\n    //  Public methods\n    /**\n     * Returns `ascent` taking into consideration font`s size.\n     * @private\n     */\n    PdfFontMetrics.prototype.getAscent = function (format) {\n        var returnValue = this.ascent * PdfFont.charSizeMultiplier * this.getSize(format);\n        return returnValue;\n    };\n    /**\n     * Returns `descent` taking into consideration font`s size.\n     * @private\n     */\n    PdfFontMetrics.prototype.getDescent = function (format) {\n        var returnValue = this.descent * PdfFont.charSizeMultiplier * this.getSize(format);\n        return returnValue;\n    };\n    /**\n     * Returns `Line gap` taking into consideration font`s size.\n     * @private\n     */\n    PdfFontMetrics.prototype.getLineGap = function (format) {\n        var returnValue = this.lineGap * PdfFont.charSizeMultiplier * this.getSize(format);\n        return returnValue;\n    };\n    /**\n     * Returns `height` taking into consideration font`s size.\n     * @private\n     */\n    PdfFontMetrics.prototype.getHeight = function (format) {\n        var height;\n        var clearTypeFonts = ['cambria', 'candara', 'constantia', 'corbel', 'cariadings'];\n        var clearTypeFontCollection = [];\n        for (var index = 0; index < clearTypeFonts.length; index++) {\n            var font = clearTypeFonts[index];\n            clearTypeFontCollection.push(font);\n        }\n        if (this.getDescent(format) < 0) {\n            // if ((clearTypeFontCollection.indexOf(this.name.toLowerCase()) !== -1) && !this.isUnicodeFont) {\n            //     height = (this.GetAscent(format) - this.GetDescent(format) - this.GetLineGap(format));\n            // } else {\n            height = (this.getAscent(format) - this.getDescent(format) + this.getLineGap(format));\n            // }\n        }\n        else {\n            height = (this.getAscent(format) + this.getDescent(format) + this.getLineGap(format));\n        }\n        return height;\n    };\n    /**\n     * Calculates `size` of the font depending on the subscript/superscript value.\n     * @private\n     */\n    PdfFontMetrics.prototype.getSize = function (format) {\n        var size = this.size;\n        if (format != null) {\n            switch (format.subSuperScript) {\n                case PdfSubSuperScript.SubScript:\n                    size /= this.subScriptSizeFactor;\n                    break;\n                case PdfSubSuperScript.SuperScript:\n                    size /= this.superscriptSizeFactor;\n                    break;\n            }\n        }\n        return size;\n    };\n    /**\n     * `Clones` the metrics.\n     * @private\n     */\n    PdfFontMetrics.prototype.clone = function () {\n        var metrics = this;\n        metrics.widthTable = WidthTable.clone();\n        return metrics;\n    };\n    Object.defineProperty(PdfFontMetrics.prototype, \"widthTable\", {\n        //  Properies\n        /**\n         * Gets or sets the `width table`.\n         * @private\n         */\n        get: function () {\n            return this.internalWidthTable;\n        },\n        set: function (value) {\n            this.internalWidthTable = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfFontMetrics;\n}());\nexport { PdfFontMetrics };\nvar WidthTable = /** @class */ (function () {\n    function WidthTable() {\n    }\n    /**\n     * Static `clones` this instance of the WidthTable class.\n     * @private\n     */\n    WidthTable.clone = function () {\n        return null;\n    };\n    return WidthTable;\n}());\nexport { WidthTable };\nvar StandardWidthTable = /** @class */ (function (_super) {\n    __extends(StandardWidthTable, _super);\n    // Constructors\n    /**\n     * Initializes a new instance of the `StandardWidthTable` class.\n     * @private\n     */\n    function StandardWidthTable(widths) {\n        var _this = _super.call(this) || this;\n        if (widths == null) {\n            throw new Error('ArgumentNullException:widths');\n        }\n        _this.widths = widths;\n        return _this;\n    }\n    //Properties\n    /**\n     * Gets the `32 bit number` at the specified index.\n     * @private\n     */\n    StandardWidthTable.prototype.items = function (index) {\n        if (index < 0 || index >= this.widths.length) {\n            throw new Error('ArgumentOutOfRangeException:index, The character is not supported by the font.');\n        }\n        var result = this.widths[index];\n        return result;\n    };\n    Object.defineProperty(StandardWidthTable.prototype, \"length\", {\n        /**\n         * Gets the `length` of the internal array.\n         * @private\n         */\n        get: function () {\n            return this.widths.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Overrides\n    /**\n     * `Clones` this instance of the WidthTable class.\n     * @private\n     */\n    StandardWidthTable.prototype.clone = function () {\n        var swt = this;\n        swt.widths = this.widths;\n        return swt;\n    };\n    /**\n     * Converts width table to a `PDF array`.\n     * @private\n     */\n    StandardWidthTable.prototype.toArray = function () {\n        var arr = new PdfArray(this.widths);\n        return arr;\n    };\n    return StandardWidthTable;\n}(WidthTable));\nexport { StandardWidthTable };\n","/**\n * PdfStandardFontMetricsFactory.ts class for EJ2-PDF\n */\nimport { PdfFontStyle, PdfFontFamily } from './enum';\nimport { PdfFontMetrics, StandardWidthTable } from './pdf-font-metrics';\n/**\n * @private\n * `Factory of the standard fonts metrics`.\n */\nvar PdfStandardFontMetricsFactory = /** @class */ (function () {\n    function PdfStandardFontMetricsFactory() {\n    }\n    /**\n     * Returns `metrics` of the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.getMetrics = function (fontFamily, fontStyle, size) {\n        var metrics = null;\n        switch (fontFamily) {\n            case PdfFontFamily.Helvetica:\n                metrics = this.getHelveticaMetrics(fontFamily, fontStyle, size);\n                break;\n            case PdfFontFamily.Courier:\n                metrics = this.getCourierMetrics(fontFamily, fontStyle, size);\n                break;\n            case PdfFontFamily.TimesRoman:\n                metrics = this.getTimesMetrics(fontFamily, fontStyle, size);\n                break;\n            case PdfFontFamily.Symbol:\n                metrics = this.getSymbolMetrics(fontFamily, fontStyle, size);\n                break;\n            case PdfFontFamily.ZapfDingbats:\n                metrics = this.getZapfDingbatsMetrics(fontFamily, fontStyle, size);\n                break;\n            default:\n                metrics = this.getHelveticaMetrics(PdfFontFamily.Helvetica, fontStyle, size);\n                break;\n        }\n        metrics.name = fontFamily.toString();\n        metrics.subScriptSizeFactor = this.subSuperScriptFactor;\n        metrics.superscriptSizeFactor = this.subSuperScriptFactor;\n        return metrics;\n    };\n    // Implementation\n    /**\n     * Creates `Helvetica font metrics`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.getHelveticaMetrics = function (fontFamily, fontStyle, size) {\n        var metrics = new PdfFontMetrics();\n        if ((fontStyle & PdfFontStyle.Bold) > 0 && (fontStyle & PdfFontStyle.Italic) > 0) {\n            metrics.ascent = this.helveticaBoldItalicAscent;\n            metrics.descent = this.helveticaBoldItalicDescent;\n            metrics.postScriptName = this.helveticaBoldItalicName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.arialBoldWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        else if ((fontStyle & PdfFontStyle.Bold) > 0) {\n            metrics.ascent = this.helveticaBoldAscent;\n            metrics.descent = this.helveticaBoldDescent;\n            metrics.postScriptName = this.helveticaBoldName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.arialBoldWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        else if ((fontStyle & PdfFontStyle.Italic) > 0) {\n            metrics.ascent = this.helveticaItalicAscent;\n            metrics.descent = this.helveticaItalicDescent;\n            metrics.postScriptName = this.helveticaItalicName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.arialWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        else {\n            metrics.ascent = this.helveticaAscent;\n            metrics.descent = this.helveticaDescent;\n            metrics.postScriptName = this.helveticaName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.arialWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        return metrics;\n    };\n    /**\n     * Creates `Courier font metrics`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.getCourierMetrics = function (fontFamily, fontStyle, size) {\n        var metrics = new PdfFontMetrics();\n        if ((fontStyle & PdfFontStyle.Bold) > 0 && (fontStyle & PdfFontStyle.Italic) > 0) {\n            metrics.ascent = this.courierBoldItalicAscent;\n            metrics.descent = this.courierBoldItalicDescent;\n            metrics.postScriptName = this.courierBoldItalicName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.fixedWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        else if ((fontStyle & PdfFontStyle.Bold) > 0) {\n            metrics.ascent = this.courierBoldAscent;\n            metrics.descent = this.courierBoldDescent;\n            metrics.postScriptName = this.courierBoldName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.fixedWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        else if ((fontStyle & PdfFontStyle.Italic) > 0) {\n            metrics.ascent = this.courierItalicAscent;\n            metrics.descent = this.courierItalicDescent;\n            metrics.postScriptName = this.courierItalicName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.fixedWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        else {\n            metrics.ascent = this.courierAscent;\n            metrics.descent = this.courierDescent;\n            metrics.postScriptName = this.courierName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.fixedWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        return metrics;\n    };\n    /**\n     * Creates `Times font metrics`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.getTimesMetrics = function (fontFamily, fontStyle, size) {\n        var metrics = new PdfFontMetrics();\n        if ((fontStyle & PdfFontStyle.Bold) > 0 && (fontStyle & PdfFontStyle.Italic) > 0) {\n            metrics.ascent = this.timesBoldItalicAscent;\n            metrics.descent = this.timesBoldItalicDescent;\n            metrics.postScriptName = this.timesBoldItalicName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.timesRomanBoldItalicWidths);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        else if ((fontStyle & PdfFontStyle.Bold) > 0) {\n            metrics.ascent = this.timesBoldAscent;\n            metrics.descent = this.timesBoldDescent;\n            metrics.postScriptName = this.timesBoldName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.timesRomanBoldWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        else if ((fontStyle & PdfFontStyle.Italic) > 0) {\n            metrics.ascent = this.timesItalicAscent;\n            metrics.descent = this.timesItalicDescent;\n            metrics.postScriptName = this.timesItalicName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.timesRomanItalicWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        else {\n            metrics.ascent = this.timesAscent;\n            metrics.descent = this.timesDescent;\n            metrics.postScriptName = this.timesName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.timesRomanWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        return metrics;\n    };\n    /**\n     * Creates `Symbol font metrics`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.getSymbolMetrics = function (fontFamily, fontStyle, size) {\n        var metrics = new PdfFontMetrics();\n        metrics.ascent = this.symbolAscent;\n        metrics.descent = this.symbolDescent;\n        metrics.postScriptName = this.symbolName;\n        metrics.size = size;\n        metrics.widthTable = new StandardWidthTable(this.symbolWidth);\n        metrics.height = metrics.ascent - metrics.descent;\n        return metrics;\n    };\n    /**\n     * Creates `ZapfDingbats font metrics`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.getZapfDingbatsMetrics = function (fontFamily, fontStyle, size) {\n        var metrics = new PdfFontMetrics();\n        metrics.ascent = this.zapfDingbatsAscent;\n        metrics.descent = this.zapfDingbatsDescent;\n        metrics.postScriptName = this.zapfDingbatsName;\n        metrics.size = size;\n        metrics.widthTable = new StandardWidthTable(this.zapfDingbatsWidth);\n        metrics.height = metrics.ascent - metrics.descent;\n        return metrics;\n    };\n    /**\n     * `Multiplier` os subscript superscript.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.subSuperScriptFactor = 1.52;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaAscent = 931;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaDescent = -225;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaName = 'Helvetica';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaBoldAscent = 962;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaBoldDescent = -228;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaBoldName = 'Helvetica-Bold';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaItalicAscent = 931;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaItalicDescent = -225;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaItalicName = 'Helvetica-Oblique';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaBoldItalicAscent = 962;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaBoldItalicDescent = -228;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaBoldItalicName = 'Helvetica-BoldOblique';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierAscent = 805;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierDescent = -250;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierName = 'Courier';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierBoldAscent = 801;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierBoldDescent = -250;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierBoldName = 'Courier-Bold';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierItalicAscent = 805;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierItalicDescent = -250;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierItalicName = 'Courier-Oblique';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierBoldItalicAscent = 801;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierBoldItalicDescent = -250;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierBoldItalicName = 'Courier-BoldOblique';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesAscent = 898;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesDescent = -218;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesName = 'Times-Roman';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesBoldAscent = 935;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesBoldDescent = -218;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesBoldName = 'Times-Bold';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesItalicAscent = 883;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesItalicDescent = -217;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesItalicName = 'Times-Italic';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesBoldItalicAscent = 921;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesBoldItalicDescent = -218;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesBoldItalicName = 'Times-BoldItalic';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.symbolAscent = 1010;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.symbolDescent = -293;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.symbolName = 'Symbol';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.zapfDingbatsAscent = 820;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.zapfDingbatsDescent = -143;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.zapfDingbatsName = 'ZapfDingbats';\n    /**\n     * `Arial` widths table.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.arialWidth = [\n        278, 278, 355, 556, 556, 889, 667, 191, 333, 333, 389, 584, 278, 333,\n        278, 278, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 278, 278, 584, 584,\n        584, 556, 1015, 667, 667, 722, 722, 667, 611, 778, 722, 278, 500, 667, 556, 833,\n        722, 778, 667, 778, 722, 667, 611, 722, 667, 944, 667, 667, 611, 278, 278, 278,\n        469, 556, 333, 556, 556, 500, 556, 556, 278, 556, 556, 222, 222, 500, 222, 833,\n        556, 556, 556, 556, 333, 500, 278, 556, 500, 722, 500, 500, 500, 334, 260, 334,\n        584, 0, 556, 0, 222, 556, 333, 1000, 556, 556, 333, 1000, 667, 333, 1000, 0,\n        611, 0, 0, 222, 222, 333, 333, 350, 556, 1000, 333, 1000, 500, 333, 944, 0,\n        500, 667, 0, 333, 556, 556, 556, 556, 260, 556, 333, 737, 370, 556, 584, 0,\n        737, 333, 400, 584, 333, 333, 333, 556, 537, 278, 333, 333, 365, 556, 834, 834,\n        834, 611, 667, 667, 667, 667, 667, 667, 1000, 722, 667, 667, 667, 667, 278, 278,\n        278, 278, 722, 722, 778, 778, 778, 778, 778, 584, 778, 722, 722, 722, 722, 667,\n        667, 611, 556, 556, 556, 556, 556, 556, 889, 500, 556, 556, 556, 556, 278, 278,\n        278, 278, 556, 556, 556, 556, 556, 556, 556, 584, 611, 556, 556, 556, 556, 500,\n        556, 500\n    ];\n    /**\n     * `Arial bold` widths table.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.arialBoldWidth = [\n        278, 333, 474, 556, 556, 889, 722, 238, 333, 333, 389, 584, 278, 333,\n        278, 278, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 333, 333, 584, 584,\n        584, 611, 975, 722, 722, 722, 722, 667, 611, 778, 722, 278, 556, 722, 611, 833,\n        722, 778, 667, 778, 722, 667, 611, 722, 667, 944, 667, 667, 611, 333, 278, 333,\n        584, 556, 333, 556, 611, 556, 611, 556, 333, 611, 611, 278, 278, 556, 278, 889,\n        611, 611, 611, 611, 389, 556, 333, 611, 556, 778, 556, 556, 500, 389, 280, 389,\n        584, 0, 556, 0, 278, 556, 500, 1000, 556, 556, 333, 1000, 667, 333, 1000, 0,\n        611, 0, 0, 278, 278, 500, 500, 350, 556, 1000, 333, 1000, 556, 333, 944, 0,\n        500, 667, 0, 333, 556, 556, 556, 556, 280, 556, 333, 737, 370, 556, 584, 0,\n        737, 333, 400, 584, 333, 333, 333, 611, 556, 278, 333, 333, 365, 556, 834, 834,\n        834, 611, 722, 722, 722, 722, 722, 722, 1000, 722, 667, 667, 667, 667, 278, 278,\n        278, 278, 722, 722, 778, 778, 778, 778, 778, 584, 778, 722, 722, 722, 722, 667,\n        667, 611, 556, 556, 556, 556, 556, 556, 889, 556, 556, 556, 556, 556, 278, 278,\n        278, 278, 611, 611, 611, 611, 611, 611, 611, 584, 611, 611, 611, 611, 611, 556,\n        611, 556\n    ];\n    /**\n     * `Fixed` widths table.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.fixedWidth = [\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600\n    ];\n    /**\n     * `Times` widths table.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesRomanWidth = [\n        250, 333, 408, 500, 500, 833, 778, 180, 333, 333, 500, 564, 250, 333,\n        250, 278, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 278, 278, 564, 564,\n        564, 444, 921, 722, 667, 667, 722, 611, 556, 722, 722, 333, 389, 722, 611, 889,\n        722, 722, 556, 722, 667, 556, 611, 722, 722, 944, 722, 722, 611, 333, 278, 333,\n        469, 500, 333, 444, 500, 444, 500, 444, 333, 500, 500, 278, 278, 500, 278, 778,\n        500, 500, 500, 500, 333, 389, 278, 500, 500, 722, 500, 500, 444, 480, 200, 480,\n        541, 0, 500, 0, 333, 500, 444, 1000, 500, 500, 333, 1000, 556, 333, 889, 0,\n        611, 0, 0, 333, 333, 444, 444, 350, 500, 1000, 333, 980, 389, 333, 722, 0,\n        444, 722, 0, 333, 500, 500, 500, 500, 200, 500, 333, 760, 276, 500, 564, 0,\n        760, 333, 400, 564, 300, 300, 333, 500, 453, 250, 333, 300, 310, 500, 750, 750,\n        750, 444, 722, 722, 722, 722, 722, 722, 889, 667, 611, 611, 611, 611, 333, 333,\n        333, 333, 722, 722, 722, 722, 722, 722, 722, 564, 722, 722, 722, 722, 722, 722,\n        556, 500, 444, 444, 444, 444, 444, 444, 667, 444, 444, 444, 444, 444, 278, 278,\n        278, 278, 500, 500, 500, 500, 500, 500, 500, 564, 500, 500, 500, 500, 500, 500,\n        500, 500\n    ];\n    /**\n     * `Times bold` widths table.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesRomanBoldWidth = [\n        250, 333, 555, 500, 500, 1000, 833, 278, 333, 333, 500, 570, 250, 333,\n        250, 278, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 333, 333, 570, 570,\n        570, 500, 930, 722, 667, 722, 722, 667, 611, 778, 778, 389, 500, 778, 667, 944,\n        722, 778, 611, 778, 722, 556, 667, 722, 722, 1000, 722, 722, 667, 333, 278, 333,\n        581, 500, 333, 500, 556, 444, 556, 444, 333, 500, 556, 278, 333, 556, 278, 833,\n        556, 500, 556, 556, 444, 389, 333, 556, 500, 722, 500, 500, 444, 394, 220, 394,\n        520, 0, 500, 0, 333, 500, 500, 1000, 500, 500, 333, 1000, 556, 333, 1000, 0,\n        667, 0, 0, 333, 333, 500, 500, 350, 500, 1000, 333, 1000, 389, 333, 722, 0,\n        444, 722, 0, 333, 500, 500, 500, 500, 220, 500, 333, 747, 300, 500, 570, 0,\n        747, 333, 400, 570, 300, 300, 333, 556, 540, 250, 333, 300, 330, 500, 750, 750,\n        750, 500, 722, 722, 722, 722, 722, 722, 1000, 722, 667, 667, 667, 667, 389, 389,\n        389, 389, 722, 722, 778, 778, 778, 778, 778, 570, 778, 722, 722, 722, 722, 722,\n        611, 556, 500, 500, 500, 500, 500, 500, 722, 444, 444, 444, 444, 444, 278, 278,\n        278, 278, 500, 556, 500, 500, 500, 500, 500, 570, 500, 556, 556, 556, 556, 500,\n        556, 500\n    ];\n    /**\n     * `Times italic` widths table.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesRomanItalicWidth = [\n        250, 333, 420, 500, 500, 833, 778, 214, 333, 333, 500, 675, 250, 333,\n        250, 278, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 333, 333, 675, 675,\n        675, 500, 920, 611, 611, 667, 722, 611, 611, 722, 722, 333, 444, 667, 556, 833,\n        667, 722, 611, 722, 611, 500, 556, 722, 611, 833, 611, 556, 556, 389, 278, 389,\n        422, 500, 333, 500, 500, 444, 500, 444, 278, 500, 500, 278, 278, 444, 278, 722,\n        500, 500, 500, 500, 389, 389, 278, 500, 444, 667, 444, 444, 389, 400, 275, 400,\n        541, 0, 500, 0, 333, 500, 556, 889, 500, 500, 333, 1000, 500, 333, 944, 0,\n        556, 0, 0, 333, 333, 556, 556, 350, 500, 889, 333, 980, 389, 333, 667, 0,\n        389, 556, 0, 389, 500, 500, 500, 500, 275, 500, 333, 760, 276, 500, 675, 0,\n        760, 333, 400, 675, 300, 300, 333, 500, 523, 250, 333, 300, 310, 500, 750, 750,\n        750, 500, 611, 611, 611, 611, 611, 611, 889, 667, 611, 611, 611, 611, 333, 333,\n        333, 333, 722, 667, 722, 722, 722, 722, 722, 675, 722, 722, 722, 722, 722, 556,\n        611, 500, 500, 500, 500, 500, 500, 500, 667, 444, 444, 444, 444, 444, 278, 278,\n        278, 278, 500, 500, 500, 500, 500, 500, 500, 675, 500, 500, 500, 500, 500, 444,\n        500, 444\n    ];\n    /**\n     * `Times bold italic` widths table.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesRomanBoldItalicWidths = [\n        250, 389, 555, 500, 500, 833, 778, 278, 333, 333, 500, 570, 250, 333,\n        250, 278, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 333, 333, 570, 570,\n        570, 500, 832, 667, 667, 667, 722, 667, 667, 722, 778, 389, 500, 667, 611, 889,\n        722, 722, 611, 722, 667, 556, 611, 722, 667, 889, 667, 611, 611, 333, 278, 333,\n        570, 500, 333, 500, 500, 444, 500, 444, 333, 500, 556, 278, 278, 500, 278, 778,\n        556, 500, 500, 500, 389, 389, 278, 556, 444, 667, 500, 444, 389, 348, 220, 348,\n        570, 0, 500, 0, 333, 500, 500, 1000, 500, 500, 333, 1000, 556, 333, 944, 0,\n        611, 0, 0, 333, 333, 500, 500, 350, 500, 1000, 333, 1000, 389, 333, 722, 0,\n        389, 611, 0, 389, 500, 500, 500, 500, 220, 500, 333, 747, 266, 500, 606, 0,\n        747, 333, 400, 570, 300, 300, 333, 576, 500, 250, 333, 300, 300, 500, 750, 750,\n        750, 500, 667, 667, 667, 667, 667, 667, 944, 667, 667, 667, 667, 667, 389, 389,\n        389, 389, 722, 722, 722, 722, 722, 722, 722, 570, 722, 722, 722, 722, 722, 611,\n        611, 500, 500, 500, 500, 500, 500, 500, 722, 444, 444, 444, 444, 444, 278, 278,\n        278, 278, 500, 556, 500, 500, 500, 500, 500, 570, 500, 556, 556, 556, 556, 444,\n        500, 444\n    ];\n    /**\n     * `Symbol` widths table.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.symbolWidth = [\n        250, 333, 713, 500, 549, 833, 778, 439, 333, 333, 500, 549, 250, 549,\n        250, 278, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 278, 278,\n        549, 549, 549, 444, 549, 722, 667, 722, 612, 611, 763, 603, 722, 333,\n        631, 722, 686, 889, 722, 722, 768, 741, 556, 592, 611, 690, 439, 768,\n        645, 795, 611, 333, 863, 333, 658, 500, 500, 631, 549, 549, 494, 439,\n        521, 411, 603, 329, 603, 549, 549, 576, 521, 549, 549, 521, 549, 603,\n        439, 576, 713, 686, 493, 686, 494, 480, 200, 480, 549, 750, 620, 247,\n        549, 167, 713, 500, 753, 753, 753, 753, 1042, 987, 603, 987, 603, 400,\n        549, 411, 549, 549, 713, 494, 460, 549, 549, 549, 549, 1000, 603, 1000,\n        658, 823, 686, 795, 987, 768, 768, 823, 768, 768, 713, 713, 713, 713,\n        713, 713, 713, 768, 713, 790, 790, 890, 823, 549, 250, 713, 603, 603,\n        1042, 987, 603, 987, 603, 494, 329, 790, 790, 786, 713, 384, 384, 384,\n        384, 384, 384, 494, 494, 494, 494, 329, 274, 686, 686, 686, 384, 384,\n        384, 384, 384, 384, 494, 494, 494, -1\n    ];\n    /**\n     * `Zip dingbats` widths table.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.zapfDingbatsWidth = [\n        278, 974, 961, 974, 980, 719, 789, 790, 791, 690, 960, 939, 549, 855,\n        911, 933, 911, 945, 974, 755, 846, 762, 761, 571, 677, 763, 760, 759,\n        754, 494, 552, 537, 577, 692, 786, 788, 788, 790, 793, 794, 816, 823,\n        789, 841, 823, 833, 816, 831, 923, 744, 723, 749, 790, 792, 695, 776,\n        768, 792, 759, 707, 708, 682, 701, 826, 815, 789, 789, 707, 687, 696,\n        689, 786, 787, 713, 791, 785, 791, 873, 761, 762, 762, 759, 759, 892,\n        892, 788, 784, 438, 138, 277, 415, 392, 392, 668, 668, 390, 390, 317,\n        317, 276, 276, 509, 509, 410, 410, 234, 234, 334, 334, 732, 544, 544,\n        910, 667, 760, 760, 776, 595, 694, 626, 788, 788, 788, 788, 788, 788,\n        788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788,\n        788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788,\n        788, 788, 788, 788, 788, 788, 894, 838, 1016, 458, 748, 924, 748, 918,\n        927, 928, 928, 834, 873, 828, 924, 924, 917, 930, 931, 463, 883, 836,\n        836, 867, 867, 696, 696, 874, 874, 760, 946, 771, 865, 771, 888, 967,\n        888, 831, 873, 927, 970, 918\n    ];\n    return PdfStandardFontMetricsFactory;\n}());\nexport { PdfStandardFontMetricsFactory };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfFontFamily, PdfFontStyle, FontEncoding } from './enum';\nimport { PdfFont } from './pdf-font';\nimport { PdfDocument } from './../../document/pdf-document';\nimport { PdfStandardFontMetricsFactory } from './pdf-standard-font-metrics-factory';\nimport { PdfDictionary } from './../../primitives/pdf-dictionary';\nimport { DictionaryProperties } from './../../input-output/pdf-dictionary-properties';\nimport { PdfName } from './../../primitives/pdf-name';\n/**\n * Represents one of the 14 standard fonts.\n * It's used to create a standard PDF font to draw the text in to the PDF.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // add a new page to the document\n * let page1 : PdfPage = document.pages.add();\n * //\n * // create new standard font\n * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n * //\n * // create black brush\n * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n * // draw the text\n * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(0, 0));\n * // save the document\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfStandardFont = /** @class */ (function (_super) {\n    __extends(PdfStandardFont, _super);\n    function PdfStandardFont(fontFamilyPrototype, size, style) {\n        var _this = _super.call(this, size, style) || this;\n        /**\n         * Gets `ascent` of the font.\n         * @private\n         */\n        _this.dictionaryProperties = new DictionaryProperties();\n        /**\n         * Gets `encodings` for internal class use.\n         * @hidden\n         * @private\n         */\n        _this.encodings = ['Unknown', 'StandardEncoding', 'MacRomanEncoding', 'MacExpertEncoding',\n            'WinAnsiEncoding', 'PDFDocEncoding', 'IdentityH'];\n        if ((typeof fontFamilyPrototype === 'number') && (typeof style === 'undefined')) {\n            _this.constructor(fontFamilyPrototype, size, PdfFontStyle.Regular);\n        }\n        else if ((typeof fontFamilyPrototype === 'number') && (typeof style !== 'undefined')) {\n            _this = _super.call(this, size, style) || this;\n            _this.pdfFontFamily = fontFamilyPrototype;\n            _this.checkStyle();\n            _this.initializeInternals();\n        }\n        else if ((fontFamilyPrototype instanceof PdfStandardFont) && (typeof style === 'undefined')) {\n            _this.constructor(fontFamilyPrototype.fontFamily, size, fontFamilyPrototype.style);\n        }\n        else if ((fontFamilyPrototype instanceof PdfStandardFont) && (typeof style !== 'undefined')) {\n            _this.constructor(fontFamilyPrototype.fontFamily, size, style);\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfStandardFont.prototype, \"fontFamily\", {\n        //Properties\n        /**\n         * Gets the `FontFamily`.\n         * @private\n         */\n        get: function () {\n            return this.pdfFontFamily;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //methods\n    /**\n     * Checks font `style` of the font.\n     * @private\n     */\n    PdfStandardFont.prototype.checkStyle = function () {\n        if (this.fontFamily === PdfFontFamily.Symbol || this.fontFamily === PdfFontFamily.ZapfDingbats) {\n            var style = this.style;\n            style &= ~(PdfFontStyle.Bold | PdfFontStyle.Italic);\n            this.setStyle(style);\n        }\n    };\n    /**\n     * Returns `width` of the line.\n     * @public\n     */\n    PdfStandardFont.prototype.getLineWidth = function (line, format) {\n        if (line == null) {\n            throw new Error('ArgumentNullException:line');\n        }\n        var width = 0;\n        var name = this.name;\n        line = PdfStandardFont.convert(line);\n        for (var i = 0, len = line.length; i < len; i++) {\n            var ch = line[i];\n            var charWidth = this.getCharWidthInternal(ch, format);\n            width += charWidth;\n        }\n        var size = this.metrics.getSize(format);\n        width *= (PdfFont.charSizeMultiplier * size);\n        width = this.applyFormatSettings(line, format, width);\n        return width;\n    };\n    /**\n     * Checks whether fonts are `equals`.\n     * @private\n     */\n    PdfStandardFont.prototype.equalsToFont = function (font) {\n        var equal = false;\n        var stFont = font;\n        if (stFont != null) {\n            var fontFamilyEqual = (this.fontFamily === stFont.fontFamily);\n            var lineReducer = (~(PdfFontStyle.Underline | PdfFontStyle.Strikeout));\n            var styleEqual = (this.style & lineReducer) === (stFont.style & lineReducer);\n            equal = (fontFamilyEqual && styleEqual);\n        }\n        return equal;\n    };\n    /**\n     * `Initializes` font internals..\n     * @private\n     */\n    PdfStandardFont.prototype.initializeInternals = function () {\n        var equalFont = null;\n        // if (PdfDocument.EnableCache) {\n        equalFont = PdfDocument.cache.search(this);\n        // }\n        var internals = null;\n        // if (equalFont == null) {\n        // Create font metrics.\n        var metrics = PdfStandardFontMetricsFactory.getMetrics(this.pdfFontFamily, this.style, this.size);\n        this.metrics = metrics;\n        internals = this.createInternals();\n        this.setInternals(internals);\n    };\n    /**\n     * `Creates` font`s dictionary.\n     * @private\n     */\n    PdfStandardFont.prototype.createInternals = function () {\n        var dictionary = new PdfDictionary();\n        dictionary.items.setValue(this.dictionaryProperties.type, new PdfName(this.dictionaryProperties.font));\n        dictionary.items.setValue(this.dictionaryProperties.subtype, new PdfName(this.dictionaryProperties.type1));\n        dictionary.items.setValue(this.dictionaryProperties.baseFont, new PdfName(this.metrics.postScriptName));\n        if (this.fontFamily !== PdfFontFamily.Symbol && this.fontFamily !== PdfFontFamily.ZapfDingbats) {\n            var encoding = this.encodings[FontEncoding.WinAnsiEncoding];\n            dictionary.items.setValue(this.dictionaryProperties.encoding, new PdfName(encoding));\n        }\n        return dictionary;\n    };\n    /**\n     * Returns `width` of the char. This methods doesn`t takes into consideration font`s size.\n     * @private\n     */\n    PdfStandardFont.prototype.getCharWidthInternal = function (charCode, format) {\n        var width = 0;\n        var code = 0;\n        code = charCode.charCodeAt(0);\n        if (this.name === '0' || this.name === '1' || this.name === '2' ||\n            this.name === '3' || this.name === '4') {\n            code = code - PdfStandardFont.charOffset;\n        }\n        code = (code >= 0 && code !== 128) ? code : 0;\n        var metrics = this.metrics;\n        var widthTable = metrics.widthTable;\n        width = widthTable.items(code);\n        return width;\n    };\n    /**\n     * `Converts` the specified text.\n     * @private\n     */\n    PdfStandardFont.convert = function (text) {\n        return text;\n    };\n    //Constants\n    /**\n     * First character `position`.\n     * @private\n     */\n    PdfStandardFont.charOffset = 32;\n    return PdfStandardFont;\n}(PdfFont));\nexport { PdfStandardFont };\n","import { PdfColor } from './../graphics/pdf-color';\nimport { RectangleF, PointF } from './../drawing/pdf-drawing';\nimport { PdfDictionary, SaveAnnotationEventHandler } from './../primitives/pdf-dictionary';\nimport { PdfArray } from './../primitives/pdf-array';\nimport { PdfNumber } from './../primitives/pdf-number';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { PdfString } from './../primitives/pdf-string';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\nimport { PdfName } from './../primitives/pdf-name';\nimport { PdfSolidBrush } from './../graphics/brushes/pdf-solid-brush';\nimport { PdfStandardFont } from './../graphics/fonts/pdf-standard-font';\nimport { PdfFontFamily } from './../graphics/fonts/enum';\nimport { PdfStringFormat } from './../graphics/fonts/pdf-string-format';\nimport { PdfTextAlignment } from './../graphics/enum';\n/**\n * `PdfAnnotation` class represents the base class for annotation objects.\n * @private\n */\nvar PdfAnnotation = /** @class */ (function () {\n    function PdfAnnotation(arg1) {\n        // Fields\n        /**\n         * Specifies the Internal variable to store fields of `PdfDictionaryProperties`.\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        /**\n         * `Color` of the annotation\n         * @private\n         */\n        this.pdfColor = new PdfColor(255, 255, 255);\n        /**\n         * `Bounds` of the annotation.\n         * @private\n         */\n        this.rectangle = new RectangleF(0, 0, 0, 0);\n        /**\n         * Parent `page` of the annotation.\n         * @private\n         */\n        this.pdfPage = null;\n        /**\n         * `Brush of the text` of the annotation.\n         * @default new PdfSolidBrush(new PdfColor(0, 0, 0))\n         * @private\n         */\n        this.textBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n        /**\n         * `Font of the text` of the annotation.\n         * @default new PdfStandardFont(PdfFontFamily.TimesRoman, 10)\n         * @private\n         */\n        this.textFont = new PdfStandardFont(PdfFontFamily.TimesRoman, 10);\n        /**\n         * `StringFormat of the text` of the annotation.\n         * @default new PdfStringFormat(PdfTextAlignment.Left)\n         * @private\n         */\n        this.format = new PdfStringFormat(PdfTextAlignment.Left);\n        /**\n         * `Text` of the annotation.\n         * @private\n         */\n        this.content = '';\n        /**\n         * Internal variable to store `dictionary`.\n         * @private\n         */\n        this.pdfDictionary = new PdfDictionary();\n        /**\n         * To specifying the `Inner color` with which to fill the annotation\n         * @private\n         */\n        this.internalColor = new PdfColor();\n        /**\n         * `opacity or darkness` of the annotation.\n         * @private\n         * @default 1.0\n         */\n        this.darkness = 1.0;\n        if (typeof arg1 === 'undefined') {\n            this.initialize();\n        }\n        else {\n            this.initialize();\n            this.bounds = arg1;\n        }\n    }\n    Object.defineProperty(PdfAnnotation.prototype, \"color\", {\n        // Properties\n        /**\n         * `Color` of the annotation\n         * @private\n         */\n        get: function () {\n            return this.pdfColor;\n        },\n        set: function (value) {\n            this.pdfColor = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"innerColor\", {\n        /**\n         * To specifying the `Inner color` with which to fill the annotation\n         * @private\n         */\n        get: function () {\n            return this.internalColor;\n        },\n        set: function (value) {\n            this.internalColor = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"bounds\", {\n        /**\n         * `bounds` of the annotation.\n         * @private\n         */\n        get: function () {\n            return this.rectangle;\n        },\n        set: function (value) {\n            this.rectangle = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"page\", {\n        /**\n         * Parent `page` of the annotation.\n         * @private\n         */\n        get: function () {\n            return this.pdfPage;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"font\", {\n        /**\n         * To specifying the `Font of the text` in the annotation.\n         * @private\n         */\n        get: function () {\n            return this.textFont;\n        },\n        set: function (value) {\n            this.textFont = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"stringFormat\", {\n        /**\n         * To specifying the `StringFormat of the text` in the annotation.\n         * @private\n         */\n        get: function () {\n            return this.format;\n        },\n        set: function (value) {\n            this.format = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"brush\", {\n        /**\n         * To specifying the `Brush of the text` in the annotation.\n         * @private\n         */\n        get: function () {\n            return this.textBrush;\n        },\n        set: function (value) {\n            this.textBrush = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"text\", {\n        /**\n         * `Text` of the annotation.\n         * @private\n         */\n        get: function () {\n            return this.content;\n        },\n        set: function (value) {\n            this.content = value;\n            this.dictionary.items.setValue(this.dictionaryProperties.contents, new PdfString(this.content));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"dictionary\", {\n        /**\n         * Internal variable to store `dictionary`.\n         * @hidden\n         */\n        get: function () {\n            return this.pdfDictionary;\n        },\n        set: function (value) {\n            this.pdfDictionary = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * `Initialize` the annotation event handler and specifies the type of the annotation.\n     * @private\n     */\n    PdfAnnotation.prototype.initialize = function () {\n        this.pdfDictionary.annotationBeginSave = new SaveAnnotationEventHandler(this);\n        this.pdfDictionary.items.setValue(this.dictionaryProperties.type, new PdfName(this.dictionaryProperties.annot));\n    };\n    /**\n     * Sets related `page` of the annotation.\n     * @private\n     */\n    PdfAnnotation.prototype.setPage = function (page) {\n        this.pdfPage = page;\n        this.pdfDictionary.items.setValue(this.dictionaryProperties.p, new PdfReferenceHolder(this.pdfPage));\n    };\n    /**\n     * Handles the `BeginSave` event of the Dictionary.\n     * @private\n     */\n    PdfAnnotation.prototype.beginSave = function () {\n        this.save();\n    };\n    /**\n     * `Saves` an annotation.\n     * @private\n     */\n    /* tslint:disable */\n    PdfAnnotation.prototype.save = function () {\n        var nativeRectangle = new RectangleF(this.rectangle.x, this.rectangle.y, this.rectangle.width, this.rectangle.height);\n        var section = this.pdfPage.section;\n        var initialHeight = nativeRectangle.height;\n        var tempLoacation = section.pointToNativePdf(this.page, new PointF(nativeRectangle.x, nativeRectangle.y));\n        nativeRectangle.x = tempLoacation.x;\n        nativeRectangle.width = tempLoacation.x + nativeRectangle.width;\n        nativeRectangle.y = (tempLoacation.y - this.page.document.pageSettings.margins.top);\n        nativeRectangle.height = nativeRectangle.y - initialHeight;\n        this.pdfDictionary.items.setValue(this.dictionaryProperties.rect, PdfArray.fromRectangle(nativeRectangle));\n        this.dictionary.items.setValue(this.dictionaryProperties.ca, new PdfNumber(this.darkness));\n    };\n    Object.defineProperty(PdfAnnotation.prototype, \"element\", {\n        /* tslint:enable */\n        // IPdfWrapper Members\n        /**\n         * Gets the `element`.\n         * @private\n         */\n        get: function () {\n            return this.pdfDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfAnnotation;\n}());\nexport { PdfAnnotation };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfAnnotation } from './annotation';\nimport { PdfName } from './../primitives/pdf-name';\n/**\n * `PdfLinkAnnotation` class represents the ink annotation class.\n * @private\n */\nvar PdfLinkAnnotation = /** @class */ (function (_super) {\n    __extends(PdfLinkAnnotation, _super);\n    function PdfLinkAnnotation(rectangle) {\n        var _this = this;\n        if (typeof rectangle === 'undefined') {\n            _this = _super.call(this) || this;\n        }\n        else {\n            _this = _super.call(this, rectangle) || this;\n        }\n        return _this;\n    }\n    // Implementation\n    /**\n     * `Initializes` annotation object.\n     * @private\n     */\n    PdfLinkAnnotation.prototype.initialize = function () {\n        _super.prototype.initialize.call(this);\n        this.dictionary.items.setValue(this.dictionaryProperties.subtype, new PdfName(this.dictionaryProperties.link));\n    };\n    return PdfLinkAnnotation;\n}(PdfAnnotation));\nexport { PdfLinkAnnotation };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfLinkAnnotation } from './link-annotation';\n/**\n * Represents base class for `link annotations` with associated action.\n * @private\n */\nvar PdfActionLinkAnnotation = /** @class */ (function (_super) {\n    __extends(PdfActionLinkAnnotation, _super);\n    // Constructors\n    /**\n     * Specifies the constructor for `ActionLinkAnnotation`.\n     * @private\n     */\n    function PdfActionLinkAnnotation(rectangle) {\n        var _this = _super.call(this, rectangle) || this;\n        // Fields\n        /**\n         * Internal variable to store annotation's `action`.\n         * @default null\n         * @private\n         */\n        _this.pdfAction = null;\n        return _this;\n    }\n    //Public method\n    /**\n     * get and set the `action`.\n     * @hidden\n     */\n    PdfActionLinkAnnotation.prototype.getSetAction = function (value) {\n        if (typeof value === 'undefined') {\n            return this.pdfAction;\n        }\n        else {\n            this.pdfAction = value;\n        }\n    };\n    return PdfActionLinkAnnotation;\n}(PdfLinkAnnotation));\nexport { PdfActionLinkAnnotation };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfLinkAnnotation } from './link-annotation';\n/**\n * `PdfDocumentLinkAnnotation` class represents an annotation object with holds link on another location within a document.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // create new pages\n * let page1 : PdfPage = document.pages.add();\n * let page2 : PdfPage = document.pages.add();\n * // create a new rectangle\n * let bounds : RectangleF = new RectangleF({x : 10, y : 200}, {width : 300, height : 25});\n * //\n * // create a new document link annotation\n * let documentLinkAnnotation : PdfDocumentLinkAnnotation = new PdfDocumentLinkAnnotation(bounds);\n * // set the annotation text\n * documentLinkAnnotation.text = 'Document link annotation';\n * // set the destination\n * documentLinkAnnotation.destination = new PdfDestination(page2);\n * // set the documentlink annotation location\n * documentLinkAnnotation.destination.location = new PointF(10, 0);\n * // add this annotation to a new page\n * page1.annotations.add(documentLinkAnnotation);\n * //\n * // save the document to disk\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfDocumentLinkAnnotation = /** @class */ (function (_super) {\n    __extends(PdfDocumentLinkAnnotation, _super);\n    function PdfDocumentLinkAnnotation(rectangle, destination) {\n        var _this = _super.call(this, rectangle) || this;\n        // Fields\n        /**\n         * `Destination` of the annotation.\n         * @default null\n         * @private\n         */\n        _this.pdfDestination = null;\n        if (typeof destination !== 'undefined') {\n            _this.destination = destination;\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfDocumentLinkAnnotation.prototype, \"destination\", {\n        // Properties\n        /**\n         * Gets or sets the `destination` of the annotation.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // create new pages\n         * let page1 : PdfPage = document.pages.add();\n         * let page2 : PdfPage = document.pages.add();\n         * // create a new rectangle\n         * let bounds : RectangleF = new RectangleF({x : 10, y : 200}, {width : 300, height : 25});\n         * //\n         * // create a new document link annotation\n         * let documentLinkAnnotation : PdfDocumentLinkAnnotation = new PdfDocumentLinkAnnotation(bounds);\n         * // set the annotation text\n         * documentLinkAnnotation.text = 'Document link annotation';\n         * // set the destination\n         * documentLinkAnnotation.destination = new PdfDestination(page2);\n         * // set the documentlink annotation location\n         * documentLinkAnnotation.destination.location = new PointF(10, 0);\n         * // add this annotation to a new page\n         * page1.annotations.add(documentLinkAnnotation);\n         * //\n         * // save the document to disk\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         * @default null\n         */\n        get: function () {\n            return this.pdfDestination;\n        },\n        set: function (value) {\n            // if (this.pdfDestination !== value) {\n            this.pdfDestination = value;\n            // }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * `Saves` annotation object.\n     * @private\n     */\n    PdfDocumentLinkAnnotation.prototype.save = function () {\n        _super.prototype.save.call(this);\n        if (this.pdfDestination != null) {\n            this.dictionary.items.setValue(this.dictionaryProperties.dest, this.pdfDestination.element);\n        }\n    };\n    /**\n     * `Clone` the document link annotation.\n     * @private\n     */\n    PdfDocumentLinkAnnotation.prototype.clone = function () {\n        var annot = new PdfDocumentLinkAnnotation(this.bounds, this.destination);\n        annot.color = this.color;\n        annot.brush = this.brush;\n        annot.destination = this.destination;\n        annot.font = this.font;\n        return annot;\n    };\n    return PdfDocumentLinkAnnotation;\n}(PdfLinkAnnotation));\nexport { PdfDocumentLinkAnnotation };\n","/**\n * ElementLayouter.ts class for EJ2-PDF\n */\nimport { RectangleF } from './../../../drawing/pdf-drawing';\nimport { PdfLayoutType, PdfLayoutBreakType } from './../enum';\n/**\n * Base class for `elements lay outing`.\n * @private\n */\nvar ElementLayouter = /** @class */ (function () {\n    // Constructor\n    /**\n     * Initializes a new instance of the `ElementLayouter` class.\n     * @private\n     */\n    function ElementLayouter(element) {\n        this.layoutElement = element;\n    }\n    Object.defineProperty(ElementLayouter.prototype, \"elements\", {\n        // Properties\n        /**\n         * Gets the `element`.\n         * @private\n         */\n        get: function () {\n            return this.layoutElement;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the `element`.\n     * @private\n     */\n    ElementLayouter.prototype.getElement = function () {\n        return this.layoutElement;\n    };\n    ElementLayouter.prototype.layout = function (param, isBoundsChanged) {\n        if (typeof isBoundsChanged === 'boolean' && isBoundsChanged === true) {\n            return this.layoutInternal(param, true);\n        }\n        else {\n            return this.layoutInternal(param);\n        }\n    };\n    /**\n     * Returns the `next page`.\n     * @private\n     */\n    ElementLayouter.prototype.getNextPage = function (currentPage) {\n        var section = currentPage.section;\n        var nextPage = section.add();\n        return nextPage;\n    };\n    return ElementLayouter;\n}());\nexport { ElementLayouter };\nvar PdfLayoutFormat = /** @class */ (function () {\n    function PdfLayoutFormat(baseFormat) {\n        if (typeof baseFormat === 'undefined') {\n            //\n        }\n        else {\n            this.break = baseFormat.break;\n            this.layout = baseFormat.layout;\n            this.paginateBounds = baseFormat.paginateBounds;\n            this.boundsSet = baseFormat.usePaginateBounds;\n        }\n    }\n    Object.defineProperty(PdfLayoutFormat.prototype, \"layout\", {\n        // Properties\n        /**\n         * Gets or sets `layout` type of the element.\n         * @private\n         */\n        get: function () {\n            if (typeof this.layoutType === 'undefined' || this.layoutType == null) {\n                this.layoutType = PdfLayoutType.Paginate;\n            }\n            return this.layoutType;\n        },\n        set: function (value) {\n            this.layoutType = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLayoutFormat.prototype, \"break\", {\n        /**\n         * Gets or sets `break` type of the element.\n         * @private\n         */\n        get: function () {\n            if (typeof this.breakType === 'undefined' || this.boundsSet == null) {\n                this.breakType = PdfLayoutBreakType.FitPage;\n            }\n            return this.breakType;\n        },\n        set: function (value) {\n            this.breakType = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLayoutFormat.prototype, \"paginateBounds\", {\n        /**\n         * Gets or sets the `bounds` on the next page.\n         * @private\n         */\n        get: function () {\n            if (typeof this.layoutPaginateBounds === 'undefined' && this.layoutPaginateBounds == null) {\n                this.layoutPaginateBounds = new RectangleF(0, 0, 0, 0);\n            }\n            return this.layoutPaginateBounds;\n        },\n        set: function (value) {\n            this.layoutPaginateBounds = value;\n            this.boundsSet = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLayoutFormat.prototype, \"usePaginateBounds\", {\n        /**\n         * Gets a value indicating whether [`use paginate bounds`].\n         * @private\n         */\n        get: function () {\n            if (typeof this.boundsSet === 'undefined' || this.boundsSet == null) {\n                this.boundsSet = false;\n            }\n            return this.boundsSet;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfLayoutFormat;\n}());\nexport { PdfLayoutFormat };\nvar PdfLayoutParams = /** @class */ (function () {\n    function PdfLayoutParams() {\n    }\n    Object.defineProperty(PdfLayoutParams.prototype, \"page\", {\n        // Properties\n        /**\n         * Gets or sets the layout `page` for the element.\n         * @private\n         */\n        get: function () {\n            return this.pdfPage;\n        },\n        set: function (value) {\n            this.pdfPage = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLayoutParams.prototype, \"bounds\", {\n        /**\n         * Gets or sets layout `bounds` for the element.\n         * @private\n         */\n        get: function () {\n            return new RectangleF(this.layoutBounds.x, this.layoutBounds.y, this.layoutBounds.width, this.layoutBounds.height);\n        },\n        set: function (value) {\n            this.layoutBounds = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLayoutParams.prototype, \"format\", {\n        /**\n         * Gets or sets `layout settings` for the element.\n         * @private\n         */\n        get: function () {\n            return this.layoutFormat;\n        },\n        set: function (value) {\n            this.layoutFormat = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfLayoutParams;\n}());\nexport { PdfLayoutParams };\nvar PdfLayoutResult = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initializes the new instance of `PdfLayoutResult` class.\n     * @private\n     */\n    function PdfLayoutResult(page, bounds) {\n        this.pdfPage = page;\n        this.layoutBounds = bounds;\n    }\n    Object.defineProperty(PdfLayoutResult.prototype, \"page\", {\n        // Properties\n        /**\n         * Gets the last `page` where the element was drawn.\n         * @private\n         */\n        get: function () {\n            return this.pdfPage;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLayoutResult.prototype, \"bounds\", {\n        /**\n         * Gets the `bounds` of the element on the last page where it was drawn.\n         * @private\n         */\n        get: function () {\n            return this.layoutBounds;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfLayoutResult;\n}());\nexport { PdfLayoutResult };\n","/**\n * public Enum for `PdfDestinationMode`.\n * @private\n */\nexport var PdfDestinationMode;\n(function (PdfDestinationMode) {\n    /**\n     * Specifies the type of `Location`.\n     * @private\n     */\n    PdfDestinationMode[PdfDestinationMode[\"Location\"] = 0] = \"Location\";\n    /**\n     * Specifies the type of `FitToPage`.\n     * @private\n     */\n    PdfDestinationMode[PdfDestinationMode[\"FitToPage\"] = 1] = \"FitToPage\";\n    /**\n     * Specifies the type of `FitR`.\n     * @private\n     */\n    PdfDestinationMode[PdfDestinationMode[\"FitR\"] = 2] = \"FitR\";\n})(PdfDestinationMode || (PdfDestinationMode = {}));\n","import { RectangleF, PointF } from './../../drawing/pdf-drawing';\nimport { PdfLayoutParams, PdfLayoutFormat } from './base/element-layouter';\n/**\n * `PdfLayoutElement` class represents the base class for all elements that can be layout on the pages.\n * @private\n */\nvar PdfLayoutElement = /** @class */ (function () {\n    function PdfLayoutElement() {\n    }\n    PdfLayoutElement.prototype.drawHelper = function (arg2, arg3, arg4, arg5) {\n        if (arg3 instanceof PointF && typeof arg3.width === 'undefined' && typeof arg3 === 'undefined') {\n            return this.drawHelper(arg2, arg3.x, arg3.y);\n        }\n        else if (typeof arg3 === 'number' && typeof arg4 === 'number' && typeof arg5 === 'undefined') {\n            return this.drawHelper(arg2, arg3, arg4, null);\n        }\n        else if (arg3 instanceof RectangleF && typeof arg3.width !== 'undefined' && typeof arg4 === 'undefined') {\n            return this.drawHelper(arg2, arg3, null);\n        }\n        else if (arg3 instanceof PointF && typeof arg3.width === 'undefined' && arg4 instanceof PdfLayoutFormat) {\n            return this.drawHelper(arg2, arg3.x, arg3.y, arg4);\n        }\n        else if (typeof arg3 === 'number' && typeof arg4 === 'number' && (arg5 instanceof PdfLayoutFormat || arg5 == null)) {\n            var width = (arg2.graphics.clientSize.width - arg3);\n            var layoutRectangle = new RectangleF(arg3, arg4, width, 0);\n            return this.drawHelper(arg2, layoutRectangle, arg5);\n        }\n        else if (arg3 instanceof RectangleF && typeof arg3.width !== 'undefined' && typeof arg4 === 'boolean') {\n            this.bEmbedFonts = arg4;\n            return this.drawHelper(arg2, arg3, null);\n        }\n        else {\n            var param = new PdfLayoutParams();\n            var temparg3 = arg3;\n            var temparg4 = arg4;\n            param.page = arg2;\n            param.bounds = temparg3;\n            param.format = (temparg4 != null) ? temparg4 : new PdfLayoutFormat();\n            var result = this.layout(param);\n            return result;\n        }\n    };\n    return PdfLayoutElement;\n}());\nexport { PdfLayoutElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * TextLayouter.ts class for EJ2-PDF\n */\nimport { ElementLayouter, PdfLayoutResult } from './element-layouter';\nimport { RectangleF, SizeF } from './../../../drawing/pdf-drawing';\nimport { PdfStringLayouter } from './../../fonts/string-layouter';\nimport { PdfLayoutBreakType } from './../../figures/enum';\nimport { PdfColor } from './../../pdf-color';\nimport { PdfTextWebLink } from './../../../annotations/pdf-text-web-link';\n/**\n * Class that `layouts the text`.\n * @private\n */\nvar TextLayouter = /** @class */ (function (_super) {\n    __extends(TextLayouter, _super);\n    // Constructors\n    /**\n     * Initializes a new instance of the `TextLayouter` class.\n     * @private\n     */\n    function TextLayouter(element) {\n        return _super.call(this, element) || this;\n    }\n    Object.defineProperty(TextLayouter.prototype, \"element\", {\n        /**\n         * Gets the layout `element`.\n         * @private\n         */\n        get: function () {\n            return _super.prototype.getElement.call(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * `Layouts` the element.\n     * @private\n     */\n    TextLayouter.prototype.layoutInternal = function (param) {\n        /* tslint:disable */\n        this.format = (this.element.stringFormat != null && typeof this.element.stringFormat !== 'undefined') ? this.element.stringFormat : null;\n        var currentPage = param.page;\n        var currentBounds = param.bounds;\n        var text = this.element.value;\n        var result = null;\n        var pageResult = new TextPageLayoutResult();\n        pageResult.page = currentPage;\n        pageResult.remainder = text;\n        for (;;) {\n            pageResult = this.layoutOnPage(text, currentPage, currentBounds, param);\n            result = this.getLayoutResult(pageResult);\n            break;\n        }\n        /* tslint:enable */\n        return result;\n    };\n    /**\n     * Raises `PageLayout` event if needed.\n     * @private\n     */\n    TextLayouter.prototype.getLayoutResult = function (pageResult) {\n        var result = new PdfTextLayoutResult(pageResult.page, pageResult.bounds, pageResult.remainder, pageResult.lastLineBounds);\n        return result;\n    };\n    /* tslint:disable */\n    /**\n     * `Layouts` the text on the page.\n     * @private\n     */\n    TextLayouter.prototype.layoutOnPage = function (text, currentPage, currentBounds, param) {\n        var result = new TextPageLayoutResult();\n        result.remainder = text;\n        result.page = currentPage;\n        currentBounds = this.checkCorrectBounds(currentPage, currentBounds);\n        var layouter = new PdfStringLayouter();\n        var stringResult = layouter.layout(text, this.element.font, this.format, currentBounds, currentPage.getClientSize().height, false, new SizeF(0, 0));\n        var textFinished = (stringResult.remainder == null);\n        var doesntFit = (param.format.break === PdfLayoutBreakType.FitElement);\n        var canDraw = !(doesntFit || stringResult.empty);\n        // Draw the text.\n        var graphics = currentPage.graphics;\n        var brush = this.element.getBrush();\n        if (this.element instanceof PdfTextWebLink) {\n            brush.color = new PdfColor(0, 0, 255);\n        }\n        graphics.drawStringLayoutResult(stringResult, this.element.font, this.element.pen, brush, currentBounds, this.format);\n        var lineInfo = stringResult.lines[stringResult.lineCount - 1];\n        result.lastLineBounds = graphics.getLineBounds(stringResult.lineCount - 1, stringResult, this.element.font, currentBounds, this.format);\n        result.bounds = this.getTextPageBounds(currentPage, currentBounds, stringResult);\n        result.remainder = stringResult.remainder;\n        result.end = (textFinished);\n        return result;\n    };\n    /* tslint:enable */\n    /**\n     * `Corrects current bounds` on the page.\n     * @private\n     */\n    TextLayouter.prototype.checkCorrectBounds = function (currentPage, currentBounds) {\n        var pageSize = currentPage.graphics.clientSize;\n        currentBounds.height = (currentBounds.height > 0) ? currentBounds.height : pageSize.height - currentBounds.y;\n        return currentBounds;\n    };\n    /**\n     * Returns a `rectangle` where the text was printed on the page.\n     * @private\n     */\n    /* tslint:disable */\n    TextLayouter.prototype.getTextPageBounds = function (currentPage, currentBounds, stringResult) {\n        var textSize = stringResult.actualSize;\n        var x = currentBounds.x;\n        var y = currentBounds.y;\n        var width = (currentBounds.width > 0) ? currentBounds.width : textSize.width;\n        var height = textSize.height;\n        var shiftedRect = currentPage.graphics.checkCorrectLayoutRectangle(textSize, currentBounds.x, currentBounds.y, this.format);\n        // if (currentBounds.width <= 0) {\n        x = shiftedRect.x;\n        // }\n        var verticalShift = currentPage.graphics.getTextVerticalAlignShift(textSize.height, currentBounds.height, this.format);\n        y += verticalShift;\n        var bounds = new RectangleF(x, y, width, height);\n        return bounds;\n    };\n    return TextLayouter;\n}(ElementLayouter));\nexport { TextLayouter };\nvar TextPageLayoutResult = /** @class */ (function () {\n    function TextPageLayoutResult() {\n    }\n    return TextPageLayoutResult;\n}());\nexport { TextPageLayoutResult };\nvar PdfTextLayoutResult = /** @class */ (function (_super) {\n    __extends(PdfTextLayoutResult, _super);\n    // Constructors\n    /**\n     * Initializes the new instance of `PdfTextLayoutResult` class.\n     * @private\n     */\n    function PdfTextLayoutResult(page, bounds, remainder, lastLineBounds) {\n        var _this = _super.call(this, page, bounds) || this;\n        _this.remainderText = remainder;\n        _this.lastLineTextBounds = lastLineBounds;\n        return _this;\n    }\n    Object.defineProperty(PdfTextLayoutResult.prototype, \"remainder\", {\n        // Properties\n        /**\n         * Gets a value that contains the `text` that was not printed.\n         * @private\n         */\n        get: function () {\n            return this.remainderText;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextLayoutResult.prototype, \"lastLineBounds\", {\n        /**\n         * Gets a value that indicates the `bounds` of the last line that was printed on the page.\n         * @private\n         */\n        get: function () {\n            return this.lastLineTextBounds;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfTextLayoutResult;\n}(PdfLayoutResult));\nexport { PdfTextLayoutResult };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfTextElement.ts class for EJ2-PDF\n */\nimport { PdfLayoutElement } from './../figures/layout-element';\nimport { PdfBrush } from './../brushes/pdf-brush';\nimport { PdfFont } from './../fonts/pdf-font';\nimport { PdfStandardFont } from './../fonts/pdf-standard-font';\nimport { PdfPen } from './../pdf-pen';\nimport { PdfLayoutParams } from './../figures/base/element-layouter';\nimport { TextLayouter } from './base/text-layouter';\nimport { PdfSolidBrush } from './../brushes/pdf-solid-brush';\nimport { PdfColor } from './../pdf-color';\nimport { RectangleF, SizeF, PointF } from './../../drawing/pdf-drawing';\nimport { PdfLayoutFormat } from './base/element-layouter';\nimport { PdfStringLayouter } from './../fonts/string-layouter';\nimport { PdfTextAlignment } from './../enum';\n/**\n * `PdfTextElement` class represents the text area with the ability to span several pages\n * and inherited from the 'PdfLayoutElement' class.\n * @private\n */\nvar PdfTextElement = /** @class */ (function (_super) {\n    __extends(PdfTextElement, _super);\n    function PdfTextElement(arg1, arg2, arg3, arg4, arg5) {\n        var _this = _super.call(this) || this;\n        // Fields\n        /**\n         * `Text` data.\n         * @private\n         */\n        _this.content = '';\n        /**\n         * `Value` of text data.\n         * @private\n         */\n        _this.elementValue = '';\n        /**\n         * indicate whether the drawText with PointF overload is called or not.\n         * @default false\n         * @private\n         */\n        _this.hasPointOverload = false;\n        /**\n         * indicate whether the PdfGridCell value is `PdfTextElement`\n         * @default false\n         * @private\n         */\n        _this.isPdfTextElement = false;\n        if (typeof arg1 === 'undefined') {\n            //\n        }\n        else if (typeof arg1 === 'string' && typeof arg2 === 'undefined') {\n            _this = _super.call(this) || this;\n            _this.content = arg1;\n            _this.elementValue = arg1;\n        }\n        else if (typeof arg1 === 'string' && arg2 instanceof PdfFont && typeof arg3 === 'undefined') {\n            _this = _super.call(this) || this;\n            _this.content = arg1;\n            _this.elementValue = arg1;\n            _this.pdfFont = arg2;\n        }\n        else if (typeof arg1 === 'string' && arg2 instanceof PdfFont && arg3 instanceof PdfPen && typeof arg4 === 'undefined') {\n            _this = _super.call(this) || this;\n            _this.content = arg1;\n            _this.elementValue = arg1;\n            _this.pdfFont = arg2;\n            _this.pdfPen = arg3;\n        }\n        else if (typeof arg1 === 'string' && arg2 instanceof PdfFont && arg3 instanceof PdfBrush && typeof arg4 === 'undefined') {\n            _this = _super.call(this) || this;\n            _this.content = arg1;\n            _this.elementValue = arg1;\n            _this.pdfFont = arg2;\n            _this.pdfBrush = arg3;\n        }\n        else {\n            _this = _super.call(this) || this;\n            _this.content = arg1;\n            _this.elementValue = arg1;\n            _this.pdfFont = arg2;\n            _this.pdfPen = arg3;\n            _this.pdfBrush = arg4;\n            _this.format = arg5;\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfTextElement.prototype, \"text\", {\n        // Properties\n        /**\n         * Gets or sets a value indicating the `text` that should be printed.\n         * ```typescript\n         * // create a new PDF document.\n         * let document : PdfDocument = new PdfDocument();\n         * // add a page to the document.\n         * let page1 : PdfPage = document.pages.add();\n         * // create the font\n         * let font : PdfFont = new PdfStandardFont(PdfFontFamily.Helvetica, 12);\n         * // create the Text Web Link\n         * let textLink : PdfTextWebLink = new PdfTextWebLink();\n         * // set the hyperlink\n         * textLink.url = 'http://www.google.com';\n         * //\n         * // set the link text\n         * textLink.text = 'Google';\n         * //\n         * // set the font\n         * textLink.font = font;\n         * // draw the hyperlink in PDF page\n         * textLink.draw(page1, new PointF(10, 40));\n         * // save the document.\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this.content;\n        },\n        set: function (value) {\n            this.elementValue = value;\n            this.content = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextElement.prototype, \"value\", {\n        //get value\n        /**\n         * Gets or sets a `value` indicating the text that should be printed.\n         * @private\n         */\n        get: function () {\n            return this.elementValue;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextElement.prototype, \"pen\", {\n        //get pen\n        /**\n         * Gets or sets a `PdfPen` that determines the color, width, and style of the text\n         * @private\n         */\n        get: function () {\n            return this.pdfPen;\n        },\n        //Set pen value\n        set: function (value) {\n            this.pdfPen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextElement.prototype, \"brush\", {\n        //get brush\n        /**\n         * Gets or sets the `PdfBrush` that will be used to draw the text with color and texture.\n         * @private\n         */\n        get: function () {\n            return this.pdfBrush;\n        },\n        //Set brush value\n        set: function (value) {\n            this.pdfBrush = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextElement.prototype, \"font\", {\n        //get font\n        /**\n         * Gets or sets a `PdfFont` that defines the text format.\n         * ```typescript\n         * // create a new PDF document.\n         * let document : PdfDocument = new PdfDocument();\n         * // add a page to the document.\n         * let page1 : PdfPage = document.pages.add();\n         * // create the font\n         * let font : PdfFont = new PdfStandardFont(PdfFontFamily.Helvetica, 12);\n         * // create the Text Web Link\n         * let textLink : PdfTextWebLink = new PdfTextWebLink();\n         * // set the hyperlink\n         * textLink.url = 'http://www.google.com';\n         * // set the link text\n         * textLink.text = 'Google';\n         * //\n         * // set the font\n         * textLink.font = font;\n         * //\n         * // draw the hyperlink in PDF page\n         * textLink.draw(page1, new PointF(10, 40));\n         * // save the document.\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this.pdfFont;\n        },\n        set: function (value) {\n            this.pdfFont = value;\n            if (this.pdfFont instanceof PdfStandardFont && this.content != null) {\n                this.elementValue = PdfStandardFont.convert(this.content);\n            }\n            else {\n                this.elementValue = this.content;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextElement.prototype, \"stringFormat\", {\n        /**\n         * Gets or sets the `PdfStringFormat` that will be used to set the string format\n         * @private\n         */\n        get: function () {\n            return this.format;\n        },\n        set: function (value) {\n            this.format = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * Gets a `brush` for drawing.\n     * @private\n     */\n    PdfTextElement.prototype.getBrush = function () {\n        return (this.pdfBrush == null || typeof this.pdfBrush === 'undefined') ? new PdfSolidBrush(new PdfColor(0, 0, 0)) : this.pdfBrush;\n    };\n    // /**\n    //  * `Draws` an element on the Graphics.\n    //  * @private\n    //  */\n    // public drawInternal(graphics : PdfGraphics) : void {\n    //     graphics.drawString(this.elementValue, this.pdfFont, this.pdfPen, this.getBrush(), 0, 0, this.stringFormat);\n    // }\n    /**\n     * `Layouts` the element.\n     * @private\n     */\n    PdfTextElement.prototype.layout = function (param) {\n        var layouter = new TextLayouter(this);\n        var result = layouter.layout(param);\n        return result;\n    };\n    PdfTextElement.prototype.drawText = function (arg2, arg3, arg4, arg5) {\n        if (arg3 instanceof PointF && typeof arg3.width === 'undefined' && typeof arg4 === 'undefined') {\n            this.hasPointOverload = true;\n            return this.drawText(arg2, arg3.x, arg3.y);\n        }\n        else if (typeof arg3 === 'number' && typeof arg4 === 'number' && typeof arg5 === 'undefined') {\n            this.hasPointOverload = true;\n            return this.drawText(arg2, arg3, arg4, null);\n        }\n        else if (arg3 instanceof RectangleF && typeof arg3.width !== 'undefined' && typeof arg4 === 'undefined') {\n            return this.drawText(arg2, arg3, null);\n        }\n        else if (arg3 instanceof PointF && typeof arg3.width === 'undefined' && arg4 instanceof PdfLayoutFormat) {\n            this.hasPointOverload = true;\n            return this.drawText(arg2, arg3.x, arg3.y, arg4);\n        }\n        else if (typeof arg3 === 'number' && typeof arg4 === 'number' && (arg5 instanceof PdfLayoutFormat || arg5 == null)) {\n            this.hasPointOverload = true;\n            var width = (arg2.graphics.clientSize.width - arg3);\n            var layoutRectangle = new RectangleF(arg3, arg4, width, 0);\n            return this.drawText(arg2, layoutRectangle, arg5);\n        }\n        else if (arg3 instanceof RectangleF && typeof arg3.width !== 'undefined' && typeof arg4 === 'boolean') {\n            return this.drawText(arg2, arg3, null);\n        }\n        else {\n            var layout = new PdfStringLayouter();\n            if (this.hasPointOverload) {\n                var stringLayoutResult = layout.layout(this.value, this.font, this.stringFormat, new SizeF((arg2.graphics.clientSize.width - arg3.x), 0), true, arg2.graphics.clientSize);\n                var layoutResult = void 0;\n                var param = new PdfLayoutParams();\n                var temparg3 = arg3;\n                var temparg4 = arg4;\n                param.page = arg2;\n                var previousPage = arg2;\n                param.bounds = temparg3;\n                param.format = (temparg4 != null) ? temparg4 : new PdfLayoutFormat();\n                if (stringLayoutResult.lines.length > 1) {\n                    this.text = stringLayoutResult.layoutLines[0].text;\n                    if (param.bounds.y <= param.page.graphics.clientSize.height) {\n                        var previousPosition = new PointF(param.bounds.x, param.bounds.y);\n                        layoutResult = this.layout(param);\n                        var bounds = new RectangleF(0, layoutResult.bounds.y + stringLayoutResult.lineHeight, arg2.graphics.clientSize.width, stringLayoutResult.lineHeight);\n                        var isPaginate = false;\n                        for (var i = 1; i < stringLayoutResult.lines.length; i++) {\n                            param.page = layoutResult.page;\n                            param.bounds = new RectangleF(new PointF(bounds.x, bounds.y), new SizeF(bounds.width, bounds.height));\n                            this.text = stringLayoutResult.layoutLines[i].text;\n                            if (bounds.y + stringLayoutResult.lineHeight > layoutResult.page.graphics.clientSize.height) {\n                                isPaginate = true;\n                                param.page = param.page.graphics.getNextPage();\n                                if (previousPosition.y > (layoutResult.page.graphics.clientSize.height - layoutResult.bounds.height)) {\n                                    bounds = new RectangleF(0, layoutResult.bounds.height, layoutResult.page.graphics.clientSize.width, stringLayoutResult.lineHeight);\n                                }\n                                else {\n                                    bounds = new RectangleF(0, 0, layoutResult.page.graphics.clientSize.width, stringLayoutResult.lineHeight);\n                                }\n                                param.bounds = bounds;\n                            }\n                            layoutResult = this.layout(param);\n                            if (i !== (stringLayoutResult.lines.length - 1)) {\n                                bounds = new RectangleF(0, layoutResult.bounds.y + stringLayoutResult.lineHeight, layoutResult.page.graphics.clientSize.width, stringLayoutResult.lineHeight);\n                            }\n                            else {\n                                var lineWidth = this.font.measureString(this.text, this.format).width;\n                                layoutResult = this.calculateResultBounds(layoutResult, lineWidth, layoutResult.page.graphics.clientSize.width, 0);\n                            }\n                        }\n                    }\n                    return layoutResult;\n                }\n                else {\n                    var lineSize = this.font.measureString(this.text, this.format);\n                    if (param.bounds.y <= param.page.graphics.clientSize.height) {\n                        layoutResult = this.layout(param);\n                        layoutResult = this.calculateResultBounds(layoutResult, lineSize.width, layoutResult.page.graphics.clientSize.width, 0);\n                    }\n                    return layoutResult;\n                }\n            }\n            else {\n                var layoutResult = layout.layout(this.value, this.font, this.stringFormat, new SizeF(arg3.width, 0), false, arg2.graphics.clientSize);\n                var result = void 0;\n                var param = new PdfLayoutParams();\n                var temparg3 = arg3;\n                var temparg4 = arg4;\n                param.page = arg2;\n                param.bounds = temparg3;\n                param.format = (temparg4 != null) ? temparg4 : new PdfLayoutFormat();\n                if (layoutResult.lines.length > 1) {\n                    this.text = layoutResult.layoutLines[0].text;\n                    if (param.bounds.y <= param.page.graphics.clientSize.height) {\n                        var previousPosition = new PointF(param.bounds.x, param.bounds.y);\n                        result = this.layout(param);\n                        var bounds = new RectangleF(temparg3.x, result.bounds.y + layoutResult.lineHeight, temparg3.width, layoutResult.lineHeight);\n                        var isPaginate = false;\n                        for (var i = 1; i < layoutResult.lines.length; i++) {\n                            param.page = result.page;\n                            param.bounds = new RectangleF(bounds.x, bounds.y, bounds.width, bounds.height);\n                            this.text = layoutResult.layoutLines[i].text;\n                            if (bounds.y + layoutResult.lineHeight > result.page.graphics.clientSize.height) {\n                                isPaginate = true;\n                                param.page = param.page.graphics.getNextPage();\n                                if (previousPosition.y > (result.page.graphics.clientSize.height - result.bounds.height)) {\n                                    bounds = new RectangleF(temparg3.x, layoutResult.lineHeight, temparg3.width, layoutResult.lineHeight);\n                                }\n                                else {\n                                    bounds = new RectangleF(temparg3.x, 0, temparg3.width, layoutResult.lineHeight);\n                                }\n                                param.bounds = bounds;\n                            }\n                            result = this.layout(param);\n                            if (i !== (layoutResult.lines.length - 1)) {\n                                bounds = new RectangleF(temparg3.x, result.bounds.y + layoutResult.lineHeight, temparg3.width, layoutResult.lineHeight);\n                            }\n                            else {\n                                var lineWidth = this.font.measureString(this.text, this.format).width;\n                                result = this.calculateResultBounds(result, lineWidth, temparg3.width, temparg3.x);\n                            }\n                        }\n                    }\n                    return result;\n                }\n                else {\n                    var lineSize = this.font.measureString(this.text, this.format);\n                    if (param.bounds.y <= param.page.graphics.clientSize.height) {\n                        result = this.layout(param);\n                        result = this.calculateResultBounds(result, lineSize.width, temparg3.width, temparg3.x);\n                    }\n                    return result;\n                }\n            }\n        }\n    };\n    PdfTextElement.prototype.calculateResultBounds = function (result, lineWidth, maximumWidth, startPosition) {\n        var shift = 0;\n        if (this.stringFormat != null && typeof this.stringFormat !== 'undefined' && this.stringFormat.alignment === PdfTextAlignment.Center) {\n            result.bounds.x = startPosition + (maximumWidth - lineWidth) / 2;\n            result.bounds.width = lineWidth;\n        }\n        else if (this.stringFormat != null && typeof this.stringFormat !== 'undefined' && this.stringFormat.alignment === PdfTextAlignment.Right) {\n            result.bounds.x = startPosition + (maximumWidth - lineWidth);\n            result.bounds.width = lineWidth;\n        }\n        else if (this.stringFormat != null && typeof this.stringFormat !== 'undefined' && this.stringFormat.alignment === PdfTextAlignment.Justify) {\n            result.bounds.x = startPosition;\n            result.bounds.width = maximumWidth;\n        }\n        else {\n            result.bounds.width = startPosition;\n            result.bounds.width = lineWidth;\n        }\n        return result;\n    };\n    return PdfTextElement;\n}(PdfLayoutElement));\nexport { PdfTextElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfActionLinkAnnotation } from './action-link-annotation';\nimport { PdfName } from './../primitives/pdf-name';\nimport { PdfUriAction } from './../actions/uri-action';\n/**\n * `PdfUriAnnotation` class represents the Uri annotation.\n * @private\n */\nvar PdfUriAnnotation = /** @class */ (function (_super) {\n    __extends(PdfUriAnnotation, _super);\n    function PdfUriAnnotation(rectangle, uri) {\n        var _this = _super.call(this, rectangle) || this;\n        if (typeof uri !== 'undefined') {\n            _this.uri = uri;\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfUriAnnotation.prototype, \"uriAction\", {\n        /**\n         * Get `action` of the annotation.\n         * @private\n         */\n        get: function () {\n            if (typeof this.pdfUriAction === 'undefined') {\n                this.pdfUriAction = new PdfUriAction();\n            }\n            return this.pdfUriAction;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfUriAnnotation.prototype, \"uri\", {\n        // Properties\n        /**\n         * Gets or sets the `Uri` address.\n         * @private\n         */\n        get: function () {\n            return this.uriAction.uri;\n        },\n        set: function (value) {\n            if (this.uriAction.uri !== value) {\n                this.uriAction.uri = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfUriAnnotation.prototype, \"action\", {\n        /**\n         * Gets or sets the `action`.\n         * @private\n         */\n        get: function () {\n            return this.getSetAction();\n        },\n        set: function (value) {\n            this.getSetAction(value);\n            this.uriAction.next = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * `Initializes` annotation object.\n     * @private\n     */\n    PdfUriAnnotation.prototype.initialize = function () {\n        _super.prototype.initialize.call(this);\n        this.dictionary.items.setValue(this.dictionaryProperties.subtype, new PdfName(this.dictionaryProperties.link));\n        var tempPrimitive = this.uriAction.element;\n        this.dictionary.items.setValue(this.dictionaryProperties.a, this.uriAction.element);\n    };\n    return PdfUriAnnotation;\n}(PdfActionLinkAnnotation));\nexport { PdfUriAnnotation };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfPage } from './../pages/pdf-page';\nimport { PointF, RectangleF, SizeF } from './../drawing/pdf-drawing';\nimport { PdfTextElement } from './../graphics/figures/text-element';\nimport { PdfUriAnnotation } from './uri-annotation';\nimport { PdfStringLayouter } from './../graphics/fonts/string-layouter';\nimport { PdfFontStyle } from './../graphics/fonts/enum';\nimport { PdfTextAlignment } from './../graphics/enum';\nimport { PdfArray } from './../primitives/pdf-array';\nimport { PdfNumber } from './../primitives/pdf-number';\n/**\n * `PdfTextWebLink` class represents the class for text web link annotation.\n * ```typescript\n * // create a new PDF document.\n * let document : PdfDocument = new PdfDocument();\n * // add a page to the document.\n * let page1 : PdfPage = document.pages.add();\n * // create the font\n * let font : PdfFont = new PdfStandardFont(PdfFontFamily.Helvetica, 12);\n * //\n * // create the Text Web Link\n * let textLink : PdfTextWebLink = new PdfTextWebLink();\n * // set the hyperlink\n * textLink.url = 'http://www.google.com';\n * // set the link text\n * textLink.text = 'Google';\n * // set the font\n * textLink.font = font;\n * // draw the hyperlink in PDF page\n * textLink.draw(page1, new PointF(10, 40));\n * //\n * // save the document.\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfTextWebLink = /** @class */ (function (_super) {\n    __extends(PdfTextWebLink, _super);\n    // Constructors\n    /**\n     * Initializes a new instance of the `PdfTextWebLink` class.\n     * @private\n     */\n    function PdfTextWebLink() {\n        var _this = _super.call(this) || this;\n        // Fields\n        /**\n         * Internal variable to store `Url`.\n         * @default ''\n         * @private\n         */\n        _this.uniformResourceLocator = '';\n        /**\n         * Internal variable to store `Uri Annotation` object.\n         * @default null\n         * @private\n         */\n        _this.uriAnnotation = null;\n        /**\n         * Checks whether the drawTextWebLink method with `PointF` overload is called or not.\n         * If it set as true, then the start position of each lines excluding firest line is changed as (0, Y).\n         * @private\n         * @hidden\n         */\n        _this.recalculateBounds = false;\n        _this.defaultBorder = new PdfArray();\n        for (var i = 0; i < 3; i++) {\n            _this.defaultBorder.add(new PdfNumber(0));\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfTextWebLink.prototype, \"url\", {\n        // Properties\n        /**\n         * Gets or sets the `Uri address`.\n         * ```typescript\n         * // create a new PDF document.\n         * let document : PdfDocument = new PdfDocument();\n         * // add a page to the document.\n         * let page1 : PdfPage = document.pages.add();\n         * // create the font\n         * let font : PdfFont = new PdfStandardFont(PdfFontFamily.Helvetica, 12);\n         * // create the Text Web Link\n         * let textLink : PdfTextWebLink = new PdfTextWebLink();\n         * //\n         * // set the hyperlink\n         * textLink.url = 'http://www.google.com';\n         * //\n         * // set the link text\n         * textLink.text = 'Google';\n         * // set the font\n         * textLink.font = font;\n         * // draw the hyperlink in PDF page\n         * textLink.draw(page1, new PointF(10, 40));\n         * // save the document.\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this.uniformResourceLocator;\n        },\n        set: function (value) {\n            if (value.length === 0) {\n                throw new Error('ArgumentException : Url - string can not be empty');\n            }\n            this.uniformResourceLocator = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfTextWebLink.prototype.draw = function (arg1, arg2) {\n        if (arg1 instanceof PdfPage) {\n            var layout = new PdfStringLayouter();\n            var previousFontStyle = this.font.style;\n            if (arg2 instanceof PointF) {\n                this.recalculateBounds = true;\n                this.font.style = PdfFontStyle.Underline;\n                var layoutResult = layout.layout(this.value, this.font, this.stringFormat, new SizeF((arg1.graphics.clientSize.width - arg2.x), 0), true, arg1.graphics.clientSize);\n                if (layoutResult.lines.length === 1) {\n                    var textSize = this.font.measureString(this.value);\n                    var rect = new RectangleF(arg2, textSize);\n                    rect = this.calculateBounds(rect, textSize.width, arg1.graphics.clientSize.width, arg2.x);\n                    this.uriAnnotation = new PdfUriAnnotation(rect, this.url);\n                    this.uriAnnotation.dictionary.items.setValue('Border', this.defaultBorder);\n                    arg1.annotations.add(this.uriAnnotation);\n                    var result = this.drawText(arg1, arg2);\n                    this.font.style = previousFontStyle;\n                    return result;\n                }\n                else {\n                    var result = this.drawMultipleLineWithPoint(layoutResult, arg1, arg2);\n                    this.font.style = previousFontStyle;\n                    return result;\n                }\n            }\n            else {\n                var layoutResult = layout.layout(this.value, this.font, this.stringFormat, new SizeF(arg2.width, 0), false, new SizeF(0, 0));\n                this.font.style = PdfFontStyle.Underline;\n                if (layoutResult.lines.length === 1) {\n                    var textSize = this.font.measureString(this.value);\n                    var rect = new RectangleF(new PointF(arg2.x, arg2.y), textSize);\n                    rect = this.calculateBounds(rect, textSize.width, arg2.width, arg2.x);\n                    this.uriAnnotation = new PdfUriAnnotation(rect, this.url);\n                    this.uriAnnotation.dictionary.items.setValue('Border', this.defaultBorder);\n                    arg1.annotations.add(this.uriAnnotation);\n                    var returnValue = this.drawText(arg1, arg2);\n                    this.font.style = previousFontStyle;\n                    return returnValue;\n                }\n                else {\n                    var returnValue = this.drawMultipleLineWithBounds(layoutResult, arg1, arg2);\n                    this.font.style = previousFontStyle;\n                    return returnValue;\n                }\n            }\n        }\n        else {\n            var page = new PdfPage();\n            page = arg1.page;\n            return this.draw(page, arg2);\n        }\n    };\n    /* tslint:enable */\n    //Private methods\n    /**\n     * Helper method `Draw` a Multiple Line Text Web Link on the Graphics with the specified location.\n     * @private\n     */\n    PdfTextWebLink.prototype.drawMultipleLineWithPoint = function (result, page, location) {\n        var layoutResult;\n        for (var i = 0; i < result.layoutLines.length; i++) {\n            var size = this.font.measureString(result.lines[i].text);\n            var bounds = new RectangleF(location, size);\n            if (i !== 0) {\n                bounds.x = 0;\n            }\n            this.text = result.lines[i].text;\n            if (bounds.y + size.height > page.graphics.clientSize.height) {\n                if (i !== 0) {\n                    page = page.graphics.getNextPage();\n                    bounds = new RectangleF(0, 0, page.graphics.clientSize.width, size.height);\n                    location.y = 0;\n                }\n                else {\n                    break;\n                }\n            }\n            bounds = this.calculateBounds(bounds, size.width, page.graphics.clientSize.width, bounds.x);\n            this.uriAnnotation = new PdfUriAnnotation(bounds, this.url);\n            this.uriAnnotation.dictionary.items.setValue('Border', this.defaultBorder);\n            page.annotations.add(this.uriAnnotation);\n            if (i !== 0) {\n                layoutResult = this.drawText(page, new PointF(0, bounds.y));\n            }\n            else {\n                layoutResult = this.drawText(page, bounds.x, bounds.y);\n            }\n            location.y += size.height;\n        }\n        return layoutResult;\n    };\n    /**\n     * Helper method `Draw` a Multiple Line Text Web Link on the Graphics with the specified bounds.\n     * @private\n     */\n    PdfTextWebLink.prototype.drawMultipleLineWithBounds = function (result, page, bounds) {\n        var layoutResult;\n        for (var i = 0; i < result.layoutLines.length; i++) {\n            var size = this.font.measureString(result.lines[i].text);\n            var internalBounds = new RectangleF(new PointF(bounds.x, bounds.y), size);\n            internalBounds = this.calculateBounds(internalBounds, size.width, bounds.width, bounds.x);\n            this.text = result.lines[i].text;\n            if (bounds.y + size.height > page.graphics.clientSize.height) {\n                if (i !== 0) {\n                    page = page.graphics.getNextPage();\n                    bounds = new RectangleF(bounds.x, 0, bounds.width, size.height);\n                    internalBounds.y = 0;\n                }\n                else {\n                    break;\n                }\n            }\n            this.uriAnnotation = new PdfUriAnnotation(internalBounds, this.url);\n            this.uriAnnotation.dictionary.items.setValue('Border', this.defaultBorder);\n            page.annotations.add(this.uriAnnotation);\n            layoutResult = this.drawText(page, bounds);\n            bounds.y += size.height;\n        }\n        return layoutResult;\n    };\n    /* tslint:disable */\n    PdfTextWebLink.prototype.calculateBounds = function (currentBounds, lineWidth, maximumWidth, startPosition) {\n        var shift = 0;\n        if (this.stringFormat != null && typeof this.stringFormat !== 'undefined' && this.stringFormat.alignment === PdfTextAlignment.Center) {\n            currentBounds.x = startPosition + (maximumWidth - lineWidth) / 2;\n            currentBounds.width = lineWidth;\n        }\n        else if (this.stringFormat != null && typeof this.stringFormat !== 'undefined' && this.stringFormat.alignment === PdfTextAlignment.Right) {\n            currentBounds.x = startPosition + (maximumWidth - lineWidth);\n            currentBounds.width = lineWidth;\n        }\n        else if (this.stringFormat != null && typeof this.stringFormat !== 'undefined' && this.stringFormat.alignment === PdfTextAlignment.Justify) {\n            currentBounds.x = startPosition;\n            currentBounds.width = maximumWidth;\n        }\n        else {\n            currentBounds.width = startPosition;\n            currentBounds.width = lineWidth;\n        }\n        return currentBounds;\n    };\n    return PdfTextWebLink;\n}(PdfTextElement));\nexport { PdfTextWebLink };\n","/**\n * PdfNumbersConvertor.ts class for EJ2-PDF\n * @private\n */\nimport { PdfNumberStyle } from './../../pages/enum';\n/**\n * `PdfNumbersConvertor` for convert page number into numbers, roman letters, etc.,\n * @private\n */\nvar PdfNumbersConvertor = /** @class */ (function () {\n    function PdfNumbersConvertor() {\n    }\n    // Static methods\n    /**\n     * Convert string value from page number with correct format.\n     * @private\n     */\n    PdfNumbersConvertor.convert = function (intArabic, numberStyle) {\n        var result = '';\n        switch (numberStyle) {\n            case PdfNumberStyle.None:\n                result = '';\n                break;\n            case PdfNumberStyle.Numeric:\n                result = intArabic.toString();\n                break;\n            case PdfNumberStyle.LowerLatin:\n                result = this.arabicToLetter(intArabic).toLowerCase();\n                break;\n            case PdfNumberStyle.LowerRoman:\n                result = this.arabicToRoman(intArabic).toLowerCase();\n                break;\n            case PdfNumberStyle.UpperLatin:\n                result = this.arabicToLetter(intArabic);\n                break;\n            case PdfNumberStyle.UpperRoman:\n                result = this.arabicToRoman(intArabic);\n                break;\n        }\n        return result;\n    };\n    /**\n     * Converts `arabic to roman` letters.\n     * @private\n     */\n    PdfNumbersConvertor.arabicToRoman = function (intArabic) {\n        var retval = '';\n        retval += this.generateNumber(intArabic, 1000, 'M');\n        retval += this.generateNumber(intArabic, 900, 'CM');\n        retval += this.generateNumber(intArabic, 500, 'D');\n        retval += this.generateNumber(intArabic, 400, 'CD');\n        retval += this.generateNumber(intArabic, 100, 'C');\n        retval += this.generateNumber(intArabic, 90, 'XC');\n        retval += this.generateNumber(intArabic, 50, 'L');\n        retval += this.generateNumber(intArabic, 40, 'XL');\n        retval += this.generateNumber(intArabic, 10, 'X');\n        retval += this.generateNumber(intArabic, 9, 'IX');\n        retval += this.generateNumber(intArabic, 5, 'V');\n        retval += this.generateNumber(intArabic, 4, 'IV');\n        retval += this.generateNumber(intArabic, 1, 'I');\n        return retval.toString();\n    };\n    /**\n     * Converts `arabic to normal letters`.\n     * @private\n     */\n    PdfNumbersConvertor.arabicToLetter = function (arabic) {\n        var stack = this.convertToLetter(arabic);\n        var result = '';\n        while (stack.length > 0) {\n            var num = stack.pop();\n            result = this.appendChar(result, num);\n        }\n        return result.toString();\n    };\n    /**\n     * Generate a string value of an input number.\n     * @private\n     */\n    PdfNumbersConvertor.generateNumber = function (value, magnitude, letter) {\n        var numberstring = '';\n        while (value >= magnitude) {\n            value -= magnitude;\n            numberstring += letter;\n        }\n        return numberstring.toString();\n    };\n    /**\n     * Convert a input number into letters.\n     * @private\n     */\n    PdfNumbersConvertor.convertToLetter = function (arabic) {\n        if (arabic <= 0) {\n            throw Error('ArgumentOutOfRangeException-arabic, Value can not be less 0');\n        }\n        var stack = [];\n        while (arabic > this.letterLimit) {\n            var remainder = arabic % this.letterLimit;\n            if (remainder === 0.0) {\n                arabic = arabic / this.letterLimit - 1;\n                remainder = this.letterLimit;\n            }\n            else {\n                arabic /= this.letterLimit;\n            }\n            stack.push(remainder);\n        }\n        stack.push(arabic);\n        return stack;\n    };\n    /**\n     * Convert number to actual string value.\n     * @private\n     */\n    PdfNumbersConvertor.appendChar = function (builder, value) {\n        var letter = String.fromCharCode(PdfNumbersConvertor.acsiiStartIndex + value);\n        builder += letter;\n        return builder;\n    };\n    // Fields\n    /**\n     * numbers of letters in english [readonly].\n     * @default = 26.0\n     * @private\n     */\n    PdfNumbersConvertor.letterLimit = 26.0;\n    /**\n     * Resturns `acsii start index` value.\n     * @default 64\n     * @private\n     */\n    PdfNumbersConvertor.acsiiStartIndex = (65 - 1);\n    return PdfNumbersConvertor;\n}());\nexport { PdfNumbersConvertor };\n","/**\n * Represent class to store information about `template and value pairs`.\n * @private\n */\nvar PdfTemplateValuePair = /** @class */ (function () {\n    function PdfTemplateValuePair(template, value) {\n        // Fields\n        /**\n         * Internal variable to store template.\n         * @default null\n         * @private\n         */\n        this.pdfTemplate = null;\n        /**\n         * Intenal variable to store value.\n         * @private\n         */\n        this.content = '';\n        if (typeof template === 'undefined') {\n            //\n        }\n        else {\n            this.template = template;\n            this.value = value;\n        }\n    }\n    Object.defineProperty(PdfTemplateValuePair.prototype, \"template\", {\n        // Properties\n        /**\n         * Gets or sets the template.\n         * @private\n         */\n        get: function () {\n            return this.pdfTemplate;\n        },\n        set: function (value) {\n            this.pdfTemplate = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTemplateValuePair.prototype, \"value\", {\n        /**\n         * Gets or sets the value.\n         * @private\n         */\n        get: function () {\n            return this.content;\n        },\n        set: function (value) {\n            this.content = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfTemplateValuePair;\n}());\nexport { PdfTemplateValuePair };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfAutomaticField.ts class for EJ2-PDF\n */\nimport { PdfAutomaticField } from './automatic-field';\nimport { TemporaryDictionary } from './../../collections/object-object-pair/dictionary';\nimport { PdfTemplateValuePair } from './pdf-template-value-pair';\nimport { SizeF, PointF } from './../../drawing/pdf-drawing';\nimport { PdfTemplate } from './../../graphics/figures/pdf-template';\n/**\n * Represents automatic field which has the same value within the `PdfGraphics`.\n */\nvar PdfMultipleValueField = /** @class */ (function (_super) {\n    __extends(PdfMultipleValueField, _super);\n    function PdfMultipleValueField() {\n        var _this = _super.call(this) || this;\n        //  Fields\n        /**\n         * Stores the instance of dictionary values of `graphics and template value pair`.\n         * @private\n         */\n        _this.list = new TemporaryDictionary();\n        return _this;\n    }\n    // Implementation\n    /* tslint:disable */\n    PdfMultipleValueField.prototype.performDraw = function (graphics, location, scalingX, scalingY) {\n        _super.prototype.performDrawHelper.call(this, graphics, location, scalingX, scalingY);\n        var value = this.getValue(graphics);\n        var template = new PdfTemplate(this.getSize());\n        this.list.setValue(graphics, new PdfTemplateValuePair(template, value));\n        var g = template.graphics;\n        var size = this.getSize();\n        template.graphics.drawString(value, this.getFont(), this.pen, this.getBrush(), 0, 0, size.width, size.height, this.stringFormat);\n        var drawLocation = new PointF(location.x + this.location.x, location.y + this.location.y);\n        graphics.drawPdfTemplate(template, drawLocation, new SizeF(template.width * scalingX, template.height * scalingY));\n    };\n    return PdfMultipleValueField;\n}(PdfAutomaticField));\nexport { PdfMultipleValueField };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfBrush } from './../../graphics/brushes/pdf-brush';\nimport { PdfNumberStyle } from './../../pages/enum';\nimport { PdfNumbersConvertor } from './pdf-numbers-convertor';\nimport { PdfMultipleValueField } from './multiple-value-field';\n/**\n * Represents PDF document `page number field`.\n * @public\n */\nvar PdfPageNumberField = /** @class */ (function (_super) {\n    __extends(PdfPageNumberField, _super);\n    function PdfPageNumberField(font, arg2) {\n        var _this = _super.call(this) || this;\n        // Fields\n        /**\n         * Stores the number style of the page number field.\n         * @private\n         */\n        _this.internalNumberStyle = PdfNumberStyle.Numeric;\n        if (typeof arg2 === 'undefined') {\n            _this.font = font;\n        }\n        else if (arg2 instanceof PdfBrush) {\n            _this.font = font;\n            _this.brush = arg2;\n        }\n        else {\n            _this.font = font;\n            _this.bounds = arg2;\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfPageNumberField.prototype, \"numberStyle\", {\n        // Properties\n        /**\n         * Gets and sets the number style of the page number field.\n         * @private\n         */\n        get: function () {\n            return this.internalNumberStyle;\n        },\n        set: function (value) {\n            this.internalNumberStyle = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Return the `string` value of page number field.\n     * @public\n     */\n    PdfPageNumberField.prototype.getValue = function (graphics) {\n        var result = null;\n        var page = this.getPageFromGraphics(graphics);\n        result = this.internalGetValue(page);\n        return result;\n    };\n    /**\n     * Internal method to `get actual value of page number`.\n     * @private\n     */\n    PdfPageNumberField.prototype.internalGetValue = function (page) {\n        var document = page.document;\n        var pageIndex = document.pages.indexOf(page) + 1;\n        return PdfNumbersConvertor.convert(pageIndex, this.numberStyle);\n    };\n    return PdfPageNumberField;\n}(PdfMultipleValueField));\nexport { PdfPageNumberField };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfCompositeField.ts class for EJ2-PDF\n */\nimport { PdfMultipleValueField } from './multiple-value-field';\n/**\n * Represents class which can concatenate multiple automatic fields into single string.\n */\nvar PdfCompositeField = /** @class */ (function (_super) {\n    __extends(PdfCompositeField, _super);\n    // Constructor\n    /**\n     * Initialize a new instance of `PdfCompositeField` class.\n     * @param font Font of the field.\n     * @param brush Color of the field.\n     * @param text Content of the field.\n     * @param list List of the automatic fields in specific order based on the text content.\n     */\n    function PdfCompositeField(font, brush, text) {\n        var list = [];\n        for (var _i = 3; _i < arguments.length; _i++) {\n            list[_i - 3] = arguments[_i];\n        }\n        var _this = _super.call(this) || this;\n        // Fields\n        /**\n         * Stores the array of automatic fields.\n         * @private\n         */\n        _this.internalAutomaticFields = null;\n        /**\n         * Stores the text value of the field.\n         * @private\n         */\n        _this.internalText = '';\n        _this.font = font;\n        _this.brush = brush;\n        _this.text = text;\n        _this.automaticFields = list;\n        return _this;\n    }\n    Object.defineProperty(PdfCompositeField.prototype, \"text\", {\n        // Properties\n        /**\n         * Gets and sets the content of the field.\n         * @public\n         */\n        get: function () {\n            return this.internalText;\n        },\n        set: function (value) {\n            this.internalText = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCompositeField.prototype, \"automaticFields\", {\n        /**\n         * Gets and sets the list of the field to drawn.\n         * @public\n         */\n        get: function () {\n            return this.internalAutomaticFields;\n        },\n        set: function (value) {\n            this.internalAutomaticFields = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * Return the actual value generated from the list of automatic fields.\n     * @public\n     */\n    PdfCompositeField.prototype.getValue = function (graphics) {\n        var values = [];\n        var text = this.text.toString();\n        if (typeof this.automaticFields !== 'undefined' && this.automaticFields != null && this.automaticFields.length > 0) {\n            for (var i = 0; i < this.automaticFields.length; i++) {\n                var automaticField = this.automaticFields[i];\n                text = text.replace('{' + i + '}', automaticField.getValue(graphics));\n            }\n        }\n        return text;\n    };\n    return PdfCompositeField;\n}(PdfMultipleValueField));\nexport { PdfCompositeField };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfSingleValueField.ts class for EJ2-PDF\n */\nimport { PdfAutomaticField } from './automatic-field';\nimport { TemporaryDictionary } from './../../collections/object-object-pair/dictionary';\nimport { PdfTemplateValuePair } from './pdf-template-value-pair';\nimport { PointF, SizeF } from './../../drawing/pdf-drawing';\nimport { PdfTemplate } from './../../graphics/figures/pdf-template';\n/**\n * Represents automatic field which has the same value in the whole document.\n */\nvar PdfSingleValueField = /** @class */ (function (_super) {\n    __extends(PdfSingleValueField, _super);\n    // Constructors\n    function PdfSingleValueField() {\n        var _this = _super.call(this) || this;\n        // Fields\n        /* tslint:disable */\n        _this.list = new TemporaryDictionary();\n        /* tslint:enable */\n        _this.painterGraphics = [];\n        return _this;\n    }\n    PdfSingleValueField.prototype.performDraw = function (graphics, location, scalingX, scalingY) {\n        _super.prototype.performDrawHelper.call(this, graphics, location, scalingX, scalingY);\n        var page = this.getPageFromGraphics(graphics);\n        var document = page.document;\n        var textValue = this.getValue(graphics);\n        /* tslint:disable */\n        if (this.list.containsKey(document)) {\n            var pair = this.list.getValue(document);\n            var drawLocation = new PointF(location.x + this.location.x, location.y + this.location.y);\n            graphics.drawPdfTemplate(pair.template, drawLocation, new SizeF(pair.template.width * scalingX, pair.template.height * scalingY));\n            this.painterGraphics.push(graphics);\n        }\n        else {\n            var size = this.getSize();\n            var template = new PdfTemplate(size);\n            this.list.setValue(document, new PdfTemplateValuePair(template, textValue));\n            template.graphics.drawString(textValue, this.getFont(), this.pen, this.getBrush(), 0, 0, size.width, size.height, this.stringFormat);\n            var drawLocation = new PointF(location.x + this.location.x, location.y + this.location.y);\n            graphics.drawPdfTemplate(template, drawLocation, new SizeF(template.width * scalingX, template.height * scalingY));\n            this.painterGraphics.push(graphics);\n        }\n        /* tslint:enable */\n    };\n    return PdfSingleValueField;\n}(PdfAutomaticField));\nexport { PdfSingleValueField };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfPageCountField.ts class for EJ2-PDF\n */\nimport { PdfSingleValueField } from './single-value-field';\nimport { PdfNumberStyle } from './../../pages/enum';\nimport { PdfBrush } from './../../graphics/brushes/pdf-brush';\nimport { PdfNumbersConvertor } from './pdf-numbers-convertor';\n/**\n * Represents total PDF document page count automatic field.\n */\nvar PdfPageCountField = /** @class */ (function (_super) {\n    __extends(PdfPageCountField, _super);\n    function PdfPageCountField(font, arg2) {\n        var _this = _super.call(this) || this;\n        // Fields\n        /**\n         * Stores the number style of the field.\n         * @private\n         */\n        _this.internalNumberStyle = PdfNumberStyle.Numeric;\n        if (typeof arg2 === 'undefined') {\n            _this.font = font;\n        }\n        else if (arg2 instanceof PdfBrush) {\n            _this.font = font;\n            _this.brush = arg2;\n        }\n        else {\n            _this.font = font;\n            _this.bounds = arg2;\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfPageCountField.prototype, \"numberStyle\", {\n        // Properties\n        /**\n         * Gets and sets the number style of the field.\n         * @public\n         */\n        get: function () {\n            return this.internalNumberStyle;\n        },\n        set: function (value) {\n            this.internalNumberStyle = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * Return the actual value of the content to drawn.\n     * @public\n     */\n    PdfPageCountField.prototype.getValue = function (graphics) {\n        var result = null;\n        var page = this.getPageFromGraphics(graphics);\n        var document = page.section.parent.document;\n        var count = document.pages.count;\n        result = PdfNumbersConvertor.convert(count, this.numberStyle);\n        return result;\n    };\n    return PdfPageCountField;\n}(PdfSingleValueField));\nexport { PdfPageCountField };\n","import { PointF, RectangleF } from './../drawing/pdf-drawing';\nimport { PdfArray } from './../primitives/pdf-array';\nimport { PdfPageRotateAngle } from './../pages/enum';\nimport { PdfDestinationMode } from './../general/enum';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { PdfName } from './../primitives/pdf-name';\nimport { PdfNumber } from './../primitives/pdf-number';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\n/**\n * `PdfDestination` class represents an anchor in the document\n * where bookmarks or annotations can direct when clicked.\n */\nvar PdfDestination = /** @class */ (function () {\n    function PdfDestination(arg1, arg2) {\n        // Fields\n        /**\n         * Internal variable for accessing fields from `DictionryProperties` class.\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        /**\n         * Type of the `destination`.\n         * @private\n         */\n        this.destinationMode = PdfDestinationMode.Location;\n        /**\n         * `Zoom` factor.\n         * @private\n         * @default 0\n         */\n        this.zoomFactor = 0;\n        /**\n         * `Location` of the destination.\n         * @default new PointF() with 0 ,0 as co-ordinates\n         * @private\n         */\n        this.destinationLocation = new PointF(0, 0);\n        /**\n         * `Bounds` of the destination as RectangleF.\n         * @default RectangleF.Empty\n         * @private\n         */\n        this.bounds = new RectangleF();\n        /**\n         * Pdf primitive representing `this` object.\n         * @private\n         */\n        this.array = new PdfArray();\n        if (typeof arg2 === 'undefined') {\n            var angle = PdfPageRotateAngle.RotateAngle0;\n            this.destinationLocation = new PointF(0, this.destinationLocation.y);\n            this.pdfPage = arg1;\n        }\n        else if (arg2 instanceof PointF) {\n            this.constructor(arg1);\n            this.destinationLocation = arg2;\n        }\n        else {\n            this.constructor(arg1);\n            this.bounds = arg2;\n        }\n    }\n    Object.defineProperty(PdfDestination.prototype, \"zoom\", {\n        // Properties\n        /**\n         * Gets and Sets the `zoom` factor.\n         * @private\n         */\n        get: function () {\n            return this.zoomFactor;\n        },\n        set: function (value) {\n            this.zoomFactor = value;\n            this.initializePrimitive();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDestination.prototype, \"page\", {\n        /**\n         * Gets and Sets the `page` object.\n         * @private\n         */\n        get: function () {\n            return this.pdfPage;\n        },\n        set: function (value) {\n            this.pdfPage = value;\n            this.initializePrimitive();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDestination.prototype, \"mode\", {\n        /**\n         * Gets and Sets the destination `mode`.\n         * @private\n         */\n        get: function () {\n            return this.destinationMode;\n        },\n        set: function (value) {\n            this.destinationMode = value;\n            this.initializePrimitive();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDestination.prototype, \"location\", {\n        /**\n         * Gets and Sets the `location`.\n         * @private\n         */\n        get: function () {\n            return this.destinationLocation;\n        },\n        set: function (value) {\n            this.destinationLocation = value;\n            this.initializePrimitive();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Translates` co-ordinates to PDF co-ordinate system (lower/left).\n     * @private\n     */\n    PdfDestination.prototype.pointToNativePdf = function (page, point) {\n        var section = page.section;\n        return section.pointToNativePdf(page, point);\n    };\n    /**\n     * `In fills` array by correct values.\n     * @private\n     */\n    PdfDestination.prototype.initializePrimitive = function () {\n        this.array.clear();\n        this.array.add(new PdfReferenceHolder(this.pdfPage));\n        switch (this.destinationMode) {\n            case PdfDestinationMode.Location:\n                var simplePage = this.pdfPage;\n                var point = new PointF();\n                point = this.pointToNativePdf(simplePage, this.destinationLocation);\n                this.array.add(new PdfName(this.dictionaryProperties.xyz));\n                this.array.add(new PdfNumber(point.x));\n                this.array.add(new PdfNumber(point.y));\n                this.array.add(new PdfNumber(this.zoomFactor));\n                break;\n            case PdfDestinationMode.FitToPage:\n                this.array.add(new PdfName(this.dictionaryProperties.fit));\n                break;\n        }\n    };\n    Object.defineProperty(PdfDestination.prototype, \"element\", {\n        /**\n         * Gets the `element` representing this object.\n         * @private\n         */\n        get: function () {\n            this.initializePrimitive();\n            return this.array;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfDestination;\n}());\nexport { PdfDestination };\n","/**\n * public Enum for `PdfBorderOverlapStyle`.\n * @private\n */\nexport var PdfBorderOverlapStyle;\n(function (PdfBorderOverlapStyle) {\n    /**\n     * Specifies the type of `Overlap`.\n     * @private\n     */\n    PdfBorderOverlapStyle[PdfBorderOverlapStyle[\"Overlap\"] = 0] = \"Overlap\";\n    /**\n     * Specifies the type of `Inside`.\n     * @private\n     */\n    PdfBorderOverlapStyle[PdfBorderOverlapStyle[\"Inside\"] = 1] = \"Inside\";\n})(PdfBorderOverlapStyle || (PdfBorderOverlapStyle = {}));\n","/**\n * PdfPageTemplateElement.ts class for EJ2-Pdf\n */\nimport { PdfDockStyle, PdfAlignmentStyle, TemplateType } from './enum';\nimport { PointF, SizeF } from './../drawing/pdf-drawing';\nimport { PdfTemplate } from './../graphics/figures/pdf-template';\nimport { PdfPage } from './pdf-page';\nimport { RectangleF } from './../drawing/pdf-drawing';\n/**\n * Describes a `page template` object that can be used as header/footer, watermark or stamp.\n */\nvar PdfPageTemplateElement = /** @class */ (function () {\n    /* tslint:disable */\n    function PdfPageTemplateElement(arg1, arg2, arg3, arg4, arg5) {\n        if (arg1 instanceof RectangleF && typeof arg2 === 'undefined') {\n            this.constructor(arg1.x, arg1.y, arg1.width, arg1.height);\n        }\n        else if (arg1 instanceof RectangleF && arg2 instanceof PdfPage && typeof arg3 === 'undefined') {\n            this.constructor(arg1.x, arg1.y, arg1.width, arg1.height, arg2);\n        }\n        else if (arg1 instanceof PointF && arg2 instanceof SizeF && typeof arg3 === 'undefined') {\n            this.constructor(arg1.x, arg1.y, arg2.width, arg2.height);\n        }\n        else if (arg1 instanceof PointF && arg2 instanceof SizeF && arg3 instanceof PdfPage && typeof arg4 === 'undefined') {\n            this.constructor(arg1.x, arg1.y, arg2.width, arg2.height, arg3);\n        }\n        else if (arg1 instanceof SizeF && typeof arg2 === 'undefined') {\n            this.constructor(arg1.width, arg1.height);\n        }\n        else if (typeof arg1 === 'number' && typeof arg2 === 'number' && typeof arg3 === 'undefined') {\n            this.constructor(0, 0, arg1, arg2);\n        }\n        else if (typeof arg1 === 'number' && typeof arg2 === 'number' && arg3 instanceof PdfPage && typeof arg4 === 'undefined') {\n            this.constructor(0, 0, arg1, arg2, arg3);\n        }\n        else if (typeof arg1 === 'number' && typeof arg2 === 'number' && typeof arg3 === 'number' && typeof arg4 === 'number' && typeof arg5 === 'undefined') {\n            this.x = arg1;\n            this.y = arg2;\n            this.pdfTemplate = new PdfTemplate(arg3, arg4);\n        }\n        else {\n            this.x = arg1;\n            this.y = arg2;\n            this.pdfTemplate = new PdfTemplate(arg3, arg4);\n            // this.graphics.colorSpace = this.page.document.colorSpace;\n        }\n        /* tslint:enable */\n    }\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"dock\", {\n        // Properties\n        /**\n         * Gets or sets the `dock style` of the page template element.\n         * @private\n         */\n        get: function () {\n            return this.dockStyle;\n        },\n        set: function (value) {\n            // if (this.dockStyle !== value && this.Type === TemplateType.None) {\n            this.dockStyle = value;\n            // Reset alignment.\n            this.resetAlignment();\n            // }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"alignment\", {\n        /**\n         * Gets or sets `alignment` of the page template element.\n         * @private\n         */\n        get: function () {\n            return this.alignmentStyle;\n        },\n        set: function (value) {\n            // if (this.alignmentStyle !== value) {\n            this.setAlignment(value);\n            // }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"foreground\", {\n        /**\n         * Indicates whether the page template is located `in front of the page layers or behind of it`.\n         * @private\n         */\n        get: function () {\n            return this.isForeground;\n        },\n        set: function (value) {\n            // if (this.foreground !== value) {\n            this.isForeground = value;\n            // }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"background\", {\n        /**\n         * Indicates whether the page template is located `behind of the page layers or in front of it`.\n         * @private\n         */\n        get: function () {\n            return !this.isForeground;\n        },\n        set: function (value) {\n            this.isForeground = !value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"location\", {\n        /**\n         * Gets or sets `location` of the page template element.\n         * @private\n         */\n        get: function () {\n            return this.currentLocation;\n        },\n        set: function (value) {\n            if (this.type === TemplateType.None) {\n                this.currentLocation = value;\n            }\n            else {\n                //\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"x\", {\n        /**\n         * Gets or sets `X` co-ordinate of the template element on the page.\n         * @private\n         */\n        get: function () {\n            var value = (typeof this.currentLocation !== 'undefined') ? this.currentLocation.x : 0;\n            return value;\n        },\n        set: function (value) {\n            if (this.type === TemplateType.None) {\n                this.currentLocation.x = value;\n            }\n            else {\n                //\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"y\", {\n        /**\n         * Gets or sets `Y` co-ordinate of the template element on the page.\n         * @private\n         */\n        get: function () {\n            var value = (typeof this.currentLocation !== 'undefined') ? this.currentLocation.y : 0;\n            return value;\n        },\n        set: function (value) {\n            if (this.type === TemplateType.None) {\n                this.currentLocation.y = value;\n            }\n            else {\n                //\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"size\", {\n        /**\n         * Gets or sets `size` of the page template element.\n         * @private\n         */\n        get: function () {\n            return this.template.size;\n        },\n        set: function (value) {\n            if (this.type === TemplateType.None) {\n                this.template.reset(value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"width\", {\n        /**\n         * Gets or sets `width` of the page template element.\n         * @private\n         */\n        get: function () {\n            return this.template.width;\n        },\n        set: function (value) {\n            if (this.template.width !== value && this.type === TemplateType.None) {\n                var size = this.template.size;\n                size.width = value;\n                this.template.reset(size);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"height\", {\n        /**\n         * Gets or sets `height` of the page template element.\n         * @private\n         */\n        get: function () {\n            return this.template.height;\n        },\n        set: function (value) {\n            if (this.template.height !== value && this.type === TemplateType.None) {\n                var size = this.template.size;\n                size.height = value;\n                this.template.reset(size);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"graphics\", {\n        /**\n         * Gets `graphics` context of the page template element.\n         * @private\n         */\n        get: function () {\n            return this.template.graphics;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"template\", {\n        /**\n         * Gets Pdf `template` object.\n         * @private\n         */\n        get: function () {\n            // if (typeof this.pdfTemplate === 'undefined' || this.pdfTemplate == null) {\n            //     this.pdfTemplate = new PdfTemplate(this.size);\n            // }\n            return this.pdfTemplate;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"type\", {\n        /**\n         * Gets or sets `type` of the usage of this page template.\n         * @private\n         */\n        get: function () {\n            return this.templateType;\n        },\n        set: function (value) {\n            this.updateDocking(value);\n            this.templateType = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"bounds\", {\n        /**\n         * Gets or sets `bounds` of the page template.\n         * @public\n         */\n        get: function () {\n            return new RectangleF(new PointF(this.x, this.y), this.size);\n        },\n        set: function (value) {\n            if (this.type === TemplateType.None) {\n                this.location = new PointF(value.x, value.y);\n                this.size = new SizeF(value.width, value.height);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Updates Dock` property if template is used as header/footer.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.updateDocking = function (type) {\n        if (type !== TemplateType.None) {\n            switch (type) {\n                case TemplateType.Top:\n                    this.dock = PdfDockStyle.Top;\n                    break;\n                case TemplateType.Bottom:\n                    this.dock = PdfDockStyle.Bottom;\n                    break;\n                case TemplateType.Left:\n                    this.dock = PdfDockStyle.Left;\n                    break;\n                case TemplateType.Right:\n                    this.dock = PdfDockStyle.Right;\n                    break;\n            }\n            this.resetAlignment();\n        }\n    };\n    /**\n     * `Resets alignment` of the template.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.resetAlignment = function () {\n        this.alignment = PdfAlignmentStyle.None;\n    };\n    /**\n     * `Sets alignment` of the template.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.setAlignment = function (alignment) {\n        if (this.dock === PdfDockStyle.None) {\n            this.alignmentStyle = alignment;\n        }\n        else {\n            // Template is docked and alignment has been changed.\n            var canBeSet = false;\n            switch (this.dock) {\n                case PdfDockStyle.Left:\n                    canBeSet = (alignment === PdfAlignmentStyle.TopLeft || alignment === PdfAlignmentStyle.MiddleLeft ||\n                        alignment === PdfAlignmentStyle.BottomLeft || alignment === PdfAlignmentStyle.None);\n                    break;\n                case PdfDockStyle.Top:\n                    canBeSet = (alignment === PdfAlignmentStyle.TopLeft || alignment === PdfAlignmentStyle.TopCenter ||\n                        alignment === PdfAlignmentStyle.TopRight || alignment === PdfAlignmentStyle.None);\n                    break;\n                case PdfDockStyle.Right:\n                    canBeSet = (alignment === PdfAlignmentStyle.TopRight || alignment === PdfAlignmentStyle.MiddleRight ||\n                        alignment === PdfAlignmentStyle.BottomRight || alignment === PdfAlignmentStyle.None);\n                    break;\n                case PdfDockStyle.Bottom:\n                    canBeSet = (alignment === PdfAlignmentStyle.BottomLeft || alignment === PdfAlignmentStyle.BottomCenter\n                        || alignment === PdfAlignmentStyle.BottomRight || alignment === PdfAlignmentStyle.None);\n                    break;\n                case PdfDockStyle.Fill:\n                    canBeSet = (alignment === PdfAlignmentStyle.MiddleCenter || alignment === PdfAlignmentStyle.None);\n                    break;\n            }\n            if (canBeSet) {\n                this.alignmentStyle = alignment;\n            }\n        }\n    };\n    /**\n     * Draws the template.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.draw = function (layer, document) {\n        var page = layer.page;\n        var bounds = this.calculateBounds(page, document);\n        if (bounds.x === -0) {\n            bounds.x = 0;\n        }\n        layer.graphics.drawPdfTemplate(this.template, new PointF(bounds.x, bounds.y), new SizeF(bounds.width, bounds.height));\n    };\n    /**\n     * Calculates bounds of the page template.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.calculateBounds = function (page, document) {\n        var result = this.bounds;\n        if (this.alignmentStyle !== PdfAlignmentStyle.None) {\n            result = this.getAlignmentBounds(page, document);\n        }\n        else if (this.dockStyle !== PdfDockStyle.None) {\n            result = this.getDockBounds(page, document);\n        }\n        return result;\n    };\n    /**\n     * Calculates bounds according to the alignment.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.getAlignmentBounds = function (page, document) {\n        var result = this.bounds;\n        if (this.type === TemplateType.None) {\n            result = this.getSimpleAlignmentBounds(page, document);\n        }\n        else {\n            result = this.getTemplateAlignmentBounds(page, document);\n        }\n        return result;\n    };\n    /**\n     * Calculates bounds according to the alignment.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.getSimpleAlignmentBounds = function (page, document) {\n        var bounds = this.bounds;\n        var pdfSection = page.section;\n        var actualBounds = pdfSection.getActualBounds(document, page, false);\n        var x = this.x;\n        var y = this.y;\n        switch (this.alignmentStyle) {\n            case PdfAlignmentStyle.TopLeft:\n                x = 0;\n                y = 0;\n                break;\n            case PdfAlignmentStyle.TopCenter:\n                x = (actualBounds.width - this.width) / 2;\n                y = 0;\n                break;\n            case PdfAlignmentStyle.TopRight:\n                x = actualBounds.width - this.width;\n                y = 0;\n                break;\n            case PdfAlignmentStyle.MiddleLeft:\n                x = 0;\n                y = (actualBounds.height - this.height) / 2;\n                break;\n            case PdfAlignmentStyle.MiddleCenter:\n                x = (actualBounds.width - this.width) / 2;\n                y = (actualBounds.height - this.height) / 2;\n                break;\n            case PdfAlignmentStyle.MiddleRight:\n                x = actualBounds.width - this.width;\n                y = (actualBounds.height - this.height) / 2;\n                break;\n            case PdfAlignmentStyle.BottomLeft:\n                x = 0;\n                y = actualBounds.height - this.height;\n                break;\n            case PdfAlignmentStyle.BottomCenter:\n                x = (actualBounds.width - this.width) / 2;\n                y = actualBounds.height - this.height;\n                break;\n            case PdfAlignmentStyle.BottomRight:\n                x = actualBounds.width - this.width;\n                y = actualBounds.height - this.height;\n                break;\n        }\n        bounds.x = x;\n        bounds.y = y;\n        return bounds;\n    };\n    /**\n     * Calculates bounds according to the alignment.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.getTemplateAlignmentBounds = function (page, document) {\n        var result = this.bounds;\n        var section = page.section;\n        var actualBounds = section.getActualBounds(document, page, false);\n        var x = this.x;\n        var y = this.y;\n        switch (this.alignmentStyle) {\n            case PdfAlignmentStyle.TopLeft:\n                if (this.type === TemplateType.Left) {\n                    x = -actualBounds.x;\n                    y = 0;\n                }\n                else if (this.type === TemplateType.Top) {\n                    x = -actualBounds.x;\n                    y = -actualBounds.y;\n                }\n                break;\n            case PdfAlignmentStyle.TopCenter:\n                x = (actualBounds.width - this.width) / 2;\n                y = -actualBounds.y;\n                break;\n            case PdfAlignmentStyle.TopRight:\n                if (this.type === TemplateType.Right) {\n                    x = actualBounds.width + section.getRightIndentWidth(document, page, false) - this.width;\n                    y = 0;\n                }\n                else if (this.type === TemplateType.Top) {\n                    x = actualBounds.width + section.getRightIndentWidth(document, page, false) - this.width;\n                    y = -actualBounds.y;\n                }\n                break;\n            case PdfAlignmentStyle.MiddleLeft:\n                x = -actualBounds.x;\n                y = (actualBounds.height - this.height) / 2;\n                break;\n            case PdfAlignmentStyle.MiddleCenter:\n                x = (actualBounds.width - this.width) / 2;\n                y = (actualBounds.height - this.height) / 2;\n                break;\n            case PdfAlignmentStyle.MiddleRight:\n                x = actualBounds.width + section.getRightIndentWidth(document, page, false) - this.width;\n                y = (actualBounds.height - this.height) / 2;\n                break;\n            case PdfAlignmentStyle.BottomLeft:\n                if (this.type === TemplateType.Left) {\n                    x = -actualBounds.x;\n                    y = actualBounds.height - this.height;\n                }\n                else if (this.type === TemplateType.Bottom) {\n                    x = -actualBounds.x;\n                    y = actualBounds.height + section.getBottomIndentHeight(document, page, false) - this.height;\n                }\n                break;\n            case PdfAlignmentStyle.BottomCenter:\n                x = (actualBounds.width - this.width) / 2;\n                y = actualBounds.height + section.getBottomIndentHeight(document, page, false) - this.height;\n                break;\n            case PdfAlignmentStyle.BottomRight:\n                if (this.type === TemplateType.Right) {\n                    x = actualBounds.width + section.getRightIndentWidth(document, page, false) - this.width;\n                    y = actualBounds.height - this.height;\n                }\n                else if (this.type === TemplateType.Bottom) {\n                    x = actualBounds.width + section.getRightIndentWidth(document, page, false) - this.width;\n                    y = actualBounds.height + section.getBottomIndentHeight(document, page, false) - this.height;\n                }\n                break;\n        }\n        result.x = x;\n        result.y = y;\n        return result;\n    };\n    /**\n     * Calculates bounds according to the docking.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.getDockBounds = function (page, document) {\n        var result = this.bounds;\n        if (this.type === TemplateType.None) {\n            result = this.getSimpleDockBounds(page, document);\n        }\n        else {\n            result = this.getTemplateDockBounds(page, document);\n        }\n        return result;\n    };\n    /**\n     * Calculates bounds according to the docking.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.getSimpleDockBounds = function (page, document) {\n        var result = this.bounds;\n        var section = page.section;\n        var actualBounds = section.getActualBounds(document, page, false);\n        var x = this.x;\n        var y = this.y;\n        var width = this.width;\n        var height = this.height;\n        switch (this.dockStyle) {\n            case PdfDockStyle.Left:\n                x = 0;\n                y = 0;\n                width = this.width;\n                height = actualBounds.height;\n                break;\n            case PdfDockStyle.Top:\n                x = 0;\n                y = 0;\n                width = actualBounds.width;\n                height = this.height;\n                break;\n            case PdfDockStyle.Right:\n                x = actualBounds.width - this.width;\n                y = 0;\n                width = this.width;\n                height = actualBounds.height;\n                break;\n            case PdfDockStyle.Bottom:\n                x = 0;\n                y = actualBounds.height - this.height;\n                width = actualBounds.width;\n                height = this.height;\n                break;\n            case PdfDockStyle.Fill:\n                x = 0;\n                x = 0;\n                width = actualBounds.width;\n                height = actualBounds.height;\n                break;\n        }\n        result = new RectangleF(x, y, width, height);\n        return result;\n    };\n    /**\n     * Calculates template bounds basing on docking if template is a page template.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.getTemplateDockBounds = function (page, document) {\n        var result = this.bounds;\n        var section = page.section;\n        var actualBounds = section.getActualBounds(document, page, false);\n        var actualSize = section.pageSettings.getActualSize();\n        var x = this.x;\n        var y = this.y;\n        var width = this.width;\n        var height = this.height;\n        switch (this.dockStyle) {\n            case PdfDockStyle.Left:\n                x = -actualBounds.x;\n                y = 0;\n                width = this.width;\n                height = actualBounds.height;\n                break;\n            case PdfDockStyle.Top:\n                x = -actualBounds.x;\n                y = -actualBounds.y;\n                width = actualSize.width;\n                height = this.height;\n                if (actualBounds.height < 0) {\n                    y = -actualBounds.y + actualSize.height;\n                }\n                break;\n            case PdfDockStyle.Right:\n                x = actualBounds.width + section.getRightIndentWidth(document, page, false) - this.width;\n                y = 0;\n                width = this.width;\n                height = actualBounds.height;\n                break;\n            case PdfDockStyle.Bottom:\n                x = -actualBounds.x;\n                y = actualBounds.height + section.getBottomIndentHeight(document, page, false) - this.height;\n                width = actualSize.width;\n                height = this.height;\n                if (actualBounds.height < 0) {\n                    y -= actualSize.height;\n                }\n                break;\n            case PdfDockStyle.Fill:\n                x = 0;\n                x = 0;\n                width = actualBounds.width;\n                height = actualBounds.height;\n                break;\n        }\n        result = new RectangleF(x, y, width, height);\n        return result;\n    };\n    return PdfPageTemplateElement;\n}());\nexport { PdfPageTemplateElement };\n","/**\n * PdfBorders.ts class for EJ2-PDF\n */\nimport { PdfPen } from './../../../graphics/pdf-pen';\nimport { PdfDashStyle } from './../../../graphics/enum';\nimport { PdfColor } from './../../../graphics/pdf-color';\n/**\n * `PdfBorders` class used represents the cell border of the PDF grid.\n */\nvar PdfBorders = /** @class */ (function () {\n    // Constructor\n    /**\n     * Create a new instance for `PdfBorders` class.\n     * @private\n     */\n    function PdfBorders() {\n        var defaultBorderPenLeft = new PdfPen(new PdfColor(0, 0, 0));\n        defaultBorderPenLeft.dashStyle = PdfDashStyle.Solid;\n        var defaultBorderPenRight = new PdfPen(new PdfColor(0, 0, 0));\n        defaultBorderPenRight.dashStyle = PdfDashStyle.Solid;\n        var defaultBorderPenTop = new PdfPen(new PdfColor(0, 0, 0));\n        defaultBorderPenTop.dashStyle = PdfDashStyle.Solid;\n        var defaultBorderPenBottom = new PdfPen(new PdfColor(0, 0, 0));\n        defaultBorderPenBottom.dashStyle = PdfDashStyle.Solid;\n        this.leftPen = defaultBorderPenLeft;\n        this.rightPen = defaultBorderPenRight;\n        this.topPen = defaultBorderPenTop;\n        this.bottomPen = defaultBorderPenBottom;\n    }\n    Object.defineProperty(PdfBorders.prototype, \"left\", {\n        // Properties\n        /**\n         * Gets or sets the `Left`.\n         * @private\n         */\n        get: function () {\n            return this.leftPen;\n        },\n        set: function (value) {\n            this.leftPen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBorders.prototype, \"right\", {\n        /**\n         * Gets or sets the `Right`.\n         * @private\n         */\n        get: function () {\n            return this.rightPen;\n        },\n        set: function (value) {\n            this.rightPen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBorders.prototype, \"top\", {\n        /**\n         * Gets or sets the `Top`.\n         * @private\n         */\n        get: function () {\n            return this.topPen;\n        },\n        set: function (value) {\n            this.topPen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBorders.prototype, \"bottom\", {\n        /**\n         * Gets or sets the `Bottom`.\n         * @private\n         */\n        get: function () {\n            return this.bottomPen;\n        },\n        set: function (value) {\n            this.bottomPen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBorders.prototype, \"all\", {\n        /**\n         * sets the `All`.\n         * @private\n         */\n        set: function (value) {\n            this.leftPen = this.rightPen = this.topPen = this.bottomPen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBorders.prototype, \"isAll\", {\n        /**\n         * Gets a value indicating whether this instance `is all`.\n         * @private\n         */\n        get: function () {\n            return ((this.leftPen === this.rightPen) && (this.leftPen === this.topPen) && (this.leftPen === this.bottomPen));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBorders, \"default\", {\n        /**\n         * Gets the `default`.\n         * @private\n         */\n        get: function () {\n            return new PdfBorders();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfBorders;\n}());\nexport { PdfBorders };\nvar PdfPaddings = /** @class */ (function () {\n    function PdfPaddings(left, right, top, bottom) {\n        if (typeof left === 'undefined') {\n            //5.76 and 0 are taken from ms-word default table margins.\n            this.leftPad = this.rightPad = 5.76;\n            //0.5 is set for top and bottom by default.\n            this.bottom = this.topPad = 0.5;\n        }\n        else {\n            this.leftPad = left;\n            this.rightPad = right;\n            this.topPad = top;\n            this.bottomPad = bottom;\n        }\n    }\n    Object.defineProperty(PdfPaddings.prototype, \"left\", {\n        // Properties\n        /**\n         * Gets or sets the `left` value of the edge\n         * @private\n         */\n        get: function () {\n            return this.leftPad;\n        },\n        set: function (value) {\n            this.leftPad = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPaddings.prototype, \"right\", {\n        /**\n         * Gets or sets the `right` value of the edge.\n         * @private\n         */\n        get: function () {\n            return this.rightPad;\n        },\n        set: function (value) {\n            this.rightPad = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPaddings.prototype, \"top\", {\n        /**\n         * Gets or sets the `top` value of the edge\n         * @private\n         */\n        get: function () {\n            return this.topPad;\n        },\n        set: function (value) {\n            this.topPad = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPaddings.prototype, \"bottom\", {\n        /**\n         * Gets or sets the `bottom` value of the edge.\n         * @private\n         */\n        get: function () {\n            return this.bottomPad;\n        },\n        set: function (value) {\n            this.bottomPad = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPaddings.prototype, \"all\", {\n        /**\n         * Sets value to all sides `left,right,top and bottom`.s\n         * @private\n         */\n        set: function (value) {\n            this.leftPad = this.rightPad = this.topPad = this.bottomPad = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfPaddings;\n}());\nexport { PdfPaddings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfBorders, PdfPaddings } from './pdf-borders';\nimport { PdfBorderOverlapStyle } from './../../tables/light-tables/enum';\n/**\n * Base class for the `grid style`,\n */\nvar PdfGridStyleBase = /** @class */ (function () {\n    function PdfGridStyleBase() {\n    }\n    Object.defineProperty(PdfGridStyleBase.prototype, \"backgroundBrush\", {\n        // Properties\n        /**\n         * Gets or sets the `background brush`.\n         * @private\n         */\n        get: function () {\n            return this.gridBackgroundBrush;\n        },\n        set: function (value) {\n            this.gridBackgroundBrush = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridStyleBase.prototype, \"textBrush\", {\n        /**\n         * Gets or sets the `text brush`.\n         * @private\n         */\n        get: function () {\n            return this.gridTextBrush;\n        },\n        set: function (value) {\n            this.gridTextBrush = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridStyleBase.prototype, \"textPen\", {\n        /**\n         * Gets or sets the `text pen`.\n         * @private\n         */\n        get: function () {\n            return this.gridTextPen;\n        },\n        set: function (value) {\n            this.gridTextPen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridStyleBase.prototype, \"font\", {\n        /**\n         * Gets or sets the `font`.\n         * @private\n         */\n        get: function () {\n            return this.gridFont;\n        },\n        set: function (value) {\n            this.gridFont = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfGridStyleBase;\n}());\nexport { PdfGridStyleBase };\n/**\n * `PdfGridStyle` class provides customization of the appearance for the 'PdfGrid'.\n */\nvar PdfGridStyle = /** @class */ (function (_super) {\n    __extends(PdfGridStyle, _super);\n    //constructor\n    /**\n     * Initialize a new instance for `PdfGridStyle` class.\n     * @private\n     */\n    function PdfGridStyle() {\n        var _this = _super.call(this) || this;\n        _this.gridBorderOverlapStyle = PdfBorderOverlapStyle.Overlap;\n        _this.bAllowHorizontalOverflow = false;\n        _this.gridHorizontalOverflowType = PdfHorizontalOverflowType.LastPage;\n        return _this;\n    }\n    Object.defineProperty(PdfGridStyle.prototype, \"cellSpacing\", {\n        //Properties\n        /**\n         * Gets or sets the `cell spacing` of the 'PdfGrid'.\n         * @private\n         */\n        get: function () {\n            if (typeof this.gridCellSpacing === 'undefined') {\n                this.gridCellSpacing = 0;\n            }\n            return this.gridCellSpacing;\n        },\n        set: function (value) {\n            this.gridCellSpacing = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridStyle.prototype, \"horizontalOverflowType\", {\n        /**\n         * Gets or sets the type of the `horizontal overflow` of the 'PdfGrid'.\n         * @private\n         */\n        get: function () {\n            return this.gridHorizontalOverflowType;\n        },\n        set: function (value) {\n            this.gridHorizontalOverflowType = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridStyle.prototype, \"allowHorizontalOverflow\", {\n        /**\n         * Gets or sets a value indicating whether to `allow horizontal overflow`.\n         * @private\n         */\n        get: function () {\n            return this.bAllowHorizontalOverflow;\n        },\n        set: function (value) {\n            this.bAllowHorizontalOverflow = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridStyle.prototype, \"cellPadding\", {\n        /**\n         * Gets or sets the `cell padding`.\n         * @private\n         */\n        get: function () {\n            if (typeof this.gridCellPadding === 'undefined') {\n                this.gridCellPadding = new PdfPaddings();\n            }\n            return this.gridCellPadding;\n        },\n        set: function (value) {\n            if (typeof this.gridCellPadding === 'undefined') {\n                this.gridCellPadding = new PdfPaddings();\n                this.gridCellPadding = value;\n            }\n            else {\n                this.gridCellPadding = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridStyle.prototype, \"borderOverlapStyle\", {\n        /**\n         * Gets or sets the `border overlap style` of the 'PdfGrid'.\n         * @private\n         */\n        get: function () {\n            return this.gridBorderOverlapStyle;\n        },\n        set: function (value) {\n            this.gridBorderOverlapStyle = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfGridStyle;\n}(PdfGridStyleBase));\nexport { PdfGridStyle };\n/**\n * `PdfGridCellStyle` class provides customization of the appearance for the 'PdfGridCell'.\n */\nvar PdfGridCellStyle = /** @class */ (function (_super) {\n    __extends(PdfGridCellStyle, _super);\n    /**\n     * Initializes a new instance of the `PdfGridCellStyle` class.\n     * @private\n     */\n    function PdfGridCellStyle() {\n        var _this = _super.call(this) || this;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.gridCellBorders = PdfBorders.default;\n        return _this;\n    }\n    Object.defineProperty(PdfGridCellStyle.prototype, \"stringFormat\", {\n        //Properties\n        /**\n         * Gets the `string format` of the 'PdfGridCell'.\n         * @private\n         */\n        get: function () {\n            return this.format;\n        },\n        set: function (value) {\n            this.format = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCellStyle.prototype, \"borders\", {\n        /**\n         * Gets or sets the `border` of the 'PdfGridCell'.\n         * @private\n         */\n        get: function () {\n            return this.gridCellBorders;\n        },\n        set: function (value) {\n            this.gridCellBorders = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCellStyle.prototype, \"cellPadding\", {\n        /**\n         * Gets or sets the `cell padding`.\n         * @private\n         */\n        get: function () {\n            return this.gridCellPadding;\n        },\n        set: function (value) {\n            if (this.gridCellPadding == null || typeof this.gridCellPadding === 'undefined') {\n                this.gridCellPadding = new PdfPaddings();\n            }\n            this.gridCellPadding = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfGridCellStyle;\n}(PdfGridStyleBase));\nexport { PdfGridCellStyle };\n/**\n * `PdfGridRowStyle` class provides customization of the appearance for the `PdfGridRow`.\n */\nvar PdfGridRowStyle = /** @class */ (function () {\n    // Constructor\n    /**\n     * Initializes a new instance of the `PdfGridRowStyle` class.\n     * @private\n     */\n    function PdfGridRowStyle() {\n        //\n    }\n    Object.defineProperty(PdfGridRowStyle.prototype, \"backgroundBrush\", {\n        /**\n         * Determine the value of the border is changed or not.\n         * @private\n         */\n        // Properties\n        /**\n         * Gets or sets the `background brush`.\n         * @private\n         */\n        get: function () {\n            return this.gridRowBackgroundBrush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfGridRowStyle.prototype.setBackgroundBrush = function (value) {\n        this.gridRowBackgroundBrush = value;\n        if (typeof this.parent !== 'undefined') {\n            for (var i = 0; i < this.parent.cells.count; i++) {\n                this.parent.cells.getCell(i).style.backgroundBrush = value;\n            }\n        }\n    };\n    Object.defineProperty(PdfGridRowStyle.prototype, \"textBrush\", {\n        /**\n         * Gets or sets the `text brush`.\n         * @private\n         */\n        get: function () {\n            return this.gridRowTextBrush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfGridRowStyle.prototype.setTextBrush = function (value) {\n        this.gridRowTextBrush = value;\n        if (typeof this.parent !== 'undefined') {\n            for (var i = 0; i < this.parent.cells.count; i++) {\n                this.parent.cells.getCell(i).style.textBrush = value;\n            }\n        }\n    };\n    Object.defineProperty(PdfGridRowStyle.prototype, \"textPen\", {\n        /**\n         * Gets or sets the `text pen`.\n         * @private\n         */\n        get: function () {\n            return this.gridRowTextPen;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfGridRowStyle.prototype.setTextPen = function (value) {\n        this.gridRowTextPen = value;\n        if (typeof this.parent !== 'undefined') {\n            for (var i = 0; i < this.parent.cells.count; i++) {\n                this.parent.cells.getCell(i).style.textPen = value;\n            }\n        }\n    };\n    Object.defineProperty(PdfGridRowStyle.prototype, \"font\", {\n        /**\n         * Gets or sets the `font`.\n         * @private\n         */\n        get: function () {\n            return this.gridRowFont;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfGridRowStyle.prototype.setFont = function (value) {\n        this.gridRowFont = value;\n        if (typeof this.parent !== 'undefined') {\n            for (var i = 0; i < this.parent.cells.count; i++) {\n                this.parent.cells.getCell(i).style.font = value;\n            }\n        }\n    };\n    Object.defineProperty(PdfGridRowStyle.prototype, \"border\", {\n        /**\n         * Gets or sets the `border` of the current row.\n         * @private\n         */\n        get: function () {\n            if (typeof this.gridRowBorder === 'undefined') {\n                this.setBorder(new PdfBorders());\n            }\n            return this.gridRowBorder;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfGridRowStyle.prototype.setBorder = function (value) {\n        this.gridRowBorder = value;\n        if (typeof this.parent !== 'undefined') {\n            for (var i = 0; i < this.parent.cells.count; i++) {\n                this.parent.cells.getCell(i).style.borders = value;\n            }\n        }\n    };\n    /**\n     * sets the `parent row` of the current object.\n     * @private\n     */\n    PdfGridRowStyle.prototype.setParent = function (parent) {\n        this.parent = parent;\n    };\n    return PdfGridRowStyle;\n}());\nexport { PdfGridRowStyle };\n/**\n * public Enum for `PdfHorizontalOverflowType`.\n * @private\n */\nexport var PdfHorizontalOverflowType;\n(function (PdfHorizontalOverflowType) {\n    /**\n     * Specifies the type of `NextPage`.\n     * @private\n     */\n    PdfHorizontalOverflowType[PdfHorizontalOverflowType[\"NextPage\"] = 0] = \"NextPage\";\n    /**\n     * Specifies the type of `LastPage`.\n     * @private\n     */\n    PdfHorizontalOverflowType[PdfHorizontalOverflowType[\"LastPage\"] = 1] = \"LastPage\";\n})(PdfHorizontalOverflowType || (PdfHorizontalOverflowType = {}));\n","import { PdfGridCellStyle } from './styles/style';\nimport { PdfStringLayouter } from './../../graphics/fonts/string-layouter';\nimport { PdfDocument } from './../../document/pdf-document';\nimport { PdfStringFormat } from './../../graphics/fonts/pdf-string-format';\nimport { RectangleF, PointF, SizeF } from './../../drawing/pdf-drawing';\nimport { PdfDashStyle, PdfLineCap } from './../../graphics/enum';\nimport { PdfBorderOverlapStyle } from './../tables/light-tables/enum';\nimport { PdfSolidBrush } from './../../graphics/brushes/pdf-solid-brush';\nimport { PdfColor } from './../../graphics/pdf-color';\nimport { PdfImage } from './../../graphics/images/pdf-image';\nimport { PdfBitmap } from './../../graphics/images/pdf-bitmap';\nimport { PdfTextWebLink } from './../../annotations/pdf-text-web-link';\n/**\n * `PdfGridCell` class represents the schema of a cell in a 'PdfGrid'.\n */\nvar PdfGridCell = /** @class */ (function () {\n    function PdfGridCell(row) {\n        /**\n         * `Width` of the cell.\n         * @default 0\n         * @private\n         */\n        this.cellWidth = 0;\n        /**\n         * `Height` of the cell.\n         * @default 0\n         * @private\n         */\n        this.cellHeight = 0;\n        /**\n         * Specifies weather the `cell is drawn`.\n         * @default true\n         * @private\n         */\n        this.finsh = true;\n        /**\n         * The `remaining height` of row span.\n         * @default 0\n         * @private\n         */\n        this.rowSpanRemainingHeight = 0;\n        if (typeof row === 'undefined') {\n            this.gridRowSpan = 1;\n            this.colSpan = 1;\n        }\n        else {\n            this.constructor();\n            this.gridRow = row;\n        }\n    }\n    Object.defineProperty(PdfGridCell.prototype, \"isCellMergeContinue\", {\n        //Properties\n        get: function () {\n            return this.internalIsCellMergeContinue;\n        },\n        set: function (value) {\n            this.internalIsCellMergeContinue = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"isRowMergeContinue\", {\n        get: function () {\n            return this.internalIsRowMergeContinue;\n        },\n        set: function (value) {\n            this.internalIsRowMergeContinue = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"isCellMergeStart\", {\n        get: function () {\n            return this.internalIsCellMergeStart;\n        },\n        set: function (value) {\n            this.internalIsCellMergeStart = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"isRowMergeStart\", {\n        get: function () {\n            return this.internalIsRowMergeStart;\n        },\n        set: function (value) {\n            this.internalIsRowMergeStart = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"remainingString\", {\n        /**\n         * Gets or sets the `remaining string` after the row split between pages.\n         * @private\n         */\n        get: function () {\n            return this.remaining;\n        },\n        set: function (value) {\n            this.remaining = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"stringFormat\", {\n        /**\n         * Gets or sets the `string format`.\n         * @private\n         */\n        get: function () {\n            if (this.format == null) {\n                this.format = new PdfStringFormat();\n            }\n            return this.format;\n        },\n        set: function (value) {\n            this.format = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"row\", {\n        /**\n         * Gets or sets the parent `row`.\n         * @private\n         */\n        get: function () {\n            return this.gridRow;\n        },\n        set: function (value) {\n            this.gridRow = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"value\", {\n        /**\n         * Gets or sets the `value` of the cell.\n         * @private\n         */\n        get: function () {\n            return this.objectValue;\n        },\n        set: function (value) {\n            this.objectValue = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"rowSpan\", {\n        /**\n         * Gets or sets a value that indicates the total number of rows that cell `spans` within a PdfGrid.\n         * @private\n         */\n        get: function () {\n            return this.gridRowSpan;\n        },\n        set: function (value) {\n            if (value < 1) {\n                throw new Error('ArgumentException : Invalid span specified, must be greater than or equal to 1');\n            }\n            else {\n                this.gridRowSpan = value;\n                this.row.rowSpanExists = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"style\", {\n        /**\n         * Gets or sets the cell `style`.\n         * @private\n         */\n        get: function () {\n            if (this.cellStyle == null) {\n                this.cellStyle = new PdfGridCellStyle();\n            }\n            return this.cellStyle;\n        },\n        set: function (value) {\n            this.cellStyle = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"height\", {\n        /**\n         * Gets the `height` of the PdfGrid cell.[Read-Only].\n         * @private\n         */\n        get: function () {\n            if (this.cellHeight === 0) {\n                this.cellHeight = this.measureHeight();\n            }\n            return this.cellHeight;\n        },\n        set: function (value) {\n            this.cellHeight = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"columnSpan\", {\n        /**\n         * Gets or sets a value that indicates the total number of columns that cell `spans` within a PdfGrid.\n         * @private\n         */\n        get: function () {\n            return this.colSpan;\n        },\n        set: function (value) {\n            if (value < 1) {\n                throw Error('Invalid span specified, must be greater than or equal to 1');\n            }\n            else {\n                this.colSpan = value;\n                this.row.columnSpanExists = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"width\", {\n        /**\n         * Gets the `width` of the PdfGrid cell.[Read-Only].\n         * @private\n         */\n        get: function () {\n            if (this.cellWidth === 0 || this.row.grid.isComplete) {\n                this.cellWidth = this.measureWidth();\n            }\n            return this.cellWidth;\n        },\n        set: function (value) {\n            this.cellWidth = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Implementation\n    /**\n     * `Calculates the width`.\n     * @private\n     */\n    PdfGridCell.prototype.measureWidth = function () {\n        // .. Calculate the cell text width.\n        // .....Add border widths, cell spacings and paddings to the width.\n        var width = 0;\n        var layouter = new PdfStringLayouter();\n        if (typeof this.objectValue === 'string') {\n            /* tslint:disable */\n            var slr = layouter.layout(this.objectValue, this.getTextFont(), this.stringFormat, new SizeF(0, 0), false, new SizeF(0, 0));\n            width += slr.actualSize.width;\n            width += (this.style.borders.left.width + this.style.borders.right.width) * 2;\n        }\n        else if (this.objectValue instanceof PdfImage || this.objectValue instanceof PdfBitmap) {\n            width += this.objectValue.width;\n        }\n        else if (this.objectValue instanceof PdfTextWebLink) {\n            var webLink = this.objectValue;\n            var result = layouter.layout(webLink.text, webLink.font, webLink.stringFormat, new SizeF(0, 0), false, new SizeF(0, 0));\n            /* tslint:enable */\n            width += result.actualSize.width;\n            width += (this.style.borders.left.width + this.style.borders.right.width) * 2;\n        }\n        width += (this.row.grid.style.cellPadding.left + this.row.grid.style.cellPadding.right);\n        width += this.row.grid.style.cellSpacing;\n        return width;\n    };\n    /**\n     * Draw the `cell background`.\n     * @private\n     */\n    PdfGridCell.prototype.drawCellBackground = function (graphics, bounds) {\n        var backgroundBrush = this.getBackgroundBrush();\n        if (backgroundBrush != null) {\n            graphics.drawRectangle(backgroundBrush, bounds.x, bounds.y, bounds.width, bounds.height);\n        }\n    };\n    /**\n     * `Adjusts the text layout area`.\n     * @private\n     */\n    /* tslint:disable */\n    PdfGridCell.prototype.adjustContentLayoutArea = function (bounds) {\n        //Add Padding value to its Cell Bounds\n        var returnBounds = new RectangleF(bounds.x, bounds.y, bounds.width, bounds.height);\n        if (typeof this.style.cellPadding === 'undefined' || this.style.cellPadding == null) {\n            returnBounds.x += this.gridRow.grid.style.cellPadding.left + this.cellStyle.borders.left.width;\n            returnBounds.y += this.gridRow.grid.style.cellPadding.top + this.cellStyle.borders.top.width;\n            returnBounds.width -= (this.gridRow.grid.style.cellPadding.right + this.gridRow.grid.style.cellPadding.left);\n            returnBounds.width -= (this.cellStyle.borders.left.width + this.cellStyle.borders.right.width);\n            returnBounds.height -= (this.gridRow.grid.style.cellPadding.bottom + this.gridRow.grid.style.cellPadding.top);\n            returnBounds.height -= (this.cellStyle.borders.top.width + this.cellStyle.borders.bottom.width);\n            if (this.rowSpan === 1) {\n                returnBounds.width -= (this.style.borders.left.width);\n            }\n        }\n        else {\n            returnBounds.x += this.style.cellPadding.left + this.cellStyle.borders.left.width;\n            returnBounds.y += this.style.cellPadding.top + this.cellStyle.borders.top.width;\n            returnBounds.width -= (this.style.cellPadding.right + this.style.cellPadding.left);\n            returnBounds.width -= (this.cellStyle.borders.left.width + this.cellStyle.borders.right.width);\n            returnBounds.height -= (this.style.cellPadding.bottom + this.style.cellPadding.top);\n            returnBounds.height -= (this.cellStyle.borders.top.width + this.cellStyle.borders.bottom.width);\n            if (this.rowSpan === 1) {\n                returnBounds.width -= (this.style.borders.left.width);\n            }\n        }\n        return returnBounds;\n    };\n    /**\n     * `Draws` the specified graphics.\n     * @private\n     */\n    PdfGridCell.prototype.draw = function (graphics, bounds, cancelSubsequentSpans) {\n        var isrowbreak = false;\n        var result = null;\n        if (this.internalIsCellMergeContinue || this.internalIsRowMergeContinue) {\n            if (this.internalIsCellMergeContinue && this.row.grid.style.allowHorizontalOverflow) {\n                if ((this.row.rowOverflowIndex > 0 && (this.row.cells.indexOf(this) != this.row.rowOverflowIndex + 1)) || (this.row.rowOverflowIndex == 0 && this.internalIsCellMergeContinue)) {\n                    return result;\n                }\n            }\n            else {\n                return result;\n            }\n        }\n        //Adjust bounds with Row and Column Spacing\n        bounds = this.adjustOuterLayoutArea(bounds, graphics);\n        var textPen = this.getTextPen();\n        var textBrush = this.getTextBrush();\n        if (typeof textPen === 'undefined' && typeof textBrush === 'undefined') {\n            textBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n        }\n        var font = this.getTextFont();\n        var strFormat = this.getStringFormat();\n        var innerLayoutArea = this.adjustContentLayoutArea(bounds);\n        this.drawCellBackground(graphics, bounds);\n        if (typeof this.objectValue === 'string' || typeof this.remaining === 'string') {\n            var temp = void 0;\n            temp = this.remaining === '' ? this.remaining : this.objectValue;\n            graphics.drawString(temp, font, textPen, textBrush, innerLayoutArea.x, innerLayoutArea.y, innerLayoutArea.width, innerLayoutArea.height, strFormat);\n            result = graphics.stringLayoutResult;\n        }\n        else if (this.objectValue instanceof PdfImage || this.objectValue instanceof PdfBitmap) {\n            var imageBounds = void 0;\n            if (this.objectValue.width <= innerLayoutArea.width) {\n                imageBounds = new RectangleF(innerLayoutArea.x, innerLayoutArea.y, this.objectValue.width, innerLayoutArea.height);\n            }\n            else {\n                imageBounds = innerLayoutArea;\n            }\n            graphics.drawImage(this.objectValue, imageBounds.x, imageBounds.y, imageBounds.width, imageBounds.height);\n        }\n        else if (this.objectValue instanceof PdfTextWebLink) {\n            this.objectValue.draw(graphics.currentPage, innerLayoutArea);\n        }\n        if (this.style.borders != null) {\n            this.drawCellBorders(graphics, bounds);\n        }\n        return result;\n    };\n    /* tslint:enable */\n    /**\n     * Draws the `cell border` constructed by drawing lines.\n     * @private\n     */\n    PdfGridCell.prototype.drawCellBorders = function (graphics, bounds) {\n        if (this.row.grid.style.borderOverlapStyle === PdfBorderOverlapStyle.Inside) {\n            bounds.x += this.style.borders.left.width;\n            bounds.y += this.style.borders.top.width;\n            bounds.width -= this.style.borders.right.width;\n            bounds.height -= this.style.borders.bottom.width;\n        }\n        var p1 = new PointF(bounds.x, bounds.y + bounds.height);\n        var p2 = new PointF(bounds.x, bounds.y);\n        var pen = this.cellStyle.borders.left;\n        if (this.cellStyle.borders.left.dashStyle === PdfDashStyle.Solid) {\n            pen.lineCap = PdfLineCap.Square;\n        }\n        // SetTransparency(ref graphics, pen);\n        graphics.drawLine(pen, p1, p2);\n        p1 = new PointF(bounds.x + bounds.width, bounds.y);\n        p2 = new PointF(bounds.x + bounds.width, bounds.y + bounds.height);\n        pen = this.cellStyle.borders.right;\n        if ((bounds.x + bounds.width) > (graphics.clientSize.width - (pen.width / 2))) {\n            p1 = new PointF(graphics.clientSize.width - (pen.width / 2), bounds.y);\n            p2 = new PointF(graphics.clientSize.width - (pen.width / 2), bounds.y + bounds.height);\n        }\n        if (this.cellStyle.borders.right.dashStyle === PdfDashStyle.Solid) {\n            pen.lineCap = PdfLineCap.Square;\n        }\n        graphics.drawLine(pen, p1, p2);\n        p1 = new PointF(bounds.x, bounds.y);\n        p2 = new PointF(bounds.x + bounds.width, bounds.y);\n        pen = this.cellStyle.borders.top;\n        if (this.cellStyle.borders.top.dashStyle === PdfDashStyle.Solid) {\n            pen.lineCap = PdfLineCap.Square;\n        }\n        graphics.drawLine(pen, p1, p2);\n        p1 = new PointF(bounds.x + bounds.width, bounds.y + bounds.height);\n        p2 = new PointF(bounds.x, bounds.y + bounds.height);\n        pen = this.cellStyle.borders.bottom;\n        // if ((bounds.y + bounds.height) > (graphics.clientSize.height - (pen.width / 2))) {\n        //     p1 = new PointF((bounds.x + bounds.width), (graphics.clientSize.height - (pen.width / 2)));\n        //     p2 = new PointF(bounds.x, (graphics.clientSize.height - (pen.width / 2)));\n        // }\n        if (this.cellStyle.borders.bottom.dashStyle === PdfDashStyle.Solid) {\n            pen.lineCap = PdfLineCap.Square;\n        }\n        graphics.drawLine(pen, p1, p2);\n    };\n    /**\n     * `Adjusts the outer layout area`.\n     * @private\n     */\n    /* tslint:disable */\n    PdfGridCell.prototype.adjustOuterLayoutArea = function (bounds, g) {\n        var isHeader = false;\n        var cellSpacing = this.row.grid.style.cellSpacing;\n        if (cellSpacing > 0) {\n            bounds = new RectangleF(bounds.x + cellSpacing, bounds.y + cellSpacing, bounds.width - cellSpacing, bounds.height - cellSpacing);\n        }\n        var currentColIndex = this.row.cells.indexOf(this);\n        if (this.columnSpan > 1) {\n            var span = this.columnSpan;\n            var totalWidth = 0;\n            for (var i = currentColIndex; i < currentColIndex + span; i++) {\n                if (this.row.grid.style.allowHorizontalOverflow) {\n                    var width = void 0;\n                    var compWidth = this.row.grid.size.width < g.clientSize.width ? this.row.grid.size.width : g.clientSize.width;\n                    if (this.row.grid.size.width > g.clientSize.width) {\n                        width = bounds.x + totalWidth + this.row.grid.columns.getColumn(i).width;\n                    }\n                    else {\n                        width = totalWidth + this.row.grid.columns.getColumn(i).width;\n                    }\n                    if (width > compWidth) {\n                        break;\n                    }\n                }\n                totalWidth += this.row.grid.columns.getColumn(i).width;\n            }\n            totalWidth -= this.row.grid.style.cellSpacing;\n            bounds.width = totalWidth;\n        }\n        if (this.rowSpan > 1 || this.row.rowSpanExists) {\n            var span = this.rowSpan;\n            var currentRowIndex = this.row.grid.rows.rowCollection.indexOf(this.row);\n            if (currentRowIndex == -1) {\n                currentRowIndex = this.row.grid.headers.indexOf(this.row);\n                if (currentRowIndex != -1) {\n                    isHeader = true;\n                }\n            }\n            var totalHeight = 0;\n            var max = 0;\n            for (var i = currentRowIndex; i < currentRowIndex + span; i++) {\n                totalHeight += (isHeader ? this.row.grid.headers.getHeader(i).height : this.row.grid.rows.getRow(i).height);\n                var row = this.row.grid.rows.getRow(i);\n                var rowIndex = this.row.grid.rows.rowCollection.indexOf(row);\n            }\n            var cellIndex = this.row.cells.indexOf(this);\n            totalHeight -= this.row.grid.style.cellSpacing;\n            // if (this.row.cells.getCell(cellIndex).height > totalHeight && (!this.row.grid.rows.getRow((currentRowIndex + span) - 1).isRowHeightSet)) {\n            //     this.row.grid.rows.getRow((currentRowIndex + span) - 1).cells.getCell(cellIndex).rowSpanRemainingHeight = this.row.cells.getCell(cellIndex).height - totalHeight;\n            //     totalHeight = this.row.cells.getCell(cellIndex).height;\n            //     bounds.height = totalHeight;\n            // } else {\n            bounds.height = totalHeight;\n            // }\n            if (!this.row.rowMergeComplete) {\n                bounds.height = totalHeight;\n            }\n        }\n        return bounds;\n    };\n    /* tslint:enable */\n    /**\n     * Gets the `text font`.\n     * @private\n     */\n    PdfGridCell.prototype.getTextFont = function () {\n        if (typeof this.style.font !== 'undefined' && this.style.font != null) {\n            return this.style.font;\n        }\n        else if (typeof this.row.style.font !== 'undefined' && this.row.style.font != null) {\n            return this.row.style.font;\n        }\n        else if (typeof this.row.grid.style.font !== 'undefined' && this.row.grid.style.font != null) {\n            return this.row.grid.style.font;\n        }\n        else {\n            return PdfDocument.defaultFont;\n        }\n    };\n    /**\n     * Gets the `text brush`.\n     * @private\n     */\n    PdfGridCell.prototype.getTextBrush = function () {\n        if (typeof this.style.textBrush !== 'undefined' && this.style.textBrush != null) {\n            return this.style.textBrush;\n        }\n        else if (typeof this.row.style.textBrush !== 'undefined' && this.row.style.textBrush != null) {\n            return this.row.style.textBrush;\n        }\n        else {\n            return this.row.grid.style.textBrush;\n        }\n    };\n    /**\n     * Gets the `text pen`.\n     * @private\n     */\n    PdfGridCell.prototype.getTextPen = function () {\n        if (typeof this.style.textPen !== 'undefined' && this.style.textPen != null) {\n            return this.style.textPen;\n        }\n        else if (typeof this.row.style.textPen !== 'undefined' && this.row.style.textPen != null) {\n            return this.row.style.textPen;\n        }\n        else {\n            return this.row.grid.style.textPen;\n        }\n    };\n    /**\n     * Gets the `background brush`.\n     * @private\n     */\n    PdfGridCell.prototype.getBackgroundBrush = function () {\n        if (typeof this.style.backgroundBrush !== 'undefined' && this.style.backgroundBrush != null) {\n            return this.style.backgroundBrush;\n        }\n        else if (typeof this.row.style.backgroundBrush !== 'undefined' && this.row.style.backgroundBrush != null) {\n            return this.row.style.backgroundBrush;\n        }\n        else {\n            return this.row.grid.style.backgroundBrush;\n        }\n    };\n    /**\n     * Gets the current `StringFormat`.\n     * @private\n     */\n    PdfGridCell.prototype.getStringFormat = function () {\n        if (typeof this.style.stringFormat !== 'undefined' && this.style.stringFormat != null) {\n            return this.style.stringFormat;\n        }\n        else {\n            return this.stringFormat;\n        }\n    };\n    /**\n     * Calculates the `height`.\n     * @private\n     */\n    PdfGridCell.prototype.measureHeight = function () {\n        // .. Calculate the cell text height.\n        // .....Add border widths, cell spacings and paddings to the height.\n        var width = this.calculateWidth();\n        // //check whether the Current PdfGridCell has padding\n        if (this.style.cellPadding == null || typeof this.style.cellPadding === 'undefined') {\n            width -= (this.gridRow.grid.style.cellPadding.right + this.gridRow.grid.style.cellPadding.left);\n            width -= (this.style.borders.left.width + this.style.borders.right.width);\n        }\n        else {\n            width -= (this.style.cellPadding.right + this.style.cellPadding.left);\n            width -= (this.style.borders.left.width + this.style.borders.right.width);\n        }\n        var height = 0;\n        var layouter = new PdfStringLayouter();\n        if (typeof this.objectValue === 'string' || typeof this.remainingString === 'string') {\n            var currentValue = this.objectValue;\n            /* tslint:disable */\n            var slr = layouter.layout(currentValue, this.getTextFont(), this.stringFormat, new SizeF(width, 0), false, new SizeF(0, 0));\n            /* tslint:enable */\n            height += slr.actualSize.height;\n        }\n        else if (this.objectValue instanceof PdfImage || this.objectValue instanceof PdfBitmap) {\n            height += this.objectValue.height;\n        }\n        else if (this.objectValue instanceof PdfTextWebLink) {\n            var webLink = this.objectValue;\n            /* tslint:disable */\n            var slr = layouter.layout(webLink.text, webLink.font, webLink.stringFormat, new SizeF(width, 0), false, new SizeF(0, 0));\n            /* tslint:enable */\n            height += slr.actualSize.height;\n        }\n        height += (this.style.borders.top.width + this.style.borders.bottom.width) * 2;\n        //Add padding top and bottom value to height\n        if (this.style.cellPadding == null || typeof this.style.cellPadding === 'undefined') {\n            height += (this.row.grid.style.cellPadding.top + this.row.grid.style.cellPadding.bottom);\n        }\n        else {\n            height += (this.style.cellPadding.top + this.style.cellPadding.bottom);\n        }\n        height += this.row.grid.style.cellSpacing;\n        return height;\n    };\n    /**\n     * return the calculated `width` of the cell.\n     * @private\n     */\n    PdfGridCell.prototype.calculateWidth = function () {\n        var cellIndex = this.row.cells.indexOf(this);\n        var columnSpan = this.columnSpan;\n        var width = 0;\n        for (var i = 0; i < columnSpan; i++) {\n            width += this.row.grid.columns.getColumn(cellIndex + i).width;\n        }\n        return width;\n    };\n    return PdfGridCell;\n}());\nexport { PdfGridCell };\n/**\n * `PdfGridCellCollection` class provides access to an ordered,\n * strongly typed collection of 'PdfGridCell' objects.\n * @private\n */\nvar PdfGridCellCollection = /** @class */ (function () {\n    //Constructor\n    /**\n     * Initializes a new instance of the `PdfGridCellCollection` class with the row.\n     * @private\n     */\n    function PdfGridCellCollection(row) {\n        /**\n         * @hidden\n         * @private\n         */\n        this.cells = [];\n        this.gridRow = row;\n    }\n    //Properties\n    /**\n     * Gets the current `cell`.\n     * @private\n     */\n    PdfGridCellCollection.prototype.getCell = function (index) {\n        if (index < 0 || index >= this.count) {\n            throw new Error('IndexOutOfRangeException');\n        }\n        return this.cells[index];\n    };\n    Object.defineProperty(PdfGridCellCollection.prototype, \"count\", {\n        /**\n         * Gets the cells `count`.[Read-Only].\n         * @private\n         */\n        get: function () {\n            return this.cells.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfGridCellCollection.prototype.add = function (cell) {\n        if (typeof cell === 'undefined') {\n            var tempcell = new PdfGridCell();\n            this.add(tempcell);\n            return cell;\n        }\n        else {\n            cell.row = this.gridRow;\n            this.cells.push(cell);\n        }\n    };\n    /**\n     * Returns the `index of` a particular cell in the collection.\n     * @private\n     */\n    PdfGridCellCollection.prototype.indexOf = function (cell) {\n        return this.cells.indexOf(cell);\n    };\n    return PdfGridCellCollection;\n}());\nexport { PdfGridCellCollection };\n","import { PdfGridCell } from './pdf-grid-cell';\nimport { PdfStringFormat } from './../../graphics/fonts/pdf-string-format';\n/**\n * `PdfGridColumn` class represents the schema of a column in a 'PdfGrid'.\n */\nvar PdfGridColumn = /** @class */ (function () {\n    //Constructors\n    /**\n     * Initializes a new instance of the `PdfGridColumn` class with the parent grid.\n     * @private\n     */\n    function PdfGridColumn(grid) {\n        /**\n         * The `width` of the column.\n         * @default 0\n         * @private\n         */\n        this.columnWidth = 0;\n        this.grid = grid;\n    }\n    Object.defineProperty(PdfGridColumn.prototype, \"width\", {\n        /**\n         * Gets or sets the `width` of the 'PdfGridColumn'.\n         * @private\n         */\n        get: function () {\n            return this.columnWidth;\n        },\n        set: function (value) {\n            this.isCustomWidth = true;\n            this.columnWidth = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridColumn.prototype, \"format\", {\n        /**\n         * Gets or sets the information about the text `formatting`.\n         * @private\n         */\n        get: function () {\n            if (this.stringFormat == null) {\n                this.stringFormat = new PdfStringFormat(); //GetDefaultFormat();\n            }\n            return this.stringFormat;\n        },\n        set: function (value) {\n            this.stringFormat = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfGridColumn;\n}());\nexport { PdfGridColumn };\n/**\n * `PdfGridColumnCollection` class provides access to an ordered,\n * strongly typed collection of 'PdfGridColumn' objects.\n * @private\n */\nvar PdfGridColumnCollection = /** @class */ (function () {\n    //properties\n    //Constructors\n    /**\n     * Initializes a new instance of the `PdfGridColumnCollection` class with the parent grid.\n     * @private\n     */\n    function PdfGridColumnCollection(grid) {\n        /**\n         * @hidden\n         * @private\n         */\n        this.internalColumns = [];\n        /**\n         * @hidden\n         * @private\n         */\n        this.columnWidth = 0;\n        this.grid = grid;\n        this.internalColumns = [];\n    }\n    //Iplementation\n    /**\n     * `Add` a new column to the 'PdfGrid'.\n     * @private\n     */\n    PdfGridColumnCollection.prototype.add = function (count) {\n        // public add(column : PdfGridColumn) : void\n        // public add(arg : number|PdfGridColumn) : void {\n        // if (typeof arg === 'number') {\n        for (var i = 0; i < count; i++) {\n            this.internalColumns.push(new PdfGridColumn(this.grid));\n            for (var index = 0; index < this.grid.rows.count; index++) {\n                var row = this.grid.rows.getRow(index);\n                var cell = new PdfGridCell();\n                cell.value = '';\n                row.cells.add(cell);\n            }\n        }\n        // } else {\n        //     let column : PdfGridColumn = new PdfGridColumn(this.grid);\n        //     this.columns.push(column);\n        //     return column;\n        // }\n    };\n    Object.defineProperty(PdfGridColumnCollection.prototype, \"count\", {\n        /**\n         * Gets the `number of columns` in the 'PdfGrid'.[Read-Only].\n         * @private\n         */\n        get: function () {\n            return this.internalColumns.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridColumnCollection.prototype, \"width\", {\n        /**\n         * Gets the `widths`.\n         * @private\n         */\n        get: function () {\n            if (this.columnWidth === 0) {\n                this.columnWidth = this.measureColumnsWidth();\n            }\n            if (this.grid.initialWidth !== 0 && this.columnWidth !== this.grid.initialWidth && !this.grid.style.allowHorizontalOverflow) {\n                this.columnWidth = this.grid.initialWidth;\n                this.grid.isPageWidth = true;\n            }\n            return this.columnWidth;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridColumnCollection.prototype, \"columns\", {\n        /**\n         * Gets the `array of PdfGridColumn`.[Read-Only]\n         * @private\n         */\n        get: function () {\n            return this.internalColumns;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the `PdfGridColumn` from the specified index.[Read-Only]\n     * @private\n     */\n    PdfGridColumnCollection.prototype.getColumn = function (index) {\n        if (index >= 0 && index <= this.columns.length) {\n            return this.columns[index];\n        }\n        else {\n            throw Error('can not get the column from the index: ' + index);\n        }\n    };\n    //Implementation\n    /**\n     * `Calculates the column widths`.\n     * @private\n     */\n    PdfGridColumnCollection.prototype.measureColumnsWidth = function () {\n        var totalWidth = 0;\n        // this.m_grid.measureColumnsWidth();\n        for (var i = 0, count = this.internalColumns.length; i < count; i++) {\n            totalWidth += this.internalColumns[i].width;\n        }\n        return totalWidth;\n    };\n    /**\n     * Gets the `widths of the columns`.\n     * @private\n     */\n    PdfGridColumnCollection.prototype.getDefaultWidths = function (totalWidth) {\n        var widths = [];\n        var summ = 0.0;\n        var subFactor = this.count;\n        for (var i = 0; i < this.count; i++) {\n            if (this.grid.isPageWidth && totalWidth >= 0 && !this.internalColumns[i].isCustomWidth) {\n                this.internalColumns[i].width = 0;\n            }\n            else {\n                widths[i] = this.internalColumns[i].width;\n                if (this.internalColumns[i].width > 0 && this.internalColumns[i].isCustomWidth) {\n                    totalWidth -= this.internalColumns[i].width;\n                    subFactor--;\n                }\n                else {\n                    widths[i] = 0;\n                }\n            }\n        }\n        for (var i = 0; i < this.count; i++) {\n            var width = totalWidth / subFactor;\n            if (widths[i] <= 0) {\n                widths[i] = width;\n            }\n        }\n        return widths;\n    };\n    return PdfGridColumnCollection;\n}());\nexport { PdfGridColumnCollection };\n","import { PdfGridCell, PdfGridCellCollection } from './pdf-grid-cell';\nimport { PdfGridRowStyle } from './styles/style';\n/**\n * `PdfGridRow` class provides customization of the settings for the particular row.\n */\nvar PdfGridRow = /** @class */ (function () {\n    //Constructor\n    /**\n     * Initializes a new instance of the `PdfGridRow` class with the parent grid.\n     * @private\n     */\n    function PdfGridRow(grid) {\n        /**\n         * Stores the index of the overflowing row.\n         * @private\n         */\n        this.gridRowOverflowIndex = 0;\n        /**\n         * Check whether the row height `is set explicitly`.\n         * @default false\n         * @private\n         */\n        this.isRowHeightSet = false;\n        /**\n         * Check weather the row merge `is completed` or not.\n         * @default true\n         * @private\n         */\n        this.isRowMergeComplete = true;\n        this.pdfGrid = grid;\n    }\n    Object.defineProperty(PdfGridRow.prototype, \"rowSpanExists\", {\n        //Properties\n        /**\n         * Gets or sets a value indicating [`row span exists`].\n         * @private\n         */\n        get: function () {\n            return this.bRowSpanExists;\n        },\n        set: function (value) {\n            this.bRowSpanExists = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"cells\", {\n        /**\n         * Gets the `cells` from the selected row.[Read-Only].\n         * @private\n         */\n        get: function () {\n            if (this.gridCells == null) {\n                this.gridCells = new PdfGridCellCollection(this);\n            }\n            return this.gridCells;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"grid\", {\n        /**\n         * Gets or sets the parent `grid`.\n         * @private\n         */\n        get: function () {\n            return this.pdfGrid;\n        },\n        set: function (value) {\n            this.pdfGrid = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"style\", {\n        /**\n         * Gets or sets the row `style`.\n         * @private\n         */\n        get: function () {\n            if (typeof this.rowStyle === 'undefined') {\n                this.rowStyle = new PdfGridRowStyle();\n                this.rowStyle.setParent(this);\n            }\n            return this.rowStyle;\n        },\n        set: function (value) {\n            this.rowStyle = value;\n            for (var i = 0; i < this.cells.count; i++) {\n                this.cells.getCell(i).style.borders = value.border;\n                if (typeof value.font !== 'undefined') {\n                    this.cells.getCell(i).style.font = value.font;\n                }\n                if (typeof value.backgroundBrush !== 'undefined') {\n                    this.cells.getCell(i).style.backgroundBrush = value.backgroundBrush;\n                }\n                if (typeof value.textBrush !== 'undefined') {\n                    this.cells.getCell(i).style.textBrush = value.textBrush;\n                }\n                if (typeof value.textPen !== 'undefined') {\n                    this.cells.getCell(i).style.textPen = value.textPen;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"rowBreakHeight\", {\n        /**\n         * `Height` of the row yet to be drawn after split.\n         * @private\n         */\n        get: function () {\n            if (typeof this.gridRowBreakHeight === 'undefined') {\n                this.gridRowBreakHeight = 0;\n            }\n            return this.gridRowBreakHeight;\n        },\n        set: function (value) {\n            this.gridRowBreakHeight = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"rowOverflowIndex\", {\n        get: function () {\n            return this.gridRowOverflowIndex;\n        },\n        set: function (value) {\n            this.gridRowOverflowIndex = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"height\", {\n        /**\n         * Gets or sets the `height` of the row.\n         * @private\n         */\n        get: function () {\n            if (!this.isRowHeightSet) {\n                this.rowHeight = this.measureHeight();\n            }\n            return this.rowHeight;\n        },\n        set: function (value) {\n            this.rowHeight = value;\n            this.isRowHeightSet = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"columnSpanExists\", {\n        /**\n         * Gets or sets a value indicating [`column span exists`].\n         * @private\n         */\n        get: function () {\n            return this.bColumnSpanExists;\n        },\n        set: function (value) {\n            this.bColumnSpanExists = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"rowMergeComplete\", {\n        /**\n         * Check whether the Row `has row span or row merge continue`.\n         * @private\n         */\n        get: function () {\n            return this.isRowMergeComplete;\n        },\n        set: function (value) {\n            this.isRowMergeComplete = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"rowIndex\", {\n        /**\n         * Returns `index` of the row.\n         * @private\n         */\n        get: function () {\n            return this.grid.rows.rowCollection.indexOf(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Implementation\n    /**\n     * `Calculates the height`.\n     * @private\n     */\n    PdfGridRow.prototype.measureHeight = function () {\n        var rowSpanRemainingHeight = 0;\n        var rowHeight;\n        var maxHeight = 0;\n        // if(this.cells.getCell(0).RowSpan > 1) {\n        //     rowHeight=0;\n        // } else {\n        rowHeight = this.cells.getCell(0).height;\n        // }\n        for (var i = 0; i < this.cells.count; i++) {\n            var cell = this.cells.getCell(i);\n            //get the maximum rowspan remaining height.\n            if (cell.rowSpanRemainingHeight > rowSpanRemainingHeight) {\n                rowSpanRemainingHeight = cell.rowSpanRemainingHeight;\n            }\n            //skip the cell if row spanned.\n            // if (cell.IsRowMergeContinue)\n            //     continue; \n            // if (!cell.IsRowMergeContinue)\n            this.rowMergeComplete = false;\n            if (cell.rowSpan > 1) {\n                if (maxHeight < cell.height) {\n                    maxHeight = cell.height;\n                }\n                continue;\n            }\n            rowHeight = Math.max(rowHeight, cell.height);\n        }\n        if (rowHeight === 0) {\n            rowHeight = maxHeight;\n        }\n        else if (rowSpanRemainingHeight > 0) {\n            rowHeight += rowSpanRemainingHeight;\n        }\n        return rowHeight;\n    };\n    return PdfGridRow;\n}());\nexport { PdfGridRow };\n/**\n * `PdfGridRowCollection` class provides access to an ordered, strongly typed collection of 'PdfGridRow' objects.\n * @private\n */\nvar PdfGridRowCollection = /** @class */ (function () {\n    // Constructor\n    /**\n     * Initializes a new instance of the `PdfGridRowCollection` class with the parent grid.\n     * @private\n     */\n    function PdfGridRowCollection(grid) {\n        this.rows = [];\n        this.grid = grid;\n    }\n    Object.defineProperty(PdfGridRowCollection.prototype, \"count\", {\n        //Properties\n        /**\n         * Gets the number of header in the `PdfGrid`.[Read-Only].\n         * @private\n         */\n        get: function () {\n            return this.rows.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRowCollection.prototype, \"rowCollection\", {\n        //Implementation\n        /**\n         * Return the row collection of the `grid`.\n         * @private\n         */\n        get: function () {\n            return this.rows;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfGridRowCollection.prototype.addRow = function (arg) {\n        if (typeof arg === 'undefined') {\n            var temprow = new PdfGridRow(this.grid);\n            this.addRow(temprow);\n            return temprow;\n        }\n        else {\n            arg.style.setBackgroundBrush(this.grid.style.backgroundBrush);\n            arg.style.setFont(this.grid.style.font);\n            arg.style.setTextBrush(this.grid.style.textBrush);\n            arg.style.setTextPen(this.grid.style.textPen);\n            if (arg.cells.count === 0) {\n                for (var i = 0; i < this.grid.columns.count; i++) {\n                    arg.cells.add(new PdfGridCell());\n                }\n            }\n            this.rows.push(arg);\n        }\n    };\n    /**\n     * Return the row by index.\n     * @private\n     */\n    PdfGridRowCollection.prototype.getRow = function (index) {\n        return this.rows[index];\n    };\n    return PdfGridRowCollection;\n}());\nexport { PdfGridRowCollection };\n/**\n * `PdfGridHeaderCollection` class provides customization of the settings for the header.\n * @private\n */\nvar PdfGridHeaderCollection = /** @class */ (function () {\n    //constructor\n    /**\n     * Initializes a new instance of the `PdfGridHeaderCollection` class with the parent grid.\n     * @private\n     */\n    function PdfGridHeaderCollection(grid) {\n        /**\n         * The array to store the `rows` of the grid header.\n         * @private\n         */\n        this.rows = [];\n        this.grid = grid;\n        this.rows = [];\n    }\n    //Properties\n    /**\n     * Gets a 'PdfGridRow' object that represents the `header` row in a 'PdfGridHeaderCollection' control.[Read-Only].\n     * @private\n     */\n    PdfGridHeaderCollection.prototype.getHeader = function (index) {\n        // if (index < 0 || index >= Count) {\n        //     throw new IndexOutOfRangeException();\n        // }\n        return (this.rows[index]);\n    };\n    Object.defineProperty(PdfGridHeaderCollection.prototype, \"count\", {\n        /**\n         * Gets the `number of header` in the 'PdfGrid'.[Read-Only]\n         * @private\n         */\n        get: function () {\n            return this.rows.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfGridHeaderCollection.prototype.add = function (arg) {\n        if (typeof arg === 'number') {\n            var row = void 0;\n            for (var i = 0; i < arg; i++) {\n                row = new PdfGridRow(this.grid);\n                for (var j = 0; j < this.grid.columns.count; j++) {\n                    row.cells.add(new PdfGridCell());\n                }\n                this.rows.push(row);\n            }\n            return this.rows;\n        }\n        else {\n            this.rows.push(arg);\n        }\n    };\n    PdfGridHeaderCollection.prototype.indexOf = function (row) {\n        return this.rows.indexOf(row);\n    };\n    return PdfGridHeaderCollection;\n}());\nexport { PdfGridHeaderCollection };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfGrid.ts class for EJ2-PDF\n */\nimport { PdfGridColumnCollection } from './pdf-grid-column';\nimport { PdfGridRowCollection, PdfGridHeaderCollection } from './pdf-grid-row';\nimport { RectangleF, SizeF, PointF } from './../../drawing/pdf-drawing';\nimport { PdfLayoutElement } from './../../graphics/figures/layout-element';\nimport { PdfLayoutResult, PdfLayoutFormat } from './../../graphics/figures/base/element-layouter';\nimport { PdfBorders } from './styles/pdf-borders';\nimport { PdfGridStyle } from './styles/style';\nimport { PdfLayoutType } from './../../graphics/figures/enum';\nimport { PdfHorizontalOverflowType } from './styles/style';\nimport { TemporaryDictionary } from './../../collections/object-object-pair/dictionary';\nimport { PdfStringFormat } from './../../graphics/fonts/pdf-string-format';\n/**\n * `PdfGridLayoutFormat` class represents a flexible grid that consists of columns and rows.\n */\nvar PdfGridLayoutFormat = /** @class */ (function (_super) {\n    __extends(PdfGridLayoutFormat, _super);\n    /**\n     * Initializes a new instance of the `PdfGridLayoutFormat` class.\n     * @private\n     */\n    function PdfGridLayoutFormat(baseFormat) {\n        var _this = this;\n        if (typeof baseFormat === 'undefined') {\n            _this = _super.call(this) || this;\n        }\n        else {\n            _this = _super.call(this, baseFormat) || this;\n        }\n        return _this;\n    }\n    return PdfGridLayoutFormat;\n}(PdfLayoutFormat));\nexport { PdfGridLayoutFormat };\nvar PdfGrid = /** @class */ (function (_super) {\n    __extends(PdfGrid, _super);\n    //constructor\n    /**\n     * Initialize a new instance for `PdfGrid` class.\n     * @private\n     */\n    function PdfGrid() {\n        var _this = _super.call(this) || this;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.gridSize = new SizeF(0, 0);\n        /**\n         * @hidden\n         * @private\n         */\n        _this.isRearranged = false;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.pageBounds = new RectangleF();\n        /**\n         * @hidden\n         * @private\n         */\n        _this.listOfNavigatePages = [];\n        /**\n         * @hidden\n         * @private\n         */\n        _this.flag = true;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.columnRanges = [];\n        /**\n         * @hidden\n         * @private\n         */\n        _this.currentLocation = new PointF(0, 0);\n        /**\n         * @hidden\n         * @private\n         */\n        _this.breakRow = true;\n        return _this;\n    }\n    Object.defineProperty(PdfGrid.prototype, \"raiseBeginCellDraw\", {\n        //Properties\n        /**\n         * Gets a value indicating whether the `start cell layout event` should be raised.\n         * @private\n         */\n        get: function () {\n            return (typeof this.beginCellDraw !== 'undefined' && typeof this.beginCellDraw !== null);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"raiseEndCellDraw\", {\n        /**\n         * Gets a value indicating whether the `end cell layout event` should be raised.\n         * @private\n         */\n        get: function () {\n            return (typeof this.endCellDraw !== 'undefined' && typeof this.endCellDraw !== null);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"raiseBeginPageLayout\", {\n        /**\n         * Gets a value indicating whether the `start page layout event` should be raised.\n         * @private\n         */\n        get: function () {\n            return (typeof this.beginPageLayout !== 'undefined');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"raiseEndPageLayout\", {\n        /**\n         * Gets a value indicating whether the `ending page layout event` should be raised.\n         * @private\n         */\n        get: function () {\n            return (typeof this.endPageLayout !== 'undefined');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"repeatHeader\", {\n        /**\n         * Gets or sets a value indicating whether to `repeat header`.\n         * @private\n         */\n        get: function () {\n            if (this.bRepeatHeader == null || typeof this.bRepeatHeader === 'undefined') {\n                this.bRepeatHeader = false;\n            }\n            return this.bRepeatHeader;\n        },\n        set: function (value) {\n            this.bRepeatHeader = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"allowRowBreakAcrossPages\", {\n        /**\n         * Gets or sets a value indicating whether to split or cut rows that `overflow a page`.\n         * @private\n         */\n        get: function () {\n            return this.breakRow;\n        },\n        set: function (value) {\n            this.breakRow = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"columns\", {\n        /**\n         * Gets the `column` collection of the PdfGrid.[Read-Only]\n         * @private\n         */\n        get: function () {\n            if (this.gridColumns == null || typeof this.gridColumns === 'undefined') {\n                this.gridColumns = new PdfGridColumnCollection(this);\n            }\n            return this.gridColumns;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"rows\", {\n        /**\n         * Gets the `row` collection from the PdfGrid.[Read-Only]\n         * @private\n         */\n        get: function () {\n            if (this.gridRows == null) {\n                this.gridRows = new PdfGridRowCollection(this);\n            }\n            return this.gridRows;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"headers\", {\n        /**\n         * Gets the `headers` collection from the PdfGrid.[Read-Only]\n         * @private\n         */\n        get: function () {\n            if (this.gridHeaders == null || typeof this.gridHeaders === 'undefined') {\n                this.gridHeaders = new PdfGridHeaderCollection(this);\n            }\n            return this.gridHeaders;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"initialWidth\", {\n        /**\n         * Indicating `initial width` of the page.\n         * @private\n         */\n        get: function () {\n            return this.gridInitialWidth;\n        },\n        set: function (value) {\n            this.gridInitialWidth = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"style\", {\n        /**\n         * Gets or sets the `grid style`.\n         * @private\n         */\n        get: function () {\n            if (this.gridStyle == null) {\n                this.gridStyle = new PdfGridStyle();\n            }\n            return this.gridStyle;\n        },\n        set: function (value) {\n            if (this.gridStyle == null) {\n                this.gridStyle = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"isPageWidth\", {\n        /**\n         * Gets a value indicating whether the grid column width is considered to be `page width`.\n         * @private\n         */\n        get: function () {\n            return this.pageWidth;\n        },\n        set: function (value) {\n            this.pageWidth = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"isChildGrid\", {\n        /**\n         * Gets or set if grid `is nested grid`.\n         * @private\n         */\n        get: function () {\n            return this.childGrid;\n        },\n        set: function (value) {\n            this.childGrid = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"size\", {\n        /**\n         * Gets the `size`.\n         * @private\n         */\n        get: function () {\n            if (this.gridSize.width === 0 && this.gridSize.height === 0) {\n                this.gridSize = this.measure();\n                return this.gridSize;\n            }\n            else {\n                return this.gridSize;\n            }\n        },\n        set: function (value) {\n            this.gridSize = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfGrid.prototype.draw = function (arg1, arg2, arg3, arg4) {\n        if (arg2 instanceof PointF && typeof arg2.width === 'undefined' && typeof arg3 === 'undefined') {\n            return this.drawHelper(arg1, arg2.x, arg2.y);\n        }\n        else if (typeof arg2 === 'number' && typeof arg3 === 'number' && typeof arg4 === 'undefined') {\n            return this.drawHelper(arg1, arg2, arg3, null);\n        }\n        else if (arg2 instanceof RectangleF && typeof arg2.width !== 'undefined' && typeof arg3 === 'undefined') {\n            return this.drawHelper(arg1, arg2, null);\n        }\n        else if (arg2 instanceof PointF && typeof arg2.width === 'undefined' && arg3 instanceof PdfLayoutFormat) {\n            return this.drawHelper(arg1, arg2.x, arg2.y, arg3);\n        }\n        else if (typeof arg2 === 'number' && typeof arg3 === 'number' && (arg4 instanceof PdfLayoutFormat || arg4 == null)) {\n            var width = (arg1.graphics.clientSize.width - arg2);\n            var layoutRectangle = new RectangleF(arg2, arg3, width, 0);\n            return this.drawHelper(arg1, layoutRectangle, arg4);\n        }\n        else if (arg2 instanceof RectangleF && typeof arg2.width !== 'undefined' && typeof arg3 === 'boolean') {\n            return this.drawHelper(arg1, arg2, null);\n        }\n        else {\n            return this.drawHelper(arg1, arg2, arg3);\n        }\n    };\n    /**\n     * `measures` this instance.\n     * @private\n     */\n    PdfGrid.prototype.measure = function () {\n        var height = 0;\n        var width = this.columns.width;\n        for (var i = 0; i < this.headers.count; i++) {\n            var row = this.headers.getHeader(i);\n            height += row.height;\n        }\n        for (var i = 0; i < this.rows.count; i++) {\n            var row = this.rows.getRow(i);\n            height += row.height;\n        }\n        return new SizeF(width, height);\n    };\n    PdfGrid.prototype.layout = function (param, isGridLayouter) {\n        if (typeof isGridLayouter === 'undefined') {\n            this.setSpan();\n            this.layoutFormat = param.format;\n            this.gridLocation = param.bounds;\n            var result = this.layout(param, true);\n            return result;\n        }\n        else {\n            return this.layoutInternal(param);\n        }\n    };\n    PdfGrid.prototype.setSpan = function () {\n        var colSpan;\n        var rowSpan = 1;\n        var currentCellIndex;\n        var currentRowIndex = 0;\n        var rowCount = this.headers.count;\n        for (var i = 0; i < rowCount; i++) {\n            var row = this.headers.getHeader(i);\n            var colCount = row.cells.count;\n            for (var j = 0; j < colCount; j++) {\n                var cell = row.cells.getCell(j);\n                //Skip setting span map for already coverted rows/columns.\n                if (!cell.isCellMergeContinue && !cell.isRowMergeContinue && (cell.columnSpan > 1 || cell.rowSpan > 1)) {\n                    if (cell.columnSpan + j > row.cells.count) {\n                        throw new Error('Invalid span specified at row ' + j.toString() + ' column ' + i.toString());\n                    }\n                    if (cell.rowSpan + i > this.headers.count) {\n                        throw new Error('Invalid span specified at Header ' + j.toString() + ' column ' + i.toString());\n                    }\n                    // if (this.rows.count !== 0 && cell.rowSpan + i > this.rows.count) {\n                    //     throw new Error('Invalid span specified at row ' + j.toString() + ' column ' + i.toString());\n                    // }\n                    if (cell.columnSpan > 1 && cell.rowSpan > 1) {\n                        colSpan = cell.columnSpan;\n                        rowSpan = cell.rowSpan;\n                        currentCellIndex = j;\n                        currentRowIndex = i;\n                        cell.isCellMergeStart = true;\n                        cell.isRowMergeStart = true;\n                        //Set Column merges for first row\n                        while (colSpan > 1) {\n                            currentCellIndex++;\n                            row.cells.getCell(currentCellIndex).isCellMergeContinue = true;\n                            row.cells.getCell(currentCellIndex).isRowMergeContinue = true;\n                            row.cells.getCell(currentCellIndex).rowSpan = rowSpan;\n                            colSpan--;\n                        }\n                        currentCellIndex = j;\n                        colSpan = cell.columnSpan;\n                        //Set Row Merges and column merges foreach subsequent rows.\n                        while (rowSpan > 1) {\n                            currentRowIndex++;\n                            this.headers.getHeader(currentRowIndex).cells.getCell(j).isRowMergeContinue = true;\n                            this.headers.getHeader(currentRowIndex).cells.getCell(currentCellIndex).isRowMergeContinue = true;\n                            rowSpan--;\n                            while (colSpan > 1) {\n                                currentCellIndex++;\n                                this.headers.getHeader(currentRowIndex).cells.getCell(currentCellIndex).isCellMergeContinue = true;\n                                this.headers.getHeader(currentRowIndex).cells.getCell(currentCellIndex).isRowMergeContinue = true;\n                                colSpan--;\n                            }\n                            colSpan = cell.columnSpan;\n                            currentCellIndex = j;\n                        }\n                    }\n                    else if (cell.columnSpan > 1 && cell.rowSpan === 1) {\n                        colSpan = cell.columnSpan;\n                        currentCellIndex = j;\n                        cell.isCellMergeStart = true;\n                        //Set Column merges.\n                        while (colSpan > 1) {\n                            currentCellIndex++;\n                            row.cells.getCell(currentCellIndex).isCellMergeContinue = true;\n                            colSpan--;\n                        }\n                    }\n                    else if (cell.columnSpan === 1 && cell.rowSpan > 1) {\n                        rowSpan = cell.rowSpan;\n                        currentRowIndex = i;\n                        //Set row Merges.\n                        while (rowSpan > 1) {\n                            currentRowIndex++;\n                            this.headers.getHeader(currentRowIndex).cells.getCell(j).isRowMergeContinue = true;\n                            rowSpan--;\n                        }\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Gets the `format`.\n     * @private\n     */\n    PdfGrid.prototype.getFormat = function (format) {\n        var f = format;\n        return f;\n    };\n    /**\n     * `Layouts` the element.\n     * @private\n     */\n    PdfGrid.prototype.layoutInternal = function (param) {\n        this.initialWidth = param.bounds.width;\n        var format = this.getFormat(param.format);\n        this.currentPage = param.page;\n        if (this.currentPage !== null) {\n            var pageHeight = this.currentPage.getClientSize().height;\n            var pageWidth = this.currentPage.getClientSize().width;\n            this.currentPageBounds = this.currentPage.getClientSize();\n        }\n        else {\n            throw Error('Can not set page as null');\n        }\n        this.currentGraphics = this.currentPage.graphics;\n        var index = 0;\n        index = this.currentGraphics.page.section.indexOf(this.currentGraphics.page);\n        this.listOfNavigatePages.push(index);\n        this.currentBounds = new RectangleF(new PointF(param.bounds.x, param.bounds.y), this.currentGraphics.clientSize);\n        if (this.rows.count !== 0) {\n            this.currentBounds.width = (param.bounds.width > 0) ? param.bounds.width :\n                (this.currentBounds.width - this.rows.getRow(0).cells.getCell(0).style.borders.left.width / 2);\n        }\n        else if (this.headers.count !== 0) {\n            this.currentBounds.width = param.bounds.width;\n        }\n        else {\n            throw Error('Please add row or header into grid');\n        }\n        this.startLocation = new PointF(param.bounds.x, param.bounds.y);\n        if (param.bounds.height > 0 && !this.isChildGrid) {\n            this.currentBounds.height = param.bounds.height;\n        }\n        this.hType = this.style.horizontalOverflowType;\n        if (!this.style.allowHorizontalOverflow) {\n            this.measureColumnsWidth(this.currentBounds);\n            this.columnRanges.push([0, this.columns.count - 1]);\n        }\n        else {\n            this.measureColumnsWidth();\n            this.determineColumnDrawRanges();\n        }\n        var result = this.layoutOnPage(param);\n        return result;\n    };\n    PdfGrid.prototype.measureColumnsWidth = function (bounds) {\n        if (typeof bounds !== 'undefined') {\n            var widths = this.columns.getDefaultWidths(bounds.width);\n            var tempWidth = this.columns.getColumn(0).width;\n            for (var i = 0, count = this.columns.count; i < count; i++) {\n                this.columns.getColumn(i).width = widths[i];\n            }\n        }\n        else {\n            var widths = [];\n            var cellWidth = 0;\n            var cellWidths = 0;\n            if (this.headers.count > 0) {\n                var colCount = this.headers.getHeader(0).cells.count;\n                var rowCount = this.headers.count;\n                for (var i = 0; i < colCount; i++) {\n                    cellWidth = 0;\n                    for (var j = 0; j < rowCount; j++) {\n                        var rowWidth = Math.min(this.initialWidth, this.headers.getHeader(j).cells.getCell(i).width);\n                        cellWidth = Math.max(cellWidth, rowWidth);\n                    }\n                    widths[i] = cellWidth;\n                }\n            }\n            else {\n                var colCount = this.rows.getRow(0).cells.count;\n                var rowCount = this.rows.count;\n                for (var i = 0; i < colCount; i++) {\n                    cellWidth = 0;\n                    for (var j = 0; j < rowCount; j++) {\n                        var rowWidth = Math.min(this.initialWidth, this.rows.getRow(j).cells.getCell(i).width);\n                        cellWidth = Math.max(cellWidth, rowWidth);\n                    }\n                    widths[i] = cellWidth;\n                }\n            }\n            cellWidth = 0;\n            for (var i = 0, colCount = this.columns.count; i < colCount; i++) {\n                for (var j = 0, rowCount = this.rows.count; j < rowCount; j++) {\n                    if (this.rows.getRow(j).cells.getCell(i).columnSpan == 1 || this.rows.getRow(j).cells.getCell(i).value !== null || this.rows.getRow(j).cells.getCell(i).rowSpan >= 1) {\n                        if (this.rows.getRow(j).cells.getCell(i).value !== null &&\n                            !this.rows.getRow(j).grid.style.allowHorizontalOverflow) {\n                            var value = this.rows.getRow(j).grid.style.cellPadding.right +\n                                this.rows.getRow(j).grid.style.cellPadding.left\n                                + this.rows.getRow(j).cells.getCell(i).style.borders.left.width / 2\n                                + this.gridLocation.x;\n                            this.rows.getRow(j).cells.getCell(i).value.initialWidth = this.initialWidth - value;\n                        }\n                        var rowWidth = 0;\n                        var internalWidth = this.rows.getRow(j).cells.getCell(i).width;\n                        internalWidth += this.rows.getRow(j).cells.getCell(i).style.borders.left.width;\n                        internalWidth += this.rows.getRow(j).cells.getCell(i).style.borders.right.width;\n                        var internalHeight = this.rows.getRow(j).cells.getCell(i).height;\n                        internalHeight += (this.rows.getRow(j).cells.getCell(i).style.borders.top.width);\n                        internalHeight += (this.rows.getRow(j).cells.getCell(i).style.borders.bottom.width);\n                        var isCorrectWidth = (internalWidth + this.gridLocation.x) > this.currentGraphics.clientSize.width;\n                        var isCorrectHeight = (internalHeight + this.gridLocation.y) > this.currentGraphics.clientSize.height;\n                        if (isCorrectWidth || isCorrectHeight) {\n                            throw Error('Image size exceeds client size of the page. Can not insert this image');\n                        }\n                        rowWidth = Math.min(this.initialWidth, this.rows.getRow(j).cells.getCell(i).width);\n                        cellWidth = Math.max(widths[i], Math.max(cellWidth, rowWidth));\n                        cellWidth = Math.max(this.columns.getColumn(i).width, cellWidth);\n                    }\n                }\n                widths[i] = cellWidth;\n                cellWidth = 0;\n            }\n            for (var i = 0, count = this.columns.count; i < count; i++) {\n                this.columns.getColumn(i).width = widths[i];\n            }\n        }\n    };\n    /* tslint:enable */\n    /**\n     * `Determines the column draw ranges`.\n     * @private\n     */\n    PdfGrid.prototype.determineColumnDrawRanges = function () {\n        var startColumn = 0;\n        var endColumn = 0;\n        var cellWidths = 0;\n        var availableWidth = this.currentGraphics.clientSize.width - this.currentBounds.x;\n        for (var i = 0; i < this.columns.count; i++) {\n            cellWidths += this.columns.getColumn(i).width;\n            if (cellWidths >= availableWidth) {\n                var subWidths = 0;\n                for (var j = startColumn; j <= i; j++) {\n                    subWidths += this.columns.getColumn(j).width;\n                    if (subWidths > availableWidth) {\n                        break;\n                    }\n                    endColumn = j;\n                }\n                this.columnRanges.push([startColumn, endColumn]);\n                startColumn = endColumn + 1;\n                endColumn = startColumn;\n                cellWidths = (endColumn <= i) ? this.columns.getColumn(i).width : 0;\n            }\n        }\n        // if (startColumn !== this.columns.Count) {\n        this.columnRanges.push([startColumn, this.columns.count - 1]);\n        // }\n    };\n    /**\n     * `Layouts the on page`.\n     * @private\n     */\n    PdfGrid.prototype.layoutOnPage = function (param) {\n        /* tslint:disable */\n        this.pageBounds.x = param.bounds.x;\n        this.pageBounds.y = param.bounds.y;\n        this.pageBounds.height = param.bounds.height;\n        var format = this.getFormat(param.format);\n        var endArgs = null;\n        var result = null;\n        var layoutedPages = new TemporaryDictionary();\n        var startPage = param.page;\n        var isParentCell = false;\n        var cellBounds = [];\n        for (var index = 0; index < this.columnRanges.length; index++) {\n            var range = this.columnRanges[index];\n            this.cellStartIndex = range[0];\n            this.cellEndIndex = range[1];\n            var returnObject = this.raiseBeforePageLayout(this.currentPage, this.currentBounds, this.currentRowIndex);\n            this.currentBounds = returnObject.currentBounds;\n            this.currentRowIndex = returnObject.currentRowIndex;\n            // if (returnObject.returnValue) {\n            // result = new PdfGridLayoutResult(this.currentPage, this.currentBounds);\n            // break;\n            // }\n            //Draw Headers.\n            var drawHeader = void 0;\n            for (var i_1 = 0; i_1 < this.headers.count; i_1++) {\n                var row = this.headers.getHeader(i_1);\n                var headerHeight = this.currentBounds.y;\n                // RowLayoutResult\n                var headerResult = this.drawRow(row);\n                // if (headerHeight === this.currentBounds.y) {\n                //     drawHeader = true;\n                //     if (PdfGrid.repeatRowIndex === -1) {\n                //         PdfGrid.repeatRowIndex = this.rows.getRow.indexOf(row);\n                //     }\n                // } else {\n                drawHeader = false;\n                // }\n            }\n            var i = 0;\n            var length_1 = this.rows.count;\n            var repeatRow = void 0;\n            var startingHeight = 0;\n            var flag = true;\n            //Here is to draw parent Grid and Cells\n            cellBounds = [];\n            //Draw row by row with the specified cell range.\n            for (var j = 0; j < this.rows.count; j++) {\n                var row = this.rows.getRow(j);\n                i++;\n                this.currentRowIndex = i - 1;\n                var originalHeight = this.currentBounds.y;\n                startPage = this.currentPage;\n                PdfGrid.repeatRowIndex = -1;\n                var rowResult = this.drawRow(row);\n                cellBounds.push(rowResult.bounds.width);\n                //if height remains same, it is understood that row is not drawn in the page\n                if (originalHeight === this.currentBounds.y) {\n                    repeatRow = true;\n                    PdfGrid.repeatRowIndex = this.rows.rowCollection.indexOf(row);\n                }\n                else {\n                    repeatRow = false;\n                    PdfGrid.repeatRowIndex = -1;\n                }\n                if (!rowResult.isFinish && startPage !== null && format.layout !== PdfLayoutType.OnePage && repeatRow) {\n                    // During pagination, cell position is maintained here.\n                    this.startLocation.x = this.currentBounds.x;\n                    var isAddNextPage = false;\n                    this.currentPage = this.getNextPage(format);\n                    if ((param.format !== null) && !param.format.usePaginateBounds && param.bounds !== null &&\n                        param.bounds.height > 0 && !this.isChildGrid) {\n                        this.currentBounds.height = param.bounds.height;\n                    }\n                    if ((param.format !== null) && !param.format.usePaginateBounds && param.bounds !== null &&\n                        param.bounds.y > 0 && !this.isChildGrid) {\n                        this.currentBounds.y = param.bounds.y;\n                    }\n                    this.startLocation.y = this.currentBounds.y;\n                    if ((format.paginateBounds.x === format.paginateBounds.y) &&\n                        (format.paginateBounds.y === format.paginateBounds.height) &&\n                        (format.paginateBounds.height === format.paginateBounds.width) && (format.paginateBounds.width === 0)) {\n                        this.currentBounds.x += this.startLocation.x;\n                    }\n                    if (this.currentBounds.x === PdfBorders.default.left.width / 2) {\n                        this.currentBounds.y += this.startLocation.x;\n                    }\n                    if (this.repeatHeader) {\n                        for (var i_2 = 0; i_2 < this.headers.count; i_2++) {\n                            var header = this.headers.getHeader(i_2);\n                            this.drawRow(header);\n                        }\n                    }\n                    this.drawRow(row);\n                    if (this.currentPage !== null && !layoutedPages.containsKey(this.currentPage)) {\n                        layoutedPages.add(this.currentPage, range);\n                    }\n                }\n            }\n            var isPdfGrid = false;\n            var maximumCellBoundsWidth = 0;\n            if (cellBounds.length > 0) {\n                maximumCellBoundsWidth = cellBounds[0];\n            }\n            var largeNavigatePage = [[0, 0]];\n            if (!isPdfGrid && cellBounds.length > 0) {\n                for (var c = 0; c < i - 1; c++) {\n                    if (maximumCellBoundsWidth < cellBounds[c]) {\n                        maximumCellBoundsWidth = cellBounds[c];\n                    }\n                }\n                this.rowLayoutBoundsWidth = maximumCellBoundsWidth;\n            }\n            else {\n                this.rowLayoutBoundsWidth = largeNavigatePage[0][1];\n            }\n            if (this.columnRanges.length - 1 !== index && this.columnRanges.length > 1 && format.layout !== PdfLayoutType.OnePage) {\n                this.currentPage = this.getNextPage(format);\n                if ((format.paginateBounds.x === format.paginateBounds.y) && (format.paginateBounds.y === format.paginateBounds.height)\n                    && (format.paginateBounds.height === format.paginateBounds.width) && (format.paginateBounds.width === 0)) {\n                    this.currentBounds.x += this.startLocation.x;\n                    this.currentBounds.y += this.startLocation.y;\n                    // this.currentBounds.height = this.pageBounds.height;\n                }\n            }\n        }\n        result = this.getLayoutResult();\n        if (this.style.allowHorizontalOverflow && this.style.horizontalOverflowType == PdfHorizontalOverflowType.NextPage) {\n            this.reArrangePages(layoutedPages);\n        }\n        this.raisePageLayouted(result);\n        return result;\n    }; /* tslint:enable */\n    /**\n     * Gets the `next page`.\n     * @private\n     */\n    PdfGrid.prototype.getNextPage = function (format) {\n        var section = this.currentPage.section;\n        var nextPage = null;\n        var index = section.indexOf(this.currentPage);\n        this.flag = false;\n        if (index === section.count - 1) {\n            nextPage = section.add();\n        }\n        else {\n            nextPage = section.getPages()[index + 1];\n        }\n        this.currentGraphics = nextPage.graphics;\n        var pageindex = this.currentGraphics.page.section.indexOf(this.currentGraphics.page);\n        if (!(this.listOfNavigatePages.indexOf(pageindex) !== -1)) {\n            this.listOfNavigatePages.push(pageindex);\n        }\n        this.currentBounds = new RectangleF(new PointF(0, 0), nextPage.getClientSize());\n        // if ((format.PaginateBounds.x !== format.PaginateBounds.y) && (format.PaginateBounds.y !== format.PaginateBounds.height)\n        //     && (format.PaginateBounds.height !== format.PaginateBounds.width) && (format.PaginateBounds.width !== 0)) {\n        //     this.currentBounds.x = format.PaginateBounds.x;\n        //     this.currentBounds.y = format.PaginateBounds.y;\n        //     this.currentBounds.height = format.PaginateBounds.height;\n        // }\n        return nextPage;\n    };\n    /**\n     * Gets the `layout result`.\n     * @private\n     */\n    PdfGrid.prototype.getLayoutResult = function () {\n        var bounds;\n        /* tslint:disable */\n        bounds = new RectangleF(this.startLocation, new SizeF(this.currentBounds.width, this.currentBounds.y - this.startLocation.y));\n        /* tslint:enable */\n        return new PdfGridLayoutResult(this.currentPage, bounds);\n    };\n    /**\n     * `Recalculate row height` for the split cell to be drawn.\n     * @private\n     */\n    PdfGrid.prototype.ReCalculateHeight = function (row, height) {\n        var newHeight = 0.0;\n        // for (let i : number = this.cellStartIndex; i <= this.cellEndIndex; i++) {\n        //     if (!(row.cells.getCell(i).RemainingString === null || row.cells.getCell(i).RemainingString === '' ||\n        //           typeof row.cells.getCell(i).RemainingString === 'undefined')) {\n        //         newHeight = Math.max(newHeight, row.cells.getCell(i).MeasureHeight());\n        //     }\n        // }\n        return Math.max(height, newHeight);\n    };\n    /**\n     * `Raises BeforePageLayout event`.\n     * @private\n     */\n    PdfGrid.prototype.raiseBeforePageLayout = function (currentPage, currentBounds, currentRow) {\n        var cancel = false;\n        if (this.raiseBeginPageLayout) {\n            var args = new PdfGridBeginPageLayoutEventArgs(currentBounds, currentPage, currentRow);\n            this.beginPageLayout(this, args);\n            // if (currentBounds !== args.Bounds) {\n            //     this.isChanged = true;\n            //     this.currentLocation = new PointF(args.Bounds.x, args.Bounds.y);\n            //     this.measureColumnsWidth(new RectangleF(new PointF(args.Bounds.x, args.Bounds.y) ,\n            //                                                  new SizeF(args.Bounds.width + args.Bounds.x ,\n            //                                                                 args.Bounds.height)));\n            // }\n            cancel = args.cancel;\n            currentBounds = args.bounds;\n            currentRow = args.startRowIndex;\n        }\n        return { returnValue: cancel, currentBounds: currentBounds, currentRowIndex: currentRow };\n    };\n    /**\n     * `Raises PageLayout event` if needed.\n     * @private\n     */\n    PdfGrid.prototype.raisePageLayouted = function (result) {\n        var args = new PdfGridEndPageLayoutEventArgs(result);\n        if (this.raiseEndPageLayout) {\n            this.endPageLayout(this, args);\n        }\n        return args;\n    };\n    PdfGrid.prototype.drawRow = function (row, result, height) {\n        if (typeof result === 'undefined') {\n            //.. Check if required space available.\n            //.....If the row conains spans which  falls through more than one page, then draw the row to next page.\n            var result_1 = new RowLayoutResult();\n            var rowHeightWithSpan = 0;\n            var location_1 = new PointF(0, 0);\n            var size = new SizeF(0, 0);\n            var isHeader = false;\n            if (row.rowSpanExists) {\n                var maxSpan = 0;\n                var currRowIndex = this.rows.rowCollection.indexOf(row);\n                if (currRowIndex === -1) {\n                    currRowIndex = this.headers.indexOf(row);\n                    if (currRowIndex !== -1) {\n                        isHeader = true;\n                    }\n                }\n                for (var i = 0; i < row.cells.count; i++) {\n                    var cell = row.cells.getCell(i);\n                    maxSpan = Math.max(maxSpan, cell.rowSpan);\n                }\n                for (var i = currRowIndex; i < currRowIndex + maxSpan; i++) {\n                    rowHeightWithSpan += (isHeader ? this.headers.getHeader(i).height : this.rows.getRow(i).height);\n                }\n                var rowMaxHeight = rowHeightWithSpan;\n                for (var i = 0; i < row.cells.count; i++) {\n                    rowMaxHeight = rowMaxHeight > row.cells.getCell(i).height ? rowMaxHeight : row.cells.getCell(i).height;\n                }\n                var nextRow = this.headers.getHeader(this.headers.indexOf(row) + 1);\n                var flag = true;\n                for (var i = 0; i < nextRow.cells.count; i++) {\n                    if (nextRow.cells.getCell(i).value !== '' && nextRow.cells.getCell(i).value !== undefined) {\n                        flag = false;\n                        break;\n                    }\n                }\n                if ((rowMaxHeight > rowHeightWithSpan) && flag) {\n                    row.height += (rowMaxHeight - rowHeightWithSpan);\n                }\n            }\n            var calculatedHeight = row.rowBreakHeight > 0.0 ? row.rowBreakHeight : row.height;\n            if (this.currentBounds.y + calculatedHeight > this.currentPageBounds.height ||\n                this.currentBounds.y + calculatedHeight > (this.currentBounds.height + this.startLocation.y) ||\n                this.currentBounds.y + rowHeightWithSpan > this.currentPageBounds.height) {\n                // If a row is repeated and still cannot fit in page, proceed draw.\n                // if (PdfGrid.repeatRowIndex > -1 && PdfGrid.repeatRowIndex === row.RowIndex) {\n                //     if (this.AllowRowBreakAcrossPages) {\n                //         result.IsFinish = true;\n                //         // this.DrawRowWithBreak(ref result, row, height);\n                //     } else {\n                //         result.IsFinish = false;\n                //         this.drawRow(row, result, height);\n                //     }\n                // } else {\n                result_1.isFinish = false;\n                // }\n            }\n            else {\n                result_1.isFinish = true;\n                this.drawRow(row, result_1, calculatedHeight);\n            }\n            return result_1;\n        }\n        else {\n            var skipcell = false;\n            var location_2 = new PointF(this.currentBounds.x, this.currentBounds.y);\n            result.bounds = new RectangleF(location_2, new SizeF(0, 0));\n            height = this.ReCalculateHeight(row, height);\n            for (var i = this.cellStartIndex; i <= this.cellEndIndex; i++) {\n                var cancelSpans = ((i > this.cellEndIndex + 1) && (row.cells.getCell(i).columnSpan > 1));\n                // let cancelSpans : boolean = false;\n                if (!cancelSpans) {\n                    for (var j = 1; j < row.cells.getCell(i).columnSpan; j++) {\n                        row.cells.getCell(i + j).isCellMergeContinue = true;\n                    }\n                }\n                var size = new SizeF(this.columns.getColumn(i).width, height);\n                // if (size.width > this.currentGraphics.ClientSize.width) {\n                //     size.width = this.currentGraphics.ClientSize.width;\n                // }\n                // if (this.IsChildGrid && this.style.AllowHorizontalOverflow) {\n                //     if (size.width >= this.currentGraphics.ClientSize.width) {\n                //         size.width -= 2 * this.currentBounds.x;\n                //     }\n                // }\n                /* tslint:disable */\n                if (!this.CheckIfDefaultFormat(this.columns.getColumn(i).format) &&\n                    this.CheckIfDefaultFormat(row.cells.getCell(i).stringFormat)) {\n                    row.cells.getCell(i).stringFormat = this.columns.getColumn(i).format;\n                }\n                var cellstyle = row.cells.getCell(i).style;\n                var tempValue = ((typeof row.cells.getCell(i).value === 'string' &&\n                    row.cells.getCell(i).value !== null) ? row.cells.getCell(i).value : '');\n                row.cells.getCell(i).style = this.RaiseBeforeCellDraw(this.currentGraphics, this.currentRowIndex, i, new RectangleF(location_2, size), tempValue, cellstyle);\n                // if (!skipcell) {\n                // let stringResult : PdfStringLayoutResult = row.cells.getCell(i).draw(this.currentGraphics, new RectangleF(location, size), cancelSpans);\n                var stringResult = row.cells.getCell(i).draw(this.currentGraphics, new RectangleF(location_2, size), cancelSpans);\n                if (row.grid.style.allowHorizontalOverflow && (row.cells.getCell(i).columnSpan > this.cellEndIndex || i + row.cells.getCell(i).columnSpan > this.cellEndIndex + 1) && this.cellEndIndex < row.cells.count - 1) {\n                    row.rowOverflowIndex = this.cellEndIndex;\n                }\n                if (row.grid.style.allowHorizontalOverflow && (row.rowOverflowIndex > 0 && (row.cells.getCell(i).columnSpan > this.cellEndIndex || i + row.cells.getCell(i).columnSpan > this.cellEndIndex + 1)) && row.cells.getCell(i).columnSpan - this.cellEndIndex + i - 1 > 0) {\n                    row.cells.getCell(row.rowOverflowIndex + 1).value = stringResult !== null ? (stringResult.remainder !== undefined) ? stringResult.remainder : '' : '';\n                    row.cells.getCell(row.rowOverflowIndex + 1).stringFormat = row.cells.getCell(i).stringFormat;\n                    row.cells.getCell(row.rowOverflowIndex + 1).style = row.cells.getCell(i).style;\n                    row.cells.getCell(row.rowOverflowIndex + 1).columnSpan = row.cells.getCell(i).columnSpan - this.cellEndIndex + i - 1;\n                }\n                // }\n                /* tslint:enable */\n                tempValue = ((typeof row.cells.getCell(i).value === 'string' &&\n                    row.cells.getCell(i).value !== null) ? row.cells.getCell(i).value : '');\n                this.RaiseAfterCellDraw(this.currentGraphics, this.currentRowIndex, i, new RectangleF(location_2, size), tempValue, row.cells.getCell(i).style);\n                location_2.x += this.columns.getColumn(i).width;\n            }\n            // if (!row.RowMergeComplete || row.isRowHeightSet) {\n            this.currentBounds.y += height;\n            // }\n            result.bounds = new RectangleF(new PointF(result.bounds.x, result.bounds.y), new SizeF(location_2.x, location_2.y));\n        }\n    };\n    /**\n     * Checks if the given format `is default format` or not.\n     * @private\n     */\n    PdfGrid.prototype.CheckIfDefaultFormat = function (format) {\n        var defaultFormat = new PdfStringFormat();\n        return (format.alignment === defaultFormat.alignment && format.characterSpacing === defaultFormat.characterSpacing &&\n            format.clipPath === defaultFormat.clipPath && format.firstLineIndent === defaultFormat.firstLineIndent &&\n            format.horizontalScalingFactor === defaultFormat.horizontalScalingFactor &&\n            format.lineAlignment === defaultFormat.lineAlignment\n            && format.lineLimit === defaultFormat.lineLimit && format.lineSpacing === defaultFormat.lineSpacing &&\n            format.measureTrailingSpaces === defaultFormat.measureTrailingSpaces && format.noClip === defaultFormat.noClip &&\n            format.paragraphIndent === defaultFormat.paragraphIndent && format.rightToLeft === defaultFormat.rightToLeft &&\n            format.subSuperScript === defaultFormat.subSuperScript && format.wordSpacing === defaultFormat.wordSpacing &&\n            format.wordWrap === defaultFormat.wordWrap);\n    };\n    /**\n     * `Raises BeforeCellDraw event`.\n     * @private\n     */\n    PdfGrid.prototype.RaiseBeforeCellDraw = function (graphics, rowIndex, cellIndex, bounds, value, style) {\n        var args = null;\n        if (this.raiseBeginCellDraw) {\n            args = new PdfGridBeginCellDrawEventArgs(graphics, rowIndex, cellIndex, bounds, value, style);\n            this.beginCellDraw(this, args);\n            style = args.style;\n        }\n        return style;\n    };\n    /**\n     * `Raises AfterCellDraw event`.\n     * @private\n     */\n    PdfGrid.prototype.RaiseAfterCellDraw = function (graphics, rowIndex, cellIndex, bounds, value, cellstyle) {\n        var args = null;\n        if (this.raiseEndCellDraw) {\n            args = new PdfGridEndCellDrawEventArgs(graphics, rowIndex, cellIndex, bounds, value, cellstyle);\n            this.endCellDraw(this, args);\n        }\n    };\n    /**\n     * `Rearranges the pages`.\n     * @private\n     */\n    PdfGrid.prototype.reArrangePages = function (layoutedPages) {\n        var document = this.currentPage.document;\n        var pages = [];\n        var keys = layoutedPages.keys();\n        var values = layoutedPages.values();\n        for (var i = 0; i < keys.length; i++) {\n            var page = keys[i];\n            page.section = null;\n            pages.push(page);\n            document.pages.remove(page);\n        }\n        /* tslint:disable */\n        for (var i = 0; i < layoutedPages.size(); i++) {\n            var count = 0;\n            for (var j = i, count_1 = (layoutedPages.size() / this.columnRanges.length); j < layoutedPages.size(); j += count_1) {\n                var page = pages[j];\n                if (document.pages.indexOf(page) === -1) {\n                    document.pages.add(page);\n                }\n            }\n        }\n        /* tslint:enable */\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    PdfGrid.repeatRowIndex = -1;\n    return PdfGrid;\n}(PdfLayoutElement));\nexport { PdfGrid };\n/**\n * `GridCellEventArgs` class is alternate for grid events.\n */\nvar GridCellEventArgs = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initialize a new instance for `GridCellEventArgs` class.\n     * @private\n     */\n    function GridCellEventArgs(graphics, rowIndex, cellIndex, bounds, value) {\n        this.gridRowIndex = rowIndex;\n        this.gridCellIndex = cellIndex;\n        this.internalValue = value;\n        this.gridBounds = bounds;\n        this.pdfGraphics = graphics;\n    }\n    Object.defineProperty(GridCellEventArgs.prototype, \"rowIndex\", {\n        // Properties\n        /**\n         * Gets the value of current `row index`.\n         * @private\n         */\n        get: function () {\n            return this.gridRowIndex;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridCellEventArgs.prototype, \"cellIndex\", {\n        /**\n         * Gets the value of current `cell index`.\n         * @private\n         */\n        get: function () {\n            return this.gridCellIndex;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridCellEventArgs.prototype, \"value\", {\n        /**\n         * Gets the actual `value` of current cell.\n         * @private\n         */\n        get: function () {\n            return this.internalValue;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridCellEventArgs.prototype, \"bounds\", {\n        /**\n         * Gets the `bounds` of current cell.\n         * @private\n         */\n        get: function () {\n            return this.gridBounds;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridCellEventArgs.prototype, \"graphics\", {\n        /**\n         * Gets the instance of `current graphics`.\n         * @private\n         */\n        get: function () {\n            return this.pdfGraphics;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return GridCellEventArgs;\n}());\nexport { GridCellEventArgs };\n/**\n * `PdfGridBeginCellDrawEventArgs` class is alternate for begin cell draw events.\n */\nvar PdfGridBeginCellDrawEventArgs = /** @class */ (function (_super) {\n    __extends(PdfGridBeginCellDrawEventArgs, _super);\n    // Constructors\n    /**\n     * Initializes a new instance of the `StartCellLayoutEventArgs` class.\n     * @private\n     */\n    function PdfGridBeginCellDrawEventArgs(graphics, rowIndex, cellIndex, bounds, value, style) {\n        var _this = _super.call(this, graphics, rowIndex, cellIndex, bounds, value) || this;\n        _this.style = style;\n        return _this;\n    }\n    Object.defineProperty(PdfGridBeginCellDrawEventArgs.prototype, \"skip\", {\n        // Properties\n        /**\n         * Gets or sets a value indicating whether the value of this cell should be `skipped`.\n         * @private\n         */\n        get: function () {\n            return this.bSkip;\n        },\n        set: function (value) {\n            this.bSkip = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridBeginCellDrawEventArgs.prototype, \"style\", {\n        /**\n         * Gets or sets a `style` value of the cell.\n         * @private\n         */\n        get: function () {\n            return this.cellStyle;\n        },\n        set: function (value) {\n            this.cellStyle = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfGridBeginCellDrawEventArgs;\n}(GridCellEventArgs));\nexport { PdfGridBeginCellDrawEventArgs };\n/**\n * `PdfGridEndCellDrawEventArgs` class is alternate for end cell draw events.\n */\nvar PdfGridEndCellDrawEventArgs = /** @class */ (function (_super) {\n    __extends(PdfGridEndCellDrawEventArgs, _super);\n    // Constructors\n    /**\n     * Initializes a new instance of the `PdfGridEndCellLayoutEventArgs` class.\n     * @private\n     */\n    function PdfGridEndCellDrawEventArgs(graphics, rowIndex, cellIndex, bounds, value, style) {\n        var _this = _super.call(this, graphics, rowIndex, cellIndex, bounds, value) || this;\n        _this.cellStyle = style;\n        return _this;\n    }\n    Object.defineProperty(PdfGridEndCellDrawEventArgs.prototype, \"style\", {\n        // Propertise\n        /**\n         * Get the `PdfGridCellStyle`.\n         * @private\n         */\n        get: function () {\n            return this.cellStyle;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfGridEndCellDrawEventArgs;\n}(GridCellEventArgs));\nexport { PdfGridEndCellDrawEventArgs };\n/**\n * `PdfGridCancelEventArgs` class is alternate for cancel events.\n */\nvar PdfCancelEventArgs = /** @class */ (function () {\n    function PdfCancelEventArgs() {\n    }\n    Object.defineProperty(PdfCancelEventArgs.prototype, \"cancel\", {\n        // Properties\n        /**\n         * Gets and Sets the value of `cancel`.\n         * @private\n         */\n        get: function () {\n            return this.isCancel;\n        },\n        set: function (value) {\n            this.isCancel = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfCancelEventArgs;\n}());\nexport { PdfCancelEventArgs };\n/**\n * `BeginPageLayoutEventArgs` class is alternate for begin page layout events.\n */\nvar BeginPageLayoutEventArgs = /** @class */ (function (_super) {\n    __extends(BeginPageLayoutEventArgs, _super);\n    // Constructors\n    /**\n     * Initializes a new instance of the `BeginPageLayoutEventArgs` class with the specified rectangle and page.\n     * @private\n     */\n    function BeginPageLayoutEventArgs(bounds, page) {\n        var _this = _super.call(this) || this;\n        _this.bounds = bounds;\n        _this.pdfPage = page;\n        return _this;\n    }\n    Object.defineProperty(BeginPageLayoutEventArgs.prototype, \"bounds\", {\n        // Properties\n        /**\n         * Gets or sets value that indicates the lay outing `bounds` on the page.\n         * @private\n         */\n        get: function () {\n            return this.cellBounds;\n        },\n        set: function (value) {\n            this.cellBounds = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BeginPageLayoutEventArgs.prototype, \"page\", {\n        /**\n         * Gets the `page` where the lay outing should start.\n         * @private\n         */\n        get: function () {\n            return this.pdfPage;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return BeginPageLayoutEventArgs;\n}(PdfCancelEventArgs));\nexport { BeginPageLayoutEventArgs };\n/**\n * `EndPageLayoutEventArgs` class is alternate for end page layout events.\n */\nvar EndPageLayoutEventArgs = /** @class */ (function (_super) {\n    __extends(EndPageLayoutEventArgs, _super);\n    // Constructors\n    /**\n     * Initializes a new instance of the `EndPageLayoutEventArgs` class. with the specified 'PdfLayoutResult'.\n     * @private\n     */\n    function EndPageLayoutEventArgs(result) {\n        var _this = _super.call(this) || this;\n        _this.layoutResult = result;\n        return _this;\n    }\n    Object.defineProperty(EndPageLayoutEventArgs.prototype, \"result\", {\n        // Properties\n        /**\n         * Gets the lay outing `result` of the page.\n         * @private\n         */\n        get: function () {\n            return this.layoutResult;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EndPageLayoutEventArgs.prototype, \"nextPage\", {\n        /**\n         * Gets or sets a value indicating the `next page` where the element should be layout.\n         * @private\n         */\n        get: function () {\n            return this.nextPdfPage;\n        },\n        set: function (value) {\n            this.nextPdfPage = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return EndPageLayoutEventArgs;\n}(PdfCancelEventArgs));\nexport { EndPageLayoutEventArgs };\n/**\n * `PdfGridBeginPageLayoutEventArgs` class is alternate for begin page layout events.\n */\nvar PdfGridBeginPageLayoutEventArgs = /** @class */ (function (_super) {\n    __extends(PdfGridBeginPageLayoutEventArgs, _super);\n    // Constructors\n    /**\n     * Initialize a new instance of `PdfGridBeginPageLayoutEventArgs` class.\n     * @private\n     */\n    function PdfGridBeginPageLayoutEventArgs(bounds, page, startRow) {\n        var _this = _super.call(this, bounds, page) || this;\n        _this.startRow = startRow;\n        return _this;\n    }\n    Object.defineProperty(PdfGridBeginPageLayoutEventArgs.prototype, \"startRowIndex\", {\n        // Properties\n        /**\n         * Gets the `start row index`.\n         * @private\n         */\n        get: function () {\n            return this.startRow;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfGridBeginPageLayoutEventArgs;\n}(BeginPageLayoutEventArgs));\nexport { PdfGridBeginPageLayoutEventArgs };\n/**\n * `PdfGridEndPageLayoutEventArgs` class is alternate for begin page layout events.\n */\nvar PdfGridEndPageLayoutEventArgs = /** @class */ (function (_super) {\n    __extends(PdfGridEndPageLayoutEventArgs, _super);\n    // Constructors\n    /**\n     * Initialize a new instance of `PdfGridEndPageLayoutEventArgs` class.\n     * @private\n     */\n    function PdfGridEndPageLayoutEventArgs(result) {\n        return _super.call(this, result) || this;\n    }\n    return PdfGridEndPageLayoutEventArgs;\n}(EndPageLayoutEventArgs));\nexport { PdfGridEndPageLayoutEventArgs };\n/**\n * `RowLayoutResult` class to store layout result of rows.\n */\nvar RowLayoutResult = /** @class */ (function () {\n    //Constructors\n    /**\n     * Initializes a new instance of the `RowLayoutResult` class.\n     * @private\n     */\n    function RowLayoutResult() {\n        this.layoutedBounds = new RectangleF(0, 0, 0, 0);\n    }\n    Object.defineProperty(RowLayoutResult.prototype, \"isFinish\", {\n        /**\n         * Gets or sets a value indicating whether this instance `is finish`.\n         * @private\n         */\n        get: function () {\n            return this.bIsFinished;\n        },\n        set: function (value) {\n            this.bIsFinished = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RowLayoutResult.prototype, \"bounds\", {\n        /**\n         * Gets or sets the `bounds`.\n         * @private\n         */\n        get: function () {\n            return this.layoutedBounds;\n        },\n        set: function (value) {\n            this.layoutedBounds = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return RowLayoutResult;\n}());\nexport { RowLayoutResult };\n/**\n * `PdfGridLayoutResult` class represents the results of the PdfGrid including bounds and resultant page.\n */\nvar PdfGridLayoutResult = /** @class */ (function (_super) {\n    __extends(PdfGridLayoutResult, _super);\n    // Constructor\n    /**\n     * Initializes a new instance of the `PdfGridLayoutResult` class with the current page and bounds.\n     * @private\n     */\n    function PdfGridLayoutResult(page, bounds) {\n        return _super.call(this, page, bounds) || this;\n    }\n    return PdfGridLayoutResult;\n}(PdfLayoutResult));\nexport { PdfGridLayoutResult };\n"],"names":["defaultToString","item","Object","prototype","toString","call","validateNullOrUndefined","value","message","undefined","Error","Dictionary","toStringFunction","this","table","nElements","toStr","getValue","key","pair","setValue","k","remove","previousElement","keys","keysArray","namesOfKeys","index1","length","pair1","push","values","valuesArray","namesOfValues","index2","pair2","containsKey","clear","size","PdfName","stringStartMark","internalValue","isSaving6","position6","normalizeValue","defineProperty","get","status6","set","enumerable","configurable","index6","val","save","writer","write","escapeString","clone","crossTable","newName","stringValue","result","i","len_1","ch","delimiters","indexOf","c","replacements","Operators","forTest","obj","endObj","r","whiteSpace","slash","newLine","stream","endStream","xref","f","n","trailer","startxref","eof","header","beginText","endText","beginPath","appendLineSegment","stroke","fill","fillEvenOdd","fillStroke","fillStrokeEvenOdd","appendbeziercurve","appendRectangle","saveState","restoreState","paintXObject","modifyCtm","modifyTM","setLineWidth","setLineCapStyle","setLineJoinStyle","setDashPattern","setFlatnessTolerance","closePath","closeStrokePath","closeFillStrokePath","setCharacterSpace","setWordSpace","setHorizontalScaling","setTextLeading","setFont","setRenderingMode","setTextRise","setTextScaling","setCoords","goToNextLine","setText","setTextWithFormatting","setTextOnNewLine","selectcolorspaceforstroking","selectcolorspacefornonstroking","setrbgcolorforstroking","setrbgcolorfornonstroking","setcmykcolorforstroking","setcmykcolorfornonstroking","setgraycolorforstroking","setgraycolorfornonstroking","clipPath","clipPathEvenOdd","endPath","setGraphicsState","comment","evenOdd","setMiterLimit","DictionaryProperties","pages","kids","count","resources","type","mediaBox","parent","root","decodeParms","filter","font","type1","baseFont","encoding","subtype","contents","procset","colorSpace","extGState","pattern","xObject","width","height","bitsPerComponent","image","dctdecode","columns","blackIs1","s","predictor","deviceRgb","next","action","link","a","annot","p","rect","uri","annots","ca","CA","xyz","fit","dest","BM","flatedecode","rotate","bBox","form","PdfDictionary","dictionary","position7","primitiveItems","prefix","suffix","object","archive","encrypt","dictionaryProperties","items","index","status","freezeChanges","status7","isSaving7","index7","getArchive","setArchive","setEncrypt","modify","getEncrypt","freezer","bChanged","onBeginSave","beginSave","sender","onTemplateBeginSave","pageBeginDrawTemplate","pageBeginSave","onBeginAnnotationSave","annotationBeginSave","onSectionBeginSave","saveEvent","sectionBeginSave","state","bRaiseEvent","Count","saveItems","SaveSectionCollectionEventHandler","SaveAnnotationEventHandler","SaveSectionEventHandler","SaveTemplateEventHandler","PdfNumber","position5","integer","status5","isSaving5","index5","intValue","floatToString","number","returnString","toFixed","min","x","y","z","Math","PdfArray","array","startMark","endMark","position9","clonedObject9","internalElements","tempArray","elements","tempNumberArray","pdfNumber","add","status9","isSaving9","index9","pdfCrossTable","element","markedChange","contains","tempElement","inputElement","getItems","len","newArray","fromRectangle","bounds","insert","tempElements","markChanged","removeAt","Encoding","includeBom","emitBOM","encodingType","initBOM","getByteCount","chars","utf8Len","charCodeAt","getByteCountInternal","codePoint","isHighSurrogate","codeUnit","toCodepoint","highCodeUnit","lowCodeUnit","charIndex","charCount","byteCount","isUtf8","charCode","high","low","getBytes","RangeError","ArrayBuffer","getBytesOfUtf8Encoding","getBytesOfUnicodeEncoding","getBytesOfAnsiEncoding","getString","bytes","byteLength","out","byteCal","Uint8Array","getStringOfUtf8Encoding","byteUnicode","Uint16Array","getStringofUnicodeEncoding","j","String","fromCharCode","bufview","charcode","uint","uint16","byteUni","byte16","apply","destroy","Save","fileName","buffer","extension","substring","lastIndexOf","mimeType","getMimeType","Blob","isMicrosoftBrowser","navigator","msSaveBlob","downloadLink","document","createElementNS","saveInternal","hasDownloadAttribute","download","dataUrl_1","window","URL","createObjectURL","href","event_1","createEvent","initEvent","dispatchEvent","setTimeout","revokeObjectURL","url","open","location","reader_1","FileReader","onloadend","readAsDataURL","StreamWriter","bufferBlob","bufferText","init","flush","enc","setBomByte","arrayUnicode","uint8","arrayUtf8","utf8","bufferArray","writeLine","arrLiteralCodes","Int16Array","arrLiteralLengths","arrDistanceCodes","arrDistanceLengths","CompressedStreamWriter","noWrap","pendingBuffer","pendingBufLength","pendingBufCache","pendingBufBitsInCache","bufferPosition","extraBits","currentHash","matchStart","matchLength","matchPrevAvail","blockStart","stringStart","lookAhead","totalBytesIn","inputOffset","inputEnd","windowSize","windowMask","hashSize","hashMask","hashShift","floor","maxDist","checkSum","treeLiteral","CompressorHuffmanTree","treeDistances","treeCodeLengths","arrDistances","arrLiterals","dataWindow","hashHead","hashPrevious","writeZLibHeader","compressedString","data","offset","end","encode","inputBuffer","ChecksumCalculator","checksumUpdate","pendingBufferFlush","compressData","headerDate","pendingBufferWriteShortBytes","finish","success","fillWindow","canFlush","compressSlow","lookAheadCompleted","slideWindow","prevMatch","prevLen","discardMatch","matchPreviousBest","matchPreviousAvailable","huffmanIsFull","insertString","findLongestMatch","huffmanTallyLit","huffmanTallyDist","huffmanFlushBlock","lastBlock","more","subarray","updateHash","m","match","hash","curMatch","chainLen","niceLen","scan","bestEnd","bestLength","max","limit","stringEnd","scanEnd1","scanEnd","literal","codeFrequencies","dist","lc","huffmanLengthCode","dc","huffmanDistanceCode","stored","storedOffset","storedLength","buildTree","calculateBLFreq","blTreeCodes","codeLengths","huffCodeLengthOrders","opt_len","getEncodedLength","static_len","huffmanFlushStoredBlock","pendingBufferWriteBits","setStaticCodes","huffmanCompressBlock","huffmanReset","huffmanSendAllTrees","pendingBufferAlignToByte","pendingBufferWriteShort","pendingBufferWriteByteBlock","code","distance","buildCodes","treeLength","rank","writeTree","reset","literalLen","writeCodeToStream","bits","b","Uint32Array","pendingBufferFlushBits","isClose","close","elementCount","minCodes","maxLength","codeMinCount","codeFrequency","lengthCount","Int32Array","codeCount","codeLength","codes","lengths","temp","lengthTemp","nextCode","bitsCount","bitReverse","reverseBits","blTree","maxCount","minCount","curLen","nextLen","maxRepeatCount","minRepeatCount","currentRepeatCount","currentCodeLength","codesCount","arrTree","freq","pos","pPos","nodesCount","child","node","iIndex","constructHuffmanTree","buildLength","first","last","lastVal","path","second","minDepth","numNodes","numLeafs","overflow","calculateOptimalCodeLength","iIncreasableLength","recreateTree","nodePtr","childPtr","childIndex","bitLength","checksum","checksum_uint","s1","s2","checkSumBitOffset","steps","checksumIterationCount","checksumBase","crc32Table","ZipArchive","files","level","addItem","file","ZipArchiveItem","name","addDirectory","directoryName","slice","getItem","zipArchive","Promise","resolve","reject","then","saveAsBlob","blob","skipFileSave","_this","zipData","dirLength","getCompressedData","constructZippedObject","isDirectory","writeZippedContent","onload","input","crc32Value","compressedData","compressedSize","uncompressedDataSize","compressionType","length_1","calculateCrc32Value","readAsArrayBuffer","compressor","currentIndex","nextIndex","subArray","zipParts","extFileAttr","date","Date","writeHeader","localHeader","centralDir","writeCentralDirectory","zipHeader","getModifiedTime","getModifiedDate","localDirLen","cenDirLen","getArrayBuffer","shift","writeFooter","externalFileAttribute","centralLength","localLength","modTime","getHours","getMinutes","getSeconds","modiDate","getFullYear","getMonth","getDate","itemName","InternalEnum","__extends","extendStatics","setPrototypeOf","__proto__","Array","d","hasOwnProperty","__","constructor","create","PdfStream","_super","dicPrefix","dicSuffix","clonedObject2","bCompress","isImageStream","dataStream2","bCompress2","clearStream","internalStream","text","compressContent","sw","getCompressedString","addFilter","filterName","PdfReferenceHolder","isImage","bytesToString","byteArray","output","ForceEncoding","SourceType","PdfHorizontalAlignment","PdfString","bHex","position1","clonedObject1","bDecrypted","isParentDecrypted","isPacked","isFormField","isColorSpace","isHexString","status1","isSaving1","bytesToHex","stringMark","CrossTable","newString","hexStringMark","hexFormatPattern","PdfReference","objNumber","genNumber","index3","position3","Number","status3","isSaving3","obj1","obj2","index4","position4","objectIndex","primitiveObject","tempObj","status4","isSaving4","pdfReference","position","cTable","isSaving","getReference","PdfAction","initialize","pdfDictionary","PdfUriAction","uniformResourceIdentifier","PdfVerticalAlignment","PdfTextAlignment","TextRenderingMode","PdfLineJoin","PdfLineCap","PdfDashStyle","PdfFillMode","PdfColorSpace","PdfBlendMode","PdfGraphicsUnit","PdfGridImagePosition","PdfFontStyle","PdfColor","color1","color2","color3","color4","redColor","greenColor","g","blueColor","grayColor","gray","alpha","filled","maxColourChannelValue","cyanColor","magentaColor","yellowColor","blackColor","assignCMYK","red","green","blue","black","cyan","magenta","yellow","isEmpty","rgbToString","ifStroking","colour","rgbStrings","toArray","Rgb","grayStringsSroke","grayStringsFill","PointF","SizeF","RectangleF","arg1","arg2","arg3","arg4","pointf","sizef","PdfBrush","PdfSolidBrush","color","pdfColor","monitorChanges","brush","streamWriter","getResources","saveChanges","currentColorSpace","diff","setColorAndSpace","resetChanges","PdfFontFamily","PdfFontType","PdfWordWrapType","PdfSubSuperScript","FontEncoding","LineType","PdfStringFormat","scalingFactor","internalLineLimit","wordWrapType","Word","textAlignment","verticalAlignment","Top","isRightToLeft","internalCharacterSpacing","internalWordSpacing","leading","clip","pdfSubSuperScript","None","internalParagraphIndent","firstLineIndent","trailingSpaces","isNoClip","initialLineIndent","StringTokenizer","textValue","currentPosition","getCharsCount","symbols","numSymbols","curIndex","readLine","text2","peekLine","line","readWord","substr","peekWord","word","read","peek","symbol","tab","spaces","whiteSpacePattern","PdfStringLayouter","isOverloadWithPosition","layout","arg5","arg6","arg7","clientSize","doLayout","format","rectSize","pageHeight","rectangle","reader","PdfStringLayoutResult","lineResult","lines","lineIndent","getLineIndent","layoutLine","numSymbolsInserted","returnedValue","copyToResult","numInserted","finalizeResult","firstLine","paragraphIndent","getLineHeight","lineSpacing","getLineWidth","layoutLineHeight","maxWidth","lineWidth","lineType","FirstParagraphLine","round","addToLineResult","NewLineBreak","builder","curLine","curIndent","isSingleWord","curLineWidth","getWrapType","Character","ln","LayoutBreak","LastParagraphLine","layoutLines","breakType","info","LineInfo","actualSize","lineLimit","maxHeight","expHeight","lineHeight","trimLine","size_1","rightToLeft","trim","wordWrap","textRemainder","empty","content","ObjectStatus","PdfFont","style","fontStyle","Regular","fontSize","setStyle","metrics","getHeight","Bold","Italic","Strikeout","Underline","fontMetrics","pdfFontInternals","measureString","temparg2","layoutArea","temparg3","equalsTo","equalsToFont","getInternals","setInternals","internals","applyFormatSettings","realWidth","characterSpacing","wordSpacing","charSizeMultiplier","syncObject","PdfWriter","pdfDocument","overload","tempOverload","ObjectType","PdfMainObjectCollection","objectCollections","mainObjectCollection","primitiveObjectCollection","isNew","objInfo","ObjectInfo","Registered","lookFor","reference","wasNew","trySetReference","found","setReference","_i","_a","pdfObject","objectCollectionIndex","PdfDocumentBase","isStreamCopied","PdfDocument","objects","currentSavingObject","pdfCatalog","setMainObjectCollection","setCrossTable","setCatalog","catalog","filename","SW","encoding_1","SW_1","blobData","docSave","PdfPageOrientation","PdfCatalog","sections","tempDictionaryProperties","PdfCrossTable","maxGenNumIndex","objectCount","merging","internalTrailer","pdfObjects","saveHead","mappedReferences","markTrailerReferences","saveObjects","saveCount","xrefPos","registerObject","saveSections","saveTrailer","saveTheEndess","objectCollection","prevXRef","objectNum","prepareSubsection","saveSubsection","str","Free","generation","isFree","addOffsetLength","addGenNumberLength","total","split","version","generateFileVersion","bNew","getSubReference","objnumber","nextObjNumber","tempIndex","tempkey","tempvalue","bForceNew","saveIndirectObject","currentSavingObj","doSaveObject","free","RegisteredObject","dereference","rh","tempOffset","offsetNumber","tempReference","Normal","PdfPageSize","letter","note","legal","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","a10","b0","b1","b2","b3","b4","b5","archE","archD","archC","archB","archA","flsa","halfLetter","letter11x17","ledger","PdfPageRotateAngle","PdfNumberStyle","PdfDockStyle","PdfAlignmentStyle","TemplateType","ImageFormat","PdfMargins","pdfMargin","setMargins","leftMargin","topMargin","rightMargin","bottomMargin","margin1","margin2","margin3","margin4","PdfPageSettings","margins","pageMargins","pageSize","rotateAngle","RotateAngle0","pageOrientation","Portrait","pageOrigin","isRotation","setSize","orientation","updateSize","Landscape","settings","getActualSize","left","right","top","bottom","PdfStreamWriter","dictionaryName","writeOperator","executeObject","useEvenOddRule","fillStrokePath","fillPath","closeFillPath","textScaling","strokePath","restoreGraphicsState","saveGraphicsState","startNextLine","writePoint","setLeading","setTextRenderingMode","renderingMode","setCharacterSpacing","charSpacing","setWordSpacing","showNextLineText","checkTextParam","writeText","setColorSpace","temparg1","op","matrix","opcode","start","updateY","arg","string","writeComment","forStroking","setLineDashPattern","patternOffset","setLineDashPatternHelper","tempPattern","miterLimit","setLineCap","lineCapStyle","setLineJoin","lineJoinStyle","returnValue","PdfPen","dashOffsetValue","penDashPattern","pdfDashStyle","Solid","pdfLineCap","pdfLineJoin","penWidth","internalMiterLimit","setBrush","Custom","Dash","Dot","DashDot","DashDotDot","sBrush","pdfBrush","currentPen","dashControl","lineJoin","lineCap","pen","getPattern","dashOffset","dashPattern","PdfTransformationMatrix","radDegFactor","PI","transformationMatrix","Matrix","translate","offsetX","offsetY","scale","scaleX","scaleY","angle","cos","sin","multiply","degreesToRadians","degreesX","degRadFactor","radiansToDegrees","radians","metrixElements","transform","point","x2","y2","tempMatrix","dispose","ProcedureSets","pdf","imageB","imageC","imageI","TemporaryDictionary","mKeys","mValues","ReferenceError","splice","PdfTransparency","mode","PdfAutomaticFieldInfoCollection","automaticFieldsInformation","fieldInfo","automaticFields","PdfGraphicsElement","drawHelper","graphics","bNeedSave","gState","translateTransform","drawInternal","restore","PdfAutomaticField","internalBounds","internalTemplateSize","internalFont","internalBrush","internalPen","internalStringFormat","performDrawHelper","scalingX","scalingY","getFont","stringFormat","draw","location_1","PdfAutomaticFieldInfo","getSize","getBrush","defaultFont","getPageFromGraphics","page","currentPage","field","pageNumberFieldLocation","pageNumberField","PdfGraphics","previousTextRenderingMode","Fill","previousCharacterSpacing","previousWordSpacing","previousTextScaling","procedureSets","isNormalRender","isUseFontSize","isItalic","isEmfTextScaled","isEmf","isEmfPlus","isBaselineFormat","emfScalingFactor","colorSpaceChanged","isPointOverload","currentColorSpaces","isImageOptimized","graphicsState","istransparencySet","internalAutomaticFields","startCutIndex","pdfStreamWriter","canvasSize","pdfStringLayoutResult","internalMediaBoxUpperRightBound","clipBounds","pageLayer","bStateSaved","currentBrush","currentFont","bCSInitialized","currentStringFormat","requireProcedureSet","drawPdfTemplate","template","bNeedScale","getTranslateTransform","getScaleTransform","name_1","getName","newLocation","drawString","arg8","arg9","temparg4","temparg5","temparg6","temparg7","temparg8","temparg9","checkCorrectLayoutRectangle","drawStringLayoutResult","drawLine","stateControl","drawRectangle","drawPath","Winding","isPen","isBrush","isEvenOdd","Alternate","drawImage","physicalDimension","name_2","setResources","resource","getLineBounds","lineIndex","layoutRectangle","lineCount","getTextVerticalAlignShift","hShift","getHorizontalAlignShift","shouldJustify","textSize","layoutedRectangle","alignment","Center","Right","lineAlignment","Middle","Bottom","setLayer","layer","pageSave","performDraw","applyStringSettings","horizontalScalingFactor","subSuperScript","SubScript","getDescent","getAscent","resultHeight","remainingString","drawLayoutResult","underlineStrikeoutText","getNextPage","section","getPages","setClip","tm","getTextRenderingMode","cs","ws","textHeight","boundsHeight","vAlignShift","lineInfo","hAlignShift","drawAsciiLine","justifyLine","boundsWidth","hasWordSpacing","whitespacesCount","wordSpace","initializeCoordinates","justifyStyle","Justify","goodWidth","hasSpaces","goodLineBreakStyle","underline","strikeout","linePen","createUnderlineStikeoutPen","vShift","underlineYOffset","strikeoutYOffset","x1","FillStroke","Stroke","ClipFlag","layoutBounds","firstParagraphLine","Left","lastDocumentCS","lastGraphicsCS","initCurrentColorSpace","penControl","brushControl","fontControl","colorspace","curSubSuper","prevSubSuper","fontName","setTransparency","trasparencies","transp","td","TransparencyData","name_3","clipTranslateMargins","clipArea","scaleTransform","rotateTransform","getRotateTransform","mediaBoxUpperRightBound","cropBox","PdfGraphicsState","textRenderingMode","doRestoreState","pop","pathTypesValuesMask","transparencyObject","GetResourceEventHandler","internalTextRenderingMode","internalTextScaling","pdfColorSpace","pdfGraphics","pdfPen","pdfFont","alphaPen","alphaBrush","blendMode","PdfPageLayer","streamClipPageTemplates","isVisible","sublayer","contentLength","pdfPage","clipPageTemplates","layerid","layerName","initializeGraphics","PdfPageLayerCollection","sign","oPage","gr","sc","isSame","origin","clipRect","getActualBounds","pageSettings","PdfCollection","collection","parentLayerCount","optionalContent","PdfPageBase","lPage","parseLayers","list","firstArgument","secondArgument","addLayer","insertLayer","loadedPage","saveStream","restoreStream","saveData","PdfTemplate","writeTransformation","tempSize","templateSize","PdfResources","addType","addSubType","ByteArray","mPosition","dataView","DataView","readByte","getBuffer","writeFromBase64String","base64","arr","encodedString","chr1","chr2","chr3","enc2","enc3","keyStr","resultIndex","totalLength","replace","charAt","PdfBoolean","objectStatus","saving","boolToStr","PdfLayoutType","ImageDecoder","mFormat","Unknown","mbitsPerComponent","mStream","mHeight","mWidth","mImageData","internalBuffer","checkIfJpeg","Jpeg","parseJpegImage","imgData","mJpegHeader","getImageDictionary","imageData","imageStream","tempString","decodedString","imageDataAsNumberArray","compress","getColorSpace","getDecodeParams","decodeParams","mPngHeader","GIF_HEADER","BMP_HEADER","PdfUnitConverter","dpi","updateProportionsHelper","convertUnits","from","to","convertFromPixels","convertToPixels","proportions","pixelPerInch","horizontalResolution","verticalResolution","PdfImage","imageWidth","imageHeight","imagePhysicalDimension","getPointSize","dpiX","dpiY","ucX","ucY","ptWidth","Pixel","Point","ptHeight","PdfBitmap","imageStatus","loadImage","initializeAsync","decoder","baseDictionary","properties","getNames","primitive","names","sName","generateName","pdfNames","fonts","procedureSetName","procSets","removeFont","Guid","getNewGuidString","xobjects","savable","transDic","parentXObjects","hasSameImageStream","oldReference","values_1","guid","randomString","randomNumber","defLayerIndex","modified","pageDictionary","pdfSection","layers","defaultLayerIndex","layerCollection","res","PdfAnnotationCollection","alreadyExistsAnnotationError","missingAnnotationException","internalAnnotations","lists","annotation","doAdd","destination","setPage","layoutResult","lastPosition","setColor","colours","PdfPage","annotationCollection","defaultLayer","parentDocument","annotations","setSection","resetProgress","isProgressOn","getClientSize","doc","drawPageTemplates","containsTemplates","backLayer","drawTemplates","frontLayer","PageAddedEventArgs","PdfSectionPageCollection","PdfDocumentTemplate","leftTemplate","checkElement","topTemplate","rightTemplate","bottomTemplate","evenLeft","evenTop","evenRight","evenBottom","oddLeft","oddTop","oddRight","oddBottom","getLeft","isEven","EvenLeft","OddLeft","getTop","EvenTop","OddTop","getRight","EvenRight","OddRight","getBottom","EvenBottom","OddBottom","pageCollectionIndex","templateElement","PdfSectionTemplate","leftValue","topValue","rightValue","bottomValue","stampValue","PdfSection","pageAdded","pdfPages","initialSettings","sectionCollection","pagesReferences","pageTemplate","pagesCollection","pointToNativePdf","setPageSettings","PageSettingsState","pageCount","foreground","documentHeaders","getDocumentTemplates","documentTemplates","headers","templates","applyDocumentTopTemplate","applyDocumentBottomTemplate","applyDocumentLeftTemplate","applyDocumentRightTemplate","page_1","checkPresence","pageAddedMethod","args","onPageAdded","document_1","getLeftIndentWidth","top_1","getTopIndentHeight","getRightIndentWidth","getBottomIndentHeight","includeMargins","templateWidth","docTemplateWidth","templateHeight","docTemplateHeight","temproaryPages","applyPageSettings","container","parentSettings","PdfSectionCollection","rotateFactor","drawTemplatesHelper","pageRotate","sectionCount","pdfSectionCollection","section_1","checkSection","countPages","forEach","PdfDocumentPageCollection","pdfPageCollectionIndex","previousPageOrientation","getLastSection","getPageByIndex","getPage","sectionStartIndex","pageIndex","numPages","PdfCacheCollection","referenceObjects","pdfFontCollection","search","createNewGroup","group","isMerging","defaultMargin","documentPageCollection","cacheCollection","defaultStandardFont","PdfStandardFont","Helvetica","Cmyk","GrayScale","checkPagesPresence","cache","PdfFontMetrics","lineGap","ascent","descent","getLineGap","clearTypeFonts","clearTypeFontCollection","subScriptSizeFactor","SuperScript","superscriptSizeFactor","widthTable","WidthTable","internalWidthTable","StandardWidthTable","widths","swt","PdfStandardFontMetricsFactory","getMetrics","fontFamily","getHelveticaMetrics","Courier","getCourierMetrics","TimesRoman","getTimesMetrics","Symbol","getSymbolMetrics","ZapfDingbats","getZapfDingbatsMetrics","subSuperScriptFactor","helveticaBoldItalicAscent","helveticaBoldItalicDescent","postScriptName","helveticaBoldItalicName","arialBoldWidth","helveticaBoldAscent","helveticaBoldDescent","helveticaBoldName","helveticaItalicAscent","helveticaItalicDescent","helveticaItalicName","arialWidth","helveticaAscent","helveticaDescent","helveticaName","courierBoldItalicAscent","courierBoldItalicDescent","courierBoldItalicName","fixedWidth","courierBoldAscent","courierBoldDescent","courierBoldName","courierItalicAscent","courierItalicDescent","courierItalicName","courierAscent","courierDescent","courierName","timesBoldItalicAscent","timesBoldItalicDescent","timesBoldItalicName","timesRomanBoldItalicWidths","timesBoldAscent","timesBoldDescent","timesBoldName","timesRomanBoldWidth","timesItalicAscent","timesItalicDescent","timesItalicName","timesRomanItalicWidth","timesAscent","timesDescent","timesName","timesRomanWidth","symbolAscent","symbolDescent","symbolName","symbolWidth","zapfDingbatsAscent","zapfDingbatsDescent","zapfDingbatsName","zapfDingbatsWidth","fontFamilyPrototype","encodings","pdfFontFamily","checkStyle","initializeInternals","convert","getCharWidthInternal","equal","stFont","fontFamilyEqual","lineReducer","styleEqual","createInternals","WinAnsiEncoding","charOffset","PdfAnnotation","textBrush","textFont","internalColor","darkness","nativeRectangle","initialHeight","tempLoacation","PdfLinkAnnotation","PdfActionLinkAnnotation","pdfAction","getSetAction","PdfDocumentLinkAnnotation","pdfDestination","PdfLayoutBreakType","PdfDestinationMode","ElementLayouter","layoutElement","getElement","param","isBoundsChanged","layoutInternal","PdfLayoutFormat","baseFormat","break","paginateBounds","boundsSet","usePaginateBounds","layoutType","Paginate","FitPage","layoutPaginateBounds","PdfLayoutParams","layoutFormat","PdfLayoutResult","PdfLayoutElement","bEmbedFonts","TextLayouter","currentBounds","pageResult","TextPageLayoutResult","remainder","layoutOnPage","getLayoutResult","PdfTextLayoutResult","lastLineBounds","checkCorrectBounds","stringResult","textFinished","FitElement","PdfTextWebLink","getTextPageBounds","verticalShift","remainderText","lastLineTextBounds","PdfTextElement","elementValue","hasPointOverload","isPdfTextElement","drawText","stringLayoutResult","previousPosition","calculateResultBounds","lineSize","maximumWidth","startPosition","PdfUriAnnotation","pdfUriAction","uriAction","uniformResourceLocator","uriAnnotation","recalculateBounds","defaultBorder","previousFontStyle","calculateBounds","drawMultipleLineWithPoint","drawMultipleLineWithBounds","PdfNumbersConvertor","intArabic","numberStyle","Numeric","LowerLatin","arabicToLetter","toLowerCase","LowerRoman","arabicToRoman","UpperLatin","UpperRoman","retval","generateNumber","arabic","stack","convertToLetter","num","appendChar","magnitude","numberstring","letterLimit","acsiiStartIndex","PdfTemplateValuePair","pdfTemplate","PdfMultipleValueField","drawLocation","PdfPageNumberField","internalNumberStyle","internalGetValue","PdfCompositeField","arguments","internalText","automaticField","PdfSingleValueField","painterGraphics","PdfPageCountField","PdfBorderOverlapStyle","PdfDestination","destinationMode","Location","zoomFactor","destinationLocation","initializePrimitive","simplePage","FitToPage","PdfPageTemplateElement","dockStyle","resetAlignment","alignmentStyle","setAlignment","isForeground","currentLocation","templateType","updateDocking","dock","canBeSet","TopLeft","MiddleLeft","BottomLeft","TopCenter","TopRight","MiddleRight","BottomRight","BottomCenter","MiddleCenter","getAlignmentBounds","getDockBounds","getSimpleAlignmentBounds","getTemplateAlignmentBounds","actualBounds","getSimpleDockBounds","getTemplateDockBounds","PdfBorders","defaultBorderPenLeft","dashStyle","defaultBorderPenRight","defaultBorderPenTop","defaultBorderPenBottom","leftPen","rightPen","topPen","bottomPen","PdfPaddings","leftPad","rightPad","topPad","bottomPad","PdfHorizontalOverflowType","PdfGridStyleBase","gridBackgroundBrush","gridTextBrush","gridTextPen","gridFont","PdfGridStyle","gridBorderOverlapStyle","Overlap","bAllowHorizontalOverflow","gridHorizontalOverflowType","LastPage","gridCellSpacing","gridCellPadding","PdfGridCellStyle","gridCellBorders","default","PdfGridRowStyle","gridRowBackgroundBrush","setBackgroundBrush","cells","getCell","backgroundBrush","gridRowTextBrush","setTextBrush","gridRowTextPen","setTextPen","textPen","gridRowFont","gridRowBorder","setBorder","borders","setParent","PdfGridCell","row","cellWidth","cellHeight","finsh","rowSpanRemainingHeight","gridRowSpan","colSpan","gridRow","internalIsCellMergeContinue","internalIsRowMergeContinue","internalIsCellMergeStart","internalIsRowMergeStart","remaining","objectValue","rowSpanExists","cellStyle","measureHeight","columnSpanExists","grid","isComplete","measureWidth","layouter","getTextFont","webLink","cellPadding","cellSpacing","drawCellBackground","getBackgroundBrush","adjustContentLayoutArea","returnBounds","rowSpan","cancelSubsequentSpans","allowHorizontalOverflow","rowOverflowIndex","adjustOuterLayoutArea","getTextPen","getTextBrush","strFormat","getStringFormat","innerLayoutArea","imageBounds","drawCellBorders","borderOverlapStyle","Inside","p1","p2","Square","isHeader","currentColIndex","columnSpan","span","totalWidth","compWidth","getColumn","currentRowIndex","rows","rowCollection","totalHeight","getHeader","getRow","rowMergeComplete","calculateWidth","currentValue","slr","cellIndex","PdfGridCellCollection","cell","tempcell","PdfGridColumn","columnWidth","isCustomWidth","PdfGridColumnCollection","internalColumns","measureColumnsWidth","initialWidth","isPageWidth","getDefaultWidths","subFactor","PdfGridRow","gridRowOverflowIndex","isRowHeightSet","isRowMergeComplete","pdfGrid","bRowSpanExists","gridCells","rowStyle","border","gridRowBreakHeight","rowHeight","bColumnSpanExists","PdfGridRowCollection","addRow","temprow","PdfGridHeaderCollection","PdfGridLayoutFormat","PdfGrid","gridSize","isRearranged","pageBounds","listOfNavigatePages","flag","columnRanges","breakRow","beginCellDraw","endCellDraw","beginPageLayout","endPageLayout","bRepeatHeader","gridColumns","gridRows","gridHeaders","gridInitialWidth","gridStyle","pageWidth","childGrid","measure","isGridLayouter","setSpan","gridLocation","currentCellIndex","rowCount","colCount","isCellMergeContinue","isRowMergeContinue","isCellMergeStart","isRowMergeStart","getFormat","currentPageBounds","currentGraphics","startLocation","isChildGrid","hType","horizontalOverflowType","determineColumnDrawRanges","rowWidth","internalWidth","internalHeight","isCorrectWidth","isCorrectHeight","startColumn","endColumn","cellWidths","availableWidth","subWidths","layoutedPages","startPage","cellBounds","range","cellStartIndex","cellEndIndex","returnObject","raiseBeforePageLayout","i_1","drawRow","repeatRow","originalHeight","repeatRowIndex","rowResult","isFinish","OnePage","repeatHeader","i_2","maximumCellBoundsWidth","largeNavigatePage","rowLayoutBoundsWidth","NextPage","reArrangePages","raisePageLayouted","nextPage","pageindex","PdfGridLayoutResult","ReCalculateHeight","currentRow","cancel","raiseBeginPageLayout","PdfGridBeginPageLayoutEventArgs","startRowIndex","PdfGridEndPageLayoutEventArgs","raiseEndPageLayout","result_1","RowLayoutResult","rowHeightWithSpan","maxSpan","currRowIndex","rowMaxHeight","nextRow","calculatedHeight","rowBreakHeight","location_2","cancelSpans","CheckIfDefaultFormat","cellstyle","tempValue","RaiseBeforeCellDraw","RaiseAfterCellDraw","defaultFormat","measureTrailingSpaces","noClip","rowIndex","raiseBeginCellDraw","PdfGridBeginCellDrawEventArgs","raiseEndCellDraw","PdfGridEndCellDrawEventArgs","count_1","GridCellEventArgs","gridRowIndex","gridCellIndex","gridBounds","bSkip","PdfCancelEventArgs","isCancel","BeginPageLayoutEventArgs","EndPageLayoutEventArgs","nextPdfPage","startRow","layoutedBounds","bIsFinished"],"mappings":"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IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAM/E/B,EAA8BwD,iBAC1B,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK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,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,EAAG,IAAK,EAAG,IAAK,IAAK,IAAK,IAAM,IAAK,IAAK,IAAK,IAAM,IAAK,IAAK,IAAK,EACzE,IAAK,EAAG,EAAG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAM,IAAK,IAAM,IAAK,IAAK,IAAK,EACzE,IAAK,IAAK,EAAG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,EACzE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,KAMT5C,EAA8B4D,aAC1B,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,IAAK,IAAK,IAAK,IAAK,IAClE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAM,IAAK,IAClE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,KAAM,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAClE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,GAMxC5D,EAA8BgE,mBAC1B,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAA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"}